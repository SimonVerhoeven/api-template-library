{
  "mappings" : [ {
    "id" : "d796d9d1-a2c3-46b8-b778-676b00d0132f",
    "name" : "DEVELOPER - Delete code service - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/djijy7xz7wbqn5i7hhfik2rcin7h7q0hm76wekife3z5zhpmad8kux0f593rny9m19xbfxg7nj5aeioiqs1tw1iptm9prxkygndz1manye7ag0vf9fa9gjcocnkfnu79nns9teyijzskf2dln1jd8jrtrtfyzjl283gguio252bwhxf8ndwwn/Elva+Wiza",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d796d9d1-a2c3-46b8-b778-676b00d0132f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    }
  }, {
    "id" : "57de92b8-8207-4bf4-bf37-1cadce659a8e",
    "name" : "DEVELOPER - Delete code service - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/rgacncczk4onkapfl4iebhv3qsnml973khwcsqjsh82rhqwlj222j49j1qj5mthmcr7dluos3hyxjieu7txpjnywafvy3yg40tn7f2/Mr.+Laverne+Rau",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "57de92b8-8207-4bf4-bf37-1cadce659a8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    }
  }, {
    "id" : "6a3d482d-45c2-4e78-ac1b-4baf3c0954ec",
    "name" : "DEVELOPER - Add code service - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/q2tq14dwr7mg9aedejliahuu1s6f2jfjdwqdyw74m2ridm98xw8pe25zizcdolejh1ywrwgye5shlbnpnl2y4lk2ebteklsfqdx4bu/Francesco+Goyette",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "6a3d482d-45c2-4e78-ac1b-4baf3c0954ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddService"
        }
      }
    }
  }, {
    "id" : "d7f4919a-08f7-40b0-a880-32a3e79a7888",
    "name" : "DEVELOPER - Add code service - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/fsg7xu8iw50ejb81q2un46jiqzdnxp051uwkcjw7a75/Wilson+Gerlach+PhD",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d7f4919a-08f7-40b0-a880-32a3e79a7888",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddService"
        }
      }
    }
  }, {
    "id" : "57fcb6bc-e49b-4f69-a4f6-d004553f583d",
    "name" : "DEVELOPER - Update code service - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/pzj2y2zi9jubfwzyd2jtodtj8rh9rrm1ttmfnxovxd9suu428thgo61oj21si3xb09k0jm9zj5cxzfuf1vsscck0gabwjdzbjqfoll6ndtl60n6w7t61/Newton+Klein",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "57fcb6bc-e49b-4f69-a4f6-d004553f583d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateService"
        }
      }
    }
  }, {
    "id" : "25a4ef47-1dcd-4715-bfb8-8602707f20d8",
    "name" : "DEVELOPER - Update code service - 400",
    "request" : {
      "urlPath" : "/codeadmin/v/2/145b1gm8hlwi29vwnmtgofncbtu8o7m3s1h69mf7sdxowax2fne57956fis8zcyerbh1ol866nwz25eexbisrb5/Ms.+Marleen+Kirlin",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "25a4ef47-1dcd-4715-bfb8-8602707f20d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateService"
        }
      }
    }
  }, {
    "id" : "b3e04f4f-7f9d-465b-9d78-d113678e20a9",
    "name" : "DEVELOPER - Update code service - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/bkcc5i1x4uwucmalmyz3w9yido0ifqua24ocs8438ugqx72p9i6oqypos55vkek8mpbrq1knmhclowjf6al7wfj01uv27kall0gqzrxwsiitjf2p15xmnsk2qg7szvblspr39cqsce0p2nrzihcnr5bdxnkblb0r8so0ugw/Elvin+Christiansen",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b3e04f4f-7f9d-465b-9d78-d113678e20a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateService"
        }
      }
    }
  }, {
    "id" : "da60f0bb-7d52-4fbd-9764-af5958c9da2d",
    "name" : "DEVELOPER - Get services logs - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/logs/r3e5kc8nxd9j41m3h4adz63h962hzrl8l62yi3bdhnl7d77ocab3nhaqhvdyx14l9kdmduvb98puttdazppymhpshq2ofh3wrp7s9t07k1gcmw/Marna+Gleason",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "da60f0bb-7d52-4fbd-9764-af5958c9da2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.452048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLogs"
        }
      }
    }
  }, {
    "id" : "a37ced8c-08c4-4716-8c46-db3f606dc8ab",
    "name" : "DEVELOPER - Get services logs - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/logs/zeu8pexpp3ivduyuw9ybay1mwejw8omxdsintng94zkzhpb8ce8omivjiyo91mfz/Melaine+Gerhold+I",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a37ced8c-08c4-4716-8c46-db3f606dc8ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLogs"
        }
      }
    }
  }, {
    "id" : "b9b485cd-6819-4226-bc48-ae02a40540d3",
    "name" : "DEVELOPER - Delete library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/48z5314q9gaqts1d4qnweby2botur03av6tes1la6dzeiadq1j7vat09jj5inkz8zzpfj6ky2aeomve7y5illf5ynosnkvb9d89q8lo5szzctv2ku8suskptce3z2/Rocco+Weimann",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b9b485cd-6819-4226-bc48-ae02a40540d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteLibrary"
        }
      }
    }
  }, {
    "id" : "f2b28f10-ab17-486d-a704-ac85e6d6df98",
    "name" : "DEVELOPER - Delete library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/o64/Lanita+Johns",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f2b28f10-ab17-486d-a704-ac85e6d6df98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteLibrary"
        }
      }
    }
  }, {
    "id" : "7bdca1cb-58e3-4b87-9918-b3bd9dcad57c",
    "name" : "DEVELOPER - Create library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/bn2p805vtrattnta787psk8a9q60d7z21le89dl5747nimpfh8wgj56fubupk4u/Courtney+Wunsch",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7bdca1cb-58e3-4b87-9918-b3bd9dcad57c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLibrary"
        }
      }
    }
  }, {
    "id" : "422d3466-7c99-42d2-83ab-7a7015e1035c",
    "name" : "DEVELOPER - Create library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/5eeozqyex7sp3howxo6ukk74jkgedf5ecui0kc2tzvtpph8bxx9vjhwc86j5sahyubicro6tg1fnecmsuydvhedmv83bbv2uz98lam47il4jd6rcvn7urmx4vji1mkjbih1a6afyugpses1i975jfv/Willard+Metz",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "422d3466-7c99-42d2-83ab-7a7015e1035c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLibrary"
        }
      }
    }
  }, {
    "id" : "8439ee95-a06d-47d7-b236-1217ab7a5c16",
    "name" : "DEVELOPER - Update library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/rervx4ca7hrz1ltold6h/Michal+McDermott+IV",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "8439ee95-a06d-47d7-b236-1217ab7a5c16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateLibrary"
        }
      }
    }
  }, {
    "id" : "f2bc653e-21c2-424e-8ad7-96b81b48e684",
    "name" : "DEVELOPER - Update library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/75nn32v2zpysaxjod1ol6lw66izy4ruiclboazusy3sy1dtboa1pq0z3sbumog1yil2k214l8pl43d7meijzd48kf3ekw6z4ddg05qxggbeo4r1o3fdf8v/Mrs.+Corazon+O%27Reilly",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f2bc653e-21c2-424e-8ad7-96b81b48e684",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateLibrary"
        }
      }
    }
  }, {
    "id" : "0083b5a1-ab94-47fd-bf09-1b6d4d9af68d",
    "name" : "DEVELOPER - Get library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/72motiikg1yp3ib7dx5ebaoc62gy1ujtwq42bbtheyejjax74kbxr21zzxkb8sjtxyr6cod3j1j9vqttlergsb5cb84j0sra0z15lna61d2fgbneqz60kmvxoyj801ffv4564tbqeay49r2gd630zddttwdrh5vkoyk31mp30t3lffj90rapqt5x2t6rv/Harry+Armstrong",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0083b5a1-ab94-47fd-bf09-1b6d4d9af68d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLibrary"
        }
      }
    }
  }, {
    "id" : "6dbb3c57-ee42-4470-be12-b4119bbc52c0",
    "name" : "DEVELOPER - Get library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/8ivf6iag0l7trflrapwr5yukocq3i0ovluw6bst9oqxgzhim35v8247w50muvwzeg3lqyjvgzac3zcb/Stephania+Gerhold+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6dbb3c57-ee42-4470-be12-b4119bbc52c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLibrary"
        }
      }
    }
  }, {
    "id" : "f0fe41f2-e8cc-412b-8065-54b59f249099",
    "name" : "DEVELOPER - Get all libraries - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/w7vxibsgdqorgtm9y5sambhjdurxqq4tw4i3x5v1n9maf2wxp63cj6lvbb2ns7rbptfycjot6mbsskql4av",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "f0fe41f2-e8cc-412b-8065-54b59f249099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLibraries"
        }
      }
    }
  }, {
    "id" : "48773201-af81-4d70-bd9c-bb79682bd524",
    "name" : "DEVELOPER - Get all libraries - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/kj3khzeungoy4s5qyimplbsmoqmgjwyaf8h2r0fjmfltdbzjibmf96a4sxi5egtu9c1mwercss9ab5w3vzbsx3xwm6vik4ig6vfpdoen3lh0h3h0q5woss9ta4qakfwsqv0i6wk65y0shoacdatervmbo4ab7apr5zvv6kkkkm6dwbvhd4izt6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "48773201-af81-4d70-bd9c-bb79682bd524",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLibraries"
        }
      }
    }
  }, {
    "id" : "3afa9413-039b-4bdf-ab1a-09237b11a5fa",
    "name" : "DEVELOPER - Get old library version - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/4wfn6fc7mtihl136186eq8p35pqyulya7y4npd14zy0y9r5xw0z4vxu8zi9r40hgjwzrgq77towvytav5lo8537zeqs6h18sai2onmnmorv20rpifkznjywj5xq6pwci1gzdfstwnnzjkwecji9f2xjvj0xwsckq0acn3tsswtxw48mfairv4oft3po23q9/Jamie+Yundt/5zoodl3r18kew76nsdeqcbwghalxn0pmwic2hauqcgplx24pcm6o543zk03ho495n2kp3d2b49heqgwiyey9212aqybcbzi1aei",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3afa9413-039b-4bdf-ab1a-09237b11a5fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetOldLibraryVersion"
        }
      }
    }
  }, {
    "id" : "fb908533-5dd0-43c6-8c9c-b08592332e0f",
    "name" : "DEVELOPER - Get old library version - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/jmt5guj5ba9hsjdrg3op7b60scv81web89fxwqe3k6m77p4rk1nogi23/Sharlene+Shields/vh3m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fb908533-5dd0-43c6-8c9c-b08592332e0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetOldLibraryVersion"
        }
      }
    }
  }, {
    "id" : "dc3dae65-2ef9-4776-b4f2-28408d676a89",
    "name" : "DEVELOPER - Get library history - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/d6rs0dtj3dddxgtchh19yfmihsttpcbb3tc7soyip5qu6pfvztbqf8ueap59injrap7nceff9wqac1etbg86e1dhibp61meoq4ko3zsl4e0gexm63b5lyydwrq1mnnkub11q62tm4n8dxxntv78/Van+Feil",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "dc3dae65-2ef9-4776-b4f2-28408d676a89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "LibraryHistory"
        }
      }
    }
  }, {
    "id" : "dd6f3b0b-aceb-4ba8-bbad-c3922eca93d9",
    "name" : "DEVELOPER - Get library history - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/85ud3708lg6sgzhh1z6nt608k4pydxxtoe1ma69t08r1al16wry6uva5dttzyb14rm0piab2pnmwkg2kikl5vc/Chung+Schumm",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dd6f3b0b-aceb-4ba8-bbad-c3922eca93d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.45112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "LibraryHistory"
        }
      }
    }
  }, {
    "id" : "d1126a07-016f-4873-8fb4-3dab98cc143e",
    "name" : "DEVELOPER - Delete failed service run - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed/4xc97p0ul651drt3ttw8nzanse0vrvb3sh9mvpw151tni16scclfjq1h2c63byh775m3x174xcyudh65glz734su1uaxbwsuh5mgodzjll38b6pzplax7kjjbzht75skntpv5a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d1126a07-016f-4873-8fb4-3dab98cc143e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFailedService"
        }
      }
    }
  }, {
    "id" : "410b7d74-98c8-4d79-bedc-098a53c4ffc4",
    "name" : "DEVELOPER - Retry failed service - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed/ec7amdk5be2y8x6y9gn3eaxl",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "410b7d74-98c8-4d79-bedc-098a53c4ffc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.451016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RetryFailedService"
        }
      }
    }
  }, {
    "id" : "a0be2458-f8c3-4333-a677-d89dd60fedba",
    "name" : "DEVELOPER - Get system's failed services - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed/xaiz8lsowgnrrmf750re0ogzdpubica250f83ivi7ga0i4f465bo72z8uambexn6ldp8cdc9j3htn42ju347lz2l6t7ydidaa10c0lrtkq9u2z4dp5kjmr5692oe8rsajjuli2rbf58u",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a0be2458-f8c3-4333-a677-d89dd60fedba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemFailedServices"
        }
      }
    }
  }, {
    "id" : "0eb6734f-ef3b-47b9-ae7f-80ca4260b6a8",
    "name" : "DEVELOPER - Get all failed services - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0eb6734f-ef3b-47b9-ae7f-80ca4260b6a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFailedServices"
        }
      }
    }
  }, {
    "id" : "3c446e98-65b6-4be9-899e-52e5aa1fc658",
    "name" : "CODE - Get all failed services using Query - 500",
    "request" : {
      "urlPath" : "/api/v/4/o3nlosg3l63699nni0lpimei3pwkj1abylbo2bk5higb6uctd7ccp2hav4y4d1ucquks6shvbewei5wr3zf6jhuj4a84spiroytmsqo9ca5cl7l9x3wzlbj2qdeo0/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3c446e98-65b6-4be9-899e-52e5aa1fc658",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    }
  }, {
    "id" : "e2556177-ef92-4ddb-b5f2-bcb9d1a8ae0c",
    "name" : "CODE - Get all failed services using Query - 401",
    "request" : {
      "urlPath" : "/api/v/4/hzglf0vcc2kgao17/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e2556177-ef92-4ddb-b5f2-bcb9d1a8ae0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.4509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    }
  }, {
    "id" : "e2474fc4-97a1-4f53-9363-394c9ef64b50",
    "name" : "CODE - Get all failed services using Query - 400",
    "request" : {
      "urlPath" : "/api/v/4/5njwbxsn10ozhy8twdiwmhn7rxd8zoclu8b1yyoscygchkitpwggtu7lu70ubtiwpa8crp1r/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e2474fc4-97a1-4f53-9363-394c9ef64b50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    }
  }, {
    "id" : "2f880f97-39ef-486a-ab74-6f2c522d605c",
    "name" : "CODE - Get all failed services using Query - 200",
    "request" : {
      "urlPath" : "/api/v/4/oxq3n2uzl5mdee0vuj35qokm8ra1eu144csfqky3cqf15p1q792y161r1x4c9owec9gyxgxwbu3xqealnnccrgi39he1oxkxkhec2pebcya88lethi2bzdza82uk7bk4lsksrrkcv2b4/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2f880f97-39ef-486a-ab74-6f2c522d605c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    }
  }, {
    "id" : "f6035625-9b05-4fe3-ad84-ac86cf867d21",
    "name" : "ADAPTERS - Delete adapter files - 500",
    "request" : {
      "urlPath" : "/api/v/4/5qnoe4jj86ktuqndz9gw91kvj8nrc0xiacxnirmirouebrqvzkh4aa7ut5or6pk364el1b1u029mv1er7a7gwma4rc49te2wvq1pe0rmpf7efl3h7hedq80kys9ntuywa6wvadxo0bh9d3odek1e4q3wy9lwz/adapters/Yuri+Moore/files/Clara+DuBuque",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "f6035625-9b05-4fe3-ad84-ac86cf867d21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFile"
        }
      }
    }
  }, {
    "id" : "a388fe0e-a71a-4ac7-95d5-a8f2745bca94",
    "name" : "ADAPTERS - Delete adapter files - 400",
    "request" : {
      "urlPath" : "/api/v/4/bbhaiiu6ilk04ny3wor5aia5n9kpshsj7q7pe01pk3dehyop5bdsy2ikx7nsoreemjixm3c9yq334bnejdnzplxo4s3340vy8gygdortj7gyq3vjyevqrshk22u/adapters/Sharan+Lueilwitz/files/Dan+Farrell",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a388fe0e-a71a-4ac7-95d5-a8f2745bca94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.45071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFile"
        }
      }
    }
  }, {
    "id" : "4a3c6f85-80dd-414d-a81a-fdba93fc2c51",
    "name" : "ADAPTERS - Delete adapter files - 200",
    "request" : {
      "urlPath" : "/api/v/4/ix0o9t1urif4wx0txrfkmzlmnkwajyzhmjatr5198ntk2wcvixi9ah0eqx077a7elb361c6juzcge395xjur57y3te6oza7da1gfh463ur09n0genylgnub8r8gjzdhm6ctl6knugl4wnfbf48db8s5qhn4qccjwk21ek5xg3qps9303bqbws9ucywjgki/adapters/Jackeline+Runolfsdottir/files/Loreen+Murazik",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4a3c6f85-80dd-414d-a81a-fdba93fc2c51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFile"
        }
      }
    }
  }, {
    "id" : "ababf983-b412-46c2-90e9-c80b3f7bc863",
    "name" : "ADAPTERS - Update Existing File's content - 500",
    "request" : {
      "urlPath" : "/api/v/4/dp6ctskd7v2uxapw0rssjtdrru7fldwvtntwfs82l2uytbj9tffvpujrs7trkj18oemq3ntivbk28bevwvbu8vcgtudo4ezbfnxc6wq673u/adapters/Cami+Heidenreich/files/Azucena+Ratke",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ababf983-b412-46c2-90e9-c80b3f7bc863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    }
  }, {
    "id" : "9a41acc4-3270-4d77-8c7e-40ccd77d0dc2",
    "name" : "ADAPTERS - Update Existing File's content - 401",
    "request" : {
      "urlPath" : "/api/v/4/p9vp9q1vyadlx23g6fgprgqvle7tdoiyshmjx8bbcjj151ab2emvai6ejlu1ze4cjvr7pimtcurfej1talfc844wmyw6kmq3g09jtp807x1ssh1xdgvx/adapters/Carlos+Batz/files/Brady+Kuvalis",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9a41acc4-3270-4d77-8c7e-40ccd77d0dc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    }
  }, {
    "id" : "98a26918-916a-4558-9e0c-883ebcd1a5dc",
    "name" : "ADAPTERS - Update Existing File's content - 400",
    "request" : {
      "urlPath" : "/api/v/4/g9vrj16wfynblj8xsq0kqfsd96uljo22ihwi/adapters/Mohamed+Mitchell/files/Corazon+Rosenbaum",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "98a26918-916a-4558-9e0c-883ebcd1a5dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    }
  }, {
    "id" : "3049095c-fadc-4095-8390-65d2ac3d2a2d",
    "name" : "ADAPTERS - Update Existing File's content - 200",
    "request" : {
      "urlPath" : "/api/v/4/fdpodu6gtal25fp1qzui9tbx9q1zzs7va1d6nhkialzm7g9obc7e6ep7uz9lf3ti7hjskhyk5irgabit00jrpixi0xvf6byaqxjq26577wmu6wc8hqnebpkd3hx3wimwqiogssct8sph7fz/adapters/Kirby+Kshlerin/files/Karol+Bartoletti",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3049095c-fadc-4095-8390-65d2ac3d2a2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    }
  }, {
    "id" : "ba475b9f-3635-4227-a023-f0cc4256b0ef",
    "name" : "ADAPTERS - Download file from adapter - 400",
    "request" : {
      "urlPath" : "/api/v/4/ago097u7d8lshaecycxfgf11118w0b65qb3scy7h09u7n8fyw01487t0m60nheze0w5iafon3szv8hwyb45fv29780fyqaofs3h4gabbe6zdupqd7r3miu9skubdrn1p07hwrjwswqsxf9bqbpybvlnilp5f1hvqe9wwwtuqqtkzenj2cjqbkoeagp/adapters/Catherine+Kohler/files/Coy+Hamill",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ba475b9f-3635-4227-a023-f0cc4256b0ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FileDownload"
        }
      }
    }
  }, {
    "id" : "ab947b97-48a9-4b49-960e-6625e35c07c3",
    "name" : "ADAPTERS - Download file from adapter - 200",
    "request" : {
      "urlPath" : "/api/v/4/fstwriprmhvvg2vupqt0gb7b7dx3qi8so71hu9lzbdybl8hd9b0u96cogkzyjgjn4vj4bavzkdoa2ijd9aiccf9x27m2yzkimeeagycks3pwf4036igikb2ntsy7yoqk2pouk8vu4x5d4lwrv5u8t0w12k6edu9/adapters/Murray+Walker+Sr./files/Clarence+Stroman",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ab947b97-48a9-4b49-960e-6625e35c07c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.450027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FileDownload"
        }
      }
    }
  }, {
    "id" : "f24b157e-f389-47a4-a123-08fe368ab746",
    "name" : "ADAPTERS - Add or replace file content & configuration - 500",
    "request" : {
      "urlPath" : "/api/v/4/u5fpknzb0bsqwtvzz1m0p93973rs6fpa21kma9343spwz4d205la63chuc5raai5e6qro4j2bbwzdurz8d7fll2hlui2b3y0u/adapters/Alicia+Cruickshank/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "f24b157e-f389-47a4-a123-08fe368ab746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    }
  }, {
    "id" : "584a4351-4220-4c88-b9fb-0466e655bf52",
    "name" : "ADAPTERS - Add or replace file content & configuration - 401",
    "request" : {
      "urlPath" : "/api/v/4/waxkx59d1xxpm2an4ci4m5y0mxgk10fjimrbp5pnshtu6wkfgmhgqiaziv7z78rw5fglxymmimo47jg10u86r3t731rt9ofjqcq8yv8lqxinetcn792uvfim4i7q1c2ylpyme6ac69i7a9ebyy5v19u6artdhgg0p30g3awobjmzzem5xmnruzsipfc8g/adapters/Elenora+Collier+V/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "584a4351-4220-4c88-b9fb-0466e655bf52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    }
  }, {
    "id" : "96e80b33-fa19-495f-a9af-43bfab264568",
    "name" : "ADAPTERS - Add or replace file content & configuration - 400",
    "request" : {
      "urlPath" : "/api/v/4/9f9bxhi2a522bceknhc23610idh5elj0rfvkwhea2m8ul11s2wi6/adapters/Eli+Thompson/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "96e80b33-fa19-495f-a9af-43bfab264568",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    }
  }, {
    "id" : "18ca0cb3-fad6-4f19-978c-544c107d819b",
    "name" : "ADAPTERS - Add or replace file content & configuration - 200",
    "request" : {
      "urlPath" : "/api/v/4/v6bszfhiyf5hmxd68de1gjos4nyvbyogderf9soyiq9e39/adapters/Toya+Kozey/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "18ca0cb3-fad6-4f19-978c-544c107d819b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    }
  }, {
    "id" : "45949879-c94e-49d0-9c7a-0d2ff7f2c450",
    "name" : "Gets list of configuration information for all adapter files - 500",
    "request" : {
      "urlPath" : "/api/v/4/ir0n138itmf3pf6lvq2pkkrsr9t4zqaid7syjdt3jpd2xaxwtpmjgy0iek178huip7h0bbuz41oow2jbkelq2tah01tyrbkdajbpn9u6yceawraar1f6pfdxikhslwxef9i9q8a8xl1wspiqkxgfhfebou5wswc6xsyoki1uumem4gmug/adapters/Ema+Schroeder+V/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "45949879-c94e-49d0-9c7a-0d2ff7f2c450",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    }
  }, {
    "id" : "3fd5ef60-db40-4fd2-8b59-ab3769e8993f",
    "name" : "Gets list of configuration information for all adapter files - 401",
    "request" : {
      "urlPath" : "/api/v/4/imv9v1g3fhvo9ypbuays3woa3lxg3b8qfjnzpu1hw4fl7meih34x81kzyq4vkmse8gg1rpo7yxu0ph6t4h51kw7ugmymtbclwxucdshjx22kdgkceulcab6llahglhq5cvy7/adapters/Delbert+Crist+I/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3fd5ef60-db40-4fd2-8b59-ab3769e8993f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    }
  }, {
    "id" : "70a42bb3-13c1-486a-890b-8f8aa452e923",
    "name" : "Gets list of configuration information for all adapter files - 400",
    "request" : {
      "urlPath" : "/api/v/4/bq1cf6cmdb2ma13sb0nqhlc2smurwevhzu/adapters/Mrs.+Christian+White/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "70a42bb3-13c1-486a-890b-8f8aa452e923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    }
  }, {
    "id" : "ae3bc1a1-31f1-447f-a16f-fae1007a4104",
    "name" : "Gets list of configuration information for all adapter files - 200",
    "request" : {
      "urlPath" : "/api/v/4/n0hnz2egkjuyl6m14dys3p4j60gd9ukq3i234touvtch5fixzr3heudp2e1x8exjtk6l9cp8pomv12lgtrf47keuvead31j1xeugb7kdq3q6z6wuccavr1o2km1apbsrk87jxvmjt83cz3bunnalx4vy3s4i3chyg6c08yaqcp1zwe9g9s0uleuuq1m6cldpxbd2v75/adapters/Ms.+Yong+Grant/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ae3bc1a1-31f1-447f-a16f-fae1007a4104",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    }
  }, {
    "id" : "d17f57bb-4439-46c3-84b5-afb08dece711",
    "name" : "ADAPTERS - Send command to edge - 500",
    "request" : {
      "urlPath" : "/api/v/4/fvsh4go07hk1h5gwzvmsdgs9b2tp/adapters/Mrs.+Scarlet+Steuber/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d17f57bb-4439-46c3-84b5-afb08dece711",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    }
  }, {
    "id" : "9f6a1109-f73c-477a-a668-0ec8226ab781",
    "name" : "ADAPTERS - Send command to edge - 401",
    "request" : {
      "urlPath" : "/api/v/4/zc3j6dwybzubdthhqkcbw2g38/adapters/Mrs.+Pablo+Lakin/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9f6a1109-f73c-477a-a668-0ec8226ab781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    }
  }, {
    "id" : "ac8c9d9d-6233-494f-9041-fcc331c0fcb8",
    "name" : "ADAPTERS - Send command to edge - 400",
    "request" : {
      "urlPath" : "/api/v/4/x4devvclz3f8a182ln47fz87vdzpbnbw98rhcsr4z5o6qhe82k25opcmqej6ag12ohvv3sy3vz7bawt6oyx8msnykkkl3pfezgas/adapters/Stephenie+Funk/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ac8c9d9d-6233-494f-9041-fcc331c0fcb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    }
  }, {
    "id" : "7a607832-f4a0-41f0-8a44-5fd1d2c1d5e8",
    "name" : "ADAPTERS - Send command to edge - 200",
    "request" : {
      "urlPath" : "/api/v/4/uuv3frs5gzcktgpw25n45u09vwct1n3zoa49of9e54se12pbloahvo6u5q394m9qphvbw48hr971emqydkup7t8lyqz9419r5f0u0li8wxeybguuigew442hdghkcr220mnuc02mup41ywae8kuxbryeuq8bydxn2xl2jvm73gtq0aq9r5ytck6k5fsmq/adapters/Mrs.+Ned+Dietrich/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7a607832-f4a0-41f0-8a44-5fd1d2c1d5e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    }
  }, {
    "id" : "b0bd74e5-b222-403a-b248-27de3b2e699f",
    "name" : "ADAPTERS - Delete adapter - 400",
    "request" : {
      "urlPath" : "/api/v/4/poabmi9h8oyxmm8sy1uf5c3hkjekwwtzkbcaud3k2c5lbpe37a4hucrriagzq54m8ntohbh6luqwd4ny6aztfx13z9fk4j704gzuiic89fb8qqxfjqyp955om0nc4q9sfc/adapters/Betsey+Purdy",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b0bd74e5-b222-403a-b248-27de3b2e699f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteAdapter"
        }
      }
    }
  }, {
    "id" : "b83c55b0-0533-4267-ba83-af001a7e90ce",
    "name" : "ADAPTERS - Delete adapter - 200",
    "request" : {
      "urlPath" : "/api/v/4/j1qvmbx4ubb64co0xt9q0g38nlot7h66h4c5p7jh98y4nzfxclvx6kc497hxj2rpylzefpc/adapters/Jamel+Brakus",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b83c55b0-0533-4267-ba83-af001a7e90ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.449049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteAdapter"
        }
      }
    }
  }, {
    "id" : "365797d8-d162-44be-9504-5e7ea8d02ba2",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 500",
    "request" : {
      "urlPath" : "/api/v/4/8go4hkk8/adapters/Clarissa+Osinski",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "365797d8-d162-44be-9504-5e7ea8d02ba2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    }
  }, {
    "id" : "419b56fa-0183-41b1-8e2d-0ccdda5f0355",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 401",
    "request" : {
      "urlPath" : "/api/v/4/7zgfaib2wxid55z6p8zq2vmsa36jjfili72y4qasgh05dronu545hz5e6idbf1izhfnylbas8u6f0n0zlc63xyrlpzyw87ue5nz0lwj6y58jo/adapters/Xavier+Waters",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "419b56fa-0183-41b1-8e2d-0ccdda5f0355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    }
  }, {
    "id" : "63e1e340-9f2e-4bba-9bc8-166b8b9a273f",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 400",
    "request" : {
      "urlPath" : "/api/v/4/s86pftgyon8dxt578vuo7fddl9yywxgrmor0136opxbrwdqlk3v3pnkgx7zhinga8kshw7rm1low/adapters/Mr.+Marcos+Collier",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "63e1e340-9f2e-4bba-9bc8-166b8b9a273f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    }
  }, {
    "id" : "dfe4d94a-44da-414d-9b79-dc3780997fbf",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 200",
    "request" : {
      "urlPath" : "/api/v/4/iwkc9og8bklu6fu45gazy7z10cv9b40b978dtzkvbb2pqbuum0pp7ras4v7r0gsomsnx0i7biimb2/adapters/Josue+Ritchie",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dfe4d94a-44da-414d-9b79-dc3780997fbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    }
  }, {
    "id" : "314da86f-0d86-4caf-b45f-dc87a9f7feca",
    "name" : "ADAPTERS - Add an adapter - 500",
    "request" : {
      "urlPath" : "/api/v/4/x9175k26f5pjk36d3dj5jx9st4t2q3h7qmsrjntm9idboxf403coiu8cn93febbcrnbqfil0ocqf5yqtzov4jnq4xtcdquceu0njkb/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "314da86f-0d86-4caf-b45f-dc87a9f7feca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    }
  }, {
    "id" : "cbd7a8a9-65e6-4176-b917-563c584e9fa8",
    "name" : "ADAPTERS - Add an adapter - 401",
    "request" : {
      "urlPath" : "/api/v/4/9zajds0t7g9i9fkcb8cn4mc5q9oezrttqzgm1dbut2oxobk6wfpawfteseyjytaeg7wwyii5bj6kxc4mad1tqhvgc3p2kdurgca222/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cbd7a8a9-65e6-4176-b917-563c584e9fa8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    }
  }, {
    "id" : "681dc923-03e4-4c04-b508-351c631f64f3",
    "name" : "ADAPTERS - Add an adapter - 400",
    "request" : {
      "urlPath" : "/api/v/4/kl22i93mquym25sszqcba4obulus1tfxpkdxnlhxztr6/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "681dc923-03e4-4c04-b508-351c631f64f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    }
  }, {
    "id" : "543cafbe-6978-4775-9ea6-343e0a57d9a6",
    "name" : "ADAPTERS - Add an adapter - 200",
    "request" : {
      "urlPath" : "/api/v/4/zsdejzdo63webixnzz2w73wjm1gtr31pfn/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "543cafbe-6978-4775-9ea6-343e0a57d9a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    }
  }, {
    "id" : "585bab83-8875-40dd-af62-5e72e779d06c",
    "name" : "ADAPTERS - Get all adapters - 401",
    "request" : {
      "urlPath" : "/api/v/4/ezjt3igaisr/adapters",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "585bab83-8875-40dd-af62-5e72e779d06c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAdapters"
        }
      }
    }
  }, {
    "id" : "675fef42-37e2-4ca5-9b6b-722b3875b1e0",
    "name" : "ADAPTERS - Get all adapters - 400",
    "request" : {
      "urlPath" : "/api/v/4/wyv0kckieqg4crqtt7wgz7czdvdm20vuwz72mts0168l5l2j8enwvvn3u92zni8jrl995uoojkm635jo3o8caeokwfek8dhy1ob7m5vzqstacg5y4d9ol1fewxmzu18n5zfvcdm15do081f62c04njj0i7zj4su/adapters",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "675fef42-37e2-4ca5-9b6b-722b3875b1e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAdapters"
        }
      }
    }
  }, {
    "id" : "6b0598ea-4729-4032-b5fa-f6438d88fbeb",
    "name" : "ADAPTERS - Get all adapters - 200",
    "request" : {
      "urlPath" : "/api/v/4/lp7w5by6xq17zdxf8fvp83x0log19l6s5mxzivuutxxcz26ykshwewj12qs1qpu2e5kexc0hpjnfzutukjmpjbd8sas0oeystsfvunbhqhukhcveb29i9em5z4g4/adapters",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6b0598ea-4729-4032-b5fa-f6438d88fbeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAdapters"
        }
      }
    }
  }, {
    "id" : "51bc1f46-7607-43fe-a073-adad4f1b716b",
    "name" : "WEBHOOKS - Executing a webhook - 200",
    "request" : {
      "urlPath" : "/api/v/4/webhook/execute/4v45t3blgvqnaxjqd6nfaojvsi25jx5php90dft2a7n83kxq/Krishna+Jones",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "51bc1f46-7607-43fe-a073-adad4f1b716b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ExecuteWebhook"
        }
      }
    }
  }, {
    "id" : "0d9893ec-dd7d-4494-98c7-dfe2b4cfad36",
    "name" : "WEBHOOKS - Executes query string payload webhook - 200",
    "request" : {
      "urlPath" : "/api/v/4/webhook/execute/fvp1u9d4meus0i753emyb7z01csm4734rt7wfzyw8ug8p40npdz5djd205bxpnfyo1pb07qbdofzbzv53qzg63kmnayap8fdfx/Felica+Miller",
      "method" : "GET",
      "queryParameters" : {
        "token" : {
          "equalTo" : "osepye1pl9fcuhf21vnc8d57i6tvbi13rleg98sotsh828b92bduzmwj9lr72okj5d6q6tktb7cklie8qwok34g7ehogarx8vvuyet8ohiw3z8ttb1parbzrqqwhnhbjpopjrwxaz4h0svgyqqk48jcroqjj15yf679ynm5ibtfk991"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0d9893ec-dd7d-4494-98c7-dfe2b4cfad36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PayloadWebhookQuery"
        }
      }
    }
  }, {
    "id" : "5068fb75-bcce-4e2b-9bf4-feaa0733fd36",
    "name" : "USER - Users change roles and passwords for other users - 500",
    "request" : {
      "urlPath" : "/api/v/4/user/manage",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "5068fb75-bcce-4e2b-9bf4-feaa0733fd36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ChangeUserInfo"
        }
      }
    }
  }, {
    "id" : "1a339dbd-396e-4786-8f4f-bebce6a1f75b",
    "name" : "USER - Users change roles and passwords for other users - 400",
    "request" : {
      "urlPath" : "/api/v/4/user/manage",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1a339dbd-396e-4786-8f4f-bebce6a1f75b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ChangeUserInfo"
        }
      }
    }
  }, {
    "id" : "93f12667-e93e-4734-bf8b-a16e0a672205",
    "name" : "USER - Users change roles and passwords for other users - 200",
    "request" : {
      "urlPath" : "/api/v/4/user/manage",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "93f12667-e93e-4734-bf8b-a16e0a672205",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ChangeUserInfo"
        }
      }
    }
  }, {
    "id" : "18c1af42-4dae-4324-ab40-43466f4c666a",
    "name" : "MESSAGING - Gets number of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/dkaz8gkg7rrzojs9t0mwvmxshammviy13v6jexicpuyesf0cast57b8yyhp0ah8t7es5zj3c/topics/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18c1af42-4dae-4324-ab40-43466f4c666a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTopicCount",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "05f61d3e-8a75-43f0-8f81-13701d09e412",
    "name" : "MESSAGING - Gets number of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/btjuorgvdhrx4vn16qct3htxy04bio9c2qubjrkb7tycnsfjmn2se2yqxe8z55x98pd1/topics/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05f61d3e-8a75-43f0-8f81-13701d09e412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTopicCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "785024b5-1b63-43f7-8b32-b2dfa216802e",
    "name" : "MESSAGING - Gets list of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/zz1g0zte9v58p60vbtj6qylusln6200ggjpg8g5fqh9k7bn3bsc3qlouuuu4b054jkv7tqdj5wkh3mvg68ppgrus0uyt3v6on5wyuld48u27obpjtnq6lkak7x7822qu6f/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "785024b5-1b63-43f7-8b32-b2dfa216802e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTopics",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "b3b024ed-43d7-4267-8120-b86ec240a32e",
    "name" : "MESSAGING - Gets list of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/73u88vm5rg9oad9zxsqd81jhmhv7404x7pg0b9m99jt3zvg3za8b3eu11ocj4e51tcubrelhu74hvi2rbe2hpilee2vx00x7zz3xsc59gx00pnv0wt74z8k5tgxud5b4c9jj0fnkmbszuhmme1otxg2/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3b024ed-43d7-4267-8120-b86ec240a32e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.448094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTopics",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/msgTopic"
            }
          }
        }
      }
    }
  }, {
    "id" : "9e9d967f-bc79-4ada-b93b-a2e68eb52946",
    "name" : "DATABASES - Create a external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/5a50a0d2ky0r9y4/Mrs.+Leon+Waters/data",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9e9d967f-bc79-4ada-b93b-a2e68eb52946",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.447984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PerformDBOperation"
        }
      }
    }
  }, {
    "id" : "c2aa433b-e411-4946-a523-7ed29f6068e7",
    "name" : "DATABASES - Create a external database connection - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/9r4brt8yobwo0dpyal4f0vde6algcuzi2tw0m8ukajvarhw65zd0psqtd69angmaab8u6wjkf4nao7hgdus8so0rhhjl6y8f3dcd5w7yih5sydndtkyj9mnpe20/Irwin+Skiles/data",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c2aa433b-e411-4946-a523-7ed29f6068e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.447922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PerformDBOperation"
        }
      }
    }
  }, {
    "id" : "d38b1929-d417-43bd-8a76-982070ce06db",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/fmim3xfirvn6fk33h98zgyky1de2zrhpg85oh48y3nfepet9aka6fk5tiwhziz1cjseh73e8yhy7b9/Serafina+Goyette+III/data",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d38b1929-d417-43bd-8a76-982070ce06db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PerformDBOperation",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "2c219b5a-7ebc-406c-911e-00c1e3a76295",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/60oe44h9aoep2fntd2ymo6xs2yba1etqhwquzn7muqishxla8n1a1igji8k0d2uj9g2gxslvwwtdngmbutemp56fvzptyavuz66a9f5wkjh0jawhckqk9swxcd5bovggef3ez36lwdf5ji1c1sl2q6x1u/Maxie+Wilderman/data",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Total\" : 1,\n  \"Data\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c219b5a-7ebc-406c-911e-00c1e3a76295",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.447741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PerformDBOperation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Data" : {
                "type" : "array",
                "example" : ""
              },
              "Total" : {
                "type" : "integer",
                "example" : 1
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d74bd2c8-6be5-474b-a350-c8f94a49d9f5",
    "name" : "DATABASES - Delete a external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/vw70p6l00txtxdya8ndn5cxp0gh4tsie0zikh3vdfkzr1f2bmlqhejrhuakgzks2whqqzx1srbkfz7b6ikma6kmbfuvpy76x0n4ny6bny671su63ypyl67gwrlrovxutj4/Miss+Kenny+Veum",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d74bd2c8-6be5-474b-a350-c8f94a49d9f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteExternalDB"
        }
      }
    }
  }, {
    "id" : "c847949f-7d17-4e03-ba1b-5ae31fcb8b33",
    "name" : "DATABASES - Delete a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/tlzpjlpmjm8l5ewssxq120ij/Mr.+Robbi+Hayes",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c847949f-7d17-4e03-ba1b-5ae31fcb8b33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.447559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "ad2f5527-b57d-4a41-a15f-164fe2aaff1e",
    "name" : "DATABASES - Delete a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/1a1fzmqx9povvvwydbjdyfee3f5jipj1rw0noeh62spana84jpg64vlhdtsik69dzbk60e1deujl874e2ettjkw4krz7b6710rypr7jm9uftgcy683h52krogtabtii7wt1wwj/Steve+Fahey+V",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad2f5527-b57d-4a41-a15f-164fe2aaff1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteExternalDB",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "2b43c25d-dd5b-4c95-a698-f4532c9a9146",
    "name" : "DATABASES - Update external database credentials - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/n210t8zdpj1n7hhskk7h2vijzuw15rhew7fzjgfh9/Leo+Johnston",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2b43c25d-dd5b-4c95-a698-f4532c9a9146",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.447352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials"
        }
      }
    }
  }, {
    "id" : "2912ab0d-3c7c-42cc-836d-841a778f3c1b",
    "name" : "DATABASES - Update external database credentials - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/7elhiac615ewv51fydkjufx70m36e0wj/Robbie+Beer",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2912ab0d-3c7c-42cc-836d-841a778f3c1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials"
        }
      }
    }
  }, {
    "id" : "b18d8c01-f91f-4bfd-8f45-4dcc0bbed86d",
    "name" : "DATABASES - Update external database credentials (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/jw6ukpd5irzvxec7bnroho/Nigel+Kiehn",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b18d8c01-f91f-4bfd-8f45-4dcc0bbed86d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "02c52086-f617-4c59-aef0-58d20885dc46",
    "name" : "DATABASES - Update external database credentials (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/el686esdwigjmue2zokjc96y2ya3m89cxx5mmx3hyjuf2h5pzq5dgax8lqxk5ugyhguhaylna6upwgwbr5qetw32v2ckamtdaokqmuf6k542ty8gykaj833keozu9bxokvjbp090prhpwvtfcjubdioedqq7/Josiah+Boyle",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"password\" : \"MSQL_PASSWORD\",\n  \"address\" : \"MYSQL_ADDRESS\",\n  \"dbname\" : \"MYSQL_DATABASE_NAME\",\n  \"port\" : \"3306\",\n  \"user\" : \"MYSQL_USER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02c52086-f617-4c59-aef0-58d20885dc46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials",
          "schema" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "example" : "MYSQL_ADDRESS"
              },
              "dbname" : {
                "type" : "string",
                "example" : "MYSQL_DATABASE_NAME"
              },
              "password" : {
                "type" : "string",
                "example" : "MSQL_PASSWORD"
              },
              "port" : {
                "type" : "string",
                "example" : "3306"
              },
              "user" : {
                "type" : "string",
                "example" : "MYSQL_USER"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "deb14090-b116-464b-8c7f-46c918c7c3b5",
    "name" : "DATABASES - Retrieve a specific external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/22mbw9mtd8r7zq37nqd4nl03p5mww5i2qsbrvi27tb351r34if0wtpe39yzvd5newd6dh9qzfotq8r44jgrz4s6zmtgawb2ifz277zusg1xkwr2io4/Aiko+Ritchie+III",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "deb14090-b116-464b-8c7f-46c918c7c3b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExternalDB"
        }
      }
    }
  }, {
    "id" : "d208b43d-0a4e-491f-a25f-f7aa56c4ae2b",
    "name" : "DATABASES - Retrieve a specific external database connection - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/veme0i7y1j7wvbh6zp6sjsbccjbskrua4euf0j2duwhu5fulwuasv9ah6dk3lwt088po5ff9zn32t6xvspczur1dizzlu69zfjn5rg5qn5wow5v7y53wxxvw8i8jb61pgzf4230pr2y31mvyk0i12/Carlita+MacGyver",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d208b43d-0a4e-491f-a25f-f7aa56c4ae2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExternalDB"
        }
      }
    }
  }, {
    "id" : "c38eb2f6-eda3-44fe-b49c-c3fe6e7d6561",
    "name" : "DATABASES - Retrieve a specific external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/vn9zrl0ucuwy2gsejjnceybjf979r1qcjqankl1m6do21ourqwo/Eula+Cormier",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c38eb2f6-eda3-44fe-b49c-c3fe6e7d6561",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "fcc35740-dbdf-4b48-b426-e5de87f0982d",
    "name" : "DATABASES - Retrieve a specific external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/ox7mxqyx2hqn9lei3c264y1zcvu7wib2kvhcq3ofpv2j37if1eu4k0ho53s5en2l1hcbu7rgxyzki9cbheot6fxihzuy0atl9/Dr.+Laquita+Schulist",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credentials\" : {\n    \"password\" : \"MSQL_PASSWORD\",\n    \"address\" : \"MYSQL_ADDRESS\",\n    \"dbname\" : \"MYSQL_DATABASE_NAME\",\n    \"port\" : \"3306\",\n    \"user\" : \"MYSQL_USER\"\n  },\n  \"dbtype\" : \"mysql\",\n  \"name\" : \"mysql_example\",\n  \"system_key\" : \"bc91ede40bb993a7babaa801\",\n  \"id\" : 5\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcc35740-dbdf-4b48-b426-e5de87f0982d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExternalDB",
          "schema" : {
            "type" : "object",
            "properties" : {
              "credentials" : {
                "$ref" : "#/components/schemas/credentials"
              },
              "dbtype" : {
                "type" : "string",
                "example" : "mysql"
              },
              "id" : {
                "type" : "integer",
                "example" : 5
              },
              "name" : {
                "type" : "string",
                "example" : "mysql_example"
              },
              "system_key" : {
                "type" : "string",
                "example" : "bc91ede40bb993a7babaa801"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "92f2233a-6db3-4581-b6e9-1890b22f5896",
    "name" : "DATABASES - Create a external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/jt4zuyhb68j4ypt45mf5e9p0qppz3ouslvs7d94o5yz12bbvl33xl0w9rc64k8lx",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "92f2233a-6db3-4581-b6e9-1890b22f5896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateExternalDB"
        }
      }
    }
  }, {
    "id" : "0a60e179-49cb-4c09-a428-b3fc7086b435",
    "name" : "DATABASES - Create a external database connection - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/eph5ae41x3fh7tmwamc2eczadpyg5ljd1c6iierd6h00jlfgic8dfl6vivk5k22kceysbluav74glui18fjfnj70533efzleinrm3cuw526mnfhxnvjjr0h46l2ivuugjnxhd3pa39wq3xqnctxtjujr",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0a60e179-49cb-4c09-a428-b3fc7086b435",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateExternalDB"
        }
      }
    }
  }, {
    "id" : "09198ec2-c264-4718-a446-9383cf43cc93",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/a6xup7dhm2",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09198ec2-c264-4718-a446-9383cf43cc93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "a38c130b-0899-4dff-8b0c-216218b5091e",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/rm35dhxa6h86f5px618ys4ovso1gynsqjdpvg02xmdfmos2qccj35om97y68972d8gvfgspcsyfnbh2ku722morda6mhiztfapzju9dih69fihcerkbxnc3f5k79fv3vn6adrs2gsid2rjgtzxe3kb2i9gnmq0y6c",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a38c130b-0899-4dff-8b0c-216218b5091e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateExternalDB",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "3ab5e3b1-6f28-4aa3-965d-9a3e9ff733af",
    "name" : "DATABASES - Retrieves all external database connections - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/azg5wyjntjofxui4k7q6lvkasamjyhxhz7cyma1g9svzr1ujzezl8537zscvu4vouwr0j2rcwy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3ab5e3b1-6f28-4aa3-965d-9a3e9ff733af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllExternalDB"
        }
      }
    }
  }, {
    "id" : "8f51bb7d-8d70-4a80-afc0-5616efe4b39d",
    "name" : "DATABASES - Retrieves all external database connections (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/ab31awryjyhsxp52le52en3iu9x3fq8n2ubakp4jgxl8ij5cyt",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f51bb7d-8d70-4a80-afc0-5616efe4b39d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "ee586f9f-660b-4ca5-b072-fe42edbfb18d",
    "name" : "DATABASES - Retrieves all external database connections (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/x3s4uyahbfomu2pc5iz98byxwp38nsu7hguqyt2frcxess3pf8o3ayrgf63ztdep31du5xkyvyd6ymp0u8otap4rk6cg4gyigpnoykdhqlgoozahuzss3px02phma08bs6zc3ecatxhumvi3mnwuwtu0af8kh6js938yj2xinh1n07l3vpft36wf3rjgj5w4ybz2ikts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee586f9f-660b-4ca5-b072-fe42edbfb18d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllExternalDB",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/database"
            }
          }
        }
      }
    }
  }, {
    "id" : "4be583ea-a741-4ca1-9fae-4433fce3833f",
    "name" : "DEVICES - Get information for a connected device",
    "request" : {
      "urlPath" : "/api/v/4/devices/4kz6ldo88qg48moe5qw1j5u/connections/Chauncey+Mueller",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4be583ea-a741-4ca1-9fae-4433fce3833f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetConnectedDeviceInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "4b29345a-9ee0-4324-9a33-b5499eb54a0b",
    "name" : "DEVICES - Get information for a connected device",
    "request" : {
      "urlPath" : "/api/v/4/devices/8mku1mwaoshcismyz3ge5e6okmcc5a7cwxng6nqq9uq3i2my9erqcf8gzsd4sb56taar/connections/Lavone+Purdy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"e4ba8adf0beeea9dcc909dafaeab01 :: deviceName\",\n  \"certificate\" : \"null\",\n  \"description\" : \"A connected device.\",\n  \"type\" : \"sensor\",\n  \"enabled\" : false,\n  \"allow_certificate_auth\" : false,\n  \"allow_key_auth\" : false,\n  \"last_active_date\" : 1576095410,\n  \"name\" : \"ExampleDevice\",\n  \"has_keys\" : true,\n  \"system_key\" : \"e4ba8adf0beeea9dcc909dafaeab01\",\n  \"created_date\" : 1576095410,\n  \"state\" : \"active\",\n  \"connections\" : [ {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b29345a-9ee0-4324-9a33-b5499eb54a0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.446006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetConnectedDeviceInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean"
              },
              "allow_key_auth" : {
                "type" : "boolean"
              },
              "certificate" : {
                "type" : "string",
                "example" : "null"
              },
              "connections" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/connectedDeviceSettings"
                }
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1576095410
              },
              "description" : {
                "type" : "string",
                "example" : "A connected device."
              },
              "device_key" : {
                "type" : "string",
                "example" : "e4ba8adf0beeea9dcc909dafaeab01 :: deviceName"
              },
              "enabled" : {
                "type" : "boolean"
              },
              "has_keys" : {
                "type" : "boolean"
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1576095410
              },
              "name" : {
                "type" : "string",
                "example" : "ExampleDevice"
              },
              "state" : {
                "type" : "string",
                "example" : "active"
              },
              "system_key" : {
                "type" : "string",
                "example" : "e4ba8adf0beeea9dcc909dafaeab01"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0b95b11b-bc59-4fb0-92c3-7ab1ac5426d1",
    "name" : "DEVICES - Get connected device list",
    "request" : {
      "urlPath" : "/api/v/4/devices/l5o4tc5q3e13ux96fkopulgux4tocy7ravgptgtbxwtggak57o/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b95b11b-bc59-4fb0-92c3-7ab1ac5426d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetConnectedDeviceList",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "300ded0e-b6c3-4a0d-bae1-8b66f763006b",
    "name" : "DEVICES - Get connected device list",
    "request" : {
      "urlPath" : "/api/v/4/devices/71qtqlfsfl25xzg79he1m55ejc1ec9k2wpmoxmyrf54jf5fs9eji46boubplxu6ls8x0gklyecmfe9/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_name\" : [ {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "300ded0e-b6c3-4a0d-bae1-8b66f763006b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetConnectedDeviceList",
          "schema" : {
            "type" : "object",
            "properties" : {
              "device_name" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/connectedDeviceSettings"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "585207c6-fdfb-414f-9a8b-7704001344f0",
    "name" : "DEVICES - Get total of connected devices",
    "request" : {
      "urlPath" : "/api/v/4/devices/g5max3ouau75tjjrnn27ykmvnsi0p2pvk7z2oksuumzp9bcx54iz2/connectioncount",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "585207c6-fdfb-414f-9a8b-7704001344f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConnectedDeviceCount",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "5c1cee16-6d25-448d-9dac-2109fdde2e8e",
    "name" : "DEVICES - Get total of connected devices",
    "request" : {
      "urlPath" : "/api/v/4/devices/a1b73rj/connectioncount",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total_devices\" : 3,\n  \"total_device_connections\" : 5,\n  \"unique_device_connections\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c1cee16-6d25-448d-9dac-2109fdde2e8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConnectedDeviceCount",
          "schema" : {
            "type" : "object",
            "properties" : {
              "total_device_connections" : {
                "type" : "integer",
                "example" : 5
              },
              "total_devices" : {
                "type" : "integer",
                "example" : 3
              },
              "unique_device_connections" : {
                "type" : "integer",
                "example" : 2
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "562d38d5-c3e9-46aa-9cc5-4c1ac7ff04a3",
    "name" : "DATA - Update upsert values (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/8lu641syzrfs1tgvt2cbwvp5htzy5sk6sijf86qaqevhjcfnztjnet3s1zcf8005yjdvdo14cbiyjmqbnih3nl2jvwh4j0n6gtd1vka1vqque56a7lyojpobby6b2/Alejandro+Upton/upsert",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "conflictColumn" : {
          "equalTo" : "xyyu8k5mhsi1dh3t5ec6y4logv7ppehyq4rkoyz4xjidozbezzo8yypp9ntzrwjgvmezxyixla3e3la3i72tx9kzxyjg8rqczpaf6kvl2uboouajgxsk9hnijtlx9r62jzqvflxcvkt1ej"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "562d38d5-c3e9-46aa-9cc5-4c1ac7ff04a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUpsert",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "055ab089-6354-4791-aa40-ba9b19af6cf4",
    "name" : "DATA - Update upsert values - 200",
    "request" : {
      "urlPath" : "/api/v/4/data/0qxudw4xctose6rsc30hdqn6yxput0dqtdp3q97axtn7ejajhx5atmg5o92e5c6a3c48p2akscv95m9oyknv5uifarifhbtd7g3i7wki6u3a82h4e234dwh4h2vdbempp6wjvbmij3mrakph7df2doisluqly8u1g7cj9u7/Dirk+Abshire+I/upsert",
      "method" : "PUT",
      "queryParameters" : {
        "conflictColumn" : {
          "equalTo" : "wdyw734vz3l5v8ke0j00t87fp86ztpizmknurvwx8ne7j5axge7bwp0d6p03rfvzo4xcyivcalxfziszl008glqx6xlzqu3ia5bm01lf19t3jw6y5"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "055ab089-6354-4791-aa40-ba9b19af6cf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUpsert"
        }
      }
    }
  }, {
    "id" : "07bfe980-862d-4e19-8f57-479151416f22",
    "name" : "DATA - Delete unique index - 401",
    "request" : {
      "urlPath" : "/api/v/4/data/2hafkydwkvjcr5s/Fran+Zboncak/uniqueindex",
      "method" : "DELETE",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Judi+Senger"
        }
      }
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "07bfe980-862d-4e19-8f57-479151416f22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUniqueIndex"
        }
      }
    }
  }, {
    "id" : "ec61870c-b7d3-45ff-a81c-40e853cf5a41",
    "name" : "DATA - Delete unique index (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/cg8r/Reggie+Keebler/uniqueindex",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Deja+Crona"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec61870c-b7d3-45ff-a81c-40e853cf5a41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.445077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUniqueIndex",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "1e3b396c-6792-4ec2-b4e2-a6f8f5b63923",
    "name" : "DATA - Delete unique index (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/pqi5rd2pvh317kllwxw64c297dyna9g39vblkzub1gn98mzjnovwx5nk3cx23edi5mdm7vcg0ao9lskp4wgqnug3mfcygt3vsoydc3pzbgdnkywu3d6zo59ffotrzz7ir0rhbx8k3p77zc073efw6wf6nvyxrucx6qk0cj1rga6fl2gylbux4d9rdnh708y2cs1/Shaina+Casper/uniqueindex",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Garland+Olson"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e3b396c-6792-4ec2-b4e2-a6f8f5b63923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "5760875b-4365-4d45-9ee0-43fc9accf8a0",
    "name" : "DATA - Create Unique Index",
    "request" : {
      "urlPath" : "/api/v/4/data/h50bnhp018tna7306bpwtiul11mb0jgr9x29x3zznil4dk6nbes1dgqaswvh2lymjb32dupr8bx9rezkjx4nl1f6wo61hsei7coyn9a3gz4hcq0fn4al6c25pecjma/Peter+Brown/uniqueindex",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Truman+Gaylord"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5760875b-4365-4d45-9ee0-43fc9accf8a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUniqueIndex",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "53551583-5015-437b-b893-032dfbc5465a",
    "name" : "DATA - Create Unique Index",
    "request" : {
      "urlPath" : "/api/v/4/data/ywxq68r/Graig+Grady/uniqueindex",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Jeffrey+Orn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53551583-5015-437b-b893-032dfbc5465a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "c8d7379d-57f7-49d4-9dc7-8d0af830c454",
    "name" : "DATA - Get list of indexes - 401",
    "request" : {
      "urlPath" : "/api/v/4/data/l3r1pezpsosykdsrs2r0yfakmxg7bajovz426wrhc5l8h9b5vrphcw0c1rigqtoy72watel9fptqkgblm85qoaghhqr4qqrgqrim8qrdhktgx0iptitdrpd1zywmx10hvewpw8kxvqczkzmr5sy6yx/Lesa+Green+Jr./listindexes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c8d7379d-57f7-49d4-9dc7-8d0af830c454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIndexes"
        }
      }
    }
  }, {
    "id" : "a314d9e4-7d98-496a-9a40-6e2c1c24c861",
    "name" : "DATA - Get list of indexes (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/ju40sxyomjl18xcbul84kciy914zvf6ollk0qik9pgyt22rqxdvghn71ovsz19qiv3opu79jl4g3nnh5up1s2yc4ei6lumrmtj8xpick9nbdvcvnte4w7zuzavnz34mj2yce199niqv5b5k898ijwdszl5zy9xu62ns1wbl8g1cstqgxvitb5jer/Breanne+Davis/listindexes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a314d9e4-7d98-496a-9a40-6e2c1c24c861",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIndexes",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "435aee1c-3d4e-4980-a087-d2e4fb6a62b4",
    "name" : "DATA - Get list of indexes (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/z3rat87np/Paris+Kertzmann/listindexes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Total\" : 2,\n  \"Data\" : [ {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  }, {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  }, {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  }, {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  }, {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "435aee1c-3d4e-4980-a087-d2e4fb6a62b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIndexes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Data" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/indexArray"
                }
              },
              "Total" : {
                "type" : "integer",
                "description" : "Total number of indexes in collection",
                "example" : 2
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9aaa695c-0b75-42bd-aca8-1a67a08c1a18",
    "name" : "DATA - Delete collection",
    "request" : {
      "urlPath" : "/api/v/4/data/z5r9nqezgw213ypjokiuzee2eu4qfr89crejbmft51xyrj7rvmk95thad1r32i86625wlt98sc17p478dup5byb2lcuoljket997gorxx8/Miss+Chasidy+Ondricka/index",
      "method" : "DELETE",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Dr.+Amina+Ondricka"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9aaa695c-0b75-42bd-aca8-1a67a08c1a18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteNonUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "62f4d642-4562-45bd-8de8-0f04897e9a82",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/4/data/vqpcu1cwbka4qrid1hxzau1fbxo0a8pu6srjse/Connie+Funk/index",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Eduardo+Nitzsche"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62f4d642-4562-45bd-8de8-0f04897e9a82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.444021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNonUniqueIndex",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "a0c7950c-a52c-4433-8d57-d744d063c2f4",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/4/data/7wspie1489ygqszml4o25jezypw0epqfyrxklb3xvl2286s47wlgifops9py6ogrhaz4pamd6a0lbgv5r3df5u9gt4dwepaaz5fg9v3leso57y9ahz01n7rtdbikkkkfxgrxhg5jr7a3dz9n9mbei0j/Nadia+Armstrong/index",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Casey+Williamson+DVM"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0c7950c-a52c-4433-8d57-d744d063c2f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNonUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "b17489a0-eb7b-4eff-b98a-c9cde9b79f8d",
    "name" : "FILES  - Get all files metadata in a box",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/erofuftl0iqzeoa8fv1iqwt5h1d14zb72xib3qsl9t8akv0vcjuq5eg5rcofq8hgt3oguwnlx1z8eev7ad9lex81mb0ddeyvu6p68ai888r3j6unnel3fdvc7a4yi7d9ye6hl65ej8vptpb3t5jopjgjk/Jonas+Mosciski/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"example/full/path/to/file.txt\" : {\n    \"base_name\" : \"sample.txt\",\n    \"size\" : 60,\n    \"permissions\" : \"-rw-r--r--\",\n    \"bucket_name\" : \"inbox\",\n    \"last_modified\" : \"2017-07-03T19:52:41.693Z\",\n    \"relative_name\" : \"test/file.txt\",\n    \"path_name\" : \"example/full/path/to/file.txt\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b17489a0-eb7b-4eff-b98a-c9cde9b79f8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBoxFiles",
          "schema" : {
            "type" : "object",
            "properties" : {
              "example/full/path/to/file.txt" : {
                "$ref" : "#/components/schemas/box_data"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b1bdd44c-423c-48e9-9a2b-368e79edebca",
    "name" : "FILES  - Moves a file to a new location within buckets. - 200",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/m2cxg0tvsicj8b1igb2ecl3zk30x04e4k2wqkjgp42rjkia0z64iell7fr0mf19pepp5ftrow2130es87n50j7iyxccjk5fu2ggj04q41qpqqj4y5giog3gsmkeghwtmrqciqieyya82nhsehjjj581dtq3s7mpre7qm2chscranbb6cl48cq8s/Susana+Stroman/file/move",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b1bdd44c-423c-48e9-9a2b-368e79edebca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "MoveBucketFile"
        }
      }
    }
  }, {
    "id" : "4cbecc69-da23-4c36-98cd-4eec8b0bb364",
    "name" : "FILES  - Get a file's metadata in a box",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/9aeho3orh6nq15epwia67jeookuaivmr8znzye9kbp7jq3ltn9fpzh40t26gbp8zd6ag0hgk80wqghp2nidwhx0173bnwl1hdl423vrvcnn9hg8i8ccbmjfryqmrljaterwnr5k5k7a4ind6cbfb1aa5bbioxg3yywebvmd1yiwd/John+McCullough/file/meta",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"base_name\" : \"sample.txt\",\n  \"size\" : 60,\n  \"permissions\" : \"-rw-r--r--\",\n  \"bucket_name\" : \"inbox\",\n  \"last_modified\" : \"2017-07-03T19:52:41.693Z\",\n  \"relative_name\" : \"test/file.txt\",\n  \"path_name\" : \"example/full/path/to/file.txt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cbecc69-da23-4c36-98cd-4eec8b0bb364",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBoxFilesMeta",
          "schema" : {
            "type" : "object",
            "properties" : {
              "base_name" : {
                "type" : "string",
                "description" : "Base Name",
                "example" : "sample.txt"
              },
              "bucket_name" : {
                "type" : "string",
                "description" : "Box Name",
                "example" : "inbox"
              },
              "last_modified" : {
                "type" : "string",
                "description" : "Date of update",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "path_name" : {
                "type" : "string",
                "description" : "Full file path",
                "example" : "example/full/path/to/file.txt"
              },
              "permissions" : {
                "type" : "string",
                "description" : "File permissions",
                "example" : "-rw-r--r--"
              },
              "relative_name" : {
                "type" : "string",
                "description" : "relative name",
                "example" : "test/file.txt"
              },
              "size" : {
                "type" : "integer",
                "description" : "File size in bytes",
                "example" : 60
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2660051d-33eb-4a3a-9705-547d8f0c9852",
    "name" : "FILES  - Deletes a file from the bucket. - 200",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/95ov4611cfbss41gg6bmoyns3hzp1l377x05wg65dszvaj6413jlfypwx1mete6cv93r3v8uyzemdb82l7cm010r8sqd4ukbhevw3gv/Carlie+Kris+DDS/file/delete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2660051d-33eb-4a3a-9705-547d8f0c9852",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketFile"
        }
      }
    }
  }, {
    "id" : "e4aa53c7-b94f-4382-b6ac-c01d3b5ea66f",
    "name" : "FILES  - Creates a new file in a bucket",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/4ohnnz63jovzv612v24imcx4motjk5gmdmj66gl90wc98x8klxyekin5d8ch3/Frankie+Zemlak+Jr./file/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"base_name\" : \"sample.txt\",\n  \"size\" : 60,\n  \"permissions\" : \"-rw-r--r--\",\n  \"bucket_name\" : \"inbox\",\n  \"last_modified\" : \"2017-07-03T19:52:41.693Z\",\n  \"relative_name\" : \"test/file.txt\",\n  \"path_name\" : \"example/full/path/to/file.txt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4aa53c7-b94f-4382-b6ac-c01d3b5ea66f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBucketFile",
          "schema" : {
            "type" : "object",
            "properties" : {
              "base_name" : {
                "type" : "string",
                "description" : "Base Name",
                "example" : "sample.txt"
              },
              "bucket_name" : {
                "type" : "string",
                "description" : "Box Name",
                "example" : "inbox"
              },
              "last_modified" : {
                "type" : "string",
                "description" : "Date of update",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "path_name" : {
                "type" : "string",
                "description" : "Full file path",
                "example" : "example/full/path/to/file.txt"
              },
              "permissions" : {
                "type" : "string",
                "description" : "File permissions",
                "example" : "-rw-r--r--"
              },
              "relative_name" : {
                "type" : "string",
                "description" : "relative name",
                "example" : "test/file.txt"
              },
              "size" : {
                "type" : "integer",
                "description" : "File size in bytes",
                "example" : 60
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b2aa3682-2fab-4740-b016-8d47c6acafa0",
    "name" : "FILES  - Copies a file to a new location within buckets - 200",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/7q1h510ouvlhvi5vhj6s7pcl0l96on3orn5hex9ijyqwff7ob/Bonita+Klein/file/copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b2aa3682-2fab-4740-b016-8d47c6acafa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CopyBucketFile"
        }
      }
    }
  }, {
    "id" : "e27546b0-fb1b-4796-92ff-455e03e7c4f2",
    "name" : "FILES  - Returns metadata for specified bucket",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/xh7lukb/Jeanetta+Emard",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e27546b0-fb1b-4796-92ff-455e03e7c4f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.443055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSingleBucketData",
          "schema" : {
            "type" : "object",
            "properties" : {
              "deployment_name" : {
                "type" : "string",
                "description" : "Deployment Name",
                "example" : "ExampleDeployment"
              },
              "edge_config" : {
                "type" : "array",
                "description" : "Edge Config file",
                "example" : ""
              },
              "edge_storage" : {
                "type" : "string",
                "description" : "Edge storage type - local or google",
                "example" : "local"
              },
              "platform_config" : {
                "type" : "array",
                "description" : "Platform Config file",
                "example" : ""
              },
              "platform_storage" : {
                "type" : "string",
                "description" : "Platform storage type - local or google",
                "example" : "local"
              },
              "system_key" : {
                "type" : "string",
                "example" : "98a6cbe60bceafcc5d8b4a33b"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "019034b6-221a-4ccd-b7f3-9adc9927876d",
    "name" : "FILES  - Returns a list of metadata for buckets in system",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/0vtyxiw9qzflrorjom4wrbnz0e1lde38y8msrprkl93ifzk59p7rkiifaj8lxcxr7u40wyz7vbh2k14kz26e7meq98vekrkwuf4vge7fxr2tl6vqpg0x6jyka3vwo05yw8ej48ov2juj9ry0k",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}, {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}, {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}, {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "019034b6-221a-4ccd-b7f3-9adc9927876d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.4429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketsData",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/buckets"
            }
          }
        }
      }
    }
  }, {
    "id" : "6afc88bc-6ce8-454c-abd2-106f2d870fce",
    "name" : "DEPLOYMENT - Delete a deployment - 500",
    "request" : {
      "urlPath" : "/api/v/3/yxr4q1soezlhhzhpp121wxj1d71xy1qnpsd7r0aol5n13v6lc9lbzus3fo1ayuhd8p85sgz5d2r16u1ss1l6ki4tdjaepjaasute3xto2v/deployments/Walter+Gulgowski+V",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "6afc88bc-6ce8-454c-abd2-106f2d870fce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDeployment"
        }
      }
    }
  }, {
    "id" : "205adcb3-9e0c-48c1-b2e9-4db8e327bada",
    "name" : "DEPLOYMENT - Delete a deployment - 200",
    "request" : {
      "urlPath" : "/api/v/3/avu3dvi4s9vw/deployments/Kip+Bartell",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "205adcb3-9e0c-48c1-b2e9-4db8e327bada",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDeployment"
        }
      }
    }
  }, {
    "id" : "f912ab88-a183-43e0-9c5e-6e056f2c3a94",
    "name" : "DEPLOYMENT - Update deployment - 500",
    "request" : {
      "urlPath" : "/api/v/3/9bdaz5m4ejehwvgnjcjlyo3fojil3ej2sju6ix04hox3a67olhlg2kal8a0jsq2d25y6zqfyo4ra67lznd3vxcjze84g4jwxfd8rdawoe7m3lsl4zhngvwsvm/deployments/Miss+Seymour+Jones",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "f912ab88-a183-43e0-9c5e-6e056f2c3a94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDeployment"
        }
      }
    }
  }, {
    "id" : "d9b7a99c-8c30-40f9-be43-3853c7543c81",
    "name" : "DEPLOYMENT - Update deployment - 200",
    "request" : {
      "urlPath" : "/api/v/3/u5e9uzw0vl7grtqxjond031zjxp4orlmt3qf6b8ct2cfchq1uoxwzs04vdmkfgqo1ehsy6mc55yq65g40jj3kx/deployments/Mohammed+Blick",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d9b7a99c-8c30-40f9-be43-3853c7543c81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDeployment"
        }
      }
    }
  }, {
    "id" : "0e8c5616-8033-4caf-b81b-5cf6b727e38d",
    "name" : "DEPLOYMENTS - Gets a deloyment for a system - 500",
    "request" : {
      "urlPath" : "/api/v/3/fwnf1wk74qnm/deployments/Deshawn+Stroman",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0e8c5616-8033-4caf-b81b-5cf6b727e38d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetADeployment"
        }
      }
    }
  }, {
    "id" : "1bf2c993-2e84-48af-90d4-8f3fc3be172e",
    "name" : "DEPLOYMENTS - Gets a deloyment for a system - 200",
    "request" : {
      "urlPath" : "/api/v/3/9xsm1xbz7zixlvtxn3tp3c2f3pr38qxy4jshqdmoiaqv9s9ga4hkfhyw0wytatf1kvklew7pmhb6etbto6e1hsp7c5i2qta5pv4omz9rckc6f2os98sc4rn9pfpyxom8rt6guhdxdme7sfzkxfg95cllazihixyyaynbo6n4/deployments/Dana+Beier",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1bf2c993-2e84-48af-90d4-8f3fc3be172e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetADeployment"
        }
      }
    }
  }, {
    "id" : "ce8a3c6c-e7af-4f0d-b8f5-e1f46a3f7f0d",
    "name" : "DEPLOYMENTS - Creates a deployment - 500",
    "request" : {
      "urlPath" : "/api/v/3/hh4p8d7385p90dk9atmt85z5i3sjwxg4dif3q4nd9db4t30cuwcs2ml5b0ae1v10dxtll8lp3ficbmtv8nkynqqu3ln1r5inim8zp9yg2gae83nm0r9pn8dg7kr6c2f3/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ce8a3c6c-e7af-4f0d-b8f5-e1f46a3f7f0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeployment"
        }
      }
    }
  }, {
    "id" : "2cd5619e-0805-4d7c-9795-8d1c443d9037",
    "name" : "DEPLOYMENTS - Creates a deployment - 200",
    "request" : {
      "urlPath" : "/api/v/3/izkl6c9rms63etu1793r8kt3bupswg3f3spnrs2ogwt5xo4ab0c9gr08rvq39b2czxr9zzjv3o3pcw4wl4kkvo5x135/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2cd5619e-0805-4d7c-9795-8d1c443d9037",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeployment"
        }
      }
    }
  }, {
    "id" : "66b1c2c2-2bcc-480b-9bbf-4b9f1fd9a611",
    "name" : "DEPLOYMENTS - Gets all deployment names and descriptions for a system - 500",
    "request" : {
      "urlPath" : "/api/v/3/pn8g7tup0xbxzt8s1tdb6t2rworf981i81pa10slucpybvuk2etgov790bodl5mi0ehugfw1hg5ypfnxqyhky6c4c2hrek/deployments",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "66b1c2c2-2bcc-480b-9bbf-4b9f1fd9a611",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllDeployments"
        }
      }
    }
  }, {
    "id" : "b86682ca-e1d2-4059-af12-08e7f87b0d38",
    "name" : "DEPLOYMENTS - Gets all deployment names and descriptions for a system (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/bb52wi3k/deployments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n}, {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b86682ca-e1d2-4059-af12-08e7f87b0d38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllDeployments",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deployment"
            }
          }
        }
      }
    }
  }, {
    "id" : "0a6970da-dcd9-4738-9799-5ff05810d4a8",
    "name" : "Edge - Delete edge - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/wiplf9tvdt7xj85xow18mish6ub97d2icjresfpryi5h3tv1woqyuo39cg4xq5sp037qbg062zbnq5/Palmira+Wiza",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0a6970da-dcd9-4738-9799-5ff05810d4a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEdgeByName"
        }
      }
    }
  }, {
    "id" : "a1d3cad3-a36c-4558-a579-77ac9ea7b9a9",
    "name" : "Edge - Delete edge - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/85ole47bksgv9o1v/Amy+Walsh+DVM",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a1d3cad3-a36c-4558-a579-77ac9ea7b9a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEdgeByName"
        }
      }
    }
  }, {
    "id" : "0b640275-634e-4d8f-a831-7c242163e0bb",
    "name" : "EDGE - Create edge - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/4ns1z3a3p0zgh41wx5y1kpn0yi9ce4v7v1i3pode0poza8r291d6gd01nso0fb7a88botp8ny1m1a7u1wl9jpwul0z5qsmuwzif3s2mgbkz7qai34hu1ixtd2b4hnwn2glz8gs3ybz54h0qvbhxjnde7od5xfljcajhwr3l92g3hrbnkm6kmp048/Brittanie+Sauer+V",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0b640275-634e-4d8f-a831-7c242163e0bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.442055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewEdge"
        }
      }
    }
  }, {
    "id" : "45e959e3-707d-4f3d-b699-8570d74c2a49",
    "name" : "EDGE - Create edge - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/qeu60dg7npnzls8li55pib5n2fzpjig8ca2ryac0nn4p1ix7dw6lt8ezqf66ik5dlk9r32kooz0vcuzcry664buk58z67oa5jk1zig54uy7wrz7fq5v1klt82ma7xpind1w58cyjkz1mdu9ybjgo0gawflp2sw2jedoiwisawoj0nsppu/Russ+Hahn",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "45e959e3-707d-4f3d-b699-8570d74c2a49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewEdge"
        }
      }
    }
  }, {
    "id" : "63090ba3-ecd3-4d14-81e0-3be25dfb4eb8",
    "name" : "EDGE - Update edge - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/gxd0777bmejrhc0t9yqzxtkxl86f60y7ssblnf4xuh7w6j9f4z6wagzjkbofwc1f7casjzdz5dgn46nx8cx2im87/Armand+Von",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "63090ba3-ecd3-4d14-81e0-3be25dfb4eb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateEdgeByName"
        }
      }
    }
  }, {
    "id" : "0feb96ec-dfd8-4142-93df-188f4a5c44c7",
    "name" : "EDGE - Update edge - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/qqayzlor0hpu21q23b3h8ydwcerlc6n0k1flgiywjbp5t68auh2b1v0gvo3d/Dawn+Mann",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0feb96ec-dfd8-4142-93df-188f4a5c44c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateEdgeByName"
        }
      }
    }
  }, {
    "id" : "c2b96ff0-2977-46ce-a920-32e6c3f7436b",
    "name" : "Edge(name) - Get edge info - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/v3zta32y24u829sle8hdd9hbnhujloukjuezkg9to794xblkadql8g78g3m6molhq8r2tigp2xmxuevw1x8/Kymberly+Schuster",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c2b96ff0-2977-46ce-a920-32e6c3f7436b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeDataByName"
        }
      }
    }
  }, {
    "id" : "66569b4c-61d0-4a32-a020-97aefef69428",
    "name" : "Edge(name) - Get edge info - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/b0intjsatuuuvos15v78bwqjjas8hrd2dzklyzkev9/Marilee+Lockman",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "66569b4c-61d0-4a32-a020-97aefef69428",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeDataByName"
        }
      }
    }
  }, {
    "id" : "7323c0f2-8a71-4bef-a8fc-d7b621274953",
    "name" : "EDGE - Get count - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/tx339soz7gf8phkl1if05zfzxy46z4g6b6ocpfxm823bxhcbh9mxk/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7323c0f2-8a71-4bef-a8fc-d7b621274953",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeCount"
        }
      }
    }
  }, {
    "id" : "a0a2e51f-12ef-44d7-b27b-1339c702ec25",
    "name" : "EDGE - Get count - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/htijr2pwq3/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a0a2e51f-12ef-44d7-b27b-1339c702ec25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeCount"
        }
      }
    }
  }, {
    "id" : "c94520de-6f3e-41e1-87b3-da5f157b2d1e",
    "name" : "EDGE - Get columns - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/83wcg68x6c7qy11fk5/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c94520de-6f3e-41e1-87b3-da5f157b2d1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeTableSchema"
        }
      }
    }
  }, {
    "id" : "09364017-4fb0-4d6e-83e2-06c8f29972b9",
    "name" : "EDGE - Get columns - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/jbddaomew1mb862grl9gvfulzjtgap1r69rzxt8t/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "09364017-4fb0-4d6e-83e2-06c8f29972b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.44153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeTableSchema"
        }
      }
    }
  }, {
    "id" : "2f2367ef-e4de-44f4-96be-0dd8f175f040",
    "name" : "DEVICES - Get count",
    "request" : {
      "urlPath" : "/api/v/3/devices/2lvvzvcy2hx8twdmeenxnl0r8vppk901oit18mqd8/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f2367ef-e4de-44f4-96be-0dd8f175f040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDeviceCount",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e0d2a44f-82ab-427c-9683-7d3552213bb7",
    "name" : "DEVICES - Get count",
    "request" : {
      "urlPath" : "/api/v/3/devices/csi9vg8uoio0opgnbocz7mqvtunih8imttquf6nwkclcsqfs3sz2b53f1i1aeusti9m7wzmkc5/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0d2a44f-82ab-427c-9683-7d3552213bb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDeviceCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "fe1fa501-9ced-4150-8803-94bb390c114c",
    "name" : "EDGE - Get device columns",
    "request" : {
      "urlPath" : "/api/v/3/devices/hcajqk4ko1u5vq6snwfhtxgoih2ixd4pgja9rb6613fnzp7yzzl6mqsrm94oo4fai3nqp87h1pziltdo/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe1fa501-9ced-4150-8803-94bb390c114c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDeviceTableSchema",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "c61a147a-a34d-4a21-b53a-3fc020eae260",
    "name" : "EDGE - Get device columns",
    "request" : {
      "urlPath" : "/api/v/3/devices/vrp2aiphji7lyysr7qge7ilkgnzbgwtjb6cdr29/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c61a147a-a34d-4a21-b53a-3fc020eae260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDeviceTableSchema",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/columnObject"
            }
          }
        }
      }
    }
  }, {
    "id" : "9909ebae-51f6-4ddc-ad55-a0fdccf3c6cf",
    "name" : "DATA - Delete collection - 200",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "5k0n"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9909ebae-51f6-4ddc-ad55-a0fdccf3c6cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCollection"
        }
      }
    }
  }, {
    "id" : "e6a39866-7079-4766-a18b-87ba1fdc4572",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6a39866-7079-4766-a18b-87ba1fdc4572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCollection",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "9e8e00d1-bfce-4bcf-8987-23a1defe620c",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appID\" : \"c0f8e2c50bbeeaf87f5efa2eee301\",\n  \"name\" : \"newCollection\",\n  \"collectionID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e8e00d1-bfce-4bcf-8987-23a1defe620c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCollection",
          "schema" : {
            "required" : [ "appID", "name" ],
            "type" : "object",
            "properties" : {
              "appID" : {
                "type" : "string",
                "description" : "This is the system key",
                "example" : "c0f8e2c50bbeeaf87f5efa2eee301"
              },
              "collectionID" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "name" : {
                "type" : "string",
                "example" : "newCollection"
              }
            },
            "description" : "The information necessary to create a new collection"
          }
        }
      }
    }
  }, {
    "id" : "038ed3bc-0d86-4fbd-9880-457b7c2e4c64",
    "name" : "DATA - Update collection - 200",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "038ed3bc-0d86-4fbd-9880-457b7c2e4c64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.441001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCollection"
        }
      }
    }
  }, {
    "id" : "0c16777d-23c1-4c00-bb5c-ad7cdb4a7866",
    "name" : "HANDLERS - Get trigger handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/dtfj8uclo658afc1c6srzcsnmxy9al6ydd2tcwv1xiqgf7wnm54eywovcjevwwpceuv7wzbt9om64tjpwxrzk7t5u1zklebhxzy81382jjtkydeihhrmw1t5pyhoa9t5upnah0cuw4a/triggers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c16777d-23c1-4c00-bb5c-ad7cdb4a7866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllTrigger",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "6edbf142-c69f-48b3-b86a-415a96a763c6",
    "name" : "HANDLERS - Get trigger handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/vhdncvuyewtt82hwzics275js5/triggers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6edbf142-c69f-48b3-b86a-415a96a763c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllTrigger",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    }
  }, {
    "id" : "25019bc7-79e3-492f-8a30-b5efbac9fd0a",
    "name" : "HANDLERS - Delete trigger handler - 400",
    "request" : {
      "urlPath" : "/api/v/3/code/3nziz2f43or6fpjk52hmzeej0dtcmhnj3523xyqkamak0bjhu4kb1fej3nnzmf3p5ca103xqdekxo0817xbpropw8m9nn86s6gsehhwatjnl2jy1el02chd5efcvsir13gatbk6poz5vrgw01fp3s8ujv9ixlgngqyai6d8z389pm8jr1k844fxxmvdwjue8o4bgrn9/trigger/Deshawn+Runte",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "25019bc7-79e3-492f-8a30-b5efbac9fd0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteTriggerByName"
        }
      }
    }
  }, {
    "id" : "a02414e9-4e78-4dce-9bfa-d3ace9b064af",
    "name" : "HANDLERS - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/api/v/3/code/p71uyg89eg25u6k8seljvttifew0qmecex0yae6t52oyes4p62qkww617l3pfstnmryxyw77rqmbjbsmmw3usl5zqf87wsr62nrbu10rm0jgcuchz611ybtprar04j7a9jr47mckqw0prak3dqz5176z2ko6voxjsxupjavb6xxu31dfpl7an/trigger/Bryce+Gleichner",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a02414e9-4e78-4dce-9bfa-d3ace9b064af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteTriggerByName"
        }
      }
    }
  }, {
    "id" : "eefa976b-e706-4709-aa9f-53e8349d92dc",
    "name" : "HANDLERS - Create trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/bn3gljqay0wj107aroc/trigger/Inga+Emmerich",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eefa976b-e706-4709-aa9f-53e8349d92dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewTrigger",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "18dd9703-9f7b-4a40-ad91-33df61190972",
    "name" : "HANDLERS - Create trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/ypc4p8nwpav40id7ezsqo0agumjwtbya6ajzq1cuzusb0y2cacgfqenmj726hxwbnts3z8eu0xj91eg25qn734714d2dn0yh9feoj6cz60cpqyy83k5icjkv5d634gnok21usnh7n5ok0kmd0uy5g/trigger/Mr.+Archie+Schimmel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18dd9703-9f7b-4a40-ad91-33df61190972",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewTrigger",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    }
  }, {
    "id" : "6682e11a-954c-4c2c-a374-190c7da1d27d",
    "name" : "HANDLERS - Update trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/xyab41q8y8cgnfidgbea4gim9dw7komcqh945iz1wpfwj2xgmhnrg40agdwg9uxd8v92itg986hbnog5wzkn3gsyar8mx6igeaqx/trigger/Ema+Reichert+V",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6682e11a-954c-4c2c-a374-190c7da1d27d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTriggerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "321a3a60-758f-4c6e-bab1-6191882e8cad",
    "name" : "HANDLERS - Update trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/c5dzp4meqop60y9c0jo25to1ekiorwp8fd51i2sotvrara2nk29l23qfzp8wxfr258nvweovh7j2f565ep5d9dckrvfuk3ics9rjefhzrut2hqo5b1teve3trsepvmqarxkep09pqcee592nay8gk95dqqar5/trigger/Chris+Roob",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "321a3a60-758f-4c6e-bab1-6191882e8cad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTriggerByName",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    }
  }, {
    "id" : "937ce8c8-c839-4a88-9ddf-6f1f830874da",
    "name" : "HANDLERS - Get trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/pz14y6kpsx6m3wojfu1uh2sbpl3zymir6ifmknrudbppax6f0bthublgcqm8r0hpchxjqtf23atcvhfkd7296lez0uc74r99c7nj1i6xw8qv0zjkdehtkqob0jg7zubu9hgtvkfns17y3p/trigger/Pearlene+Torp",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "937ce8c8-c839-4a88-9ddf-6f1f830874da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.440046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTriggerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "3f6a5386-8817-4f04-95d3-bb08a5335fba",
    "name" : "HANDLERS - Get trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/62aqmsm80wr1kr4cniegy8fqndo6nu8q0/trigger/Brian+Schiller",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f6a5386-8817-4f04-95d3-bb08a5335fba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTriggerByName",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    }
  }, {
    "id" : "b66f2cb9-b699-4e41-bbd1-2590720a9218",
    "name" : "HANDLERS - Get timer handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/p6egsba99t927i166texda7rdc1sjmzul4ry5it65pfczxqs094touqujg9kz6gm33icbzejlpbb84cszdsauyru6ll27pfu0ppu5g3g08oiv3l96l3p381h67kva5wpj2s7xrbpbb7uginriqcpe/timers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b66f2cb9-b699-4e41-bbd1-2590720a9218",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllTimers",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "4441a6ad-bc02-404b-a30d-a8c7813c773e",
    "name" : "HANDLERS - Get timer handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/63niuj/timers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4441a6ad-bc02-404b-a30d-a8c7813c773e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllTimers",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/timerList"
            }
          }
        }
      }
    }
  }, {
    "id" : "7763b8db-b28e-4fd1-bfaf-277b4e6a0eb3",
    "name" : "HANDLERS - Delete trigger handler (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/b6cid2xbtmjer3392jsc72c4xtwpabhmvagelybq476iesw/timer/Bessie+Zemlak",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7763b8db-b28e-4fd1-bfaf-277b4e6a0eb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteTimerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "835fd79f-8fb1-403d-b5a2-dcbeead89852",
    "name" : "HANDLERS - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/api/v/3/code/3fh3xeai7599uoh39yxxp48uqfvzdwq3olth8co1e73fev8g42ptggdohfvi268sf/timer/Lonnie+Kreiger",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "835fd79f-8fb1-403d-b5a2-dcbeead89852",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteTimerByName"
        }
      }
    }
  }, {
    "id" : "04c4e629-db34-443b-b949-c66c614a52d3",
    "name" : "HANDLERS - Create timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/hyhez8ktdsa64psre08u62e7lugeqxb16kiqy5m13j92kwwurgcth4gz0ht3msoisfske59nnftlyna3nv1k37h67nx/timer/Van+Schuppe",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04c4e629-db34-443b-b949-c66c614a52d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewTimer",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "d38f62df-ca2b-4146-9d3b-a9afc4e48451",
    "name" : "HANDLERS - Create timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/ksohp7wnet36fka138s2ifkhobymy867b8ii8dufl3f3w32a9con7d1e93k56p2cv6ckgcpzmrlynkjzcc5uzdp4q1mwl693om6a9z3dknjyoax8jxc8vwvn3nump3rv5z0gcuyacte77i9hw/timer/Carl+Spinka",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d38f62df-ca2b-4146-9d3b-a9afc4e48451",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewTimer",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e528ee5e-a1b8-4583-95a1-771a95397131",
    "name" : "HANDLERS - Create timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/nkr6al04i1imnedza55igkoqi7j8uvvtl2mdl8ou6zsn213cdidjjtz5ddavotnxmw6g53c5md0lnu286xqi2rgkvo9aih2dbx4w8isgvzjhjbvpb9ucl7k2zixs5ocdjt7tk8wlkih2i9ohfilwwpamy3mppqhde1cymqs3tli18snqr1tfe5ayzx3y1jq9l870qdl1/timer/Mrs.+Nicola+Bergnaum",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e528ee5e-a1b8-4583-95a1-771a95397131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewTimer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "example" : "This timer is 60 seconds"
              },
              "frequency" : {
                "type" : "integer",
                "description" : "Frequency (in seconds) between two consecutive invocations of a timer handler",
                "example" : 60
              },
              "name" : {
                "type" : "string",
                "example" : "Timer_Example"
              },
              "namespace" : {
                "type" : "string",
                "example" : ""
              },
              "repeats" : {
                "type" : "integer",
                "description" : "The number of times a timer handler is invoked. To invoke the handler indefinitely set 'repeats = -1'",
                "example" : -1
              },
              "service_name" : {
                "type" : "string",
                "example" : "TimerHandler"
              },
              "start_time" : {
                "type" : "string",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "system_key" : {
                "type" : "string",
                "example" : "ccafb4cf0bd0dcbcadaccaf9ebba01"
              },
              "system_secret" : {
                "type" : "string",
                "example" : "CCAFB4CF0BBABDDCE3F2F1E6C3E601"
              },
              "timer_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name"
              },
              "user_id" : {
                "type" : "string",
                "example" : "c6b4cf0b8ca5b7c3fad793cb12"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "20e81ec0-3eef-4f18-9c5c-9a162b1ca1d4",
    "name" : "HANDLERS - Update timer handler (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/1c900z5yadazf9vrhocxojwqtxzi40pf01l2e4ose2r4oy5qb4w0490yu9thp2jwdgt7hfim52x6eferp8nsgbhvcxoqim2h1uzby2zkgkh8ngt88cwq2vnz0ra/timer/Rudy+Heaney+PhD",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20e81ec0-3eef-4f18-9c5c-9a162b1ca1d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.439003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTimerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "27dc4aae-4234-47bd-8177-90cdb9fd3793",
    "name" : "HANDLERS - Update timer handler - 400",
    "request" : {
      "urlPath" : "/api/v/3/code/cj1ka5grarmieqh2v020kwv0bsw3mjkawp6qj0fui0ccjrkdagkqu78zqqdgpim3zkvq7nwutoc5taxgrcl56skxvddx7h/timer/Cole+Wehner+Sr.",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "27dc4aae-4234-47bd-8177-90cdb9fd3793",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTimerByName"
        }
      }
    }
  }, {
    "id" : "3eeb8e2e-4a0d-42e5-b572-ee9ff26f9283",
    "name" : "HANDLERS - Update timer handler (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/yxv5xiuip9pdk0eblic220mkzcklwdn2fsebkegeao0umw10cpipb67/timer/Shenita+Hegmann",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3eeb8e2e-4a0d-42e5-b572-ee9ff26f9283",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTimerByName",
          "schema" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "example" : "This timer is 60 seconds"
              },
              "frequency" : {
                "type" : "integer",
                "description" : "Frequency (in seconds) between two consecutive invocations of a timer handler",
                "example" : 60
              },
              "name" : {
                "type" : "string",
                "example" : "Timer_Example"
              },
              "namespace" : {
                "type" : "string",
                "example" : ""
              },
              "repeats" : {
                "type" : "integer",
                "description" : "The number of times a timer handler is invoked. To invoke the handler indefinitely set 'repeats = -1'",
                "example" : -1
              },
              "service_name" : {
                "type" : "string",
                "example" : "TimerHandler"
              },
              "start_time" : {
                "type" : "string",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "system_key" : {
                "type" : "string",
                "example" : "ccafb4cf0bd0dcbcadaccaf9ebba01"
              },
              "system_secret" : {
                "type" : "string",
                "example" : "CCAFB4CF0BBABDDCE3F2F1E6C3E601"
              },
              "timer_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name"
              },
              "user_id" : {
                "type" : "string",
                "example" : "c6b4cf0b8ca5b7c3fad793cb12"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "bd2e33f9-3af9-4f91-b9bf-257a5b2d8989",
    "name" : "HANDLERS - Get timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/blbwd7sifkf69x3u9562momlyifci05cr2tav8tknbmc3n9t2aatp4h1bz/timer/Mrs.+Stefan+Kihn",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd2e33f9-3af9-4f91-b9bf-257a5b2d8989",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTimerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "cb27186c-059b-4ba0-88cc-323bcb502617",
    "name" : "HANDLERS - Get timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/1lnjut9qswwwoffgesw1gcd2gsjm0hy14qo879l1rx07k3lusan24hibr1lcbd1wteijzj89uy2qzuniu61b1ej2b08bw9re2r2zqkdhdl7bzpob5k8l3khwdfk03jx8w74y0g06n5zsujpv04iaa6j9wp9ywed1uw7j926bwlm82gxn0igwm/timer/Katharine+Hessel",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb27186c-059b-4ba0-88cc-323bcb502617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTimerByName",
          "schema" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "example" : "This timer is 60 seconds"
              },
              "frequency" : {
                "type" : "integer",
                "description" : "Frequency (in seconds) between two consecutive invocations of a timer handler",
                "example" : 60
              },
              "name" : {
                "type" : "string",
                "example" : "Timer_Example"
              },
              "namespace" : {
                "type" : "string",
                "example" : ""
              },
              "repeats" : {
                "type" : "integer",
                "description" : "The number of times a timer handler is invoked. To invoke the handler indefinitely set 'repeats = -1'",
                "example" : -1
              },
              "service_name" : {
                "type" : "string",
                "example" : "TimerHandler"
              },
              "start_time" : {
                "type" : "string",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "system_key" : {
                "type" : "string",
                "example" : "ccafb4cf0bd0dcbcadaccaf9ebba01"
              },
              "system_secret" : {
                "type" : "string",
                "example" : "CCAFB4CF0BBABDDCE3F2F1E6C3E601"
              },
              "timer_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name"
              },
              "user_id" : {
                "type" : "string",
                "example" : "c6b4cf0b8ca5b7c3fad793cb12"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a9224b32-14b1-4da5-8415-a636060bef8b",
    "name" : "CODE - Returns code services and settings - 500",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/efyev7kg6cv1vv1gs9x2x1dss51czs99jldqvkj4i29bayiuazpj3y5ffeffez8babicfcguhvcx3yhxk2dc3gvxndiw5psjsg2t41havshmp76bai196ztdc5fqo935sg8gagkmgp22twl9grmzzgpqyspxi5qcxjty88jkx2etqideb5bd7jw3yxgi0ml1u5",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a9224b32-14b1-4da5-8415-a636060bef8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ReturnServiceSettings"
        }
      }
    }
  }, {
    "id" : "8805ca83-b1a0-46bf-8af2-9c221c08e91d",
    "name" : "CODE - Returns code services and settings - 401",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/mudt7g7zfr14dc5kn8uex1t8tttchirduc1uh6xgstjfrv1id4vkz8vc31uatkpfzu0mwwc4wwkn65ipn3w07jw6ec0udayta943iowtr1gc3s9isnxq9tff97jcn0np7lmz998vwzrqkuxchje5t9gel2i2567q1xu2b3gc4n4ojqyzm",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8805ca83-b1a0-46bf-8af2-9c221c08e91d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ReturnServiceSettings"
        }
      }
    }
  }, {
    "id" : "b885a717-1785-4629-87d7-984a54f928e1",
    "name" : "CODE - Returns code services and settings - 400",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/1c6esy8vz7ly9pdlo47pe5zj5spvei0opu4atctkswm226v00ujajby0jtb9yr6bxghlnfch8q7zmgoosuidb",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b885a717-1785-4629-87d7-984a54f928e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ReturnServiceSettings"
        }
      }
    }
  }, {
    "id" : "7c1ae671-99ab-4476-af71-f6388d855f9d",
    "name" : "CODE - Returns code services and settings (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/xg4se9l1samxsnz9pgwjjipx6uiunlmususf0ebpyv4enp2us5vricutx4br8q86rkqy7xd6fk5oo2o3i1hi6lw2gpyvaw084e2t07typumr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : [ {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : true,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : false,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c1ae671-99ab-4476-af71-f6388d855f9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.438028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ReturnServiceSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/codeSettings"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c3667931-edee-421a-a473-0ee4f63fbd22",
    "name" : "DATA - Get collections",
    "request" : {
      "urlPath" : "/api/v/3/allcollections/5fzputua4ahb97nqp9p6lcf94wtg3lbpigmmevu106ew4tiia",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3667931-edee-421a-a473-0ee4f63fbd22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCollections",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/allCollections"
            }
          }
        }
      }
    }
  }, {
    "id" : "1273eede-685c-49f1-a5be-aa9b6e896ad3",
    "name" : "EDGE - Fetch all edges - 400",
    "request" : {
      "urlPath" : "/api/v/2/edges/3wvcqkh58x78fxpl6obzvx0xbd4k6m22bfgq8jzs0foyqu9rmcev6b02rujc87c6nlmmbr7v1lfsn5skcxlphz0qm5cao9sucauuahsc3mla99iog6vrmbwh5axxxm9ahpo4uzorbr6othvmjkt2f5p8z0anesfb",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "4y0c"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1273eede-685c-49f1-a5be-aa9b6e896ad3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllEdges"
        }
      }
    }
  }, {
    "id" : "328b3eb7-b6b0-4e0e-a6fd-b02b05474090",
    "name" : "EDGE - Fetch all edges - 200",
    "request" : {
      "urlPath" : "/api/v/2/edges/6yp0diqhbcj18aszv47ier63l0v9a5cxo1k1p9nxukt6vn3hda40yahlej9vj7jcjeb15xhtgqdis2wbyyerr4545eu2z9wynj",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "p3mm"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "328b3eb7-b6b0-4e0e-a6fd-b02b05474090",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllEdges"
        }
      }
    }
  }, {
    "id" : "45fab732-0d81-4816-b43c-01c4dedf3527",
    "name" : "DEVICES - Adds a device - 500",
    "request" : {
      "urlPath" : "/api/v/2/devices/6na1inyu2ago1dpups8dma31wf59l948po4buphpb27ddk631xiey2h2bipi1taea37cnvt4gc0hdluq2fznk47xblkxvvwuv4b67q10ha2fvrf/Idella+Orn",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "45fab732-0d81-4816-b43c-01c4dedf3527",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddDevice"
        }
      }
    }
  }, {
    "id" : "acff8f8e-92f0-482a-bddf-20da971421f7",
    "name" : "DEVICES - Adds a device - 401",
    "request" : {
      "urlPath" : "/api/v/2/devices/mv15w5sw12wrngxsdt7yajt5svmthq02hf1x8tzwvw7jbf3matxds25k2qj1hg97dhojg7kq3pbr0h4t3hekr54sgtjmwz6vfgmks/Lashaunda+Koelpin",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "acff8f8e-92f0-482a-bddf-20da971421f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddDevice"
        }
      }
    }
  }, {
    "id" : "b5e88f2f-b1df-4995-b901-277f31e02075",
    "name" : "DEVICES - Adds a device (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/gye76g8g19ufgyhc2w63vss4wrugi34n0pa83dmrwgiripj3toeozh46lcttdil6oa49fnwu0fud7xdk2te8b0hv832cdnhuj7svg4iik60kv2cf9jix74lvykif6ghiy39ic11fhqcsy7pdke2mne7vrj8aw3sdov8x1dc2uy4u4tnoyyppiaol9c/Dr.+Rolland+Dibbert",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e88f2f-b1df-4995-b901-277f31e02075",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "c8f008c6-b607-4316-ad60-0ae333ba11f3",
    "name" : "DEVICES - Adds a device (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/xfv9dzprc7oc1s1g49a0ddsbhspywh5u258qly0d9ajlbbzebcmygqj12ew2ga6o4rxbdtfz4vu8zrbs1uj66xcgongwwz6h4yts6anxhizvvdss4bboe0w2a/Fermin+Russel",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: device_name\",\n  \"allow_key_auth\" : true,\n  \"last_active_date\" : 1574445864,\n  \"certificate\" : \"\",\n  \"name\" : \"device_name\",\n  \"description\" : \"This device is a sensor\",\n  \"system_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"created_date\" : 1574445666,\n  \"state\" : \"On\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8f008c6-b607-4316-ad60-0ae333ba11f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddDevice",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_key_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "certificate" : {
                "type" : "string",
                "example" : ""
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1574445666
              },
              "description" : {
                "type" : "string",
                "example" : "This device is a sensor"
              },
              "device_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: device_name"
              },
              "enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1574445864
              },
              "name" : {
                "type" : "string",
                "example" : "device_name"
              },
              "state" : {
                "type" : "string",
                "example" : "On"
              },
              "system_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "03ebad74-dc43-4b65-a1e1-d11e10f2fac7",
    "name" : "DEVICES - Update info - 500",
    "request" : {
      "urlPath" : "/api/v/2/devices/1ubdzy4e/Thaddeus+Walker",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "03ebad74-dc43-4b65-a1e1-d11e10f2fac7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDeviceInfo"
        }
      }
    }
  }, {
    "id" : "d3139807-b293-4339-9d37-d5ae23c9380b",
    "name" : "DEVICES - Update info - 401",
    "request" : {
      "urlPath" : "/api/v/2/devices/kdzirlp5tk3otsk14gl0f0gpmtjvvo6aznhlgeqf07rv8lvbnj3lz5p5g6po5l47zxjlw7gitbgr9nl3mtzdxwbteq61apsc2ftut9u7pjj67aweho5kqe5kl8bz2/Jerrold+Grimes+MD",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d3139807-b293-4339-9d37-d5ae23c9380b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDeviceInfo"
        }
      }
    }
  }, {
    "id" : "f0971501-41c3-49f8-af66-de6f2c79b39e",
    "name" : "DEVICES - Update info (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/xzxynbrjvfnlew2cflxop1fi6fdya0sazc5nkx52x9kvyaki3lr3p15guq8d1m31hfeoojglwyr7lrl3ayr9y4zs3bjvh1qfyuon6k5g30blrt3yknvpiybyo226qdtzbfybiqna31y/Luke+Heaney",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0971501-41c3-49f8-af66-de6f2c79b39e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.437042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDeviceInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "b1767978-cb10-426c-82b8-c627414257a7",
    "name" : "DEVICES - Update info (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/4fyqcu2x0z5qw2eikthmmwxnn3nl9f1g5zxnejlgn8h1g841k9qw816logkacdci5gj3md6jti1xb7s4trhna0btacwd0vb7sw8mn79xgm5thw3of72wna8fvnaz9wrz2dx5eut48ie1tamd3/Ms.+Eli+Adams",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: device_name\",\n  \"allow_key_auth\" : true,\n  \"last_active_date\" : 1574445864,\n  \"certificate\" : \"\",\n  \"name\" : \"device_name\",\n  \"description\" : \"This device is a sensor\",\n  \"system_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"created_date\" : 1574445666,\n  \"state\" : \"On\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1767978-cb10-426c-82b8-c627414257a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDeviceInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_key_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "certificate" : {
                "type" : "string",
                "example" : ""
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1574445666
              },
              "description" : {
                "type" : "string",
                "example" : "This device is a sensor"
              },
              "device_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: device_name"
              },
              "enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1574445864
              },
              "name" : {
                "type" : "string",
                "example" : "device_name"
              },
              "state" : {
                "type" : "string",
                "example" : "On"
              },
              "system_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "92062e2d-5a0e-422a-a7a0-135177bc6662",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/a431ugodu234b/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92062e2d-5a0e-422a-a7a0-135177bc6662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "1f3a13d8-78c4-4444-877b-719c31701671",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/g6kjtrk1p9s6cy19wtbkfhqhsq4tl26ektw3j7bz6na71xd2ranlv034il9euxyc7w2tjemrv1ve8h/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f3a13d8-78c4-4444-877b-719c31701671",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "ef68dd3c-bb37-4da1-8967-ac3c9df82531",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/b9vwt7vmy5zncyfm9pkincjw4dwooe2903az0m1k6b4wpi7qnfqeqg2cy2f7lakqpm7jsp0g2nbv/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef68dd3c-bb37-4da1-8967-ac3c9df82531",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "ab3f6bdf-2b19-4640-9a81-1a6140b06618",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/zxyc3mqp1dc3jkdbqmvc02gchqi6q55roeoiq43syajwpyncz3m3pllb7firmzh2608xqxqcdaxc1isyzc445ybhcn3vvwxr/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deviceName\" : \"BLEdevice\",\n  \"expiresAt\" : 1589313683,\n  \"deviceToken\" : \"1dBfevzh0-lLVbZwx9DbyTLPyw-8F0RDq3qeUGqwinr8x3-bKMXLpfyliRSXsre5KxMn76CuChFQANoEEg==\",\n  \"refreshToken\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab3f6bdf-2b19-4640-9a81-1a6140b06618",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "type" : "object",
            "properties" : {
              "deviceName" : {
                "type" : "string",
                "example" : "BLEdevice"
              },
              "deviceToken" : {
                "type" : "string",
                "example" : "1dBfevzh0-lLVbZwx9DbyTLPyw-8F0RDq3qeUGqwinr8x3-bKMXLpfyliRSXsre5KxMn76CuChFQANoEEg=="
              },
              "expiresAt" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "refreshToken" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "98cc5959-339d-423f-8a8a-f78a71b4ac34",
    "name" : "DEVICES - Delete devices using a query (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/35w9aa93oo66ebbjripe9yeu881hn1h10umjkpf8tr7u2az5xfh3vw0bwk3l9vnrkxlgrk5eqpa7jt3s8t49442au908n8bx2a5c79awerf4f40lvfix0oa31khlx6ldf",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "query" : {
          "equalTo" : "v97oq14ned2o2u57zalkzrtp7a8tyry1gu6iw1piw6zwzgqbgxm7"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98cc5959-339d-423f-8a8a-f78a71b4ac34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDevices",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "cd6bad84-03f0-4773-bebc-95db737f3d25",
    "name" : "DEVICES - Delete devices using a query - 200",
    "request" : {
      "urlPath" : "/api/v/2/devices/irfhpqy0vxf8rfzu884l2ostcj2wm7dx7pjwdpqpmxy5n16b5pds701qrumws55jl4lsxr",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "mqfdkymrwyho3oppmrzfasj15ekypqszvpxfmsq1hxd730zcy1388ifxraoa38o0bdzxo0js67ak94zhb0k9htj8ryym6mp6dyc449ahm02v6b54gpxotzezxc6xx"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cd6bad84-03f0-4773-bebc-95db737f3d25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDevices"
        }
      }
    }
  }, {
    "id" : "1f9aeccb-b2d5-4260-a510-1e74e1b5da18",
    "name" : "DEVICES - Update devices using a query",
    "request" : {
      "urlPath" : "/api/v/2/devices/i4yyffvhk13wts27ckdv7chccwbugzhwtyjg2fzatcjotq9nza10x0uexh3b0b1mwcj9xgrtoh84qk49mb6eqlpbdqlbj9wl6sy",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f9aeccb-b2d5-4260-a510-1e74e1b5da18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDevices",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "67dcc410-8e08-44cc-a267-dba94798a163",
    "name" : "DEVICES - Update devices using a query",
    "request" : {
      "urlPath" : "/api/v/2/devices/ulup0t7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 6172291455499936210,\n  \"DATA\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67dcc410-8e08-44cc-a267-dba94798a163",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDevices",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DATA" : {
                "type" : "array",
                "description" : "An array containing each row returned by a query",
                "items" : {
                  "type" : "object"
                }
              },
              "TOTAL" : {
                "type" : "integer",
                "description" : "The number of rows affected by a query"
              }
            },
            "description" : "An object representing a SQL query result set."
          }
        }
      }
    }
  }, {
    "id" : "bb9db543-cdc8-4a6e-ac08-23a22354eaf2",
    "name" : "DEVICES - Get all devices",
    "request" : {
      "urlPath" : "/api/v/2/devices/dzocm8zet",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb9db543-cdc8-4a6e-ac08-23a22354eaf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDevices",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "7d69fd7b-ed27-49a6-9c16-52fb76d02ea1",
    "name" : "DEVICES - Get all devices",
    "request" : {
      "urlPath" : "/api/v/2/devices/d7n12g3bxj581py41sp9n",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: device_name\",\n  \"allow_key_auth\" : true,\n  \"last_active_date\" : 1574445864,\n  \"certificate\" : \"\",\n  \"name\" : \"device_name\",\n  \"description\" : \"This device is a sensor\",\n  \"system_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"created_date\" : 1574445666,\n  \"state\" : \"On\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d69fd7b-ed27-49a6-9c16-52fb76d02ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.436039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDevices",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_key_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "certificate" : {
                "type" : "string",
                "example" : ""
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1574445666
              },
              "description" : {
                "type" : "string",
                "example" : "This device is a sensor"
              },
              "device_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: device_name"
              },
              "enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1574445864
              },
              "name" : {
                "type" : "string",
                "example" : "device_name"
              },
              "state" : {
                "type" : "string",
                "example" : "On"
              },
              "system_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c6cb79f5-4202-4174-9465-696243b09261",
    "name" : "USERS - Register new user - 500",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c6cb79f5-4202-4174-9465-696243b09261",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegUser"
        }
      }
    }
  }, {
    "id" : "69021c36-e232-4622-8dc3-0780baa195f8",
    "name" : "USERS - Register new user - 401",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "69021c36-e232-4622-8dc3-0780baa195f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegUser"
        }
      }
    }
  }, {
    "id" : "ccdf09cc-fcbb-44b5-ab95-9c9c94f7738d",
    "name" : "USERS - Register new user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccdf09cc-fcbb-44b5-ab95-9c9c94f7738d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegUser",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "c9b92b69-72d2-4a25-b6a8-93c75ba53fdb",
    "name" : "USERS - Register new user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n  \"options\" : \"\",\n  \"creation_date\" : \"2019-09-11T18:41:15Z\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"email\" : \"cbman@clearblade.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9b92b69-72d2-4a25-b6a8-93c75ba53fdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegUser",
          "schema" : {
            "type" : "object",
            "properties" : {
              "creation_date" : {
                "type" : "string",
                "example" : "2019-09-11T18:41:15Z"
              },
              "email" : {
                "type" : "string",
                "example" : "cbman@clearblade.com"
              },
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "options" : {
                "type" : "string",
                "example" : ""
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "ce81b8dd0bf6fea6cec6d3c19774"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0e8f85ab-7161-40ee-8407-f1ff4703e7bb",
    "name" : "USERS - Change user password (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e8f85ab-7161-40ee-8407-f1ff4703e7bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserPass",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "be8923f5-b8da-4a07-9896-bd81ed0bd732",
    "name" : "USERS - Change user password (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be8923f5-b8da-4a07-9896-bd81ed0bd732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserPass",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "a1741fbc-4613-489e-810d-bf16554ee83c",
    "name" : "USERS - Change user password (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1741fbc-4613-489e-810d-bf16554ee83c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserPass",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "8abc1686-0c5f-4d4f-84c4-2d972ccd7055",
    "name" : "USERS - Change user password - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8abc1686-0c5f-4d4f-84c4-2d972ccd7055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserPass"
        }
      }
    }
  }, {
    "id" : "039e7635-6735-4d81-b8a8-a343db0e454f",
    "name" : "USERS - Log out user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "039e7635-6735-4d81-b8a8-a343db0e454f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserLogout",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "cd2fdcdd-a53e-4bd9-ad57-dc7f03e286a4",
    "name" : "USERS - Log out user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd2fdcdd-a53e-4bd9-ad57-dc7f03e286a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserLogout",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e30d7035-ba52-4eef-9b79-c0cb4e430aa4",
    "name" : "USERS - Log out user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e30d7035-ba52-4eef-9b79-c0cb4e430aa4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserLogout",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "8113abc8-819a-4841-aa98-d23f4bbe799f",
    "name" : "USERS - Log out user - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8113abc8-819a-4841-aa98-d23f4bbe799f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserLogout"
        }
      }
    }
  }, {
    "id" : "028b07cb-3f4e-4e9f-b3c9-816b75a59e98",
    "name" : "Allows an user with adequate permissions to delete another user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "028b07cb-3f4e-4e9f-b3c9-816b75a59e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserAsUser",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "fa536a81-c6d8-4061-adb7-c82ac74f599d",
    "name" : "Allows an user with adequate permissions to delete another user - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fa536a81-c6d8-4061-adb7-c82ac74f599d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserAsUser"
        }
      }
    }
  }, {
    "id" : "366d33e8-5ff4-4717-bb66-012d045ca78c",
    "name" : "USERS - Update user info (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "366d33e8-5ff4-4717-bb66-012d045ca78c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.435053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "6e6d1510-4014-4e35-8f0a-e8a37d67ee33",
    "name" : "USERS - Update user info (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e6d1510-4014-4e35-8f0a-e8a37d67ee33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "a0900f3c-c724-497b-b530-8104a1bc3cdb",
    "name" : "USERS - Update user info (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0900f3c-c724-497b-b530-8104a1bc3cdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "292a9a75-2529-44f5-bb70-5ee0789832b2",
    "name" : "USERS - Update user info - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "292a9a75-2529-44f5-bb70-5ee0789832b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserInfo"
        }
      }
    }
  }, {
    "id" : "f090d6a6-b522-4724-8371-53c997a57991",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f090d6a6-b522-4724-8371-53c997a57991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "f465971a-a0a3-49ea-8b88-1fb28d9b3f5c",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f465971a-a0a3-49ea-8b88-1fb28d9b3f5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "04585856-81da-408a-b02b-1304e3628855",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04585856-81da-408a-b02b-1304e3628855",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "11e7bf5f-2aeb-43ff-86f6-845efaba11af",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n  \"creation_date\" : \"2019-09-11T18:41:15Z\",\n  \"email\" : \"cbman@clearblade.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11e7bf5f-2aeb-43ff-86f6-845efaba11af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "creation_date" : {
                "type" : "string",
                "example" : "2019-09-11T18:41:15Z"
              },
              "email" : {
                "type" : "string",
                "example" : "cbman@clearblade.com"
              },
              "user_id" : {
                "type" : "string",
                "example" : "ce81b8dd0bf6fea6cec6d3c19774"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "18e9fd8c-c6a0-46d6-a485-c39a00a31009",
    "name" : "USERS - Check user auth - 500",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "18e9fd8c-c6a0-46d6-a485-c39a00a31009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserCheckAuth"
        }
      }
    }
  }, {
    "id" : "d5a7ea45-1724-4f33-a0d8-1d4cac0184bf",
    "name" : "USERS - Check user auth - 401",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d5a7ea45-1724-4f33-a0d8-1d4cac0184bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserCheckAuth"
        }
      }
    }
  }, {
    "id" : "22a5c533-329f-4c76-bb1e-e7b1b2f082bf",
    "name" : "USERS - Check user auth - 400",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "22a5c533-329f-4c76-bb1e-e7b1b2f082bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserCheckAuth"
        }
      }
    }
  }, {
    "id" : "cdf93ee6-1223-48e8-94ab-6b025d3d59a1",
    "name" : "USERS - Check user auth (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is_authenticated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdf93ee6-1223-48e8-94ab-6b025d3d59a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserCheckAuth",
          "schema" : {
            "type" : "object",
            "properties" : {
              "is_authenticated" : {
                "type" : "boolean",
                "example" : true
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d6830b36-5afc-4686-b6df-48edefde078b",
    "name" : "USERS - Authenticate user - 500",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d6830b36-5afc-4686-b6df-48edefde078b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthUser"
        }
      }
    }
  }, {
    "id" : "491ea249-4814-445b-88a8-812c56e0bc91",
    "name" : "USERS - Authenticate user - 401",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "491ea249-4814-445b-88a8-812c56e0bc91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthUser"
        }
      }
    }
  }, {
    "id" : "2feae7d8-98fb-449b-95e5-4f7af675caab",
    "name" : "USERS - Authenticate user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2feae7d8-98fb-449b-95e5-4f7af675caab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthUser",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "d3cbf725-2867-4ab3-8355-c7e12aabf10a",
    "name" : "USERS - Authenticate user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3cbf725-2867-4ab3-8355-c7e12aabf10a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthUser",
          "schema" : {
            "type" : "object",
            "properties" : {
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "ce81b8dd0bf6fea6cec6d3c19774"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c23fbfaf-959e-410a-83d0-9aa82bd66229",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c23fbfaf-959e-410a-83d0-9aa82bd66229",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "6da67105-74cf-4be0-9890-a30f497329c3",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6da67105-74cf-4be0-9890-a30f497329c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434234Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "5e71b24e-40b0-4100-8bed-cba8d8ddf3e9",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e71b24e-40b0-4100-8bed-cba8d8ddf3e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "56faea4c-166b-4f54-a4b4-2aa10f10501f",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56faea4c-166b-4f54-a4b4-2aa10f10501f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "type" : "object",
            "properties" : {
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "63a3bf32-8eb0-4135-8dfc-d2dad72a79b4",
    "name" : "USERS - Get all users",
    "request" : {
      "urlPath" : "/api/v/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63a3bf32-8eb0-4135-8dfc-d2dad72a79b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUsers",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "56d0bb17-e7d8-44a1-b9b0-9124dd2465b4",
    "name" : "USERS - Get all users",
    "request" : {
      "urlPath" : "/api/v/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56d0bb17-e7d8-44a1-b9b0-9124dd2465b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.434006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUsers",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "a3ba85b1-7b22-4db9-bec4-3fa5326876a6",
    "name" : "USERS - Get all users",
    "request" : {
      "urlPath" : "/api/v/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Total\" : 1,\n  \"Data\" : [ {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ba85b1-7b22-4db9-bec4-3fa5326876a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUsers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Data" : {
                "$ref" : "#/components/schemas/getUsersData"
              },
              "Total" : {
                "type" : "integer",
                "example" : 1
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "93f23151-a7ea-4349-acc0-a24a3db7b3fe",
    "name" : "MESSAGING - Publish message - 200",
    "request" : {
      "urlPath" : "/api/v/1/message/ob9ea4h2b5am5dkrz1abs4fbo7oh75p5e7lwj39mp2nrkos1fgo8jtbeplfet9xsied0hrflezedea6jnk9caqe2byy345auzo75ih5opoeu3i3eu58bm69h8glco27r2h94hcljq5w0v1hd5bjd197cro81hzdr6phr2o6t39o9ia2m0hkr10c2e/publish",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "93f23151-a7ea-4349-acc0-a24a3db7b3fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.43382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PublishMessage"
        }
      }
    }
  }, {
    "id" : "2879b1fd-e084-4cf0-a847-78525b6b788d",
    "name" : "MESSAGING - Delete history - 200",
    "request" : {
      "urlPath" : "/api/v/1/message/hld9mb0sisktkhr153lx7sbudw8miqu7p26f4tqtogzag676nt9st4gfz63nqze7aymbgrzqyfj7ns7idvajgqm2l2chhw4nhja22yrhe1u4hogkrl8mqq2c8",
      "method" : "DELETE",
      "queryParameters" : {
        "count" : {
          "equalTo" : "hlwby3g61zrrng8p2txofrwj6gi04u1w2gmptir2anfj67j7w3uv8b585q9sj1kd9a2nh3kty8icpmjwdan0dm0x73q2i10ntjdczrxakeq968alerhbp6kaenl46yr7j5ayfs5h50kwmhld9ef0i2hxdtd438c06yenx4wjcfib1d8402ujq"
        },
        "topic" : {
          "equalTo" : "sxlfx8gmkgrvy7577ifcmojtq5publzy951998jl6zrl83av3xfzskypo3c6am8oof63qior3m9jcvk538lg1lfbsbe"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2879b1fd-e084-4cf0-a847-78525b6b788d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteMessageHistory"
        }
      }
    }
  }, {
    "id" : "363149fc-33b2-4ef3-a3b8-b438ca1af0f8",
    "name" : "MESSAGING - Get history - 200",
    "request" : {
      "urlPath" : "/api/v/1/message/ht8689ir0uixpgu0tydbhif7ctune6yvtn0xqhkaixkq",
      "method" : "GET",
      "queryParameters" : {
        "count" : {
          "equalTo" : "t49cywfcy0y4wkktdinyrd4qguy4lvbg7xqjxw1hw6ywtx50hcyy7sn2yq0x15btiqxzz81rgtq2p81ujdqogaxvstbibyra0gehggvn59djqwuk4837dzywxb48nj3kce7pzqx9rjoju3qwids4s6apywemhczcrc9auw4ar1"
        },
        "topic" : {
          "equalTo" : "jqqw2me92159rozqzl7r6afe11kk3azh8jrs2mfm11f2ifbykz4ska0wfu1by2dx9ep5tzspytcdxscsvddqi6fx89mbbfveo8hv1b69lfrixen4e78ib3nie5s"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "363149fc-33b2-4ef3-a3b8-b438ca1af0f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMessageHistory"
        }
      }
    }
  }, {
    "id" : "a8dfc75c-3616-4df7-821d-a949e66f7b7d",
    "name" : "DATA(id) - Get columns",
    "request" : {
      "urlPath" : "/api/v/1/data/28m8/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8dfc75c-3616-4df7-821d-a949e66f7b7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetColumns",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "451a2f6c-bf4b-41c2-8be7-493166f4fcae",
    "name" : "DATA(id) - Get columns",
    "request" : {
      "urlPath" : "/api/v/1/data/9t87/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n}, {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n}, {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "451a2f6c-bf4b-41c2-8be7-493166f4fcae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.4335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetColumns",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/columnObject"
            }
          }
        }
      }
    }
  }, {
    "id" : "ec1975bc-3ba6-400c-b444-589f14ba38ff",
    "name" : "DATA(id) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/data/619x",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "5rogjiq2sbgvh8oab766rlqtet3zziqypcwifpbzphc3p0nbw40eslbtrinx2fjp7idllr5tzmm50gc96yqx0bin7yc7ajscemk911u99wrkl0aep6vytr3w8fd5ul883udlbrg5omq"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec1975bc-3ba6-400c-b444-589f14ba38ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "620e0d31-f5c8-4ddc-9d34-be60bae8e12b",
    "name" : "DATA(id) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/data/67nu",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "xdlupedqcq11xvkrj9n400tvos6ulrdplwux2pmkxqc51p01z7hl11vc0c"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "620e0d31-f5c8-4ddc-9d34-be60bae8e12b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCollectionDataAlt",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "b0c3e5aa-3d6b-482a-9b08-62778cdf0f0f",
    "name" : "DATA(id) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/data/y1up",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0c3e5aa-3d6b-482a-9b08-62778cdf0f0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.433085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "9de6f7fb-1773-4c0f-a4e5-f2b59254fb70",
    "name" : "DATA(id) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/data/p260",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9de6f7fb-1773-4c0f-a4e5-f2b59254fb70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCollectionDataAlt",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemID"
            }
          }
        }
      }
    }
  }, {
    "id" : "0070e4c3-14a1-4d41-bf4a-664a9306cef9",
    "name" : "DATA(id) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/data/ja4l",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0070e4c3-14a1-4d41-bf4a-664a9306cef9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "869b6cbb-426b-4dcc-9551-5557e9724c21",
    "name" : "DATA(id) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/data/5s03",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "869b6cbb-426b-4dcc-9551-5557e9724c21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCollectionDataAlt",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "060d9e0b-cd4c-41f5-95a8-3f19bc5cc462",
    "name" : "DATA(id) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/data/66z9",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "060d9e0b-cd4c-41f5-95a8-3f19bc5cc462",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "531ee76e-e7b6-4acd-b493-ef671571f05c",
    "name" : "DATA(id) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/data/15qi",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 2,\n  \"NEXTPAGEURL\" : \"/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D\",\n  \"DATA\" : [ {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  } ],\n  \"PREVPAGEURL\" : 1,\n  \"CURRENTPAGE\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "531ee76e-e7b6-4acd-b493-ef671571f05c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCollectionDataAlt",
          "schema" : {
            "required" : [ "CURRENTPAGE", "NEXTPAGEURL", "PREVPAGEURL", "TOTAL" ],
            "type" : "object",
            "properties" : {
              "CURRENTPAGE" : {
                "type" : "integer",
                "example" : 2
              },
              "DATA" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/dataArray"
                }
              },
              "NEXTPAGEURL" : {
                "type" : "string",
                "example" : "/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D"
              },
              "PREVPAGEURL" : {
                "type" : "integer",
                "example" : 1
              },
              "TOTAL" : {
                "type" : "integer",
                "example" : 2
              }
            },
            "description" : "Collection success response body"
          }
        }
      }
    }
  }, {
    "id" : "3129f1c0-29a5-4049-a3c1-72b744c09e1b",
    "name" : "DATA(name) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/collection/ehhmzx88hydyqonrwia14fq6317msmyx64t4d8g484vraey9bexv7k6mdi8mud4t4xv4mo0padmwa3h8q9dpeojpcjo0pv9l0w/Elba+Morar",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "urk0bx0ap8ycf39lotcyftvi7ii1uu8e6tawvp48o4b5oi6d5mfofcu8zt7ssv99oana98zzyen6shnnqpyzkclspyqbww3bp8duipsag0pm97z6ftdi"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3129f1c0-29a5-4049-a3c1-72b744c09e1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "1a43de10-bc9f-452f-b86d-6780de9f77a6",
    "name" : "DATA(name) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/collection/417bno19phxqbifa4milvq/Eddie+Windler",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "wapan1rvwz2erodv614v44jfjfy1cblsv9ko72gpg9y9ljsod7y4yk2b9754c56j368hf2fccksx6xwb7zbnoo6dpqb3fckzzj0r16homyveeujfuzn9jabrt60or4tx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a43de10-bc9f-452f-b86d-6780de9f77a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.432057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCollectionData",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "58962c1c-0295-4662-a994-e6f1ff2b69e8",
    "name" : "DATA(name) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/collection/dgar2r3at5ia/Cornelius+Purdy+DDS",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58962c1c-0295-4662-a994-e6f1ff2b69e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e25ad83b-990f-411c-9a4f-e5b68fe0076d",
    "name" : "DATA(name) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/collection/v8g2gnxe9fwh7dbzr50z2ty9xta92jz6ihu4k60e49159e16ybp7bjtqg33xm9xdeegesz/Araceli+Rolfson",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e25ad83b-990f-411c-9a4f-e5b68fe0076d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCollectionData",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemID"
            }
          }
        }
      }
    }
  }, {
    "id" : "6b10df9d-2e3d-4518-83ae-6b9c7dd94900",
    "name" : "DATA(name) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/collection/1u34lscz322wi8i3fegqca2b6kwo56ssuyg4kkngg0dx8im68ibro3y25ogundw7ro2o7ctvjsa2zcjybkp5aqv7wfsjbrettn1itr6mnv62ar86d82g535pj5b8xhwo48wn2nv8/Junita+Stroman+Jr.",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b10df9d-2e3d-4518-83ae-6b9c7dd94900",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "7f983d5d-423c-412b-b6eb-335a646561cb",
    "name" : "DATA(name) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/collection/bm0ovw38rkvyrmu12r6ikplw9dq0lxsn0tj3i9rhrq9axnhbuza8m6mayw6qmd2a2p1x377yus0hev9ovp73ztlb084cdk9dysml36ao0g6krrinnaepicdjzh0sdrs0v9qb/Grady+Sauer+Sr.",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f983d5d-423c-412b-b6eb-335a646561cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCollectionData",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "c127d171-7c35-4459-a739-21a5c6ad541b",
    "name" : "DATA(name) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/collection/c21jfvvgcrqco0s50mnplgr70mcwg0y6bspvwpw92wqllrz33t558ouffrbr4gvp2tv3u8ao7lcf5pcf80fd2rh2hlunkl2rax2dwpb0091smtl9ghkm2210vsaekd2nevu24ua5nhhllvd65qxwt846wdmb7a7iq80bg5fcbcziejc29nx7rtz3ocn/Florance+Schmitt",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c127d171-7c35-4459-a739-21a5c6ad541b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "febf42cb-7927-44ef-9859-4bdb9f103830",
    "name" : "DATA(name) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/collection/rzq9tdfswr62g9a1tunwn3ecela5yd9spcv7yflqhhmfpklbx6y60cmkn6iiia3ksw2jzz32k68pjlsrwe1kul39donvn50mviin0apkhq0q97869zb5u33hjbw002gfoevygw7c/Jess+Boehm",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "febf42cb-7927-44ef-9859-4bdb9f103830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "31804e1d-6385-445b-a799-b7712d30b199",
    "name" : "DATA(name) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/collection/cxh0mfdzz6u7ufsorokxeh34sk67mog5nc6h1oenwzssf3ih4eyh2aigp43fv2rx7um9b7cjy6mtwkm6ycpmj0vhukuu19h0qd48ckqm61y68rvk76r0wyr3tpen5yfihe0yvo5tim/Moriah+Prosacco",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 2,\n  \"NEXTPAGEURL\" : \"/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D\",\n  \"DATA\" : [ {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  } ],\n  \"PREVPAGEURL\" : 1,\n  \"CURRENTPAGE\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31804e1d-6385-445b-a799-b7712d30b199",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCollectionData",
          "schema" : {
            "required" : [ "CURRENTPAGE", "NEXTPAGEURL", "PREVPAGEURL", "TOTAL" ],
            "type" : "object",
            "properties" : {
              "CURRENTPAGE" : {
                "type" : "integer",
                "example" : 2
              },
              "DATA" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/dataArray"
                }
              },
              "NEXTPAGEURL" : {
                "type" : "string",
                "example" : "/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D"
              },
              "PREVPAGEURL" : {
                "type" : "integer",
                "example" : 1
              },
              "TOTAL" : {
                "type" : "integer",
                "example" : 2
              }
            },
            "description" : "Collection success response body"
          }
        }
      }
    }
  }, {
    "id" : "e3f19835-5c52-4d73-88cf-f4df629dee56",
    "name" : "CODE - Call/Execute code service - 500",
    "request" : {
      "urlPath" : "/api/v/1/code/8lqs1ezt1wzqio9aaddf8y48wml1p726hxrhkk6fhfixv5ahriz6cmqqzpt0kbw5sgg59wsupp895uvtdws8urtmt3hdophw2hm028p0k6vl62ou72cj3apgfdh5f97pil47kuxrffwyluloq4mvj8bkjpsga74xcjw/Ms.+Efrain+Satterfield",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "e3f19835-5c52-4d73-88cf-f4df629dee56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.431059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ExecuteService"
        }
      }
    }
  }, {
    "id" : "ae10dfcb-9fe1-43c9-853f-0605926f1b3e",
    "name" : "CODE - Call/Execute code service - 200",
    "request" : {
      "urlPath" : "/api/v/1/code/gg57j27j98y7ef5a3s0wpbx9o8r4fnme71vxepx2yl9p7xe7qh64dzbtkep9hfhvfc27cq3v646qi7lj17nn/Sherril+Jacobson",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ae10dfcb-9fe1-43c9-853f-0605926f1b3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ExecuteService"
        }
      }
    }
  }, {
    "id" : "c769cc96-a8bd-4727-a2a6-5ec404430e96",
    "name" : "CODE - Retrieve information about service - 500",
    "request" : {
      "urlPath" : "/api/v/1/code/xgjm6krci0ysoshz5ovq5mch1u1wlldocrecqeqxn4lghy4pgpn1quo9csgmq5gabahhqx41p2tgbib7536/Kyle+Beahan",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c769cc96-a8bd-4727-a2a6-5ec404430e96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetService"
        }
      }
    }
  }, {
    "id" : "6b5d13e4-43b2-4e75-a156-6a60879e995f",
    "name" : "CODE - Retrieve information about service - 200",
    "request" : {
      "urlPath" : "/api/v/1/code/nixi1mikmwb5600er3vok11xtgunnewy5wni2bxnl2lsb62gnaag9uwa66gr7ldzhhles6x70az2ajb08tuux8ejk9j27/Particia+Herzog",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6b5d13e4-43b2-4e75-a156-6a60879e995f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetService"
        }
      }
    }
  }, {
    "id" : "1b009dfc-a3a7-4c50-8d8d-6cec052d13f3",
    "name" : "DEVELOPER - Gets the information for the platform",
    "request" : {
      "urlPath" : "/api/about",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"about\" : \"ClearBlade Platform\",\n  \"buildId\" : \"a66297bca:485\",\n  \"version\" : \"9.0.0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b009dfc-a3a7-4c50-8d8d-6cec052d13f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "APIInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "about" : {
                "type" : "object",
                "example" : "ClearBlade Platform"
              },
              "buildId" : {
                "type" : "string",
                "example" : "a66297bca:485"
              },
              "version" : {
                "type" : "string",
                "example" : "9.0.0"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9e7cd2c2-8742-45c4-b149-ae5661154d02",
    "name" : "DEPLOYMENTS - Retries sync for an asset - 500",
    "request" : {
      "urlPath" : "/admin/wla4j91u7fakky5dwlg9v29d7laoy6ajmlm9l/sync/retry",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9e7cd2c2-8742-45c4-b149-ae5661154d02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RetrySync"
        }
      }
    }
  }, {
    "id" : "b914b6ab-4ce3-4203-9f7c-6bec449c4ce2",
    "name" : "DEPLOYMENTS - Retries sync for an asset - 200",
    "request" : {
      "urlPath" : "/admin/leb99yzpiely2cvtmvwfulci0okh672um5txq0fztt10wolrkkcdp362t550baxwx1nnp6rebc52qa8ri1o09sl9azhdds83un03eyb54mlbyiz5ryufhbuy46nrxmlh1ccqu2aiwc1garbdo3dfixkjqye3qv03av7jkmpbfse8aennhc1yy90ii0oc9he607oz9s/sync/retry",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b914b6ab-4ce3-4203-9f7c-6bec449c4ce2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RetrySync"
        }
      }
    }
  }, {
    "id" : "50e66548-e11b-40eb-ada1-3bc59c2454a9",
    "name" : "EDGE - Gets sync status for an edge - 400",
    "request" : {
      "urlPath" : "/admin/oi4lgk8oa5y09p7m5ww4v3hw5bc9u2y8v0f2hyddczycl5097fr3se69usi5ixi51dkoqumm11yemb8p2uasm3jul7124b0crc32rv916piynn9cqe6gmo1pi7p616wx3pclz530s58vc91c0iaznnj4dsvd4018qxn/sync/edge/status/So+Rolfson+MD",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "50e66548-e11b-40eb-ada1-3bc59c2454a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EdgeSyncStatus"
        }
      }
    }
  }, {
    "id" : "541432b7-8839-473b-bd8f-8cb0aa3c7abd",
    "name" : "EDGE - Gets sync status for an edge - 200",
    "request" : {
      "urlPath" : "/admin/fks36mwo7fq39pxalf3b37b70iu9zmgjcqnby6zplufpfq5x94lqauicthxrssg/sync/edge/status/Patrice+Kreiger",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "541432b7-8839-473b-bd8f-8cb0aa3c7abd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EdgeSyncStatus"
        }
      }
    }
  }, {
    "id" : "ab77af28-1086-4851-92f7-6f47501efc7d",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment - 500",
    "request" : {
      "urlPath" : "/admin/y5562aj67jj12ieg9bhq81z0s967ruktvsfqsjsbd308vcl86o0nl2zbxkzg19nll81ha5v4e1ecl/sync/deployment/status/Abby+Kozey",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ab77af28-1086-4851-92f7-6f47501efc7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSyncStatus"
        }
      }
    }
  }, {
    "id" : "a0f81615-8ab7-4cae-80ef-3c457bcd9eaa",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment - 401",
    "request" : {
      "urlPath" : "/admin/t7yxmk5lgjhfq6l5zv0200vhgzeybhb3jb29vwhzhysz012wbmgnuslaeibswjkqvkqkqobcmqwog11fpw19bykonjawlee7egtvn520srs1kirrrcfxseegqk0f7c645c0p9ugtl15mhaohbu36d6ka4glo6tif7cqq10zt70q0260ucpkg57yq3fbzdyrwk/sync/deployment/status/Efren+Keebler",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a0f81615-8ab7-4cae-80ef-3c457bcd9eaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSyncStatus"
        }
      }
    }
  }, {
    "id" : "4f2fff75-0ecf-41dc-bec5-e86b2a79e77b",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment (application/json)",
    "request" : {
      "urlPath" : "/admin/yhg28pqh0sfwv25a2x47y9cmee5t8xvsl6sy8294b2u0n2qaak41mhf8jnpged7yqo5nt62hh91u4fzz1t66snz96phabcllp1p1yrxj956222g08gi61w45i7gp3zhcyeukksgfp900qe4ig48pouhlqv23v9/sync/deployment/status/Jackie+McGlynn+IV",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f2fff75-0ecf-41dc-bec5-e86b2a79e77b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.430074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSyncStatus",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "616d03fd-dfb2-4ef3-96ca-f272e211fdb4",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment - 200",
    "request" : {
      "urlPath" : "/admin/ylsy9dwny11xgv4di1405iiymeztkdfubz7vg9gmdwpy1yu05fe5y50z0c49sxstdia5tokeitjy1duxj0rmfgknlyczlk5s46xzjxtkdsmm3g87w7ep41fnaq3b5g9s/sync/deployment/status/Julius+Bosco",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "616d03fd-dfb2-4ef3-96ca-f272e211fdb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSyncStatus"
        }
      }
    }
  }, {
    "id" : "3c59854e-838d-47a5-ae2b-8eeaadeeda4e",
    "name" : "EDGE - Gets sync status for all edges - 400",
    "request" : {
      "urlPath" : "/admin/e6ozx2r8xejvhkyvy60mvr58l0lf3qmn0neghw2h7h89xhehnay03d7rln4aa7nd5j7ofq41pxe7sjdop8s8vdsp6x1nmr9d1o8s2xjczy4t63nrkrt9z82/sync/alledges/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3c59854e-838d-47a5-ae2b-8eeaadeeda4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllEdgeSyncStatus"
        }
      }
    }
  }, {
    "id" : "4ee3975d-4ab9-434c-9307-86b7f1fd936b",
    "name" : "EDGE - Gets sync status for all edges - 200",
    "request" : {
      "urlPath" : "/admin/0ajmn655t5oxov91mjgc2hmbsegaf71k0zlsj3qgxvpt1b1e13ba6lpfhum1schs3bu0oi/sync/alledges/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4ee3975d-4ab9-434c-9307-86b7f1fd936b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllEdgeSyncStatus"
        }
      }
    }
  }, {
    "id" : "25c36f79-a63d-461e-b01b-c9c92f4503e7",
    "name" : "2FA - Send validation link",
    "request" : {
      "urlPath" : "/admin/validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25c36f79-a63d-461e-b01b-c9c92f4503e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SendValidation",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "727671e8-94c4-4d39-8460-053678275b7e",
    "name" : "2FA - Send validation link",
    "request" : {
      "urlPath" : "/admin/validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "727671e8-94c4-4d39-8460-053678275b7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SendValidation",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "8fa99ecb-69cb-43b2-bb07-05afaf94aaba",
    "name" : "WEBHOOKS - Delete a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/obnxfj0xgbe39mne8zmtzr1smvmzup0qxupdhixmokig8gfermgdu10j8mi3w46jzq4gw0qo5engup5xuoszmsxa2khpvt8k3mi9ws9z0pig37syv471/Mrs.+Harlan+Ward",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fa99ecb-69cb-43b2-bb07-05afaf94aaba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteWebhook",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "0bccff35-7c4c-4931-9e95-2dfc87cbce77",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/9de48kkkut58lgxlwmkoh78xwd0cmfl16gp850q4dud9cwhpv04wzkscjkaw04xhixif16tfp13ymkbyfx44hh7hdwyakfl4bkue3rxu1vy6sne/Hortense+Senger",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bccff35-7c4c-4931-9e95-2dfc87cbce77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "61036d8a-9d84-48ff-a9c7-2ff8238f59b6",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/65fs6xan4gejcwupmx00j3xaq5vkaw24thoa23jsooxremgc09w8s4whzl51nff8wfzmrry2r77vrismp6z5x307nag/Miss+Miss+Kiehn",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61036d8a-9d84-48ff-a9c7-2ff8238f59b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "28e2b072-be14-4920-8ab1-8c57f10dd9d8",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/2jtgb604k6s70pgyg5k9ytjmwst2naqroetm0n4ocy9ok5qwuor54qkweqd/Emiko+Bogisich",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28e2b072-be14-4920-8ab1-8c57f10dd9d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "0491f65c-374c-4cec-9247-12b3be6019ec",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/h8b0l9gupf8jdqnwva3epvrusnqaei5uj5nkwpaxnzg2jtmr3ly4s58iwolhtjf93w5h/Royal+Waters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0491f65c-374c-4cec-9247-12b3be6019ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.429111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "c72409cf-6b5f-4674-99a4-4254b2300b45",
    "name" : "WEBHOOKS - Update a webhook (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/7y6h2a30s5p9bx9t1wvji2t5d0bq6rxgr7obub98eyr48949tb7nju55jjzzfmwwgtcdizdhfl50az9feqpy4qdga8h4kig9td09jhuzsrzbrpw7f4vrbfpbqgc1q7gycjy96pw3l89f26eahiqvy/Jeanetta+Collier",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c72409cf-6b5f-4674-99a4-4254b2300b45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "18000a67-cb31-4d7d-8381-caa8234d4948",
    "name" : "WEBHOOKS - Update a webhook (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/uo24mivyrlqdf8umixyoj2gmq1utnpftitas4wk3tr08zr0xv0erg314ts6307z960vmhbdbtrni2brcnh1aqfy3856r496k2w9rtpx2jvlxy0i3mo3/Wilma+Prosacco",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18000a67-cb31-4d7d-8381-caa8234d4948",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "5a92073a-2f7d-4e6c-aab0-7ae63fc7b8b9",
    "name" : "WEBHOOKS - Update a webhook (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/wdl88n82sbz94bokmsxwvc7f13lca915pwlhet0fk94cfzgl51mhq3abnafzr4sfqpc0rln7hygjvy31ou0wfzvjgkv4fhmu2j6rth2c3rlncijsqezw6k4uvq5jeh5ytl7hqt3b1jlzqvblg8bwvj7l5lc4/Karl+Harber",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a92073a-2f7d-4e6c-aab0-7ae63fc7b8b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "da550876-a847-4068-bb12-1b93ac1a4b3d",
    "name" : "WEBHOOKS - Update a webhook - 200",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/h9ceb4p0a8p3u1cv26h7erp1w4vfmly19al07zfuj22/Dave+Ferry",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "da550876-a847-4068-bb12-1b93ac1a4b3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateWebhook"
        }
      }
    }
  }, {
    "id" : "994d15ce-7adc-4757-955a-3a65586aba05",
    "name" : "WEBHOOKS - Returns webhooks in the system - 401",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/ikj5zrcb0z1ogsavspr8uh61noinrl4rvs8yhzqgsukox51ho73xpeg77l607um3pbwl5tu7dpzrv7qbty4eouedassuenw33wv58kftz6ls",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "994d15ce-7adc-4757-955a-3a65586aba05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetWebhooks"
        }
      }
    }
  }, {
    "id" : "b42c9fba-2dfc-445c-9d02-3bc9e69c475e",
    "name" : "WEBHOOKS - Returns webhooks in the system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/6vnb8xv2iyhe1uvzixshsk5fqx5b8n4tplrareh7pckihuymyu9qbjm46gtg1wfjnrm7xue4r6lyx58mzeuvwg7bcrdntrvwwp6iawcqx95dugqxsb2ha4g",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b42c9fba-2dfc-445c-9d02-3bc9e69c475e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetWebhooks",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "2a4aec75-dac1-461e-b3e9-e5d4597536e8",
    "name" : "WEBHOOKS - Returns webhooks in the system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/7ib2ugj11i5s6or2lvf4k45c7zlx6mi432i34cs8mryaz9rbiw4pivki8hujazo59tegvfceomk5ufg179cvaa1e33z75946eh61qlixctosf4tcomvbiz3gmrzq9eb9p47dbtszknhzpstw60kkogmcsoj844vjjtpt84mevc1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"auth_method\" : \"http_basic_auth\",\n  \"service_name\" : \"service_example\",\n  \"name\" : \"webhook_example\",\n  \"description\" : \"Webhook to get data\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"id\" : \"f2ca33c4-8bd0-45aa-af4a-da3467b451bc\"\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"auth_method\" : \"http_basic_auth\",\n  \"service_name\" : \"service_example\",\n  \"name\" : \"webhook_example\",\n  \"description\" : \"Webhook to get data\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"id\" : \"f2ca33c4-8bd0-45aa-af4a-da3467b451bc\"\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"auth_method\" : \"http_basic_auth\",\n  \"service_name\" : \"service_example\",\n  \"name\" : \"webhook_example\",\n  \"description\" : \"Webhook to get data\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"id\" : \"f2ca33c4-8bd0-45aa-af4a-da3467b451bc\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a4aec75-dac1-461e-b3e9-e5d4597536e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetWebhooks",
          "schema" : {
            "type" : "array",
            "description" : "list of webhooks and properties",
            "items" : {
              "$ref" : "#/components/schemas/getWebhook"
            }
          }
        }
      }
    }
  }, {
    "id" : "f0eae42b-d1d0-4a6e-8a15-ecb1d5e7d6ff",
    "name" : "DEVELOPER - Delete system - 200",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "rkka"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f0eae42b-d1d0-4a6e-8a15-ecb1d5e7d6ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSystem"
        }
      }
    }
  }, {
    "id" : "e48a4081-a163-4e07-b982-128b40efe66d",
    "name" : "DEVELOPER - Create system - 400",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e48a4081-a163-4e07-b982-128b40efe66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSystem"
        }
      }
    }
  }, {
    "id" : "916849c6-ec58-4167-84d3-377bdffbef46",
    "name" : "DEVELOPER - Create system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"token_ttl_user\" : \"432000\",\n  \"token_ttl\" : \"432000\",\n  \"auth_service\" : \"\",\n  \"Dev\" : \"92f8dbbb0bccb3fff4be5cdb601\",\n  \"appId\" : \"a6e0f8e20bbefcec789de6b8f4cf01\",\n  \"reg_service\" : \"\",\n  \"name\" : \"ExampleSystem\",\n  \"token_ttl_device\" : \"432000\",\n  \"description\" : \"Here is my new system.\",\n  \"token_ttl_anon\" : 432000,\n  \"appSecret\" : \"A6E0F8E20BDEB0C2838EF2B6D09801\",\n  \"registration\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "916849c6-ec58-4167-84d3-377bdffbef46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.428072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSystem",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Dev" : {
                "type" : "string",
                "description" : "Developer Id for the owner of the system",
                "example" : "92f8dbbb0bccb3fff4be5cdb601"
              },
              "appId" : {
                "type" : "string",
                "description" : "system key",
                "example" : "a6e0f8e20bbefcec789de6b8f4cf01"
              },
              "appSecret" : {
                "type" : "string",
                "description" : "system secret",
                "example" : "A6E0F8E20BDEB0C2838EF2B6D09801"
              },
              "auth_service" : {
                "type" : "string",
                "description" : "Configure the system to have all authentication requests go through a specific Code Service.",
                "example" : ""
              },
              "description" : {
                "type" : "string",
                "example" : "Here is my new system."
              },
              "name" : {
                "type" : "string",
                "example" : "ExampleSystem"
              },
              "reg_service" : {
                "type" : "string",
                "description" : "Configure the system to have all registration requests go through a specific Code Service.",
                "example" : ""
              },
              "registration" : {
                "type" : "string",
                "example" : ""
              },
              "token_ttl" : {
                "type" : "string",
                "description" : "ttl for developer tokens in seconds. Min - 86400   (1 day), Max- 2592000 (30 days), Default - 432000 Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_anon" : {
                "type" : "integer",
                "description" : "ttl for anonymous tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : 432000
              },
              "token_ttl_device" : {
                "type" : "string",
                "description" : "ttl for device tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_user" : {
                "type" : "string",
                "description" : "ttl for user tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              }
            },
            "description" : "System info"
          }
        }
      }
    }
  }, {
    "id" : "34956d2d-72c8-4bba-950f-ce0fd53db59e",
    "name" : "DEVELOPER - Update system info - 200",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "34956d2d-72c8-4bba-950f-ce0fd53db59e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSystem"
        }
      }
    }
  }, {
    "id" : "10cc13aa-a263-4692-b5a7-80efca03408b",
    "name" : "DEVELOPER - Get system info - 400",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "fa58"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "10cc13aa-a263-4692-b5a7-80efca03408b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemInfo"
        }
      }
    }
  }, {
    "id" : "45caf4d3-814a-4f0d-a944-15c9730a8977",
    "name" : "DEVELOPER - Get system info (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "id" : {
          "equalTo" : "bj93"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"token_ttl_user\" : \"432000\",\n  \"token_ttl\" : \"432000\",\n  \"auth_service\" : \"\",\n  \"Dev\" : \"92f8dbbb0bccb3fff4be5cdb601\",\n  \"appId\" : \"a6e0f8e20bbefcec789de6b8f4cf01\",\n  \"reg_service\" : \"\",\n  \"name\" : \"ExampleSystem\",\n  \"token_ttl_device\" : \"432000\",\n  \"description\" : \"Here is my new system.\",\n  \"token_ttl_anon\" : 432000,\n  \"appSecret\" : \"A6E0F8E20BDEB0C2838EF2B6D09801\",\n  \"registration\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45caf4d3-814a-4f0d-a944-15c9730a8977",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Dev" : {
                "type" : "string",
                "description" : "Developer Id for the owner of the system",
                "example" : "92f8dbbb0bccb3fff4be5cdb601"
              },
              "appId" : {
                "type" : "string",
                "description" : "system key",
                "example" : "a6e0f8e20bbefcec789de6b8f4cf01"
              },
              "appSecret" : {
                "type" : "string",
                "description" : "system secret",
                "example" : "A6E0F8E20BDEB0C2838EF2B6D09801"
              },
              "auth_service" : {
                "type" : "string",
                "description" : "Configure the system to have all authentication requests go through a specific Code Service.",
                "example" : ""
              },
              "description" : {
                "type" : "string",
                "example" : "Here is my new system."
              },
              "name" : {
                "type" : "string",
                "example" : "ExampleSystem"
              },
              "reg_service" : {
                "type" : "string",
                "description" : "Configure the system to have all registration requests go through a specific Code Service.",
                "example" : ""
              },
              "registration" : {
                "type" : "string",
                "example" : ""
              },
              "token_ttl" : {
                "type" : "string",
                "description" : "ttl for developer tokens in seconds. Min - 86400   (1 day), Max- 2592000 (30 days), Default - 432000 Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_anon" : {
                "type" : "integer",
                "description" : "ttl for anonymous tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : 432000
              },
              "token_ttl_device" : {
                "type" : "string",
                "description" : "ttl for device tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_user" : {
                "type" : "string",
                "description" : "ttl for user tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              }
            },
            "description" : "System info"
          }
        }
      }
    }
  }, {
    "id" : "d015f0f5-1e73-4f35-aa55-30f20807c5d2",
    "name" : "SESSION  - Get user session count",
    "request" : {
      "urlPath" : "/admin/v/4/session/yhjdti4i5x11pjstknugcf0pkq7jx08yww6qd7dife84oa08y8xeo9bgjw95cc6m/user/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d015f0f5-1e73-4f35-aa55-30f20807c5d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserSessionCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "41bc6704-3826-43d5-a2c2-8744bb9b1f9b",
    "name" : "SESSION  - Delete user session - 401",
    "request" : {
      "urlPath" : "/admin/v/4/session/ncy0a4axkphn99yt/user",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "41bc6704-3826-43d5-a2c2-8744bb9b1f9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserSession"
        }
      }
    }
  }, {
    "id" : "ac703e49-d171-4625-8f02-55076190d8cd",
    "name" : "SESSION  - Delete user session (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/7x5f3ar3jxqv6qi0ygihohqs995lpfv5e75wqcbyar0kxdc3xgln18ehidkwnssjeayo5lm4bmti45apy5uibwlx8knl8rkry8cbry5h22zjf6h4apiu6not5lafq6ed3xbkg8rq2erwqow35h8m20mzd9dc/user",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac703e49-d171-4625-8f02-55076190d8cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserSession",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e2d754a4-cbab-41ef-a70a-1aae7b64752e",
    "name" : "SESSION  - Delete user session - 200",
    "request" : {
      "urlPath" : "/admin/v/4/session/metpxrn7f94q6121bkx13h2l4aa5ib4b57jz8f3081fgbawedc0ntg1ctcfqvdxo831eya6an12pemiw5e9dtv2dlcqoco1svjenuyx8iiq5asor0p3nkpd5h2fn8nk7t2am9w0mundf3a8rcdngmwdr3n2ycc9905mua0rd4p1wifc8uz38m27btigyvh9737gg/user",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e2d754a4-cbab-41ef-a70a-1aae7b64752e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserSession"
        }
      }
    }
  }, {
    "id" : "5a5e215b-b388-462b-bdbb-6d42324a3865",
    "name" : "SESSION  - Get user session info - 401",
    "request" : {
      "urlPath" : "/admin/v/4/session/w2bi2bzrbszx3ycixubbkmalzb8rz9k0g2ag9im14r6we2y7vyjyn9ti2vyuadlci3wwheegdhc808/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5a5e215b-b388-462b-bdbb-6d42324a3865",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserSession"
        }
      }
    }
  }, {
    "id" : "3490b4a2-da62-4a13-91e2-99c94899df45",
    "name" : "SESSION  - Get user session info (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/by1ox0gd4qfpsgtg3y07ontcf7n2dpixykj3stqyi9rlz6lv5wd3rqbu7nsnw39hsvv8ucwiwo6xsgn55dtsx2om14y3dtfofgmtm142c1oh1oz87jet8irzfqx9jlxk5ii15p4xg1xxekg0vosos69tzpu0veigz31wurg46vu2y3zkw9l80vppbsrm88w/user",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3490b4a2-da62-4a13-91e2-99c94899df45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.427126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserSession",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "75943360-24b3-4031-8758-acd7cc176035",
    "name" : "SESSION  - Get user session info (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/eb82wvph/user",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n}, {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n}, {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75943360-24b3-4031-8758-acd7cc176035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserSession",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userSessionInfo"
            }
          }
        }
      }
    }
  }, {
    "id" : "b90c76ba-4911-4a09-9a6e-0a98bf894a35",
    "name" : "SESSION  - Get device session count",
    "request" : {
      "urlPath" : "/admin/v/4/session/lflrtfphwgbawbx204rqman7km45a7uc5zye4993nbwage21zce0f2trn4gqwnb7k25c8sf6nxcqmbrywqp7ftw6/device/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b90c76ba-4911-4a09-9a6e-0a98bf894a35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDeviceSessionCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    }
  }, {
    "id" : "8c3b1167-8390-432f-9524-c46a77da7124",
    "name" : "SESSION  - Delete device session - 401",
    "request" : {
      "urlPath" : "/admin/v/4/session/5xyxyekv4c6zcpzm9ojjavj8o66h9xf5nngj4b2y39qedtavmf5mv6baphlwvd6vkcvukztqne8npyiv846mzglkct1be7999xzi6nf67fhdgzclxmjucntlps1ymhr7x5mqqvasrdp96pngyt4cod/device",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8c3b1167-8390-432f-9524-c46a77da7124",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDeviceSession"
        }
      }
    }
  }, {
    "id" : "b8fc8dff-4635-45b9-a1e6-191454338299",
    "name" : "SESSION  - Delete device session (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/uxvxoj8v9f3biozz5n8ftmz2z9lx3udj4jzf5m1jpf4auqzsnhw7v77iiaqybuzhrn9iy454jr0rns3d7f4ev3li9lq8yvjg7ognyg27kebed218/device",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8fc8dff-4635-45b9-a1e6-191454338299",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDeviceSession",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "8dee3203-83b8-4a30-a931-d003fbc2865b",
    "name" : "SESSION  - Delete device session - 200",
    "request" : {
      "urlPath" : "/admin/v/4/session/tksca0tphneeldsulck7vlpcjkamgytquk91qsp3fhqlxdzyrjcexrs6594gwlxu66dyvq3p0m6nqc5cqtc3q1i7cijqdlh6hpcodejdpp1qqax/device",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8dee3203-83b8-4a30-a931-d003fbc2865b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDeviceSession"
        }
      }
    }
  }, {
    "id" : "cc66e1de-230e-426f-9826-ef6eb452357c",
    "name" : "SESSION  - Get device session info",
    "request" : {
      "urlPath" : "/admin/v/4/session/68j4gbl298b6l3jxvixu82iz5ss6nsmzstn93n02uqrl38lfx6wm9d7zpwaayml8e6e51qrc3uu/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"device_key\" : \"DEVICENAME00000\",\n  \"issued\" : 1587659826\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc66e1de-230e-426f-9826-ef6eb452357c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDeviceSession",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deviceSessionInfo"
            }
          }
        }
      }
    }
  }, {
    "id" : "93a4d8e9-8522-44e2-b973-0321621a516c",
    "name" : "SHARED CACHE - Delete a shared cache - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/mlok0hcechanw7i5i31doihkzxldeemuxpo9zqs6i3my2k6sdaz/Willian+Sauer",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "93a4d8e9-8522-44e2-b973-0321621a516c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSharedCache"
        }
      }
    }
  }, {
    "id" : "4434b40f-a9ed-4821-9f93-9d01a64a9b05",
    "name" : "SHARED CACHE - Delete a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/441076mlwcy6u2jm90q0hhsz9n1/Ezekiel+Gulgowski",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4434b40f-a9ed-4821-9f93-9d01a64a9b05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "4f7e54ea-abbb-486a-bf03-902312771b6f",
    "name" : "SHARED CACHE - Delete a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/m4sgpmz0rj/Irvin+Gutmann",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f7e54ea-abbb-486a-bf03-902312771b6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSharedCache",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "52d44292-3a0c-4287-a5fe-ac6f5c4bb843",
    "name" : "SHARED CACHE - Add a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/nkxfnhkc9ywfs53kkft8bitxchk7d2h3v3jv4s9ebor2ni73idregd3f4p3hcu61wcq2ao8whzdwoq6cbv1kzkw8nnw0vmkba0z5pyh5l81e64ogeaibyp655m8iab3ezjmagcovrinrb02evdrrfashrn5p1v4xxgahkk5m9rsxpyy/Wade+Christiansen",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52d44292-3a0c-4287-a5fe-ac6f5c4bb843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "3b86e318-8e8f-47d5-8900-03fa68392277",
    "name" : "SHARED CACHE - Add a shared cache - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/a826iaufc8x7czqf2b9mv3oosa48vs6dagxiq2a/Aletha+Stoltenberg",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3b86e318-8e8f-47d5-8900-03fa68392277",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addSharedCache"
        }
      }
    }
  }, {
    "id" : "5e156330-94b5-409e-8e36-9de7362951e1",
    "name" : "SHARED CACHE - Add a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/yqzorv7m0d0c7sltry3rino298029yicjolsb6m75ovgkja0928bytaifbm423jh566ei8x6h56lqy9kqgzi24vnyury19kwj/Lupe+Rowe",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e156330-94b5-409e-8e36-9de7362951e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "58da1455-19de-4392-8499-f0b408f521c2",
    "name" : "SHARED CACHE - Add a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/pjcxuhj3v9nqm4rbiuha82qa47ruswr8dikwjqkql66ihw9daupxrek1r6/Mason+Vandervort",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58da1455-19de-4392-8499-f0b408f521c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addSharedCache",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "e57156f1-33c1-41b7-bc0e-4e8607e030a3",
    "name" : "SHARED CACHE - Update a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/9k8dx8k7gst91va6dtka5tmspuqy5qx94k/Patria+Farrell",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e57156f1-33c1-41b7-bc0e-4e8607e030a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.426034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "2c1d4f8b-f4a0-4641-9c1d-d486348d6114",
    "name" : "SHARED CACHE - Update a shared cache - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/fizsvgkdox9aylc8670xpq7c7tpkcofn19fxk8hy432oj7largqjl75vfi5q58mlhk85fekbcdeuhr12wigqeju5szx/Wai+Leuschke+V",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2c1d4f8b-f4a0-4641-9c1d-d486348d6114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSharedCache"
        }
      }
    }
  }, {
    "id" : "5b82ff9f-1bb5-495e-88cb-2ec9c7f52d0d",
    "name" : "SHARED CACHE - Update a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/agihed5d01jeolguejixar9tav14vplk3rl9tpri0cgpaep52r571v15u93spwuc01eyheodwq4y1ea7cg5cd27p3xurl88ebhdjb4n87cnpkfbae553705vembi4sku1/Granville+Auer",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b82ff9f-1bb5-495e-88cb-2ec9c7f52d0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "4ba252eb-fa2c-460e-ab09-075ff93bcc9f",
    "name" : "SHARED CACHE - Update a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/0qklfjg39x8gwkpq43hwyqeucnx228ly8f9cgu4we0wiwefcsfzc3hhj8t1qouk113eelv2sql9006sqkzfhltruwjnv8x8jsfam1anvh5qqaxkorl1issy66542455fct6plvphpvszob3ne/Merissa+Adams",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ba252eb-fa2c-460e-ab09-075ff93bcc9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSharedCache",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "02606983-041a-4c6c-bb74-e32b32b3e699",
    "name" : "SHARED CACHE - Gets shared caches for a system - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/tf9hz0l0m0xnebw060zqg3rmt149g2e5gnfnq8d3kie8gqqvybeleancdzp73da4hy3vigqdgcfk121tpns85jufbqze1yizkope3c8e8mzjb9bvhwvr0iwb6o6q3pede9yzg2363pn1uae9luj3t6lsmgvklnm59t5fatfl1zqfv7r399fjl4xpwixzbgxers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "02606983-041a-4c6c-bb74-e32b32b3e699",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSharedCache"
        }
      }
    }
  }, {
    "id" : "64bfc8e0-8f65-49d7-925e-903c69ec857d",
    "name" : "SHARED CACHE - Gets shared caches for a system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/7vihbimqddmh1gsaunjl7cnwp5vrehe0qpcx5jurdzgc2m8h701afrtqqmj87s50jhn1o3u3s3kckwbc95d5yykykjnon5eo33e0obh8qv99wpnsg286",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64bfc8e0-8f65-49d7-925e-903c69ec857d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "0c4685a6-521e-4d62-8eb2-8eb88f6f3de0",
    "name" : "SHARED CACHE - Gets shared caches for a system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/czmguoexxwjgnyfjtir7fv9wzs673ci1l316tpwtbt18hggsolw9flm0m5sbunprwedmkyl3vnl5eby4gy3nm6fg1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"test_cache\",\n  \"description\" : \"Here goes an example description.\",\n  \"system_key\" : \"b4d49dd00basfdb3deb4ccbefeb0df01\",\n  \"id\" : \"54eb0787-50df-4099-b368-c68ea97f1ce2\",\n  \"ttl\" : 30\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c4685a6-521e-4d62-8eb2-8eb88f6f3de0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSharedCache",
          "schema" : {
            "type" : "array",
            "description" : "list of caches",
            "items" : {
              "$ref" : "#/components/schemas/getCacheResp"
            }
          }
        }
      }
    }
  }, {
    "id" : "31aec272-b6b0-4763-9494-6cb9ec57045b",
    "name" : "2FA - Update developer 2FA information.",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31aec272-b6b0-4763-9494-6cb9ec57045b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDev2FA",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "3741badb-e366-4cfe-b656-e148587e1941",
    "name" : "2FA - Update developer 2FA information.",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3741badb-e366-4cfe-b656-e148587e1941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDev2FA",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "79983b23-5b6a-4d96-b99d-c7828a22fc6f",
    "name" : "DEVELOPER - Get dev info",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79983b23-5b6a-4d96-b99d-c7828a22fc6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDevInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "de9d5d6b-896d-4eb1-868e-8ec1b0cc7cc6",
    "name" : "DEVELOPER - Get dev info",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"two_factor_enabled\" : true,\n  \"fname\" : \"FirstName\",\n  \"two_factor_method\" : \"email\",\n  \"org\" : \"CompanyName\",\n  \"last_login\" : 1551475825,\n  \"admin\" : true,\n  \"two_factor_enabled_instance\\\"\" : true,\n  \"creation_date\" : 1551475825,\n  \"userid\" : \"e291cdc70be288c3af01\",\n  \"phone_validated\" : true,\n  \"lname\" : \"LastName\",\n  \"email_validated\" : true,\n  \"phone\" : \"+15120000000\",\n  \"email\" : \"example@clearblade.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de9d5d6b-896d-4eb1-868e-8ec1b0cc7cc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.425258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDevInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "admin" : {
                "type" : "boolean",
                "example" : true
              },
              "creation_date" : {
                "type" : "integer",
                "example" : 1551475825
              },
              "email" : {
                "type" : "string",
                "example" : "example@clearblade.com"
              },
              "email_validated" : {
                "type" : "boolean",
                "example" : true
              },
              "fname" : {
                "type" : "string",
                "example" : "FirstName"
              },
              "last_login" : {
                "type" : "integer",
                "example" : 1551475825
              },
              "lname" : {
                "type" : "string",
                "example" : "LastName"
              },
              "org" : {
                "type" : "string",
                "example" : "CompanyName"
              },
              "phone" : {
                "type" : "string",
                "example" : "+15120000000"
              },
              "phone_validated" : {
                "type" : "boolean",
                "example" : true
              },
              "two_factor_enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "two_factor_enabled_instance\"" : {
                "type" : "boolean",
                "example" : true
              },
              "two_factor_method" : {
                "type" : "string",
                "example" : "email"
              },
              "userid" : {
                "type" : "string",
                "example" : "e291cdc70be288c3af01"
              }
            },
            "description" : "User information"
          }
        }
      }
    }
  }, {
    "id" : "9ff622a0-0b11-4026-bb0c-76df6dfe6405",
    "name" : "DEVELOPER - Get number of roles - 500",
    "request" : {
      "urlPath" : "/admin/user/05uslr3g7asb3vo5n6fkmdrx9ezrs8i76k7nf4p44nq3cjxrx1kppv0m1tcm5p5yes6ncjujbknhieq0nk5qqwjn11ud1jvmjrptiswvgoey45l043xphqvbpa00bzbr9ovozs1o8bow7v8rdyxkxd6vdca3w/roles/count",
      "method" : "GET",
      "queryParameters" : {
        "user" : {
          "equalTo" : "jvk6lmxcz0iwmi6jxcepvrmr6s7vod0pm0hzif019r1n2tzwja6rejdhdebrmtext5egjy0996e0vbw0375s7nonio6dn69rjyw21ker"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9ff622a0-0b11-4026-bb0c-76df6dfe6405",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetRolesCount"
        }
      }
    }
  }, {
    "id" : "7caeb5bc-92e2-4c33-be39-e06f93f4bafc",
    "name" : "DEVELOPER - Get number of roles - 401",
    "request" : {
      "urlPath" : "/admin/user/p9r47rj2tebmme81hfnusw3fnks40m0/roles/count",
      "method" : "GET",
      "queryParameters" : {
        "user" : {
          "equalTo" : "fdk6qwdctqivkkf3yx6hmoztx732uevuynu47nm97t"
        }
      }
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7caeb5bc-92e2-4c33-be39-e06f93f4bafc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.4249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetRolesCount"
        }
      }
    }
  }, {
    "id" : "3b09a2ee-c7d8-4dbc-9200-ad7e819d3661",
    "name" : "DEVELOPER - Get number of roles - 200",
    "request" : {
      "urlPath" : "/admin/user/jtlabe9orgd7zpwdnmcvsoiyurnyl4coe0shassij92zq5no0o4q0ko17c96k10lnvq1x75ntbd1rtx3iti1b3a0c49zj262mmdmhzyg7p55c7zj3beawsu/roles/count",
      "method" : "GET",
      "queryParameters" : {
        "user" : {
          "equalTo" : "mb1jmkrx4beeyf5rh2pwvwuyr4mm5704qntblhfc8htai6rxrcrwndyhbgvvxa53zgjszfwdu3se36sabwy3og1l72dlv1if8hsiktyc1zfrc8r6mzy2mr0wukp8zo7kdnz3g9ttekhrp0jhnsu1dopvd2mru69mng1cj86gs6rq92azafzr00m3be2660q9l"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3b09a2ee-c7d8-4dbc-9200-ad7e819d3661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetRolesCount"
        }
      }
    }
  }, {
    "id" : "99177177-7595-4126-8226-f728873bf8a4",
    "name" : "DEVELOPER - Delete roles - 500",
    "request" : {
      "urlPath" : "/admin/user/ok1gozzq3zo95reiaso6vhxgnmh6ei3utp7yhm5crm/roles",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "zqsau1iux20yjef"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "99177177-7595-4126-8226-f728873bf8a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRoles"
        }
      }
    }
  }, {
    "id" : "904e47d9-aaba-40b1-b18b-899b82dad2bc",
    "name" : "DEVELOPER - Delete roles - 400",
    "request" : {
      "urlPath" : "/admin/user/5jpg0ce81i3pzyeg9u107k51w882i738j2xhdby6o7/roles",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "undemtku4dhx872uy7ifwlzzluv1d382elxmxotg90fpe1zb2ynfxq78jl8q9u0ozq6qxcsoxbr8hyovkmpjkz200chxx5mejltlt19qpxdsvgj9162dr6"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "904e47d9-aaba-40b1-b18b-899b82dad2bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRoles"
        }
      }
    }
  }, {
    "id" : "0dbc0b2b-5096-4675-b51d-3ad2f105d301",
    "name" : "DEVELOPER - Delete roles - 200",
    "request" : {
      "urlPath" : "/admin/user/ry82350wfsy01tu99s5a7o76jp73tm5g91a5ayqfn1iilhx5rxcwpxj7cf0exsuc13jvwvv0pt5s5xdq5zwm3wj/roles",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "6xd3qtbsob67c6l78ffgvjsk5gh1rhgu34719dkyhdam4o77e1dlrxsmfg1et85oz22anbnl944dcas51xmekwcueiq0kh8np57cnvhx83pbxrd5knkz"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0dbc0b2b-5096-4675-b51d-3ad2f105d301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRoles"
        }
      }
    }
  }, {
    "id" : "4bb0d992-a725-4277-a53d-585474d90062",
    "name" : "DEVELOPER - Add new role - 500",
    "request" : {
      "urlPath" : "/admin/user/dvll6w64i7690he27dmu4w90oeghe60007baxmfvig3n2gzg07ndjnfw2iii98lbpbkpsostqew44hetyh41ox4pl36gp8uc017msy3mlg891q6anxih0rdvcarw3njqaj0ddim9nmvprj1z/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4bb0d992-a725-4277-a53d-585474d90062",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddRole"
        }
      }
    }
  }, {
    "id" : "4679b2fa-ecb7-49ad-b5f7-d893ae39aa36",
    "name" : "DEVELOPER - Add new role - 400",
    "request" : {
      "urlPath" : "/admin/user/0xzvmy0ov5h5560wzjizurk08hbhnypy5bfu3632crjqw43iqlt9sz745b79uvr0yaanb5k7jzanfd6cgqyvfezmjqun3p6sln6bf1fnc51v/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4679b2fa-ecb7-49ad-b5f7-d893ae39aa36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddRole"
        }
      }
    }
  }, {
    "id" : "eacb1d22-a15a-473f-b0b1-479e87efedad",
    "name" : "DEVELOPER - Add new role - 200",
    "request" : {
      "urlPath" : "/admin/user/267i0ldgzmdfc8m5wln6bkt6d0tuezp1yu8zcqejof6hkthj8tgkr6lwyhngvqm9u8rh05e0lo3528bm5auy8qpe8ru/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "eacb1d22-a15a-473f-b0b1-479e87efedad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddRole"
        }
      }
    }
  }, {
    "id" : "1ee8ff25-948d-443d-9f39-dff4532d78e5",
    "name" : "DEVELOPER - Changes roles settings - 500",
    "request" : {
      "urlPath" : "/admin/user/9xeg2mvstpk0rexvbjggndc4a32/roles",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1ee8ff25-948d-443d-9f39-dff4532d78e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SettingsChanges"
        }
      }
    }
  }, {
    "id" : "f41784b8-4e48-4449-ae06-b5894d67edcb",
    "name" : "DEVELOPER - Changes roles settings - 400",
    "request" : {
      "urlPath" : "/admin/user/nr7kydnje2m65760403ppkn1dgzrqrnbxy88ulwixz6jy2qupzsdjlp7lsp7allu42fdwxjgjupfulao6dm8x8rn5ojz67rdw2oo3sdrmj754h9jeq7bys1x4nag3j4a4dng37lxrvwu8ugg46pua64tsju97euv18gydlk3mssxucmhx9a/roles",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f41784b8-4e48-4449-ae06-b5894d67edcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SettingsChanges"
        }
      }
    }
  }, {
    "id" : "22aba8a3-3eca-42b0-b779-6946f5b9b151",
    "name" : "DEVELOPER - Changes roles settings - 200",
    "request" : {
      "urlPath" : "/admin/user/10bd5lew5glfjq49flmuc2340bpurhs4vzxcrapflkupasyne7npexsvfbguciacg2wp50w95dgnvjhdass9jnu4wfbeu629bpkpp7i90pwnry8y7b1l386tnnmvgnxoiqxian8voenb5yg3k6gli/roles",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "22aba8a3-3eca-42b0-b779-6946f5b9b151",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SettingsChanges"
        }
      }
    }
  }, {
    "id" : "265514bb-9bb4-4d1b-a95d-b7012973b27a",
    "name" : "DEVELOPER - Get list of roles - 500",
    "request" : {
      "urlPath" : "/admin/user/aacwu471dy8/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "265514bb-9bb4-4d1b-a95d-b7012973b27a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetRoles"
        }
      }
    }
  }, {
    "id" : "aec62673-cc76-4605-9f69-26c58af8e5ab",
    "name" : "DEVELOPER - Get list of roles - 400",
    "request" : {
      "urlPath" : "/admin/user/1bwnv02v2yiu1wcnoqf71hn4a8pb4cyvz8hecyte8h0huz11so9va69hh9bng6knqch0bb7dwseki2wdbngatcuc48uvn8a4y78r3j1pyzcwsqbbwbcemgvyaw0xsr94igv6p6eeyaem16oatjy0cogi86ozbltfgskl79ci/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "aec62673-cc76-4605-9f69-26c58af8e5ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetRoles"
        }
      }
    }
  }, {
    "id" : "3c93ec3c-1d1c-40e4-9e7a-5dbeef4736a6",
    "name" : "DEVELOPER - Get list of roles - 200",
    "request" : {
      "urlPath" : "/admin/user/0y17kyubvnw0hmodw6frzflphnmr2k9lr9tf8e103qvvf01c7b0o57mjwp4ru7u278wy/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3c93ec3c-1d1c-40e4-9e7a-5dbeef4736a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetRoles"
        }
      }
    }
  }, {
    "id" : "7ee16642-db23-433d-a6af-97d46462060f",
    "name" : "DEVELOPER - Add new column - 500",
    "request" : {
      "urlPath" : "/admin/user/d9zdb5auxb5r9pmxvj34h/columns",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7ee16642-db23-433d-a6af-97d46462060f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddColumn"
        }
      }
    }
  }, {
    "id" : "02703e4f-e625-4902-bb8f-b30e40e4cecf",
    "name" : "DEVELOPER - Add new column - 400",
    "request" : {
      "urlPath" : "/admin/user/hes01jptpzhrbmhgcj7daxbhc8awi834r8j3dvhtgw3h7zcywzjrbx94bgjddjj61jspblp8rbkuyw5dqfjqg6tkww5chnxy4sgi/columns",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "02703e4f-e625-4902-bb8f-b30e40e4cecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddColumn"
        }
      }
    }
  }, {
    "id" : "b095c155-60f4-436c-841c-02d8c24a8b12",
    "name" : "DEVELOPER - Add new column - 200",
    "request" : {
      "urlPath" : "/admin/user/d7mrhp82h54f0grfye9slbyc0i7cfdgyu2n8pl0v5b4r7z5w2noz7em1jttxx0mcl05ayftfj8mmqg591mytd4lehu3nt5x5i8np1b78je5u3onz0ii37eouh9t4dlo54gela7rvqjetsasyqyxbl7eb9yat7e44ci3zuu0j0kl2jnr6oz3znr7qtpwz9/columns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b095c155-60f4-436c-841c-02d8c24a8b12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddColumn"
        }
      }
    }
  }, {
    "id" : "2a80f9b2-3517-48aa-ba58-85dc725a3770",
    "name" : "DEVELOPER - Get users column info. - 500",
    "request" : {
      "urlPath" : "/admin/user/aa89zp1zb2hjmdpi2ykib13xst38xxfp4frbl7vtgkbueybgskr2p8954ehw166gcevjfkvnm96ricknsdgf5ta21fjkruq1w3j1tu7qgo784ykodbgbut271mox1hiy7uf8bcssrad7umlq7vabt25h7sw817xmp6xm1euw63dmxk0qaorzm67u7kgzcstqv0/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2a80f9b2-3517-48aa-ba58-85dc725a3770",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserColumnData"
        }
      }
    }
  }, {
    "id" : "0170a0e0-0eb1-40fb-8063-b587b4f395cb",
    "name" : "DEVELOPER - Get users column info. - 400",
    "request" : {
      "urlPath" : "/admin/user/qdsebztm1ik7sv940g0ptcn8mrnz7kgac2vq72f1ijkuz1hmscwxzxorv726e4awzntfwuk1pos0iwoawyqlkw6a961ys7s417sy1ajvieyfgd41cyiv2ig0swr2t2l3skfdyehfbd9427unvssg76be8tw2m8rg5sa58iusrxt36a5f70xtb0uzkd8d61z9wghne/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0170a0e0-0eb1-40fb-8063-b587b4f395cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserColumnData"
        }
      }
    }
  }, {
    "id" : "c7f188a1-68f7-4b20-9e5d-0f5e9216c54f",
    "name" : "DEVELOPER - Get users column info. - 200",
    "request" : {
      "urlPath" : "/admin/user/u51pifl9q695gtyigfxvsnhjctp4bc9wcm01j5xv8oymj7rkns4elsxfghiapaji98s0ksy9j89a6y6k7h1lzu05i2sxfzkgq838xjkcy26g3nm9hx487f6prcht7v1hqes2q3f758g60cl0oe76xe30ym9mqvvi5ytmamv7x8c7y3ys4dr1hzj6/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c7f188a1-68f7-4b20-9e5d-0f5e9216c54f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserColumnData"
        }
      }
    }
  }, {
    "id" : "955d83ec-2153-483c-872d-67a8d946db22",
    "name" : "DEVELOPER - Delete user - 500",
    "request" : {
      "urlPath" : "/admin/user/47g4v1h988fq4d24oqa45y3zgwp5ccyo1h9d7qr5g409j01wevcuj95nzo9ykq8o5y1lkepwzxlkkz2s4dyp0z6rwum4j0e5ri7vd95e61cvjbtfbgdj3pa8t6l0mbz3rtjjz4avkhnwjc6y18wuw28m8o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "955d83ec-2153-483c-872d-67a8d946db22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    }
  }, {
    "id" : "f828b7c3-3722-44a5-8f1c-bb3f0e71723c",
    "name" : "DEVELOPER - Delete user - 400",
    "request" : {
      "urlPath" : "/admin/user/dq4rponcmnmfbqbv72f11pa",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f828b7c3-3722-44a5-8f1c-bb3f0e71723c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    }
  }, {
    "id" : "ac775ba3-5486-4bfa-b9ec-a8ecc93d0993",
    "name" : "DEVELOPER - Delete user - 200",
    "request" : {
      "urlPath" : "/admin/user/g8fql9osss6mkxegfq1naehcff2audma9w31h7ah3ee607usmvchz4nw7uct65tlb6zr18mx1fr19wij8jao70apoypal3ya7e7o92s91nxkvzojmrcz85kotukgbxsykm6nxikfoovuahqnwl5nr5vzaquj4cvfrsc05kfo9cuc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ac775ba3-5486-4bfa-b9ec-a8ecc93d0993",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    }
  }, {
    "id" : "c36fe229-5b87-4c4c-8804-0336f45222e7",
    "name" : "DEVELOPER - Add user - 500",
    "request" : {
      "urlPath" : "/admin/user/auzzctr3x5q38sag7smnmrb3atek7f9n2tvuolog008q26r",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c36fe229-5b87-4c4c-8804-0336f45222e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    }
  }, {
    "id" : "addbedeb-5df7-4f08-b1c7-773b100b70a4",
    "name" : "DEVELOPER - Add user - 401",
    "request" : {
      "urlPath" : "/admin/user/rhgikrs09ygvcjqdy0w1j73zgbc5n9692cm0t5rlmd02qcxz3ozc49hdqnonti6au9ua1bwmhztnleavnw7pkfmubtej22i6flav8jusrme",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "addbedeb-5df7-4f08-b1c7-773b100b70a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.424047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    }
  }, {
    "id" : "b0f977f0-8408-4a94-9912-2862468a9e5b",
    "name" : "DEVELOPER - Add user - 400",
    "request" : {
      "urlPath" : "/admin/user/gcsxudl1sqo6v3rql1lun1vv208bxpvd20ssbeoy93lq0kkb1v5k7keetindu2az586u1599cqdrnzqk876gkjuexiy645nzxw3hcypm9l5dky70iooecv86hw09jxq4bk",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b0f977f0-8408-4a94-9912-2862468a9e5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    }
  }, {
    "id" : "81db42f1-1977-4fc0-9c49-e20efde2fb26",
    "name" : "DEVELOPER - Add user - 200",
    "request" : {
      "urlPath" : "/admin/user/rz7ypktvq5qidtahg41hve8kdy1n4ltjzvk1d7uo828ekdter8l1ajx6l09c4sanmofao0n8jquiuc2xrvslh9kllny0d43tpagndr2309r64y8s6i0z57amz7shsysy8fvycksuhuzy1k0rax4xp5nw4grxt9w1n9p9qswsrb2au9239kc5abuogxjmj1onqtc",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "81db42f1-1977-4fc0-9c49-e20efde2fb26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    }
  }, {
    "id" : "22f8ce4a-e182-43c5-8680-c6ffdf00e09f",
    "name" : "DEVELOPER - Change user information and permissions - 500",
    "request" : {
      "urlPath" : "/admin/user/hrvp92x8yn3b4pilru32i693",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "22f8ce4a-e182-43c5-8680-c6ffdf00e09f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserChangeUserInfo"
        }
      }
    }
  }, {
    "id" : "4c180313-5a45-4558-889d-25a2140c527b",
    "name" : "DEVELOPER - Change user information and permissions - 400",
    "request" : {
      "urlPath" : "/admin/user/n86147daw00o4nss1ktrrdfergyguh0e1ofekqoh7mqc3woi40mtb0168dlbi4nsufg9a6p427zmxezxuy268aaodokhb4eo3s39qkreis5vbcbs1gkaw0us6crg9o6j78",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4c180313-5a45-4558-889d-25a2140c527b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserChangeUserInfo"
        }
      }
    }
  }, {
    "id" : "d2a76876-4285-43e2-93b2-842502c05918",
    "name" : "DEVELOPER - Change user information and permissions - 200",
    "request" : {
      "urlPath" : "/admin/user/asvtppfuqtjex94ufaixqrh2x6mla9ybn11yhazjwt5y3xjav138ktul8tm7lr4c20fru1fl4gkznq3eup7n8zou42qwjr50n1q3r356ceddhui7mha5o1gddnxbas9fv5meivv4kw0j9mi5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d2a76876-4285-43e2-93b2-842502c05918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserChangeUserInfo"
        }
      }
    }
  }, {
    "id" : "666a8b80-4d74-417e-9b73-b7f0f7fd42e0",
    "name" : "DEVELOPER - Get list of users and information - 500",
    "request" : {
      "urlPath" : "/admin/user/wlwg3i8uubyrth5hcybkkj08aj7ojl0z3iut0q3budvkts6rndn2t822kzcy1xuavwo1ls5ys99gmde9xg0lv0oc70g5u1h0kwa7yotpls4vg9qz2lr4z56cv9ruyxibbdnc2yrycovrzn85z2435tt9jewt534t76s7bxn3pb3lzxu7biub6koyrssdbtvogm",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "666a8b80-4d74-417e-9b73-b7f0f7fd42e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserList"
        }
      }
    }
  }, {
    "id" : "3133552c-9102-4395-8ecb-5cb79c8945fc",
    "name" : "DEVELOPER - Get list of users and information - 400",
    "request" : {
      "urlPath" : "/admin/user/k7fzgfqgxiu7z5o8umqpzosfgoo6rjlc8ssj02pkz34dtgiodamqeue6kp7lbio0n00ul5m0d5fj1ankyr4g1",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3133552c-9102-4395-8ecb-5cb79c8945fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserList"
        }
      }
    }
  }, {
    "id" : "085aac2f-b5de-4862-9057-99f1cdf679a8",
    "name" : "DEVELOPER - Get list of users and information - 200",
    "request" : {
      "urlPath" : "/admin/user/p4h7ihw18meas5rtq78b7vg1mipva9i5ewznu7za6rzapqrbcg613rfk12i4vuy2y1x4m9fwsa1xwstx0067c4lly6z2cifbe9wje7cey0d27blx5r144oq16urdbpzbx2co6lmw4g63wbnvz26a1iqbkv6ctogn7g08d01rj",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "085aac2f-b5de-4862-9057-99f1cdf679a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUserList"
        }
      }
    }
  }, {
    "id" : "3a9664d1-a2f2-40d8-81fe-1a5e4d03282c",
    "name" : "DEVELOPER - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/fq24dg25vc4oscho6xs56eacgn705ohfv28j4cbonwbypgl5wo3pmjo1xuogqih2w5j1jr7vzjf9312am0fvy8nngml2nxasci73cwzmehl481udpnz6wz8s4s97pvacn1/Tameika+Goldner",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3a9664d1-a2f2-40d8-81fe-1a5e4d03282c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteTimerHandler"
        }
      }
    }
  }, {
    "id" : "fde90ce7-fc32-4e84-8e97-aaeb1c7e93b2",
    "name" : "DEVELOPER - Create time handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/0ji17gaqi6qdumz67lhrls9asukz6sf2dkuwuflogi5auc2i839qj0uvj5gmtq85mro4nacph83otrkccgikkur663hykali57ku9gc6vp1udynm682u4yoepqj68l5ew0qhs244ff1ppy4lnjfcf73p7t2qgv5agaexh76p1k4ry6dmjhw0aedmikens78g5qo/Nickolas+Kuhn",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fde90ce7-fc32-4e84-8e97-aaeb1c7e93b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_timer_handler"
        }
      }
    }
  }, {
    "id" : "8f2c0c21-cec9-436b-96a7-20934c4f4f38",
    "name" : "DEVELOPER - Update timer handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/e8pi3mslawzhah5tw7lgusudadnj6fqkvo4qwrb55cempux6up5wowrshwq3owmgfd5545u81nxjkeaa26k86iusng6tfniek3lgau6fa533tt58c/Melina+Grimes",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8f2c0c21-cec9-436b-96a7-20934c4f4f38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTimerHandler"
        }
      }
    }
  }, {
    "id" : "d4f0aaf3-5f0e-4023-84d5-4d2628eb9d07",
    "name" : "DEVELOPER - Get timer handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/8zlhllq1f4xmvfy274hw4j13qwl1hpbx3hp0yw5v94stzdcbdrwdq0dt1t2gx/Carrol+Williamson",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d4f0aaf3-5f0e-4023-84d5-4d2628eb9d07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTimerHandler"
        }
      }
    }
  }, {
    "id" : "0867c092-82dd-4689-8ba8-b6818772c979",
    "name" : "DEVELOPER - Get timer handlers - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/gg7i24emsywkal84kohra5annkc7s01t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0867c092-82dd-4689-8ba8-b6818772c979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTimerHandlers"
        }
      }
    }
  }, {
    "id" : "161af7b8-ed56-4a69-bfec-7b54f608dff0",
    "name" : "DEVELOPER - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/v24k37q2a25zdgdtja5094jj24yvbp9n0i53nq3o3hgimxuarsjkmnjtm8vcqc1e1na47aizc34kropdduxfq4ldhlfzvvplxm0zbdxeh0xghnzxsb0f7n3zi7j6js0g4viwy1epjnprs0qfw0ua90j5d9uuydsmidp7xwzlltpmc60m6pztag782z5orxgjkpdj4s/Dr.+Oswaldo+Koelpin",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "161af7b8-ed56-4a69-bfec-7b54f608dff0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteTriggerHandler"
        }
      }
    }
  }, {
    "id" : "cbffc2e9-fe65-4755-a794-7f2b126b9588",
    "name" : "DEVELOPER - Create trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/if0b7f5sj18rr954t8p7r7gfw2jmr08be08562av/Minh+Roberts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cbffc2e9-fe65-4755-a794-7f2b126b9588",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateTrigger"
        }
      }
    }
  }, {
    "id" : "f0698a40-8ddd-42e0-8acc-69cec1b78b52",
    "name" : "DEVELOPER - Update trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/7c7bb9mo2yjapwq9hnvkd/Cortez+Lynch",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f0698a40-8ddd-42e0-8acc-69cec1b78b52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTriggerHandler"
        }
      }
    }
  }, {
    "id" : "fb36d0e6-b078-4798-9c2d-414e0eb834ad",
    "name" : "DEVELOPER - Get trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/bltb88ouc6qebps3fbyfuabuhczsrb8t90klbxs59tmms0huw19gk5yho8rx8ycblpx3hq2q4377qs54wukj69occxbmyt1/Margarett+Mueller",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fb36d0e6-b078-4798-9c2d-414e0eb834ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTriggerHandler"
        }
      }
    }
  }, {
    "id" : "56b39eda-349f-4cbc-aacc-f5d2889b6a0e",
    "name" : "DEVELOPER - Get trigger handlers - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/gaef1olkcmr8rp5cstjfdw9rqbtwu6km5315q3z905ok38fad8co78m1ar11jdq6vlgutp6cm2f36j628xydsp7hqqk3w5snpjr99ae71w7ajh8crozjdfnhaw2guvywthfrrxysrkk9v0rwd2ey9tt",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "56b39eda-349f-4cbc-aacc-f5d2889b6a0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTriggerHandlers"
        }
      }
    }
  }, {
    "id" : "85fad0d4-1434-489a-9902-39ea3b23826b",
    "name" : "DEVELOPER - Get trigger definitions - 200",
    "request" : {
      "urlPath" : "/admin/triggers/definitions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "85fad0d4-1434-489a-9902-39ea3b23826b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTriggers"
        }
      }
    }
  }, {
    "id" : "24b1598c-73d3-4f23-b614-13c298e3e93b",
    "name" : "Get Systems for a developer",
    "request" : {
      "urlPath" : "/admin/systems/j82div74jf58cotm2n9q3ivxeph4e2xm4m0tfvys17mxkzh56yoqzhju63cd711hcnom6npu3khz60mroai1yqepwjsy109l0gpkjfo0qhz",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24b1598c-73d3-4f23-b614-13c298e3e93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemsForDev",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "86f702b7-1900-4b69-8088-e63f5e10bc64",
    "name" : "Get Systems for a developer",
    "request" : {
      "urlPath" : "/admin/systems/154ofodfqggyvqwdoi6fa38oge6o8c4pqha7bvgrnk1x2ti31t1wt60q2elha1gkxf7l5ee0bn6wk6l43j1773a7ds2rhiea603whjs2mxcrx5oa0yu56zp3dr5vpn7xkeevb42tb2plexc6xlgwd26y98icvgbod",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86f702b7-1900-4b69-8088-e63f5e10bc64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.423031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemsForDev",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/analyticItems"
            }
          }
        }
      }
    }
  }, {
    "id" : "64d8ca49-bc3a-449f-ac09-ea799c912da4",
    "name" : "2FA - Test SMS Service",
    "request" : {
      "urlPath" : "/admin/settings/sms-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64d8ca49-bc3a-449f-ac09-ea799c912da4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TestSMS",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "d66a5680-d36e-428c-88c5-fe7e71527f4a",
    "name" : "2FA - Test SMS Service",
    "request" : {
      "urlPath" : "/admin/settings/sms-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d66a5680-d36e-428c-88c5-fe7e71527f4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TestSMS",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "4b78fb13-a53c-47db-b723-faee945830e8",
    "name" : "2FA - Delete SMS settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b78fb13-a53c-47db-b723-faee945830e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSMSSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "678b9b76-4f0b-46f9-8acd-f774e2b775b8",
    "name" : "2FA - Delete SMS settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "678b9b76-4f0b-46f9-8acd-f774e2b775b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSMSSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "5bbff21d-41d4-482e-a29d-6ad36c2ed789",
    "name" : "2FA - Create SMS Communication",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bbff21d-41d4-482e-a29d-6ad36c2ed789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSMSCommunication",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "ad450a11-653b-4e75-abac-965f814f2edc",
    "name" : "2FA - Create SMS Communication",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad450a11-653b-4e75-abac-965f814f2edc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSMSCommunication",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "9746395e-b767-4334-88f4-0f4ef936a0f2",
    "name" : "2FA - Update SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9746395e-b767-4334-88f4-0f4ef936a0f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSMSSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "1ff7cdc4-78a4-4515-8b36-d8a4d6dca538",
    "name" : "2FA - Update SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ff7cdc4-78a4-4515-8b36-d8a4d6dca538",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSMSSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "f9f1c5ed-6e77-4c20-80da-22551163c975",
    "name" : "2FA - Get SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9f1c5ed-6e77-4c20-80da-22551163c975",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "f1cee454-9689-4077-8deb-db96d9432408",
    "name" : "2FA - Get SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"password\" : \"test\",\n  \"validation_message\" : \"Please validate your email here: $LINK\",\n  \"service_name\" : \"Twilio\",\n  \"from\" : \"+15120000000\",\n  \"two_factor_message\" : \"Please use the code to log in: $CODE\",\n  \"url\" : \"https://api.twilio.com\",\n  \"username\" : \"AC25b4eb989b9db8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1cee454-9689-4077-8deb-db96d9432408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "from" : {
                "type" : "string",
                "example" : "+15120000000"
              },
              "password" : {
                "type" : "string",
                "example" : "test"
              },
              "service_name" : {
                "type" : "string",
                "description" : "Only Twilio is supported.",
                "example" : "Twilio"
              },
              "two_factor_message" : {
                "type" : "string",
                "example" : "Please use the code to log in: $CODE"
              },
              "url" : {
                "type" : "string",
                "example" : "https://api.twilio.com"
              },
              "username" : {
                "type" : "string",
                "example" : "AC25b4eb989b9db8"
              },
              "validation_message" : {
                "type" : "string",
                "example" : "Please validate your email here: $LINK"
              }
            },
            "description" : "2FA SMS communication settings"
          }
        }
      }
    }
  }, {
    "id" : "42c84d40-2cfb-481a-9494-fb8216422382",
    "name" : "2FA - Update Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42c84d40-2cfb-481a-9494-fb8216422382",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.422036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSecurity",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e4607a27-8fc0-4236-8ba2-f22b0be8ad5a",
    "name" : "2FA - Update Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"developer_token_ttl\" : 86400,\n  \"two_factor_auth\" : {\n    \"enabled\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4607a27-8fc0-4236-8ba2-f22b0be8ad5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSecurity",
          "schema" : {
            "type" : "object",
            "properties" : {
              "developer_token_ttl" : {
                "type" : "integer",
                "example" : 86400
              },
              "two_factor_auth" : {
                "$ref" : "#/components/schemas/enabled"
              }
            },
            "description" : "Security Settings for 2FA"
          }
        }
      }
    }
  }, {
    "id" : "8e5b7295-6b26-44d0-8f22-b65ac3166518",
    "name" : "2FA - View Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e5b7295-6b26-44d0-8f22-b65ac3166518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ViewSecurity",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "c761de8d-db35-40cd-bee1-40d75d974d69",
    "name" : "2FA - View Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"developer_token_ttl\" : 86400,\n  \"two_factor_auth\" : {\n    \"enabled\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c761de8d-db35-40cd-bee1-40d75d974d69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ViewSecurity",
          "schema" : {
            "type" : "object",
            "properties" : {
              "developer_token_ttl" : {
                "type" : "integer",
                "example" : 86400
              },
              "two_factor_auth" : {
                "$ref" : "#/components/schemas/enabled"
              }
            },
            "description" : "Security Settings for 2FA"
          }
        }
      }
    }
  }, {
    "id" : "dd58e228-a60a-4ae5-bb2b-103b0c62f693",
    "name" : "2FA - Test Email Service",
    "request" : {
      "urlPath" : "/admin/settings/email-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd58e228-a60a-4ae5-bb2b-103b0c62f693",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TestEmail",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "5cc3368a-5962-4de6-b649-0384ba7c5b5e",
    "name" : "2FA - Test Email Service",
    "request" : {
      "urlPath" : "/admin/settings/email-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cc3368a-5962-4de6-b649-0384ba7c5b5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TestEmail",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "5cb6b05a-e8d2-478c-98df-f30130d4c614",
    "name" : "2FA - Delete email settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cb6b05a-e8d2-478c-98df-f30130d4c614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEmailSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "e715cfd5-30fb-49e4-83c2-95b0427e94b9",
    "name" : "2FA - Delete email settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e715cfd5-30fb-49e4-83c2-95b0427e94b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEmailSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "e63e0853-4c3f-4ad6-9258-8a6b01a49169",
    "name" : "2FA - Create Email Communication (application/json)",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e63e0853-4c3f-4ad6-9258-8a6b01a49169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateEmailCommunication",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "ef43cdac-5252-49f3-99a9-00283fc8f1cf",
    "name" : "2FA - Create Email Communication - 200",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ef43cdac-5252-49f3-99a9-00283fc8f1cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateEmailCommunication"
        }
      }
    }
  }, {
    "id" : "39b0559b-b7f1-413d-aa7d-4c5e52874ac5",
    "name" : "2FA - Update Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39b0559b-b7f1-413d-aa7d-4c5e52874ac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateEmailSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "3eb0e25e-7e94-451c-b84f-ebb4a81f4e18",
    "name" : "2FA - Update Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3eb0e25e-7e94-451c-b84f-ebb4a81f4e18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateEmailSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    }
  }, {
    "id" : "8d480453-82f1-4d2e-9f13-12f7f331e9b8",
    "name" : "2FA - Get Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d480453-82f1-4d2e-9f13-12f7f331e9b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    }
  }, {
    "id" : "014b0cfa-0dbe-4306-b7f8-914da2aaea02",
    "name" : "2FA - Get Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryption_type\" : \"STARTTLS\",\n  \"two_factor_subject\" : \"Login code\",\n  \"password\" : \"test\",\n  \"protocol\" : \"SMTP\",\n  \"validation_message\" : \"Please validate your email here: $LINK\",\n  \"port\" : \"587\",\n  \"validation_subject\" : \"Email validation\",\n  \"host\" : \"smtp.gmail.com\",\n  \"from\" : \"example@gmail.com\",\n  \"two_factor_message\" : \"Please use the code to log in: $CODE\",\n  \"username\" : \"example@gmail.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "014b0cfa-0dbe-4306-b7f8-914da2aaea02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "encryption_type" : {
                "type" : "string",
                "example" : "STARTTLS"
              },
              "from" : {
                "type" : "string",
                "example" : "example@gmail.com"
              },
              "host" : {
                "type" : "string",
                "example" : "smtp.gmail.com"
              },
              "password" : {
                "type" : "string",
                "example" : "test"
              },
              "port" : {
                "type" : "string",
                "example" : "587"
              },
              "protocol" : {
                "type" : "string",
                "example" : "SMTP"
              },
              "two_factor_message" : {
                "type" : "string",
                "example" : "Please use the code to log in: $CODE"
              },
              "two_factor_subject" : {
                "type" : "string",
                "example" : "Login code"
              },
              "username" : {
                "type" : "string",
                "example" : "example@gmail.com"
              },
              "validation_message" : {
                "type" : "string",
                "example" : "Please validate your email here: $LINK"
              },
              "validation_subject" : {
                "type" : "string",
                "example" : "Email validation"
              }
            },
            "description" : "2FA email communication settings"
          }
        }
      }
    }
  }, {
    "id" : "dd45ce54-080f-49a3-9063-3b69758fb726",
    "name" : "ADMIN - Change dev password (Admin) - 200",
    "request" : {
      "urlPath" : "/admin/resetpassword",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dd45ce54-080f-49a3-9063-3b69758fb726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ResetPassword"
        }
      }
    }
  }, {
    "id" : "5d9ae77a-b44c-426b-8b95-3b6cd873d731",
    "name" : "DEVELOPER - Regen secret - 200",
    "request" : {
      "urlPath" : "/admin/regensystemsecret",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5d9ae77a-b44c-426b-8b95-3b6cd873d731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegenSecret"
        }
      }
    }
  }, {
    "id" : "38b9e298-e60f-4eb2-bb79-53c4fdc8e60f",
    "name" : "DEVELOPER - Register new dev - 500",
    "request" : {
      "urlPath" : "/admin/reg",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "38b9e298-e60f-4eb2-bb79-53c4fdc8e60f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegDev"
        }
      }
    }
  }, {
    "id" : "b0b3e0d8-234c-46ed-a409-5da23d29f06d",
    "name" : "DEVELOPER - Register new dev (application/json)",
    "request" : {
      "urlPath" : "/admin/reg",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is_two_factor\" : false,\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"a4a4a3eb0bd89fe8bbeb99f8d2be01\",\n  \"dev_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0b3e0d8-234c-46ed-a409-5da23d29f06d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.421064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RegDev",
          "schema" : {
            "type" : "object",
            "properties" : {
              "dev_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4"
              },
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "is_two_factor" : {
                "type" : "boolean",
                "example" : false
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "a4a4a3eb0bd89fe8bbeb99f8d2be01"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7f9ebe58-0059-4a8c-99e6-f1c68b258d98",
    "name" : "DEVELOPER - Change dev password - 200",
    "request" : {
      "urlPath" : "/admin/putpass",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7f9ebe58-0059-4a8c-99e6-f1c68b258d98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ChangeDevPassword"
        }
      }
    }
  }, {
    "id" : "24fa7394-bc38-4da4-8fa9-4fb30c5e5e43",
    "name" : "DEVELOPER - Gets the information for a portal",
    "request" : {
      "urlPath" : "/admin/portals/my2stmrsc5gan1585adbvgek9q1946jn2hbp24bvst4oz45mj1w1z1h78xuf1yr0rmytkc677",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24fa7394-bc38-4da4-8fa9-4fb30c5e5e43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetPortalInfo",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/portalSettings"
            }
          }
        }
      }
    }
  }, {
    "id" : "54fec4db-dd58-48c8-a9b6-3eb1e8d8b2b1",
    "name" : "ADMIN - Get system status - 200",
    "request" : {
      "urlPath" : "/admin/platform/yroawk3iivbhqjmt9t2bykk03ib2os1b7pwduwj6nc07d1apvpknqxojenyzuatokconsrjloadlezy7ohqsroxln8yqelnh1seoiiy8erefn27hhnt6j7jr",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "54fec4db-dd58-48c8-a9b6-3eb1e8d8b2b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemStatus"
        }
      }
    }
  }, {
    "id" : "d832434e-407e-4b13-8da5-275f65b0c1f6",
    "name" : "AUDIT - Get list of systems that have been updated",
    "request" : {
      "urlPath" : "/admin/platform/systems/obaohp5gx4zjh64hcsl20iyli5zp0jgzxlsz8bmudvxtygzbt6l5wf1ixyp7z0wt0cfu18e71e8z49xefwk5a9ipuoyref2etqy9ac9w4gxux3oipzxmvk8q43kq5wmmx",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d832434e-407e-4b13-8da5-275f65b0c1f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemUpdatesDev",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/analyticItems"
            }
          }
        }
      }
    }
  }, {
    "id" : "2ddce05b-5da9-4bed-b7f8-f36035e162c2",
    "name" : "AUDIT - Get list of systems that have been updated",
    "request" : {
      "urlPath" : "/admin/platform/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ddce05b-5da9-4bed-b7f8-f36035e162c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemUpdates",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/analyticItems"
            }
          }
        }
      }
    }
  }, {
    "id" : "7c227ffa-9887-4ede-9720-64e992e483a2",
    "name" : "ADMIN - Get developers - 200",
    "request" : {
      "urlPath" : "/admin/platform/developers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7c227ffa-9887-4ede-9720-64e992e483a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDevs"
        }
      }
    }
  }, {
    "id" : "dccaa436-bc31-437f-a543-b2f94c1c9120",
    "name" : "DEVELOPER - Disable developer - 200",
    "request" : {
      "urlPath" : "/admin/platform/developer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dccaa436-bc31-437f-a543-b2f94c1c9120",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisableDev"
        }
      }
    }
  }, {
    "id" : "1dd0854e-146b-4358-a3a6-b798a2370f7c",
    "name" : "ADMIN - Get developer - 200",
    "request" : {
      "urlPath" : "/admin/platform/developer",
      "method" : "GET",
      "queryParameters" : {
        "developer" : {
          "equalTo" : "qpybccrznq43bzogvpm9kmpzuar5l9o9cji6u01jh3hc0vszq"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1dd0854e-146b-4358-a3a6-b798a2370f7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDev"
        }
      }
    }
  }, {
    "id" : "550c144c-610a-4c0f-8527-e6ed00722639",
    "name" : "ADMIN - Get platform license key. - 400",
    "request" : {
      "urlPath" : "/admin/pkey",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "550c144c-610a-4c0f-8527-e6ed00722639",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.42008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLicenseKey"
        }
      }
    }
  }, {
    "id" : "b941d0da-aa92-49fd-9c06-696aa28c4ed9",
    "name" : "ADMIN - Get platform license key. - 200",
    "request" : {
      "urlPath" : "/admin/pkey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b941d0da-aa92-49fd-9c06-696aa28c4ed9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetLicenseKey"
        }
      }
    }
  }, {
    "id" : "aba43477-b8ac-4f97-b1ea-963b2b70e14d",
    "name" : "DEVELOPER - Log out dev - 200",
    "request" : {
      "urlPath" : "/admin/logout",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "aba43477-b8ac-4f97-b1ea-963b2b70e14d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevLogout"
        }
      }
    }
  }, {
    "id" : "7bb0f5a6-323c-4dcc-baf7-f1fce34cec3e",
    "name" : "DEVELOPER - Delete edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/gg2l1o3uj0qidde8sc3btvyidxzbnx8jkn58w3lgqjk9c4ob9ku277atlbe9gugpu1k4cohhzpcn2krqo00lmx15d3xzt8cyt952yh9ln8nrw8pdkasalzs3uljl4uhi11ywz1fqqan14l5m74f74x6f0d5k3gposrgstdnef8gx/Kittie+Roberts+Sr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7bb0f5a6-323c-4dcc-baf7-f1fce34cec3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.420023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEdge"
        }
      }
    }
  }, {
    "id" : "598f6c8e-5314-432c-9c1d-f9e6d8fd4f31",
    "name" : "DEVELOPER - Create edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/rg3y50rsgjnre6de4b5dnyqipzzm7pdfvm1e/Marth+Jenkins",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "598f6c8e-5314-432c-9c1d-f9e6d8fd4f31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateEdge"
        }
      }
    }
  }, {
    "id" : "303adcaf-5669-45f9-8075-607a532577f4",
    "name" : "DEVELOPER - Update edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/hobv585way5cuyv9gjo2osjuom5tcwcqhp6vd402qlfhitqkroiwksbs/Ginger+McCullough",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "303adcaf-5669-45f9-8075-607a532577f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateEdge"
        }
      }
    }
  }, {
    "id" : "faf2c9e0-d8bd-4772-9642-8d6af181f495",
    "name" : "DEVELOPER - Get edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/3xh5txer306v25qtm8xiqn7jt3r6n1g1fw9tthmb9fr7il7badl3za3czq9i92mjn0y99o3fgby5wgeis0dvram34ouxvdcr3n1lx9a2bvjnjjoofdn69qdyjxgo/Mariano+Lowe",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "faf2c9e0-d8bd-4772-9642-8d6af181f495",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdge"
        }
      }
    }
  }, {
    "id" : "e5d3c828-c5b6-474d-9441-3a814e88c94b",
    "name" : "DEVELOPER - Get edges for the adapter - 200",
    "request" : {
      "urlPath" : "/admin/edges/bif8n8u5zzcbdmpzq54b638pvkrqeevqu1xyrsimmif7fad6vf405h4x11sm/control",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e5d3c828-c5b6-474d-9441-3a814e88c94b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAdapterEdges"
        }
      }
    }
  }, {
    "id" : "83a8fbf8-f650-4d01-ad7c-7cd7057e2b78",
    "name" : "DEVELOPER - Get edges - 200",
    "request" : {
      "urlPath" : "/admin/edges/eyozeyzfpkqyek4knd0br2saus6sofrnd4g1c",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "83a8fbf8-f650-4d01-ad7c-7cd7057e2b78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdges"
        }
      }
    }
  }, {
    "id" : "b5b204a6-2c7c-44da-acaf-ca440204206d",
    "name" : "DEVELOPER - Update edge template - 200",
    "request" : {
      "urlPath" : "/admin/edges/template/pbopfdfkzw3r05ira2kngzrixeho6z9ncbzcvcgbub2kwjics9fcpoygkarxyxwdjijg90axbhmh167wlonbkok3vjhxiq9pyjlcb009tyettay/Adolph+Gorczany",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b5b204a6-2c7c-44da-acaf-ca440204206d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateEdgeTemplate"
        }
      }
    }
  }, {
    "id" : "bdd97999-bcd4-4e8f-a466-e69bcd7c2512",
    "name" : "DEVELOPER - Get edge template - 200",
    "request" : {
      "urlPath" : "/admin/edges/template/gk8b3h9f7qjv0cl5zgbeqbd5ad2zjdl57v2f3tskbcrw5v362qk1xo4p13rgmtm77lknjop1tz0m3i8x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bdd97999-bcd4-4e8f-a466-e69bcd7c2512",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetEdgeTemplate"
        }
      }
    }
  }, {
    "id" : "ab3b4358-6a97-4320-bec1-bdbfcff0a0e9",
    "name" : "DEVELOPER - Delete device - 200",
    "request" : {
      "urlPath" : "/admin/devices/9twf96v2cp5fdo3i0wm964nnso1qm33y3wqffmojk3ruuztmiqha2noz3qqe41w6b7ji2lizwdg3tahf4qhjh84v01pf16owt4uqlxptmn50ypfv7vp4ir3pqz5/Cassaundra+Stiedemann",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ab3b4358-6a97-4320-bec1-bdbfcff0a0e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSystemDevice"
        }
      }
    }
  }, {
    "id" : "3e81df5d-4d2b-4f9f-8c33-d5c50f2914f7",
    "name" : "DEVELOPER - Create device - 200",
    "request" : {
      "urlPath" : "/admin/devices/95s2djbmn3gybfw38ueixtnzujjq522u6/Talisha+McKenzie",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3e81df5d-4d2b-4f9f-8c33-d5c50f2914f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSystemDevice"
        }
      }
    }
  }, {
    "id" : "a0c97cbf-fdf5-44fd-abca-d408be8ee870",
    "name" : "DEVELOPER - Update device - 200",
    "request" : {
      "urlPath" : "/admin/devices/ys69rbsdyldoe2drv8s6bvwyacvmfpekaxss2nasc8vz2rvgvipu0rmmk8mptfttuhvr6z1r6dkzkr0tolehznno4293rrlj6p32addcqbnlizoqnve6d802/Jimmy+DuBuque",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a0c97cbf-fdf5-44fd-abca-d408be8ee870",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSystemDevice"
        }
      }
    }
  }, {
    "id" : "39103a65-bcc9-4465-a065-337fd4c49f2c",
    "name" : "DEVELOPER - Get device - 200",
    "request" : {
      "urlPath" : "/admin/devices/emegbosvtnzjwyx0sgnj4lx5c2mjfoeg7vtp7suutesz51hdh58f9d5h6p1ng3mwayu1vs8lv69kvqik6tq0lr6kl34aci6necxp36z9w/Deedra+Cummerata",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "39103a65-bcc9-4465-a065-337fd4c49f2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemDevice"
        }
      }
    }
  }, {
    "id" : "2230290d-5ed8-47b0-839a-4dec57f50507",
    "name" : "DEVELOPER - Delete devices using a query - 400",
    "request" : {
      "urlPath" : "/admin/devices/7hb802ciyxg3kwauhriuro5dlo03cvsnvq0o9ycpton3kkpn1344qtlkahtft0tq4cflmtsm9ncexzdf0ohee3egsjrn8eh57h733qs1sl4kruiejuxa8xxnpp275q4c6z9bresuh9yb1o0gojp6cr62a5oj5redb0ogv0jsspb14134docdt2ldwywvoiyyxb1qfp3",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "km198a7uig2wwcdk4zlcszj2yptkd3y2i5bgo"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2230290d-5ed8-47b0-839a-4dec57f50507",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDevicesAdmin"
        }
      }
    }
  }, {
    "id" : "002f9ce7-af9a-4965-b35b-6274e4358130",
    "name" : "DEVELOPER - Delete devices using a query - 200",
    "request" : {
      "urlPath" : "/admin/devices/ukuwcvboesxwgdx60l55xil6wpj2rulewy44pcitqvzgiep87hfgecuakisd48l7qarfzbp6rgo1cqzjxdpsva1kbhebjk57jjgxpctyltgpluey85bhtk3c1gtnzo8ata8uss5a78cqhhrlh0lzgmrlahel1bwb7fq",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "ja3hvsr11zmokurc4m2313pt0zmdhfu9322pt5eeahxwrpb9czmao27zvqozgvdjgtj3u5pdkeaxm7h92t94plw4ymimt9euemxzrco18q66f9v04"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "002f9ce7-af9a-4965-b35b-6274e4358130",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDevicesAdmin"
        }
      }
    }
  }, {
    "id" : "0f1e4afd-2f74-4866-9525-4ef26b0203c0",
    "name" : "DEVELOPER - Update devices using a query - 400",
    "request" : {
      "urlPath" : "/admin/devices/zsyx7g59ewy5u0nxlsn09zntw5uqvkrxhjy0swu5oya7jby9iwlxzx9u39nfn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0f1e4afd-2f74-4866-9525-4ef26b0203c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDevicesAdmin"
        }
      }
    }
  }, {
    "id" : "b6e5c0a2-865f-4531-bbcb-ea31da405205",
    "name" : "DEVELOPER - Update devices using a query (application/json)",
    "request" : {
      "urlPath" : "/admin/devices/kn51zauibudddjbtkjikokoixqs6ad8wep6j9b7pfmumajmyu59we0swqdsvojz2xpstscx7vhvsekve8nf5gfl69wh7b8z23ur3bxhni9pvxa7ee9xs4n541v6m0g0e69ksgey53gu2s1q9ka59zlhnq3fnmb1o4dit7vmp",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 9020986317392599509,\n  \"DATA\" : [ { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6e5c0a2-865f-4531-bbcb-ea31da405205",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDevicesAdmin",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DATA" : {
                "type" : "array",
                "description" : "An array containing each row returned by a query",
                "items" : {
                  "type" : "object"
                }
              },
              "TOTAL" : {
                "type" : "integer",
                "description" : "The number of rows affected by a query"
              }
            },
            "description" : "An object representing a SQL query result set."
          }
        }
      }
    }
  }, {
    "id" : "c04b026b-cc79-4e6d-8abc-ece8d0044fa9",
    "name" : "DEVELOPER - Get devices with or without a query - 400",
    "request" : {
      "urlPath" : "/admin/devices/nttj65qlo9uxptew310dwv1d7umoka0wuhqrgcrgnnlrgbea12ph35t2giyaii9wt1ocwh6cf2pqmrxuayoj7y",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c04b026b-cc79-4e6d-8abc-ece8d0044fa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemDevices"
        }
      }
    }
  }, {
    "id" : "c6b77c2e-a672-4e07-b6c6-76b8740670f0",
    "name" : "DEVELOPER - Get devices with or without a query - 200",
    "request" : {
      "urlPath" : "/admin/devices/i0z5037g18t1o1myejasbt2qam8ksgumi3hs8eqbah212ssi",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c6b77c2e-a672-4e07-b6c6-76b8740670f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.419017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemDevices"
        }
      }
    }
  }, {
    "id" : "d8467210-4c52-4bd4-be70-e6dd50996eb9",
    "name" : "DEVELOPER - Delete rotating keys for a device - 200",
    "request" : {
      "urlPath" : "/admin/devices/keys/xu6cx2yonri1xjlmn9e8695b0w7e4eyctizcob7kfilq1ni0h9fi64kyduy45vvs/Cornell+Okuneva",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d8467210-4c52-4bd4-be70-e6dd50996eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDeviceKeys"
        }
      }
    }
  }, {
    "id" : "e262592c-1417-45fb-bd34-6c527941052d",
    "name" : "DEVICE -Creates rotating keys for a device.",
    "request" : {
      "urlPath" : "/admin/devices/keys/5ftmiuivjizzn34bh4lmg4kif891z1t1tfkqb93uikjkux0ejip4909ki8vs8ev4a8uqg48tz7txm2hh4eprfw0/Robert+Davis",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : [ \"��W&\\u001A�Kw��\", \"��W&\\u001A�Kw��\", \"��W&\\u001A�Kw��\", \"��W&\\u001A�Kw��\" ],\n  \"active_key\" : \"��W&\\u001A�Kw��\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e262592c-1417-45fb-bd34-6c527941052d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateRotatingKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "active_key" : {
                "type" : "string",
                "example" : "��W&\u001A�Kw��"
              },
              "keys" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/rotatingDeviceKeys"
                }
              }
            },
            "description" : "List of rotating keys."
          }
        }
      }
    }
  }, {
    "id" : "69eb2868-028d-421f-9f1c-4af92d3d233d",
    "name" : "ADMIN - Add/Remove/Change owner - 500",
    "request" : {
      "urlPath" : "/admin/developers/683tsz95f6noaoemjrx1udulb5my9kgbdbmzkp1s0v5pasyxe4xu81e9gwn71qqkifpoxkjeuhabw2wd77j16cf2vqyyi42sran00gvdzsh1d96md8bgz53awkg3fu3jni9cx45zh57jw26fvbnp9d0b40cr2f0sadqzcslwni",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "69eb2868-028d-421f-9f1c-4af92d3d233d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdminOwnerChange"
        }
      }
    }
  }, {
    "id" : "c24280ee-f108-4020-bcfc-721d27a7e72c",
    "name" : "ADMIN - Add/Remove/Change owner - 400",
    "request" : {
      "urlPath" : "/admin/developers/7nbdjh8ke81j9mql9p71xfdn7edp3zyren9o11igdfybs0znbopmhe1zfg3rx599gzmv2gp1k6n7u8wqidvkboodtt4bgfpm5b7psxypb29z354aug3f6wctuqch7gded6zas6hpusf82cv3w61og6fallq1bpb",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c24280ee-f108-4020-bcfc-721d27a7e72c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdminOwnerChange"
        }
      }
    }
  }, {
    "id" : "1f93f735-44f8-4dc9-931d-099f2dc6b8f2",
    "name" : "ADMIN - Add/Remove/Change owner - 200",
    "request" : {
      "urlPath" : "/admin/developers/ifr3pjpt04zz31xo4mbr0jt3xwljdobws4i0s88hq52rpm2rpcgxmocsj9euagmf49q8bv6t0b2mb5mzqlpbam8ohen2p5xivalp48xldjycxli5n461a0k36pujzzqs4r1ktkj3hzkxr31998nbkj5s7fl1m",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1f93f735-44f8-4dc9-931d-099f2dc6b8f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AdminOwnerChange"
        }
      }
    }
  }, {
    "id" : "edc77af3-2461-4203-93f8-a30cc6c2a422",
    "name" : "DATABASES - Retrieves all internal and external database statuses - 200",
    "request" : {
      "urlPath" : "/admin/database/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "edc77af3-2461-4203-93f8-a30cc6c2a422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetDatabaseStatus"
        }
      }
    }
  }, {
    "id" : "63551528-20db-4da5-8a01-e2298db8b47b",
    "name" : "ADMIN - Get number of systems available - 404",
    "request" : {
      "urlPath" : "/admin/count/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "63551528-20db-4da5-8a01-e2298db8b47b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemCount"
        }
      }
    }
  }, {
    "id" : "dca8bfd3-21dd-4f8b-ada2-906e1630d4d7",
    "name" : "ADMIN - Get number of systems available - 400",
    "request" : {
      "urlPath" : "/admin/count/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "dca8bfd3-21dd-4f8b-ada2-906e1630d4d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemCount"
        }
      }
    }
  }, {
    "id" : "55f102f4-9dd9-4b89-a2e6-b46b13e52b56",
    "name" : "ADMIN - Get number of systems available - 200",
    "request" : {
      "urlPath" : "/admin/count/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "55f102f4-9dd9-4b89-a2e6-b46b13e52b56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystemCount"
        }
      }
    }
  }, {
    "id" : "bcb274b0-4832-4485-a345-b7746dc06286",
    "name" : "ADMIN - Get number of admin developers - 400",
    "request" : {
      "urlPath" : "/admin/count/developers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bcb274b0-4832-4485-a345-b7746dc06286",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAdminDevCount"
        }
      }
    }
  }, {
    "id" : "302d9202-da48-48c8-9c01-3e14b50c09c3",
    "name" : "ADMIN - Get number of admin developers - 200",
    "request" : {
      "urlPath" : "/admin/count/developers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "302d9202-da48-48c8-9c01-3e14b50c09c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAdminDevCount"
        }
      }
    }
  }, {
    "id" : "6017890f-b0e3-41fe-81c2-c1afc061586d",
    "name" : "DEVELOPER - Delete collection - 200",
    "request" : {
      "urlPath" : "/admin/collectionmanagement",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "bhj3"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6017890f-b0e3-41fe-81c2-c1afc061586d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevDeleteCollection"
        }
      }
    }
  }, {
    "id" : "fba86334-d078-4943-9219-6951d9418776",
    "name" : "DEVELOPER - Create collection - 200",
    "request" : {
      "urlPath" : "/admin/collectionmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fba86334-d078-4943-9219-6951d9418776",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevCreateCollection"
        }
      }
    }
  }, {
    "id" : "5d7f2da8-29b7-436b-9b18-71c55ede16c1",
    "name" : "DEVELOPER - Update collection - 200",
    "request" : {
      "urlPath" : "/admin/collectionmanagement",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5d7f2da8-29b7-436b-9b18-71c55ede16c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevUpdateCollection"
        }
      }
    }
  }, {
    "id" : "3779ef0d-0b1c-4a44-af0e-53efa31b3f62",
    "name" : "DEVELOPER - Verifies access to the system - 400",
    "request" : {
      "urlPath" : "/admin/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3779ef0d-0b1c-4a44-af0e-53efa31b3f62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifyAuth"
        }
      }
    }
  }, {
    "id" : "04fb22f5-c45a-4476-9afe-c60ac52ff813",
    "name" : "DEVELOPER - Verifies access to the system - 200",
    "request" : {
      "urlPath" : "/admin/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "04fb22f5-c45a-4476-9afe-c60ac52ff813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifyAuth"
        }
      }
    }
  }, {
    "id" : "e06a278c-6919-4f93-9e62-aa90f0769554",
    "name" : "DEVELOPER - Authenticate dev",
    "request" : {
      "urlPath" : "/admin/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is_two_factor\" : false,\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"a4a4a3eb0bd89fe8bbeb99f8d2be01\",\n  \"dev_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e06a278c-6919-4f93-9e62-aa90f0769554",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.41838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthDev",
          "schema" : {
            "type" : "object",
            "properties" : {
              "dev_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4"
              },
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "is_two_factor" : {
                "type" : "boolean",
                "example" : false
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "a4a4a3eb0bd89fe8bbeb99f8d2be01"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "da522d21-25d9-4a99-88f7-8584ed204821",
    "name" : "AUDIT - Get counts - 200",
    "request" : {
      "urlPath" : "/admin/audit/2vmk0dqxu8e6t1sqba4ycnvq4q3dwdbozvhom9j/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "da522d21-25d9-4a99-88f7-8584ed204821",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418256Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCountsDev"
        }
      }
    }
  }, {
    "id" : "64a29b35-3f7f-4868-8be8-dfbd4d75ad3e",
    "name" : "AUDIT  - Get Audit Info",
    "request" : {
      "urlPath" : "/admin/audit/091djc2dr433eqn48erzpjfvvtbk84rb8xc23i6jqbrx1oeo9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64a29b35-3f7f-4868-8be8-dfbd4d75ad3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.418197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAuditDev",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/auditItems"
            }
          }
        }
      }
    }
  }, {
    "id" : "3435e062-bafb-41a8-bba0-5432e998912b",
    "name" : "Audit - Get counts - 200",
    "request" : {
      "urlPath" : "/admin/audit/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3435e062-bafb-41a8-bba0-5432e998912b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCounts"
        }
      }
    }
  }, {
    "id" : "04327f02-5601-4548-ae0c-59544a48fddf",
    "name" : "AUDIT  - Get Audit Info",
    "request" : {
      "urlPath" : "/admin/audit",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04327f02-5601-4548-ae0c-59544a48fddf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAudit",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/auditItems"
            }
          }
        }
      }
    }
  }, {
    "id" : "df174570-95fb-401b-931f-906ed33a570c",
    "name" : "DEVELOPER - Get systems - 200",
    "request" : {
      "urlPath" : "/admin/allsystems",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "df174570-95fb-401b-931f-906ed33a570c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSystems"
        }
      }
    }
  }, {
    "id" : "7f65260f-ca19-46cf-88e4-d0710fa859aa",
    "name" : "DEVELOPER - Get collections - 400",
    "request" : {
      "urlPath" : "/admin/allcollections",
      "method" : "GET",
      "queryParameters" : {
        "appid" : {
          "equalTo" : "ye1j"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7f65260f-ca19-46cf-88e4-d0710fa859aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevGetCollections"
        }
      }
    }
  }, {
    "id" : "6927077d-c33a-4bd0-b7c7-e81bceb6d014",
    "name" : "DEVELOPER - Get collections - 200",
    "request" : {
      "urlPath" : "/admin/allcollections",
      "method" : "GET",
      "queryParameters" : {
        "appid" : {
          "equalTo" : "598j"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6927077d-c33a-4bd0-b7c7-e81bceb6d014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevGetCollections"
        }
      }
    }
  }, {
    "id" : "21a43ddc-44ba-4efd-9854-e76703067fd1",
    "name" : "DEVELOPER - Get platform assets - 400",
    "request" : {
      "urlPath" : "/admin/allapps",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "21a43ddc-44ba-4efd-9854-e76703067fd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevGetAssets"
        }
      }
    }
  }, {
    "id" : "2869104d-590b-4d59-b1dd-704fca6a85ed",
    "name" : "DEVELOPER - Get platform assets - 200",
    "request" : {
      "urlPath" : "/admin/allapps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2869104d-590b-4d59-b1dd-704fca6a85ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:31.417522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DevGetAssets"
        }
      }
    }
  } ]
}