{
  "mappings" : [ {
    "id" : "181dad56-f25f-4dac-92af-5408522f9901",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/qq7x/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in progress or failed\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "181dad56-f25f-4dac-92af-5408522f9901",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.867544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f67862b0-6aae-4f40-85ef-6ac8277d8173",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/pmd9/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 406,
      "body" : "{\n  \"allowed_values\" : [ \"text/plain\", \"application/vnd.rev.transcript.v1.0+json\" ],\n  \"current_value\" : \"*/*\",\n  \"detail\" : \"Unsupported value */*\",\n  \"status\" : 406,\n  \"title\" : \"Output format is not supported\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/unsupported-output-format\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "f67862b0-6aae-4f40-85ef-6ac8277d8173",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.867391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "985c1b1a-8c22-4ed3-970e-8bcaf72a764b",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/3ks1/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "985c1b1a-8c22-4ed3-970e-8bcaf72a764b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.867235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "20fccc39-8c36-4c66-b720-2c44412287c0",
    "name" : "Get Transcript By Id - 401",
    "request" : {
      "urlPath" : "/jobs/o5r0/transcript",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "20fccc39-8c36-4c66-b720-2c44412287c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.867131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById"
        }
      }
    }
  }, {
    "id" : "e2da9abe-1919-4b42-9e81-656490f47b9f",
    "name" : "Get Transcript By Id (text/plain)",
    "request" : {
      "urlPath" : "/jobs/0t87/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "e2da9abe-1919-4b42-9e81-656490f47b9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.867042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Transcript in plain text format",
            "x-content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9bf256e5-f09b-479f-a47f-71ebe96f1e2f",
    "name" : "Get Transcript By Id (application/vnd.rev.transcript.v1.0+json)",
    "request" : {
      "urlPath" : "/jobs/im82/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.rev.transcript.v1.0+json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"monologues\" : [ {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/vnd.rev.transcript.v1.0+json"
      }
    },
    "uuid" : "9bf256e5-f09b-479f-a47f-71ebe96f1e2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.866928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Rev.ai Transcript Model\n***\nNote: properties are not displayed in the returned object if they are null\n\nJobs with skip_diarization set to true will only show a single speaker for the entire duration of the transcript.\n",
            "properties" : {
              "monologues" : {
                "items" : {
                  "properties" : {
                    "elements" : {
                      "description" : "Array of transcript elements",
                      "items" : {
                        "properties" : {
                          "confidence" : {
                            "description" : "Confidence score of the provided value. If the element `type` is `punct` or `unknown`, confidence will be `null`",
                            "example" : 0.85,
                            "format" : "double",
                            "maximum" : 1,
                            "minimum" : 0,
                            "nullable" : true,
                            "type" : "number"
                          },
                          "ts" : {
                            "description" : "The timestamp of the beginning of the element relative to the beginning of the audio in seconds (centisecond precision)",
                            "example" : 0.75,
                            "format" : "double",
                            "nullable" : true,
                            "type" : "number"
                          },
                          "ts_end" : {
                            "description" : "The timestamp of the end of the element relative to the beginning of the audio in seconds (centisecond precision)",
                            "example" : 1.25,
                            "format" : "double",
                            "nullable" : true,
                            "type" : "number"
                          },
                          "type" : {
                            "description" : "Type of transcript element. If Rev.ai was unable to determine the spoken word, the `type` will be `unknown`.",
                            "enum" : [ "text", "punct", "unknown" ],
                            "example" : "text",
                            "type" : "string"
                          },
                          "value" : {
                            "description" : "Value of the transcript element.",
                            "example" : "Hello",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "speaker" : {
                      "description" : "Id of the speaker of the monologue",
                      "example" : 1,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0c7d7ee-6174-4e8e-8370-9989ff645312",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/px52/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in progress or failed\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "f0c7d7ee-6174-4e8e-8370-9989ff645312",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.86667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f1688ab9-4a72-40e1-8eab-63e032a2c397",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/5o02/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 406,
      "body" : "{\n  \"allowed_values\" : [ \"application/x-subrip\", \"text/vtt\" ],\n  \"current_value\" : \"*/*\",\n  \"detail\" : \"Unsupported value */*\",\n  \"status\" : 406,\n  \"title\" : \"Output format is not supported\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/unsupported-output-format\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "f1688ab9-4a72-40e1-8eab-63e032a2c397",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.866513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ab41736f-81aa-4151-904b-efd4cef7911d",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/w8w9/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 405,
      "body" : "{\n  \"detail\" : \"Job with speaker channels provided are not supported for retrieving captions\",\n  \"status\" : 405,\n  \"title\" : \"Job contains unsupported properties\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-properties\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "ab41736f-81aa-4151-904b-efd4cef7911d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.866355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "fed94e20-8ce9-4a79-beab-3e39ae2c5cce",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/4bro/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "fed94e20-8ce9-4a79-beab-3e39ae2c5cce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.866207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4999e076-c7e0-4bb0-a1b8-b408abf5f007",
    "name" : "Get Captions - 401",
    "request" : {
      "urlPath" : "/jobs/kdpw/captions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4999e076-c7e0-4bb0-a1b8-b408abf5f007",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.866105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions"
        }
      }
    }
  }, {
    "id" : "09ea003b-572a-4dba-a852-d7f66d798cd5",
    "name" : "Get Captions (text/vtt)",
    "request" : {
      "urlPath" : "/jobs/p898/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/vtt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/vtt"
      }
    },
    "uuid" : "09ea003b-572a-4dba-a852-d7f66d798cd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.866016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Caption in Web Video Text Tracks format",
            "x-content" : {
              "text/vtt" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "420ac6c5-425e-4897-9309-6d3ed8c1a48e",
    "name" : "Get Captions (application/x-subrip)",
    "request" : {
      "urlPath" : "/jobs/89vi/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/x-subrip"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/x-subrip"
      }
    },
    "uuid" : "420ac6c5-425e-4897-9309-6d3ed8c1a48e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.865912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Caption in SubRip Text format",
            "x-content" : {
              "application/x-subrip" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9f794e57-6941-41f7-9f0d-01484eb7b4db",
    "name" : "Get Job By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/64g9",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "9f794e57-6941-41f7-9f0d-01484eb7b4db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.865785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9026bf18-917f-4d04-a717-c8f9b4d13214",
    "name" : "Get Job By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/86v5",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"status\" : 401,\n  \"title\" : \"Authorization has been denied for this request\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "9026bf18-917f-4d04-a717-c8f9b4d13214",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.865677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a310bd40-9988-414f-87b7-32f04dc58bc9",
    "name" : "Get Job By Id (application/json)",
    "request" : {
      "urlPath" : "/jobs/m3h1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a310bd40-9988-414f-87b7-32f04dc58bc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.86556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "allOf" : [ {
              "description" : "Rev.ai Transcription Job\n***\nNote: properties are not displayed in the returned object if they are null\n",
              "properties" : {
                "callback_url" : {
                  "description" : "Callback url provided by the user."
                },
                "completed_on" : {
                  "description" : "The date and time the job was completed, whether successfully or failing, in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:28:22.29Z",
                  "format" : "dateTime",
                  "nullable" : true,
                  "type" : "string"
                },
                "created_on" : {
                  "description" : "The date and time the job was created in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:23:22.29Z",
                  "format" : "dateTime",
                  "type" : "string"
                },
                "custom_vocabulary_id" : {
                  "description" : "User-supplied custom vocabulary ID to be used with job for transcription."
                },
                "delete_after_seconds" : {
                  "description" : "Amount of time after job completion when job is auto-deleted. Present only when preference set in job request."
                },
                "duration_seconds" : {
                  "description" : "Duration of the file in seconds. Null if the file could not be retrieved or there was not a valid media file",
                  "example" : 324.36,
                  "format" : "double",
                  "nullable" : true,
                  "type" : "number"
                },
                "failure" : {
                  "description" : "Simple reason of why the transcription job failed. Check `failure_detail` for specific details and solutions",
                  "enum" : [ "internal_processing", "download_failure", "duration_exceeded", "duration_too_short", "invalid_media", "empty_media", "transcription", "insufficient_balance", "invoicing_limit_exceeded" ],
                  "example" : "download_failure",
                  "nullable" : true,
                  "type" : "string"
                },
                "failure_detail" : {
                  "description" : "Human-readable reason why the job failed",
                  "example" : "Failed to download media file. Please check your url and file type",
                  "nullable" : true,
                  "type" : "string"
                },
                "filter_profanity" : {
                  "description" : "User-supplied preference on whether to remove explicit words."
                },
                "id" : {
                  "description" : "Id of the job",
                  "example" : "Umx5c6F7pH7r",
                  "type" : "string"
                },
                "language" : {
                  "description" : "User-supplied language to transcribe the audio into."
                },
                "media_url" : {
                  "description" : "Media url provided by the job submission. Null if the job was provided using a local file."
                },
                "metadata" : {
                  "description" : "Optional metadata that was provided during job submission"
                },
                "name" : {
                  "description" : "Name of the file provided. Present when the file name is available",
                  "example" : "sample_audio.mp3",
                  "nullable" : true,
                  "type" : "string"
                },
                "remove_disfluencies" : {
                  "description" : "User-supplied preference on whether to remove disfluencies."
                },
                "skip_diarization" : {
                  "description" : "User-supplied preference on whether to skip diarization."
                },
                "skip_punctuation" : {
                  "description" : "User-supplied preference on whether to skip punctuation."
                },
                "speaker_channels_count" : {
                  "description" : "User-supplied number of speaker channels in the audio."
                },
                "status" : {
                  "description" : "Current status of the job",
                  "enum" : [ "in_progress", "transcribed", "failed" ],
                  "example" : "transcribed",
                  "type" : "string"
                },
                "type" : {
                  "description" : "Type of speech recognition performed. Currently the only supported values are 'async' for asynchronous jobs and `stream` for streaming jobs",
                  "enum" : [ "async" ],
                  "example" : "async",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "$ref" : "#/components/schemas/DescriptionlessJobOptions"
            } ],
            "example" : {
              "created_on" : "2018-05-05T23:23:22.29Z",
              "delete_after_seconds" : 50,
              "id" : "Umx5c6F7pH7r",
              "status" : "in_progress",
              "type" : "async"
            }
          }
        }
      }
    }
  }, {
    "id" : "9aa58ff6-438f-4b54-9e60-15ba66799e1a",
    "name" : "Delete Job by Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/984h",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\", \"failed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in invalid state to be deleted\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "9aa58ff6-438f-4b54-9e60-15ba66799e1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.865324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a16afff1-236f-46ee-bcdc-9a6b11e2e5c7",
    "name" : "Delete Job by Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/tn3u",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "a16afff1-236f-46ee-bcdc-9a6b11e2e5c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.865158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3e8682f1-c9cb-4bae-9c69-adad55e6e834",
    "name" : "Delete Job by Id - 401",
    "request" : {
      "urlPath" : "/jobs/64g4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3e8682f1-c9cb-4bae-9c69-adad55e6e834",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.865048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById"
        }
      }
    }
  }, {
    "id" : "099a5686-aa7c-44c9-abd4-43c96965246c",
    "name" : "Delete Job by Id - 204",
    "request" : {
      "urlPath" : "/jobs/b98x",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "099a5686-aa7c-44c9-abd4-43c96965246c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.86496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById"
        }
      }
    }
  }, {
    "id" : "35ddfa9f-df0a-4b5a-a4d4-3cde76b77653",
    "name" : "Submit Transcription Job (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 413,
      "body" : "{\n  \"detail\" : \"Submitted payload exceeds maximum allowed file size\",\n  \"status\" : 413,\n  \"title\" : \"Payload Too Large\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "35ddfa9f-df0a-4b5a-a4d4-3cde76b77653",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Human-readable explanation specific to this occurrence of the problem",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "88dcc697-a4de-49df-8664-05ea5358ecae",
    "name" : "Submit Transcription Job - 401",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "88dcc697-a4de-49df-8664-05ea5358ecae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob"
        }
      }
    }
  }, {
    "id" : "c9eeb939-f6e7-42fc-a057-b52e32c77858",
    "name" : "Submit Transcription Job (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"parameter\" : {\n    \"media_url\" : [ \"The media_url field is required\" ]\n  },\n  \"status\" : 400,\n  \"title\" : \"Your request parameters didn't validate\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/invalid-parameters\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "c9eeb939-f6e7-42fc-a057-b52e32c77858",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "parameters" : {
                  "description" : "Invalid properties object where each property is the key, mapped to a list of reasons why the property is invalid",
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "9184cfd2-1bd4-4c30-b672-680a9a574220",
    "name" : "Submit Transcription Job (application/json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9184cfd2-1bd4-4c30-b672-680a9a574220",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "allOf" : [ {
              "description" : "Rev.ai Transcription Job\n***\nNote: properties are not displayed in the returned object if they are null\n",
              "properties" : {
                "callback_url" : {
                  "description" : "Callback url provided by the user."
                },
                "completed_on" : {
                  "description" : "The date and time the job was completed, whether successfully or failing, in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:28:22.29Z",
                  "format" : "dateTime",
                  "nullable" : true,
                  "type" : "string"
                },
                "created_on" : {
                  "description" : "The date and time the job was created in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:23:22.29Z",
                  "format" : "dateTime",
                  "type" : "string"
                },
                "custom_vocabulary_id" : {
                  "description" : "User-supplied custom vocabulary ID to be used with job for transcription."
                },
                "delete_after_seconds" : {
                  "description" : "Amount of time after job completion when job is auto-deleted. Present only when preference set in job request."
                },
                "duration_seconds" : {
                  "description" : "Duration of the file in seconds. Null if the file could not be retrieved or there was not a valid media file",
                  "example" : 324.36,
                  "format" : "double",
                  "nullable" : true,
                  "type" : "number"
                },
                "failure" : {
                  "description" : "Simple reason of why the transcription job failed. Check `failure_detail` for specific details and solutions",
                  "enum" : [ "internal_processing", "download_failure", "duration_exceeded", "duration_too_short", "invalid_media", "empty_media", "transcription", "insufficient_balance", "invoicing_limit_exceeded" ],
                  "example" : "download_failure",
                  "nullable" : true,
                  "type" : "string"
                },
                "failure_detail" : {
                  "description" : "Human-readable reason why the job failed",
                  "example" : "Failed to download media file. Please check your url and file type",
                  "nullable" : true,
                  "type" : "string"
                },
                "filter_profanity" : {
                  "description" : "User-supplied preference on whether to remove explicit words."
                },
                "id" : {
                  "description" : "Id of the job",
                  "example" : "Umx5c6F7pH7r",
                  "type" : "string"
                },
                "language" : {
                  "description" : "User-supplied language to transcribe the audio into."
                },
                "media_url" : {
                  "description" : "Media url provided by the job submission. Null if the job was provided using a local file."
                },
                "metadata" : {
                  "description" : "Optional metadata that was provided during job submission"
                },
                "name" : {
                  "description" : "Name of the file provided. Present when the file name is available",
                  "example" : "sample_audio.mp3",
                  "nullable" : true,
                  "type" : "string"
                },
                "remove_disfluencies" : {
                  "description" : "User-supplied preference on whether to remove disfluencies."
                },
                "skip_diarization" : {
                  "description" : "User-supplied preference on whether to skip diarization."
                },
                "skip_punctuation" : {
                  "description" : "User-supplied preference on whether to skip punctuation."
                },
                "speaker_channels_count" : {
                  "description" : "User-supplied number of speaker channels in the audio."
                },
                "status" : {
                  "description" : "Current status of the job",
                  "enum" : [ "in_progress", "transcribed", "failed" ],
                  "example" : "transcribed",
                  "type" : "string"
                },
                "type" : {
                  "description" : "Type of speech recognition performed. Currently the only supported values are 'async' for asynchronous jobs and `stream` for streaming jobs",
                  "enum" : [ "async" ],
                  "example" : "async",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "$ref" : "#/components/schemas/DescriptionlessJobOptions"
            } ],
            "example" : {
              "created_on" : "2018-05-05T23:23:22.29Z",
              "delete_after_seconds" : 50,
              "id" : "Umx5c6F7pH7r",
              "status" : "in_progress",
              "type" : "async"
            }
          }
        }
      }
    }
  }, {
    "id" : "970a8aef-de9f-4699-b36b-9f9ea90e1178",
    "name" : "Get List of Jobs - 401",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "970a8aef-de9f-4699-b36b-9f9ea90e1178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs"
        }
      }
    }
  }, {
    "id" : "eab2e795-58f9-4a7c-b81b-d95a8c0bbded",
    "name" : "Get List of Jobs (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"parameter\" : {\n    \"limit\" : [ \"The max value for limit is 1000\" ]\n  },\n  \"status\" : 400,\n  \"title\" : \"Your request parameters didn't validate\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/invalid-parameters\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "eab2e795-58f9-4a7c-b81b-d95a8c0bbded",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "parameters" : {
                  "description" : "Invalid properties object where each property is the key, mapped to a list of reasons why the property is invalid",
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "851e2800-90ae-4917-9d71-bb04188bcd1c",
    "name" : "Get List of Jobs (application/json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "851e2800-90ae-4917-9d71-bb04188bcd1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Job"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "6ee28cec-6120-47a8-b270-dc9742427328",
    "name" : "Get Account - 401",
    "request" : {
      "urlPath" : "/account",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6ee28cec-6120-47a8-b270-dc9742427328",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAccount"
        }
      }
    }
  }, {
    "id" : "9543bcaf-a330-4bb5-b621-e6e164a668a3",
    "name" : "Get Account (application/json)",
    "request" : {
      "urlPath" : "/account",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balance_seconds\" : 150,\n  \"email\" : \"jay@rev.ai\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9543bcaf-a330-4bb5-b621-e6e164a668a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:06.864236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAccount",
          "schema" : {
            "description" : "Rev.ai Account Model",
            "properties" : {
              "balance_seconds" : {
                "description" : "Amount of Rev.ai API credits remaining in seconds",
                "example" : 150,
                "type" : "integer"
              },
              "email" : {
                "description" : "Email of developer account",
                "example" : "jay@rev.ai",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}