{
  "mappings" : [ {
    "id" : "f7d50b29-5291-4938-8ab1-999f26a6a606",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/xt09/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in progress or failed\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "f7d50b29-5291-4938-8ab1-999f26a6a606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.419642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "8a3efd4c-b9e3-4102-9b8b-7b7914991d5e",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/px37/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 406,
      "body" : "{\n  \"allowed_values\" : [ \"text/plain\", \"application/vnd.rev.transcript.v1.0+json\" ],\n  \"current_value\" : \"*/*\",\n  \"detail\" : \"Unsupported value */*\",\n  \"status\" : 406,\n  \"title\" : \"Output format is not supported\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/unsupported-output-format\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "8a3efd4c-b9e3-4102-9b8b-7b7914991d5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.419489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "e26cb7e1-51a0-41e7-93ee-19d92bc3f707",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/1876/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "e26cb7e1-51a0-41e7-93ee-19d92bc3f707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.419333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "765022fd-0cd3-40d9-b76c-7eea673914ed",
    "name" : "Get Transcript By Id - 401",
    "request" : {
      "urlPath" : "/jobs/lk45/transcript",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "765022fd-0cd3-40d9-b76c-7eea673914ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.419229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "cf14a5cf-683c-4a68-a5bc-dde36f7a0c2f",
    "name" : "Get Transcript By Id (text/plain)",
    "request" : {
      "urlPath" : "/jobs/0410/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "cf14a5cf-683c-4a68-a5bc-dde36f7a0c2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.419142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Transcript in plain text format",
            "x-content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "8bd3a2e3-2e03-4629-8536-89ce7d4bc771",
    "name" : "Get Transcript By Id (application/vnd.rev.transcript.v1.0+json)",
    "request" : {
      "urlPath" : "/jobs/odc1/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.rev.transcript.v1.0+json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"monologues\" : [ {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  }, {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/vnd.rev.transcript.v1.0+json"
      }
    },
    "uuid" : "8bd3a2e3-2e03-4629-8536-89ce7d4bc771",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.419026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Rev.ai Transcript Model\n***\nNote: properties are not displayed in the returned object if they are null\n\nJobs with skip_diarization set to true will only show a single speaker for the entire duration of the transcript.\n",
            "properties" : {
              "monologues" : {
                "items" : {
                  "properties" : {
                    "elements" : {
                      "description" : "Array of transcript elements",
                      "items" : {
                        "properties" : {
                          "confidence" : {
                            "description" : "Confidence score of the provided value. If the element `type` is `punct` or `unknown`, confidence will be `null`",
                            "example" : 0.85,
                            "format" : "double",
                            "maximum" : 1,
                            "minimum" : 0,
                            "nullable" : true,
                            "type" : "number"
                          },
                          "ts" : {
                            "description" : "The timestamp of the beginning of the element relative to the beginning of the audio in seconds (centisecond precision)",
                            "example" : 0.75,
                            "format" : "double",
                            "nullable" : true,
                            "type" : "number"
                          },
                          "ts_end" : {
                            "description" : "The timestamp of the end of the element relative to the beginning of the audio in seconds (centisecond precision)",
                            "example" : 1.25,
                            "format" : "double",
                            "nullable" : true,
                            "type" : "number"
                          },
                          "type" : {
                            "description" : "Type of transcript element. If Rev.ai was unable to determine the spoken word, the `type` will be `unknown`.",
                            "enum" : [ "text", "punct", "unknown" ],
                            "example" : "text",
                            "type" : "string"
                          },
                          "value" : {
                            "description" : "Value of the transcript element.",
                            "example" : "Hello",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "speaker" : {
                      "description" : "Id of the speaker of the monologue",
                      "example" : 1,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d14de950-90bc-44b9-8142-600fcb33b3f0",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/658t/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in progress or failed\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "d14de950-90bc-44b9-8142-600fcb33b3f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.41853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2e24f7cd-dc59-4066-8a98-1f3d563377d0",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/8t5h/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 406,
      "body" : "{\n  \"allowed_values\" : [ \"application/x-subrip\", \"text/vtt\" ],\n  \"current_value\" : \"*/*\",\n  \"detail\" : \"Unsupported value */*\",\n  \"status\" : 406,\n  \"title\" : \"Output format is not supported\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/unsupported-output-format\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "2e24f7cd-dc59-4066-8a98-1f3d563377d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.418361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "13a0f3ef-2c23-41fd-9c5a-e27a55e2af2b",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/7wts/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 405,
      "body" : "{\n  \"detail\" : \"Job with speaker channels provided are not supported for retrieving captions\",\n  \"status\" : 405,\n  \"title\" : \"Job contains unsupported properties\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-properties\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "13a0f3ef-2c23-41fd-9c5a-e27a55e2af2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.418193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "ed9249b2-bf70-458e-ae96-71ef23dbe2ac",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/9f0q/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "ed9249b2-bf70-458e-ae96-71ef23dbe2ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.418047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "5416091d-cd8b-49f4-aafd-797ba8e2836a",
    "name" : "Get Captions - 401",
    "request" : {
      "urlPath" : "/jobs/10va/captions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5416091d-cd8b-49f4-aafd-797ba8e2836a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "40d22131-f804-4457-96b5-99bcfb741d12",
    "name" : "Get Captions (text/vtt)",
    "request" : {
      "urlPath" : "/jobs/72ge/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/vtt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/vtt"
      }
    },
    "uuid" : "40d22131-f804-4457-96b5-99bcfb741d12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Caption in Web Video Text Tracks format",
            "x-content" : {
              "text/vtt" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e582b6cf-ed31-440b-b116-5d2860b7476c",
    "name" : "Get Captions (application/x-subrip)",
    "request" : {
      "urlPath" : "/jobs/ep46/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/x-subrip"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/x-subrip"
      }
    },
    "uuid" : "e582b6cf-ed31-440b-b116-5d2860b7476c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Caption in SubRip Text format",
            "x-content" : {
              "application/x-subrip" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0f0a1bb7-e09c-4d50-959a-0a6c8d7ca48b",
    "name" : "Get Job By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/tzjd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "0f0a1bb7-e09c-4d50-959a-0a6c8d7ca48b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "35507c14-4c46-472f-8530-e1a0bdec3280",
    "name" : "Get Job By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/7ibs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"status\" : 401,\n  \"title\" : \"Authorization has been denied for this request\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "35507c14-4c46-472f-8530-e1a0bdec3280",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "8c4ce0eb-da3c-4463-9a78-5d4a85849700",
    "name" : "Get Job By Id (application/json)",
    "request" : {
      "urlPath" : "/jobs/a85n",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c4ce0eb-da3c-4463-9a78-5d4a85849700",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "allOf" : [ {
              "description" : "Rev.ai Transcription Job\n***\nNote: properties are not displayed in the returned object if they are null\n",
              "properties" : {
                "callback_url" : {
                  "description" : "Callback url provided by the user."
                },
                "completed_on" : {
                  "description" : "The date and time the job was completed, whether successfully or failing, in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:28:22.29Z",
                  "format" : "dateTime",
                  "nullable" : true,
                  "type" : "string"
                },
                "created_on" : {
                  "description" : "The date and time the job was created in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:23:22.29Z",
                  "format" : "dateTime",
                  "type" : "string"
                },
                "custom_vocabulary_id" : {
                  "description" : "User-supplied custom vocabulary ID to be used with job for transcription."
                },
                "delete_after_seconds" : {
                  "description" : "Amount of time after job completion when job is auto-deleted. Present only when preference set in job request."
                },
                "duration_seconds" : {
                  "description" : "Duration of the file in seconds. Null if the file could not be retrieved or there was not a valid media file",
                  "example" : 324.36,
                  "format" : "double",
                  "nullable" : true,
                  "type" : "number"
                },
                "failure" : {
                  "description" : "Simple reason of why the transcription job failed. Check `failure_detail` for specific details and solutions",
                  "enum" : [ "internal_processing", "download_failure", "duration_exceeded", "duration_too_short", "invalid_media", "empty_media", "transcription", "insufficient_balance", "invoicing_limit_exceeded" ],
                  "example" : "download_failure",
                  "nullable" : true,
                  "type" : "string"
                },
                "failure_detail" : {
                  "description" : "Human-readable reason why the job failed",
                  "example" : "Failed to download media file. Please check your url and file type",
                  "nullable" : true,
                  "type" : "string"
                },
                "filter_profanity" : {
                  "description" : "User-supplied preference on whether to remove explicit words."
                },
                "id" : {
                  "description" : "Id of the job",
                  "example" : "Umx5c6F7pH7r",
                  "type" : "string"
                },
                "language" : {
                  "description" : "User-supplied language to transcribe the audio into."
                },
                "media_url" : {
                  "description" : "Media url provided by the job submission. Null if the job was provided using a local file."
                },
                "metadata" : {
                  "description" : "Optional metadata that was provided during job submission"
                },
                "name" : {
                  "description" : "Name of the file provided. Present when the file name is available",
                  "example" : "sample_audio.mp3",
                  "nullable" : true,
                  "type" : "string"
                },
                "remove_disfluencies" : {
                  "description" : "User-supplied preference on whether to remove disfluencies."
                },
                "skip_diarization" : {
                  "description" : "User-supplied preference on whether to skip diarization."
                },
                "skip_punctuation" : {
                  "description" : "User-supplied preference on whether to skip punctuation."
                },
                "speaker_channels_count" : {
                  "description" : "User-supplied number of speaker channels in the audio."
                },
                "status" : {
                  "description" : "Current status of the job",
                  "enum" : [ "in_progress", "transcribed", "failed" ],
                  "example" : "transcribed",
                  "type" : "string"
                },
                "type" : {
                  "description" : "Type of speech recognition performed. Currently the only supported values are 'async' for asynchronous jobs and `stream` for streaming jobs",
                  "enum" : [ "async" ],
                  "example" : "async",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "$ref" : "#/components/schemas/DescriptionlessJobOptions"
            } ],
            "example" : {
              "created_on" : "2018-05-05T23:23:22.29Z",
              "delete_after_seconds" : 50,
              "id" : "Umx5c6F7pH7r",
              "status" : "in_progress",
              "type" : "async"
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "72e190c3-2150-420b-957d-34126ae66d87",
    "name" : "Delete Job by Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/h2iv",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\", \"failed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in invalid state to be deleted\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "72e190c3-2150-420b-957d-34126ae66d87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.417136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1159567d-a618-48ec-b093-fb70c13ef6b8",
    "name" : "Delete Job by Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/51j3",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "1159567d-a618-48ec-b093-fb70c13ef6b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "26e94c9e-b280-49a2-9eae-a32abb87a916",
    "name" : "Delete Job by Id - 401",
    "request" : {
      "urlPath" : "/jobs/gl50",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "26e94c9e-b280-49a2-9eae-a32abb87a916",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "9884338d-fb6e-4abc-8111-f766e22cea2f",
    "name" : "Delete Job by Id - 204",
    "request" : {
      "urlPath" : "/jobs/30th",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9884338d-fb6e-4abc-8111-f766e22cea2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "978bb838-5a86-4915-aeb7-f38006a6ebe5",
    "name" : "Submit Transcription Job (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 413,
      "body" : "{\n  \"detail\" : \"Submitted payload exceeds maximum allowed file size\",\n  \"status\" : 413,\n  \"title\" : \"Payload Too Large\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "978bb838-5a86-4915-aeb7-f38006a6ebe5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Human-readable explanation specific to this occurrence of the problem",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "44424c84-e06d-4468-a243-547f2b282147",
    "name" : "Submit Transcription Job - 401",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "44424c84-e06d-4468-a243-547f2b282147",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "da7a3298-11c1-4d3f-85fe-4b39c5eaf4ae",
    "name" : "Submit Transcription Job (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"parameter\" : {\n    \"media_url\" : [ \"The media_url field is required\" ]\n  },\n  \"status\" : 400,\n  \"title\" : \"Your request parameters didn't validate\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/invalid-parameters\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "da7a3298-11c1-4d3f-85fe-4b39c5eaf4ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "parameters" : {
                  "description" : "Invalid properties object where each property is the key, mapped to a list of reasons why the property is invalid",
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "5ec747ee-a2a7-4ab5-842c-67ca43ec913b",
    "name" : "Submit Transcription Job (application/json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ec747ee-a2a7-4ab5-842c-67ca43ec913b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.41646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "allOf" : [ {
              "description" : "Rev.ai Transcription Job\n***\nNote: properties are not displayed in the returned object if they are null\n",
              "properties" : {
                "callback_url" : {
                  "description" : "Callback url provided by the user."
                },
                "completed_on" : {
                  "description" : "The date and time the job was completed, whether successfully or failing, in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:28:22.29Z",
                  "format" : "dateTime",
                  "nullable" : true,
                  "type" : "string"
                },
                "created_on" : {
                  "description" : "The date and time the job was created in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:23:22.29Z",
                  "format" : "dateTime",
                  "type" : "string"
                },
                "custom_vocabulary_id" : {
                  "description" : "User-supplied custom vocabulary ID to be used with job for transcription."
                },
                "delete_after_seconds" : {
                  "description" : "Amount of time after job completion when job is auto-deleted. Present only when preference set in job request."
                },
                "duration_seconds" : {
                  "description" : "Duration of the file in seconds. Null if the file could not be retrieved or there was not a valid media file",
                  "example" : 324.36,
                  "format" : "double",
                  "nullable" : true,
                  "type" : "number"
                },
                "failure" : {
                  "description" : "Simple reason of why the transcription job failed. Check `failure_detail` for specific details and solutions",
                  "enum" : [ "internal_processing", "download_failure", "duration_exceeded", "duration_too_short", "invalid_media", "empty_media", "transcription", "insufficient_balance", "invoicing_limit_exceeded" ],
                  "example" : "download_failure",
                  "nullable" : true,
                  "type" : "string"
                },
                "failure_detail" : {
                  "description" : "Human-readable reason why the job failed",
                  "example" : "Failed to download media file. Please check your url and file type",
                  "nullable" : true,
                  "type" : "string"
                },
                "filter_profanity" : {
                  "description" : "User-supplied preference on whether to remove explicit words."
                },
                "id" : {
                  "description" : "Id of the job",
                  "example" : "Umx5c6F7pH7r",
                  "type" : "string"
                },
                "language" : {
                  "description" : "User-supplied language to transcribe the audio into."
                },
                "media_url" : {
                  "description" : "Media url provided by the job submission. Null if the job was provided using a local file."
                },
                "metadata" : {
                  "description" : "Optional metadata that was provided during job submission"
                },
                "name" : {
                  "description" : "Name of the file provided. Present when the file name is available",
                  "example" : "sample_audio.mp3",
                  "nullable" : true,
                  "type" : "string"
                },
                "remove_disfluencies" : {
                  "description" : "User-supplied preference on whether to remove disfluencies."
                },
                "skip_diarization" : {
                  "description" : "User-supplied preference on whether to skip diarization."
                },
                "skip_punctuation" : {
                  "description" : "User-supplied preference on whether to skip punctuation."
                },
                "speaker_channels_count" : {
                  "description" : "User-supplied number of speaker channels in the audio."
                },
                "status" : {
                  "description" : "Current status of the job",
                  "enum" : [ "in_progress", "transcribed", "failed" ],
                  "example" : "transcribed",
                  "type" : "string"
                },
                "type" : {
                  "description" : "Type of speech recognition performed. Currently the only supported values are 'async' for asynchronous jobs and `stream` for streaming jobs",
                  "enum" : [ "async" ],
                  "example" : "async",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "$ref" : "#/components/schemas/DescriptionlessJobOptions"
            } ],
            "example" : {
              "created_on" : "2018-05-05T23:23:22.29Z",
              "delete_after_seconds" : 50,
              "id" : "Umx5c6F7pH7r",
              "status" : "in_progress",
              "type" : "async"
            }
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "1af65155-825c-4a9c-a1c6-f3d48931a874",
    "name" : "Get List of Jobs - 401",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1af65155-825c-4a9c-a1c6-f3d48931a874",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "98fd318d-d5fe-4985-b192-d509f11050b3",
    "name" : "Get List of Jobs (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"parameter\" : {\n    \"limit\" : [ \"The max value for limit is 1000\" ]\n  },\n  \"status\" : 400,\n  \"title\" : \"Your request parameters didn't validate\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/invalid-parameters\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "98fd318d-d5fe-4985-b192-d509f11050b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "parameters" : {
                  "description" : "Invalid properties object where each property is the key, mapped to a list of reasons why the property is invalid",
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "4b37bc81-351d-4d51-b276-4dd414607b3a",
    "name" : "Get List of Jobs (application/json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b37bc81-351d-4d51-b276-4dd414607b3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Job"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5324c0db-91af-43d6-8290-f8bba64dadee",
    "name" : "Get Account - 401",
    "request" : {
      "urlPath" : "/account",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5324c0db-91af-43d6-8290-f8bba64dadee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAccount"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "cc4aa7fd-4317-478e-a730-df3f555025a7",
    "name" : "Get Account (application/json)",
    "request" : {
      "urlPath" : "/account",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balance_seconds\" : 150,\n  \"email\" : \"jay@rev.ai\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc4aa7fd-4317-478e-a730-df3f555025a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.416049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAccount",
          "schema" : {
            "description" : "Rev.ai Account Model",
            "properties" : {
              "balance_seconds" : {
                "description" : "Amount of Rev.ai API credits remaining in seconds",
                "example" : 150,
                "type" : "integer"
              },
              "email" : {
                "description" : "Email of developer account",
                "example" : "jay@rev.ai",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  } ]
}