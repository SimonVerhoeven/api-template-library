{
  "mappings" : [ {
    "id" : "2c7dcf49-a00c-4d5a-ab12-5662770a45c9",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/si3h/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in progress or failed\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "2c7dcf49-a00c-4d5a-ab12-5662770a45c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.263107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d20b24c5-cfee-4f2c-bf1b-702c06b53cfa",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/f1kx/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 406,
      "body" : "{\n  \"allowed_values\" : [ \"text/plain\", \"application/vnd.rev.transcript.v1.0+json\" ],\n  \"current_value\" : \"*/*\",\n  \"detail\" : \"Unsupported value */*\",\n  \"status\" : 406,\n  \"title\" : \"Output format is not supported\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/unsupported-output-format\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "d20b24c5-cfee-4f2c-bf1b-702c06b53cfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.262953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "65f482b1-1eb1-4ab6-91ef-9eb3a9be743a",
    "name" : "Get Transcript By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/r6ac/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "65f482b1-1eb1-4ab6-91ef-9eb3a9be743a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.262765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f713a96f-ac13-4a99-8b3a-7f0534e99e5f",
    "name" : "Get Transcript By Id - 401",
    "request" : {
      "urlPath" : "/jobs/3y60/transcript",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f713a96f-ac13-4a99-8b3a-7f0534e99e5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.262659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById"
        }
      }
    }
  }, {
    "id" : "1c91ca1f-0d8b-4e6c-b23b-58a8188a28bf",
    "name" : "Get Transcript By Id (text/plain)",
    "request" : {
      "urlPath" : "/jobs/969w/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "1c91ca1f-0d8b-4e6c-b23b-58a8188a28bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.262568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Transcript in plain text format",
            "x-content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "af93a183-978b-4cc4-a7d2-384e9717614e",
    "name" : "Get Transcript By Id (application/vnd.rev.transcript.v1.0+json)",
    "request" : {
      "urlPath" : "/jobs/lanq/transcript",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.rev.transcript.v1.0+json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"monologues\" : [ {\n    \"elements\" : [ {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    }, {\n      \"confidence\" : 0.85,\n      \"ts_end\" : 1.25,\n      \"type\" : \"text\",\n      \"value\" : \"Hello\",\n      \"ts\" : 0.75\n    } ],\n    \"speaker\" : 1\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/vnd.rev.transcript.v1.0+json"
      }
    },
    "uuid" : "af93a183-978b-4cc4-a7d2-384e9717614e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.262448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetTranscriptById",
          "schema" : {
            "description" : "Rev.ai Transcript Model\n***\nNote: properties are not displayed in the returned object if they are null\n\nJobs with skip_diarization set to true will only show a single speaker for the entire duration of the transcript.\n",
            "properties" : {
              "monologues" : {
                "items" : {
                  "properties" : {
                    "elements" : {
                      "description" : "Array of transcript elements",
                      "items" : {
                        "properties" : {
                          "confidence" : {
                            "description" : "Confidence score of the provided value. If the element `type` is `punct` or `unknown`, confidence will be `null`",
                            "example" : 0.85,
                            "format" : "double",
                            "maximum" : 1,
                            "minimum" : 0,
                            "nullable" : true,
                            "type" : "number"
                          },
                          "ts" : {
                            "description" : "The timestamp of the beginning of the element relative to the beginning of the audio in seconds (centisecond precision)",
                            "example" : 0.75,
                            "format" : "double",
                            "nullable" : true,
                            "type" : "number"
                          },
                          "ts_end" : {
                            "description" : "The timestamp of the end of the element relative to the beginning of the audio in seconds (centisecond precision)",
                            "example" : 1.25,
                            "format" : "double",
                            "nullable" : true,
                            "type" : "number"
                          },
                          "type" : {
                            "description" : "Type of transcript element. If Rev.ai was unable to determine the spoken word, the `type` will be `unknown`.",
                            "enum" : [ "text", "punct", "unknown" ],
                            "example" : "text",
                            "type" : "string"
                          },
                          "value" : {
                            "description" : "Value of the transcript element.",
                            "example" : "Hello",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "speaker" : {
                      "description" : "Id of the speaker of the monologue",
                      "example" : 1,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c266fb15-7229-4140-ad1f-71f3460b7310",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/252o/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in progress or failed\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "c266fb15-7229-4140-ad1f-71f3460b7310",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.262165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "09465ca0-231c-49c5-82b8-d606af837d11",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/9x80/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 406,
      "body" : "{\n  \"allowed_values\" : [ \"application/x-subrip\", \"text/vtt\" ],\n  \"current_value\" : \"*/*\",\n  \"detail\" : \"Unsupported value */*\",\n  \"status\" : 406,\n  \"title\" : \"Output format is not supported\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/unsupported-output-format\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "09465ca0-231c-49c5-82b8-d606af837d11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.261967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "c6fc6885-67de-41c1-b4a9-f2997874d513",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/7075/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 405,
      "body" : "{\n  \"detail\" : \"Job with speaker channels provided are not supported for retrieving captions\",\n  \"status\" : 405,\n  \"title\" : \"Job contains unsupported properties\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-properties\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "c6fc6885-67de-41c1-b4a9-f2997874d513",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.26177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "75cb9de4-f333-45c5-8cad-16fec529b3c4",
    "name" : "Get Captions (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/l8bk/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "75cb9de4-f333-45c5-8cad-16fec529b3c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.261606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a0774e1-fb10-4dd9-820b-cb742d54e573",
    "name" : "Get Captions - 401",
    "request" : {
      "urlPath" : "/jobs/tozm/captions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7a0774e1-fb10-4dd9-820b-cb742d54e573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.261502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions"
        }
      }
    }
  }, {
    "id" : "66cebf44-fbda-420c-b2c0-357226dae8e1",
    "name" : "Get Captions (text/vtt)",
    "request" : {
      "urlPath" : "/jobs/zz3v/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/vtt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/vtt"
      }
    },
    "uuid" : "66cebf44-fbda-420c-b2c0-357226dae8e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.26142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Caption in Web Video Text Tracks format",
            "x-content" : {
              "text/vtt" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3f44455e-adf4-48a9-8cf9-ededeb2d32d5",
    "name" : "Get Captions (application/x-subrip)",
    "request" : {
      "urlPath" : "/jobs/lyn0/captions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/x-subrip"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/x-subrip"
      }
    },
    "uuid" : "3f44455e-adf4-48a9-8cf9-ededeb2d32d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.261312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCaptions",
          "schema" : {
            "description" : "Caption in SubRip Text format",
            "x-content" : {
              "application/x-subrip" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2adbd33e-7db3-4831-be7f-138460814f43",
    "name" : "Get Job By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/e1au",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "2adbd33e-7db3-4831-be7f-138460814f43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.261186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71a15b6a-d4a1-43d5-a94e-dae8d007e864",
    "name" : "Get Job By Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/9935",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"status\" : 401,\n  \"title\" : \"Authorization has been denied for this request\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "71a15b6a-d4a1-43d5-a94e-dae8d007e864",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.26107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "71463cbd-a454-4f0f-b406-2eaa9f79aa67",
    "name" : "Get Job By Id (application/json)",
    "request" : {
      "urlPath" : "/jobs/xz61",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71463cbd-a454-4f0f-b406-2eaa9f79aa67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetJobById",
          "schema" : {
            "allOf" : [ {
              "description" : "Rev.ai Transcription Job\n***\nNote: properties are not displayed in the returned object if they are null\n",
              "properties" : {
                "callback_url" : {
                  "description" : "Callback url provided by the user."
                },
                "completed_on" : {
                  "description" : "The date and time the job was completed, whether successfully or failing, in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:28:22.29Z",
                  "format" : "dateTime",
                  "nullable" : true,
                  "type" : "string"
                },
                "created_on" : {
                  "description" : "The date and time the job was created in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:23:22.29Z",
                  "format" : "dateTime",
                  "type" : "string"
                },
                "custom_vocabulary_id" : {
                  "description" : "User-supplied custom vocabulary ID to be used with job for transcription."
                },
                "delete_after_seconds" : {
                  "description" : "Amount of time after job completion when job is auto-deleted. Present only when preference set in job request."
                },
                "duration_seconds" : {
                  "description" : "Duration of the file in seconds. Null if the file could not be retrieved or there was not a valid media file",
                  "example" : 324.36,
                  "format" : "double",
                  "nullable" : true,
                  "type" : "number"
                },
                "failure" : {
                  "description" : "Simple reason of why the transcription job failed. Check `failure_detail` for specific details and solutions",
                  "enum" : [ "internal_processing", "download_failure", "duration_exceeded", "duration_too_short", "invalid_media", "empty_media", "transcription", "insufficient_balance", "invoicing_limit_exceeded" ],
                  "example" : "download_failure",
                  "nullable" : true,
                  "type" : "string"
                },
                "failure_detail" : {
                  "description" : "Human-readable reason why the job failed",
                  "example" : "Failed to download media file. Please check your url and file type",
                  "nullable" : true,
                  "type" : "string"
                },
                "filter_profanity" : {
                  "description" : "User-supplied preference on whether to remove explicit words."
                },
                "id" : {
                  "description" : "Id of the job",
                  "example" : "Umx5c6F7pH7r",
                  "type" : "string"
                },
                "language" : {
                  "description" : "User-supplied language to transcribe the audio into."
                },
                "media_url" : {
                  "description" : "Media url provided by the job submission. Null if the job was provided using a local file."
                },
                "metadata" : {
                  "description" : "Optional metadata that was provided during job submission"
                },
                "name" : {
                  "description" : "Name of the file provided. Present when the file name is available",
                  "example" : "sample_audio.mp3",
                  "nullable" : true,
                  "type" : "string"
                },
                "remove_disfluencies" : {
                  "description" : "User-supplied preference on whether to remove disfluencies."
                },
                "skip_diarization" : {
                  "description" : "User-supplied preference on whether to skip diarization."
                },
                "skip_punctuation" : {
                  "description" : "User-supplied preference on whether to skip punctuation."
                },
                "speaker_channels_count" : {
                  "description" : "User-supplied number of speaker channels in the audio."
                },
                "status" : {
                  "description" : "Current status of the job",
                  "enum" : [ "in_progress", "transcribed", "failed" ],
                  "example" : "transcribed",
                  "type" : "string"
                },
                "type" : {
                  "description" : "Type of speech recognition performed. Currently the only supported values are 'async' for asynchronous jobs and `stream` for streaming jobs",
                  "enum" : [ "async" ],
                  "example" : "async",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "$ref" : "#/components/schemas/DescriptionlessJobOptions"
            } ],
            "example" : {
              "created_on" : "2018-05-05T23:23:22.29Z",
              "delete_after_seconds" : 50,
              "id" : "Umx5c6F7pH7r",
              "status" : "in_progress",
              "type" : "async"
            }
          }
        }
      }
    }
  }, {
    "id" : "83d98497-f30d-45d3-8893-547fe3896f0c",
    "name" : "Delete Job by Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/dcms",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"allowed_values\" : [ \"transcribed\", \"failed\" ],\n  \"current_value\" : \"in_progress\",\n  \"detail\" : \"Job is in invalid state to be deleted\",\n  \"status\" : 409,\n  \"title\" : \"Job is in invalid state\",\n  \"type\" : \"https://rev.ai/api/v1/errors/invalid-job-state\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "83d98497-f30d-45d3-8893-547fe3896f0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "allowed_values" : {
                  "description" : "Allowed values for this request",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "current_value" : {
                  "description" : "Value passed in given request",
                  "type" : "string"
                },
                "detail" : {
                  "description" : "Human-readable explanation specific to this occurrence of the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "318ef38e-5bb1-4a74-8739-f8666ed8e793",
    "name" : "Delete Job by Id (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs/t9f2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"status\" : 404,\n  \"title\" : \"could not find job\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/job-not-found\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "318ef38e-5bb1-4a74-8739-f8666ed8e793",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById",
          "schema" : {
            "description" : "Problem details object returned on errors",
            "properties" : {
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              },
              "type" : {
                "description" : "URI that identifies the problem",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4c92f41-b27d-495e-ac3c-93da71f70ce1",
    "name" : "Delete Job by Id - 401",
    "request" : {
      "urlPath" : "/jobs/2bn7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b4c92f41-b27d-495e-ac3c-93da71f70ce1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById"
        }
      }
    }
  }, {
    "id" : "519864bc-1e4d-4589-b870-e8f3502bf404",
    "name" : "Delete Job by Id - 204",
    "request" : {
      "urlPath" : "/jobs/qpo9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "519864bc-1e4d-4589-b870-e8f3502bf404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteJobById"
        }
      }
    }
  }, {
    "id" : "66e95edb-ca22-403b-86cd-d3b350bce4a0",
    "name" : "Submit Transcription Job (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 413,
      "body" : "{\n  \"detail\" : \"Submitted payload exceeds maximum allowed file size\",\n  \"status\" : 413,\n  \"title\" : \"Payload Too Large\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "66e95edb-ca22-403b-86cd-d3b350bce4a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Human-readable explanation specific to this occurrence of the problem",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP status code of the error",
                "type" : "integer"
              },
              "title" : {
                "description" : "Short, human-readable summary of the problem type",
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "64c52fd4-607d-4c49-90c0-a2a7857ccfc3",
    "name" : "Submit Transcription Job - 401",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "64c52fd4-607d-4c49-90c0-a2a7857ccfc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob"
        }
      }
    }
  }, {
    "id" : "b0e9ba94-c5e1-4d04-8d82-240c2128aea2",
    "name" : "Submit Transcription Job (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"parameter\" : {\n    \"media_url\" : [ \"The media_url field is required\" ]\n  },\n  \"status\" : 400,\n  \"title\" : \"Your request parameters didn't validate\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/invalid-parameters\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "b0e9ba94-c5e1-4d04-8d82-240c2128aea2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.260064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "parameters" : {
                  "description" : "Invalid properties object where each property is the key, mapped to a list of reasons why the property is invalid",
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "c84bcdd4-122e-4f49-9e7b-234572acfa3f",
    "name" : "Submit Transcription Job (application/json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c84bcdd4-122e-4f49-9e7b-234572acfa3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.259957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SubmitTranscriptionJob",
          "schema" : {
            "allOf" : [ {
              "description" : "Rev.ai Transcription Job\n***\nNote: properties are not displayed in the returned object if they are null\n",
              "properties" : {
                "callback_url" : {
                  "description" : "Callback url provided by the user."
                },
                "completed_on" : {
                  "description" : "The date and time the job was completed, whether successfully or failing, in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:28:22.29Z",
                  "format" : "dateTime",
                  "nullable" : true,
                  "type" : "string"
                },
                "created_on" : {
                  "description" : "The date and time the job was created in ISO-8601 UTC form",
                  "example" : "2018-05-05T23:23:22.29Z",
                  "format" : "dateTime",
                  "type" : "string"
                },
                "custom_vocabulary_id" : {
                  "description" : "User-supplied custom vocabulary ID to be used with job for transcription."
                },
                "delete_after_seconds" : {
                  "description" : "Amount of time after job completion when job is auto-deleted. Present only when preference set in job request."
                },
                "duration_seconds" : {
                  "description" : "Duration of the file in seconds. Null if the file could not be retrieved or there was not a valid media file",
                  "example" : 324.36,
                  "format" : "double",
                  "nullable" : true,
                  "type" : "number"
                },
                "failure" : {
                  "description" : "Simple reason of why the transcription job failed. Check `failure_detail` for specific details and solutions",
                  "enum" : [ "internal_processing", "download_failure", "duration_exceeded", "duration_too_short", "invalid_media", "empty_media", "transcription", "insufficient_balance", "invoicing_limit_exceeded" ],
                  "example" : "download_failure",
                  "nullable" : true,
                  "type" : "string"
                },
                "failure_detail" : {
                  "description" : "Human-readable reason why the job failed",
                  "example" : "Failed to download media file. Please check your url and file type",
                  "nullable" : true,
                  "type" : "string"
                },
                "filter_profanity" : {
                  "description" : "User-supplied preference on whether to remove explicit words."
                },
                "id" : {
                  "description" : "Id of the job",
                  "example" : "Umx5c6F7pH7r",
                  "type" : "string"
                },
                "language" : {
                  "description" : "User-supplied language to transcribe the audio into."
                },
                "media_url" : {
                  "description" : "Media url provided by the job submission. Null if the job was provided using a local file."
                },
                "metadata" : {
                  "description" : "Optional metadata that was provided during job submission"
                },
                "name" : {
                  "description" : "Name of the file provided. Present when the file name is available",
                  "example" : "sample_audio.mp3",
                  "nullable" : true,
                  "type" : "string"
                },
                "remove_disfluencies" : {
                  "description" : "User-supplied preference on whether to remove disfluencies."
                },
                "skip_diarization" : {
                  "description" : "User-supplied preference on whether to skip diarization."
                },
                "skip_punctuation" : {
                  "description" : "User-supplied preference on whether to skip punctuation."
                },
                "speaker_channels_count" : {
                  "description" : "User-supplied number of speaker channels in the audio."
                },
                "status" : {
                  "description" : "Current status of the job",
                  "enum" : [ "in_progress", "transcribed", "failed" ],
                  "example" : "transcribed",
                  "type" : "string"
                },
                "type" : {
                  "description" : "Type of speech recognition performed. Currently the only supported values are 'async' for asynchronous jobs and `stream` for streaming jobs",
                  "enum" : [ "async" ],
                  "example" : "async",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "$ref" : "#/components/schemas/DescriptionlessJobOptions"
            } ],
            "example" : {
              "created_on" : "2018-05-05T23:23:22.29Z",
              "delete_after_seconds" : 50,
              "id" : "Umx5c6F7pH7r",
              "status" : "in_progress",
              "type" : "async"
            }
          }
        }
      }
    }
  }, {
    "id" : "a4086cc5-ae52-427f-b1a1-3be1034bf13e",
    "name" : "Get List of Jobs - 401",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a4086cc5-ae52-427f-b1a1-3be1034bf13e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.259668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs"
        }
      }
    }
  }, {
    "id" : "6ef1f0db-2af1-4cc0-b7d9-f65c2d225165",
    "name" : "Get List of Jobs (application/problem+json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"parameter\" : {\n    \"limit\" : [ \"The max value for limit is 1000\" ]\n  },\n  \"status\" : 400,\n  \"title\" : \"Your request parameters didn't validate\",\n  \"type\" : \"https://www.rev.ai/api/v1/errors/invalid-parameters\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "6ef1f0db-2af1-4cc0-b7d9-f65c2d225165",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.259639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs",
          "schema" : {
            "allOf" : [ {
              "description" : "Problem details object returned on errors",
              "properties" : {
                "status" : {
                  "description" : "HTTP status code of the error",
                  "type" : "integer"
                },
                "title" : {
                  "description" : "Short, human-readable summary of the problem type",
                  "type" : "string"
                },
                "type" : {
                  "description" : "URI that identifies the problem",
                  "type" : "string"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "parameters" : {
                  "description" : "Invalid properties object where each property is the key, mapped to a list of reasons why the property is invalid",
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f9b90be5-3033-4fff-9afc-5379dd20a51f",
    "name" : "Get List of Jobs (application/json)",
    "request" : {
      "urlPath" : "/jobs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n}, {\n  \"created_on\" : \"2018-05-05T23:23:22.29Z\",\n  \"delete_after_seconds\" : 50,\n  \"id\" : \"Umx5c6F7pH7r\",\n  \"status\" : \"in_progress\",\n  \"type\" : \"async\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9b90be5-3033-4fff-9afc-5379dd20a51f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.259531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetListOfJobs",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Job"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "76b526cf-3a04-4b4a-a03d-e3c9650f3790",
    "name" : "Get Account - 401",
    "request" : {
      "urlPath" : "/account",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "76b526cf-3a04-4b4a-a03d-e3c9650f3790",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.259469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAccount"
        }
      }
    }
  }, {
    "id" : "79febb90-10c0-4aaf-acd4-8e1dab5bd86c",
    "name" : "Get Account (application/json)",
    "request" : {
      "urlPath" : "/account",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balance_seconds\" : 150,\n  \"email\" : \"jay@rev.ai\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79febb90-10c0-4aaf-acd4-8e1dab5bd86c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.259424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAccount",
          "schema" : {
            "description" : "Rev.ai Account Model",
            "properties" : {
              "balance_seconds" : {
                "description" : "Amount of Rev.ai API credits remaining in seconds",
                "example" : 150,
                "type" : "integer"
              },
              "email" : {
                "description" : "Email of developer account",
                "example" : "jay@rev.ai",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}