{
  "mappings" : [ {
    "id" : "c94f9653-e0f1-4c96-8187-d962d7edd8f8",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v2/toaprz575iuc7ifuw1v2hlncyso805h5n2acckxcb3a2zqjor7tptjp0qbr91o4o:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"zaq1yaeo2zer2mmsdx6g816g2i2gzyess8zv5vi73v1wxrwla1hoa9pbv13j7ia6vzyam7o0gx\", \"9jedxl1g93s\", \"a5we6ke\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c94f9653-e0f1-4c96-8187-d962d7edd8f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.825136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.instances.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "af30a72a-b371-4682-97dc-2007add265d7",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v2/cnip6zc6v8j:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"kujj863515mhcgvskqt7zpm5jrttj2b293\",\n      \"description\" : \"Non corporis suscipit sed nihil. Nobis sit corporis vero ducimus. Assumenda modi sit reprehenderit voluptas eligendi quasi. Id id nam.\",\n      \"location\" : \"wwmi3zyevc28m7on230txf3k0dm0p6rwbreepdv5zpy2p3dv5l2t3b70p3zlpvr7nqr3ng4fdh1rd2u7q5h8vfhiovq6f1j6z4qaz1d6zaxur4ol5i\",\n      \"title\" : \"Sapiente vitae nostrum qui.\"\n    },\n    \"role\" : \"0boi9b11lg8whd5woixodlovejc79huf1c1e25k562giw32ov01cpp4xv04w8q0zglk4mai6js7w4tjxc18xic1\",\n    \"members\" : [ \"dn03nq0sgblj9anp1rw7a94bvjj3dq816vy47rgiuxj3a33tbxi3fm1wj11l0incejxibi3cd466om4fbge1n0wknmxr3yzxvmuarjyj1j4sppix1k64d\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"pp8nefeut3jwbdetd8fmscec2zp117yevs8dvj5yuyux9t7wjexbnlayyalivvjrrj2q0t8qhzbjwedz5r32bdht62hu4zrqwnhrhsbr3asmlmhgzvuqi06vy0ih5orebb7cy4fjz67a6oar0tkp79y4gjpu4snk8o39r\",\n      \"description\" : \"Dignissimos occaecati quas reprehenderit aut et tempore libero. Beatae harum ipsam quas harum. Debitis minus enim aut eum.\",\n      \"location\" : \"161i23uz7wbmp5v4pwedx70jeo5j4b4il6zryvt0hyy6n90iuf7ey1f2akvd4c20pkr5mkmwjo0n24s1xq7ai2khftizmk2zo51ciqqvpi62t0tz1t4p76427o\",\n      \"title\" : \"Natus vel officiis odit consequatur eveniet temporibus.\"\n    },\n    \"role\" : \"040813o3ok8a7g7vztcvzawqyy7qt5wx4c3i0gkv8yi5mzp9qz7nzch5ylep3gsgj2eowdj5p4i96bdi8ujhldwoeezfubc8se9b2rjmwtm6slpissdt3ki85bj99du65vct0hgq18fph4bfzyprniukciedgexuuj28wzkoj2dlr1jro1fnrms\",\n    \"members\" : [ \"70wzc2wvofqnufkzy2gaa2jvpwhz02so5qbqxsr75n1b2pxje6cbr6x6r23kybr8h9otn4yo9our3qwsq0vdui6oic2t387vmcbw5x18szfxg1dei1na0t5s2xhkudllp0sfizhhynb3zhn69kugfren2iuiyabzt0r1c1pi21h2wwuy0m5zt7uw7mf\", \"mzpvg56t1biigh6ndqgxwpb3tye93j371q8jv1uau1nmm12hybhy4dfx62cd9cqus66lh281os7gxr92l6\", \"8sh26izuyz9qhypl1ino4y8qraak6im6h6gba7wh20e5uyvii4wwtystw9pkhb42sli2hboo53zrgqxpgcscrfcy7c112ev5eblbbh2pcym49haxnqvgakl6n1xja6r\", \"zgvcyojm88zvv2nvyhhrmu2oba5ur9st12woga5snjub5ijyy54lwffvgpraxkrpktmh38lxbc0m17m3cwf2p3o45x60g0wgjknfju0fizdrrp6xt12f2s6vulldrgvh7xyrd79omlk60vcjhvxj5eo4ypizm67q0oi4swdqfcrkqm3\", \"xaz7lxlwyx4ui6bunxbpc5r33v5kt59egje24ggoowk20j70chxnc0j1swt64lm1l4pkacw51w5m2n5lq72vamhrvbfqmmegsfwq8p9cifa7c9klwdxsxc987o9ka3p1r6bclxe1n7p8fq1wwt9v96sut7qdswsv4gf0uq80v\", \"g608ay176gbnsg0jjzbu8orfqifb7hsxv334nrpdigho3sazf1fl7272qw1sn7tb5s5zq4fuyeohluvvtukdjf4u3hlz72iw6wy936f7qwn3tai5zwmv27kd7\", \"k2obu79h6fyfafr75b6lt479uoez4mvurswruhdghoxtg4dr9mggxxb0l2q9gya7\", \"pyiqjox1c8fwbcloa20rr6da7ni09we13pws50rn4bsi9sqval2x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xqa76tvodx6ow1vfdzknnhqkkf76raz33jka3628adhhb26vx\",\n      \"description\" : \"Aliquid soluta et veritatis. Ut et esse consequatur consequatur. Veniam odio eos voluptatem suscipit optio ipsa.\",\n      \"location\" : \"k999wg2azp9tvnacj8n3ykzaqg1kgitlnx71vlpwtzxypwnkroxxua1cvo3j\",\n      \"title\" : \"Deserunt a repellendus deserunt consequatur.\"\n    },\n    \"role\" : \"v1flcvg5rn78bwwlalew035rk9by6ehaj0958f64i8s570yki9u6xt22cmawjafb8\",\n    \"members\" : [ \"hl6y9gborh7icgoznijzbm9k1sdfxpbb4eirvb7x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2a1dtsctxe1cr6rzoyyn5qm3lfd\",\n      \"description\" : \"Ducimus eos at dolorum dolorum ea. Nobis labore fugit. Quis maxime quibusdam odio iusto cumque illo architecto.\",\n      \"location\" : \"js4a6vy7dor5b4i6qn66voksn4wct0uj92f27l5qad45gd1mer1ng2jos7ndhagc81ppqzhf8bh8swmuppcwfadwwdj6v3ynb4udkm2uzyl4ohq8mhjky92ncb942d0yz39iti8rsn58s4w550\",\n      \"title\" : \"Perferendis corrupti dolores quasi eum quod.\"\n    },\n    \"role\" : \"q7s0p8q59t3he6oujcd0zet27watfghe2u7rcjfa3m7umgzv76dltln4ue4cmgt4b79gqvnwkqsjirqefc2rzrbep5ww70k9urawhwv73io0h01zaacl94439ye5dv9vrd6qzx7i50tr3j1um9bc03njq7m8ku5kihx\",\n    \"members\" : [ \"qtimhaj32hsu2i0o5bgj2ueuntmub72zr1ahh6pqkw4cc19p5t8n4n13y8152hz9mjr6ucnhxmuug9repoqs58e1avr3dwmfg043w5cvxw6hn498t3jit6stooxo4\", \"17g78pe4ttohubkqamb7ba91pkh5dzquc88a8pqgdigd\", \"cah3m75dj7ngaaebacw8470v64cfukzvwu6ulmkhx8xmoy42l8ptjmmqq1kfecmy8rqlalu0zyjlcbsaiu6jav7n8mqx4weg27ujgddkut6fbeofr61v93d28\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ce5adnu56ojvyekiwz07e5nv06skdnlpj0pf0h60sjmxpnchd8wyn9zrbxkc8e9p8sas3z56se9om858ah293dh\",\n      \"description\" : \"Aut consequatur itaque. Vel sint velit praesentium rerum. Dicta et dolores. Molestiae officia sit excepturi et. Voluptate blanditiis aut accusamus id.\",\n      \"location\" : \"kdzyook575rqc8r0pbzykbhmrhqxpkd6js60zmcuyubuu7qit9tfplyp16jhjnhi8vg1y8\",\n      \"title\" : \"Quia sapiente rerum dolorem tempore pariatur ut.\"\n    },\n    \"role\" : \"ay4nlnwbzn7om6xt5zuchk2g4zugj\",\n    \"members\" : [ \"fbx1ywt0jtjuhdtwa42kr9hb1iarqcnueh00ymsf2yzdjupw86khu\", \"62lq80oouq2mqq1vcc314mh229r0expne4xlr93ttx214sptsgffw6jkzy53jyy7rsnw1xl29xv45ol4zcaw0a3yzfr5az6r4l8z1p2kzsa1uvlhznzj5ln2qo8uew3ue2274gebd8vwvg1k\", \"3g3m8fofeq3rrtpcejjrkh5d0mb73vrix1ikrxc3agvr4oscrgauffzxih1tjymuyvd50caneskc4opodnu6ecy6xaq18o3ki8geu3iau4dxv251o0wgl2wlvap7lm0xpax1m7j5adv2kulv1j3nv4q5m5i8zce\", \"r1qq66b11xenm8h4d3tfapfmtemju3ejec8ramwujh\", \"wu9bs5ql9lb38hyzhmgr9ncvan2cukkt52k0v69xl48o9aog17pdpqqqtt3k55u9g91os3oicf90a4iso8c414ml5lp69lps5m6yg2a8y56kyf1pvugmtc0zhtq5u9ckvdu7218ie9479hs0ur966fv4ejkqc51nfbhaqd926xpifw75ox\", \"ha9tlgqwhc74ilaokz\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"zxg0jdfytgo0qslsxukgcjpvkcmvite80feb6k7czspecvn03edhgxnely9o4bdd4yvzhago5ede72c62ur1bb53s1h0n78237zc51bcqnib9ornhxao61hotpn09s47cla9jjfmjr7jx89ql09983i4blj00\",\n      \"description\" : \"Aspernatur quasi omnis aut sed consequatur repudiandae sunt. Sit tempore optio dicta aut omnis sequi. Voluptatem quisquam qui quia dolores veniam facere incidunt. Sit veritatis earum alias repellat co\",\n      \"location\" : \"mnye2dlzxa17r94x2kqmc7yh6s88gfbuwqkmt8\",\n      \"title\" : \"Nam est iure est.\"\n    },\n    \"role\" : \"0qvgqi2uhr4dypkyu6roe9z5dwhg758hjlzw31tgkr9521cx1t30da26sqbamd1mwtdi1day995vgrstvkw8r4ql0k2ds84x971t83izw0k3o97akl0rxpjm\",\n    \"members\" : [ \"roy7o790vaocil7sjg7yhfujye2fevx5vp1x8v4z1yn2l\", \"df6v49yr9to34aja8jr2nfpv3mvokp2venq4ruayzpqwokqm1i4w7k51wisqczw7h2p3a7vj8xrcym3er6x2yqg8awfag36g38q0mc9o82g4tlnatbn08xunlc7molwzipio38s38exb6ogp8x56kbrw6mk83vlgch8qkj0la6ot\", \"dm338sbprm0yi332ctaxxbtxsq2jlwsvcinv6cpj170ylq9wu228gx4tp20escma5d56ely2akochwe1nwzoerweyxjb4hb7r3h5nxmxh94ytyzaj0ofs116on0n18qlaacczzx52c4t72c3yiistkasafjrqb3d37yc\", \"l1vvg5jenns4ig0lurg5aot2u4pmps5t2ams39sbfwruaql6sbi4rz4j9wev25j61p7efzzq6kjq585uu6gy\", \"0on675b0lzqt7hhrbxs2spf2o3a02ivbo14y0mdrrobuv9n5lfux3d1qwja3y89wlhuhh2zq2zypmmav5pba8ctwrc82ppqsmq65ocu3vytxi8mlkixlhpz5vh\", \"z3waoapcousxif2szrbdollfwea5wo9j4sck2riepto2gjn3ucx2l2lsnvpo5bd\", \"iqa24hrwq7uf2bnvb22atkcglax1zjk1dtiytfeo282xwnjgm2ujaq82wh4tjzkx5f22i60px2s4j1ix1c444bts4jhpuzp3gmug3lhov5ai83i48w4shduhpcqpxub00wfbdk0ggou9qj1l2d2e5ew5m3u5vsgqa5v3vgemrpf7lgn9\", \"xxmkv7hj1gerkis914rcu55uocxm1wr19mmvz1y1wyhh2yjq4u35o6a8k2t7thzysv3bvykdk96o6axvpia44wbsuiwdp8g4kn53jhv49xo8z12w8og6mufc6uvhlsdwr\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"6kkkj96vktagon4lqhxpggxss1h7nskysrpx2nctetys8cjf51ktb1ph5fxzlk8w9b3m27o2cl8oe1uaxcto12vk42il02zp0ad37icsc88py9efos1nic99sy16rqo59kkngcux5j5zk5\",\n      \"description\" : \"Eaque natus expedita accusantium aut architecto in nisi. Atque nihil dolore qui beatae. Occaecati illo accusantium modi magnam natus ea perspiciatis. Est provident omnis architecto natus exercitatione\",\n      \"location\" : \"o9b4d28p5ep6w9mb19sof4do2g1911mbv2t5aiv1fa8t0rfutl7mj\",\n      \"title\" : \"Accusamus dolores ut qui quia ex inventore eveniet.\"\n    },\n    \"role\" : \"lfbs4rw4z1dz3j8dlg7shi\",\n    \"members\" : [ \"42fqko6cdl1\" ]\n  } ],\n  \"etag\" : \"modi\",\n  \"version\" : 1143955683\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af30a72a-b371-4682-97dc-2007add265d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.82503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.instances.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b6f769f9-fdad-46e6-9f42-5036d858c13b",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v2/bi44fjxhf7u9qvtcedijbk56aws4pr5ee7jir0y2xh6ua7ov17f6spth0t75u6pqfajza2oqtq4g:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"6x3gca82oymr9gkpfpvaq6pw8vpzrh1bf2qi2ekm9um0zliwuar51x7xe3cqk6jl929r75l2l1ym5rmhkptua995w6alslq6o0mhwf4jisrqn4o7t8sxvn2ca6auiaxycq\",\n      \"description\" : \"Hic voluptate animi voluptatem accusantium. Nihil occaecati distinctio. Iste blanditiis laboriosam nam vel earum quae. Eligendi recusandae earum consequatur accusantium voluptatum.\",\n      \"location\" : \"whkho91rs5i89zymy5s8adzslabkzff1jpp0bgm9magb6oyxsf7jcmq5jn2ppfu4lm49x57qhjctjpyg9hi6o42xx889alk7bq0rvtskj7\",\n      \"title\" : \"Voluptatem aliquid accusamus magnam quae deserunt repudiandae blanditiis.\"\n    },\n    \"role\" : \"lox62f3cw3ffsqeo35ofcegzthc6xp70h6kyb6eyspym9u2jtnjn7g9vwpvfxaqw59spx4ep64z8xq3p6k8daz1uq5lzxeowb1c2lxqpi1sq7hzwizfbwv7gxrvcibq4y18mnho6vr7oclsu985d28ou3us306j8rt0kirih7yz97pne7oh\",\n    \"members\" : [ \"7j7coiv6susmlxd8jc8ptfzs68aqomuct6mymxlqlgerj186yvqkdq06e40ql07uniwjujk7wnx8ohh5o4esltjw506vnr5o2lwandw2y8qgntf3l45cx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"v5u4j3yqqzf0gkfc1wxjec0d8u3us\",\n      \"description\" : \"Qui nemo veritatis. Provident dignissimos delectus. Blanditiis itaque est consectetur et asperiores. Repudiandae omnis aut enim dolores.\",\n      \"location\" : \"d0oz272hmy4d22mus3ynpaejxswi49wwv028cf07rzrkfomw5fxgvi5qk2jxw1flguyig4laxjnp6ippy7k4tu3adp0xndayr1xptru6iti4zy65knwnied0nwn4nj64xikhyttgv5hhai1iziu46iii37f7fxqqx8x9es2rnlkbgpnamcox12r3\",\n      \"title\" : \"Accusantium sit nihil aliquid illum repudiandae aliquid.\"\n    },\n    \"role\" : \"t8vsqx7wamizy5nu357smxeo03upoyy5f1p7tfeg1cgdr5f7zoann9c17dhgg6u1qrdqieki0nhvkrbr4v4vy7ihi0tmimemwyelqsbaehtdc2tp0whxgnz2321n2x3gjf1v1vognhq54xi0otq971x7h1xe7e5jxlxpldjx\",\n    \"members\" : [ \"83i6u4qqqw3nxtw9j41r41sdc4umst8hnhv2sq0lo7e64h93xp7rcibbi7z8ows2dd80hwawnzy4fzsjcx8npal8jajgrtzhfz1zuypgu3jh7t68hxcfvjys172cxhr4g7otv4l855qu78he7lmb0f3iaja9uhvfkkecczvcpp2dppy\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"25ykxw0c3483w64glxnjr3oqub0ck\",\n      \"description\" : \"Temporibus consequatur non nisi ipsa et tempora minima. Sint maiores est aspernatur officia. Omnis sunt dolor ducimus est in. Earum dolor dolore nesciunt alias enim totam. Nemo qui eos consequatur.\",\n      \"location\" : \"ovwb9jyfmy3ty9m35jhr460ir8kmxsmgxtan9jw2noq4dbuklxcyyg0tzpkce13buoqoi7iyp5h2as69kyuu4b0yg6xewci4klkfcuyhdbea9fpfyi1h8g0t0nft2774f6o649ocqs\",\n      \"title\" : \"Molestiae aut quae eum.\"\n    },\n    \"role\" : \"2emxpuyfm9wvs0lzrc6nngusqtxlvtyv6s5i0lhvvh4b799f73pcj8cd85qbn4lzjl\",\n    \"members\" : [ \"3xki2cjxyvworwc2lwsom7s5qur1hl7cekeiylgidhpk4dccvnplyy0ev6\", \"hksr3fvht35hbvo2xv72x3nu4j661xwhbk3yuueim9iykbywufdamx2ovpsskxg11uokr4eykxeah7pfeznbsf80xd3koa78bp89vnu67wya6eurb7i1qlwt\", \"qmqvumcvp14auxung8s8hc1qwy0r72yvhp6gdfu0ybgu0ip4o5f7xk94jdagtgvcctz7ibrgxkn0rneh31963av834ydny6vwqnr7byth6l9pxb0pp39954dybbml57l\", \"6cwrq2o6hboiu5icadaeuner7vpllqr8t09c90046i5p0bxdn8ylx2a7pum2ay4wk2wedule8hwixrkt1c97rg0ucrc30qk4j54cn0iy6pash353shvqab8s6ivbqkn54umrfy6nx8y3nxnydge58o3kisa7ep1ld7yyxj758o6ohiagv34qf3ngdj2aylahq7f\", \"c9cwig1sc0287euwb6qq97q7bztij9vm5xp920vl6wjaqxv7gglv7qqohxcnhbye2mm0f0vbdwy4r2ln9l6xzki8afzihg5eqs5pbwslwqykcpe8siyy5755diddc042w9nwfs6vwvr\", \"g63abpe62td9gem5qnvilgr878lorq37ljmoz2xvk24sadk95u4waxytxgo4ly\", \"xr1c\", \"44q\" ]\n  } ],\n  \"etag\" : \"exercitationem\",\n  \"version\" : 448433977\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6f769f9-fdad-46e6-9f42-5036d858c13b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.824009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.instances.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "066ef8ae-91fe-4f01-9156-a3540c449a75",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2/Dessie+Goodwin:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "066ef8ae-91fe-4f01-9156-a3540c449a75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.823461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "41ef9060-cf40-48ef-9020-135f38b5d384",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v2/Jermaine+Bradtke+II/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Elisa Gislason\",\n    \"error\" : {\n      \"code\" : 56035273,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ut et ut. Aliquam numquam autem nobis ut tenetur aut. Atque autem occaecati culpa eos sunt atque doloribus. Alias vitae ullam expedita molestiae.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Neva Langworth\",\n    \"error\" : {\n      \"code\" : 1675151673,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Nesciunt enim ullam autem expedita consequatur. Omnis qui quisquam quas placeat debitis. At unde doloremque rerum vero. Iusto tenetur laudantium voluptatibus tempora ab quis.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Dalton Lehner\",\n    \"error\" : {\n      \"code\" : 1828702417,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Quasi aliquam mollitia cupiditate necessitatibus. Sint sunt et voluptas non quasi natus et. Adipisci vitae ut reprehenderit molestiae recusandae.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"rv1edadyjsk0934mydxsyjslw2clre1k7mqlbi75p4knb2d6lxqtc773qjui7qdjwtsk6ubvrt9fqflw5ka4sxyp8onfihy6vk2xhrqeoqmqim09owvnzd1yknb85blmgnjrdsvafkhfc9gog\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41ef9060-cf40-48ef-9020-135f38b5d384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.823375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9c68721b-5582-4ae5-9b11-a9002c80f2b7",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2/Romelia+Pagac/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"l56l9k8akn6t2fzfbnw4u9eo0x4hzvxf5pn4c72xnckdiep1d5fpj9kzy7huu7raab5vsr8ox8sn6f4qix6ko9sjhfeun79ktdt0mcsq6duv8r2pj1\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Jaclyn Runolfsson\",\n    \"locationId\" : \"7eb2\",\n    \"name\" : \"Dr. Jarvis Marvin\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Delbert Kshlerin\",\n    \"locationId\" : \"2e0t\",\n    \"name\" : \"Irwin Lockman Jr.\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tory VonRueden Jr.\",\n    \"locationId\" : \"50nu\",\n    \"name\" : \"Mr. Erwin Gaylord\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Shawna McClure I\",\n    \"locationId\" : \"85s2\",\n    \"name\" : \"Ken Powlowski\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mario Schultz\",\n    \"locationId\" : \"01do\",\n    \"name\" : \"Many Murray\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c68721b-5582-4ae5-9b11-a9002c80f2b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.822901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "58c9b264-600f-4b96-937d-920bfccc4c7c",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2/Mr.+Clint+Doyle",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Elisha Halvorson\",\n  \"error\" : {\n    \"code\" : 676463011,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Recusandae et veritatis ullam. Laudantium quaerat aut perferendis. Sunt perspiciatis aut blanditiis unde aliquam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58c9b264-600f-4b96-937d-920bfccc4c7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.821835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "913544df-d3d4-4770-a628-f673e6b3995d",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v2/Cherie+Wyman",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "913544df-d3d4-4770-a628-f673e6b3995d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.821511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "notebooks.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  } ]
}