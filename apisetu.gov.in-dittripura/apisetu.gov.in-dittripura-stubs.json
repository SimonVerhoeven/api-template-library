{
  "mappings" : [ {
    "id" : "cd4b459d-5eb3-418d-b5d4-df715ab0d0f3",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd4b459d-5eb3-418d-b5d4-df715ab0d0f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.104261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4d11c447-eb1e-443d-85d3-e28e0b653b7a",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d11c447-eb1e-443d-85d3-e28e0b653b7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.104156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe5f8a0b-90b1-443b-8995-1d8201e682a2",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe5f8a0b-90b1-443b-8995-1d8201e682a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7ebe2722-c337-4e2f-a102-f7d0c40098b8",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ebe2722-c337-4e2f-a102-f7d0c40098b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.103906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3223a91e-0ac5-453d-86f1-307ff3e9a9bf",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3223a91e-0ac5-453d-86f1-307ff3e9a9bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.103797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21313f83-c087-4cf3-80ce-1d46d4a4195a",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21313f83-c087-4cf3-80ce-1d46d4a4195a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.103679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8811ba50-3de3-4bcc-a32a-c1b20d3b8562",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/json)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8811ba50-3de3-4bcc-a32a-c1b20d3b8562",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "affd91bd-fc41-4926-b60b-1f38f6980b8e",
    "name" : "License/ Verification of Weights, Measures and Instruments (application/pdf)",
    "request" : {
      "urlPath" : "/vrwmi/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "affd91bd-fc41-4926-b60b-1f38f6980b8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vrwmi"
        }
      }
    }
  }, {
    "id" : "adcf4e6d-c5b9-489b-9f4f-827bef8864ff",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adcf4e6d-c5b9-489b-9f4f-827bef8864ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "882f83d7-bf7f-441f-b466-cb35abe306cb",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "882f83d7-bf7f-441f-b466-cb35abe306cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.103271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "112a8cde-f1d0-4f96-a1c7-ea90d080ac81",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "112a8cde-f1d0-4f96-a1c7-ea90d080ac81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.103148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09b46ee7-bfdc-45bf-a02c-a75badbe598f",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b46ee7-bfdc-45bf-a02c-a75badbe598f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e8abaa63-1177-4142-a670-ea68b4b2b513",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8abaa63-1177-4142-a670-ea68b4b2b513",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3eed07de-bf55-4208-9dbe-e6ddab0f39f6",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3eed07de-bf55-4208-9dbe-e6ddab0f39f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b450fc69-6113-4249-a38b-5a55b5f41a28",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/json)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b450fc69-6113-4249-a38b-5a55b5f41a28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b5a7f9b-91e0-45f3-beae-b38f1d7ea1ae",
    "name" : "Standardized Agency Systems (SAS) Agent License (application/pdf)",
    "request" : {
      "urlPath" : "/sslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "5b5a7f9b-91e0-45f3-beae-b38f1d7ea1ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sslcs"
        }
      }
    }
  }, {
    "id" : "305ccf92-5664-4ab4-96a6-6fac14e2d625",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "305ccf92-5664-4ab4-96a6-6fac14e2d625",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d047c746-e220-4eb2-9680-064e3aabf087",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d047c746-e220-4eb2-9680-064e3aabf087",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "130d8ba0-e0a9-4e46-8c9a-25527149d5fe",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "130d8ba0-e0a9-4e46-8c9a-25527149d5fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bd723608-95bf-49b3-8d38-a0e34cb392ad",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd723608-95bf-49b3-8d38-a0e34cb392ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.102087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3aef2c0b-e635-49c9-937c-202791a7ec74",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aef2c0b-e635-49c9-937c-202791a7ec74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b22cb10-3678-49a1-8eaa-e8be2a9dc15d",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b22cb10-3678-49a1-8eaa-e8be2a9dc15d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26ebe662-141a-446a-b864-6531d90fa4a6",
    "name" : "Surviving Member Certificate (application/json)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26ebe662-141a-446a-b864-6531d90fa4a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.10168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b1a7ac6e-35ce-496f-9179-5900464087fa",
    "name" : "Surviving Member Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/smcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "b1a7ac6e-35ce-496f-9179-5900464087fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "smcer"
        }
      }
    }
  }, {
    "id" : "2ca13107-f9a7-4820-b542-37b1fac87ae1",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ca13107-f9a7-4820-b542-37b1fac87ae1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d2eb3542-0730-4771-a2a4-cadc7b995360",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2eb3542-0730-4771-a2a4-cadc7b995360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "619c5414-77d8-41b9-aadf-529d53fef84d",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "619c5414-77d8-41b9-aadf-529d53fef84d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3bee5b4d-98c2-4eb6-bc59-a88b211f036c",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bee5b4d-98c2-4eb6-bc59-a88b211f036c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.101025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3e84f487-9826-4e48-935e-65f0222c5712",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e84f487-9826-4e48-935e-65f0222c5712",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.100834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "367c2264-ffcc-4cfa-bfcc-5c654aca2eb5",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "367c2264-ffcc-4cfa-bfcc-5c654aca2eb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.100438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cbf71961-12a1-4b7a-bfc2-f3a6c5776f05",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbf71961-12a1-4b7a-bfc2-f3a6c5776f05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.099991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "581cee54-17c3-4569-a517-08499a2fb884",
    "name" : "SC/ST  Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "581cee54-17c3-4569-a517-08499a2fb884",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.099249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer"
        }
      }
    }
  }, {
    "id" : "74f67e33-41db-4fb5-92f3-d1e8262403ad",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74f67e33-41db-4fb5-92f3-d1e8262403ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.096454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "489eef1e-1849-4b63-9069-c7e17259b6b5",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "489eef1e-1849-4b63-9069-c7e17259b6b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.096315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3a60528-b715-48b9-b817-9ca3f7bbe8b1",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3a60528-b715-48b9-b817-9ca3f7bbe8b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.096165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59ed11dc-cfac-4369-ac97-f990d20963a2",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59ed11dc-cfac-4369-ac97-f990d20963a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f430f40-0f63-48fb-9292-aaba4fdfee84",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f430f40-0f63-48fb-9292-aaba4fdfee84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94c08099-6f43-421c-bf9e-e7bc4bfe52fc",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94c08099-6f43-421c-bf9e-e7bc4bfe52fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "531f5ef7-315f-418b-801b-b351ab425867",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "531f5ef7-315f-418b-801b-b351ab425867",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "31e5c084-f938-4525-8fd1-b4eb28820d26",
    "name" : "Residence Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "31e5c084-f938-4525-8fd1-b4eb28820d26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer"
        }
      }
    }
  }, {
    "id" : "7f4434f0-cd1d-4a6e-9ddf-b72f7b44a592",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f4434f0-cd1d-4a6e-9ddf-b72f7b44a592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "293c0d32-f01d-4b49-914f-07af61278146",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "293c0d32-f01d-4b49-914f-07af61278146",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.09527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4ea4424-4720-4a43-8b79-7eabebd5b071",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4ea4424-4720-4a43-8b79-7eabebd5b071",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "415c4afb-0030-4a42-8686-06a409db618a",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "415c4afb-0030-4a42-8686-06a409db618a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.095029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "de949b43-93e1-49c3-a80f-56b3480b539c",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de949b43-93e1-49c3-a80f-56b3480b539c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.09491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39019028-c324-4078-add0-7c35d3261bff",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39019028-c324-4078-add0-7c35d3261bff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.094786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7ce4701b-d5e8-4e7c-b1da-e39ccaae424a",
    "name" : "Marriage Certificate (application/json)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ce4701b-d5e8-4e7c-b1da-e39ccaae424a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.094637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1941bf31-3803-4be7-a1f0-25b1bfa4aeb0",
    "name" : "Marriage Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/rmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "1941bf31-3803-4be7-a1f0-25b1bfa4aeb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.094494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rmcer"
        }
      }
    }
  }, {
    "id" : "7aa55659-d995-493b-a233-70da46030a6e",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7aa55659-d995-493b-a233-70da46030a6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.094417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "04201f82-3cd1-43d4-af41-6d2f04158bad",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04201f82-3cd1-43d4-af41-6d2f04158bad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.094268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "35485a30-ce33-4fa2-98f7-480e1906df97",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35485a30-ce33-4fa2-98f7-480e1906df97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.094147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73800b4a-55c1-4cf2-9721-8ad589514abe",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73800b4a-55c1-4cf2-9721-8ad589514abe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "048a1bad-2719-4dc8-bcf5-c68ff14e54ec",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "048a1bad-2719-4dc8-bcf5-c68ff14e54ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.09388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d74230ff-3d5c-44fd-9aa9-abf90382fbaf",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d74230ff-3d5c-44fd-9aa9-abf90382fbaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01accd77-a387-4907-957e-2fdf437be5b3",
    "name" : "Right to Information (application/json)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01accd77-a387-4907-957e-2fdf437be5b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cbb913c3-059d-4392-ba8b-0d1562706621",
    "name" : "Right to Information (application/pdf)",
    "request" : {
      "urlPath" : "/ritin/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "cbb913c3-059d-4392-ba8b-0d1562706621",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ritin"
        }
      }
    }
  }, {
    "id" : "c446cd72-65c0-499c-92f0-83dc63457e72",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c446cd72-65c0-499c-92f0-83dc63457e72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48304249-ab7e-4d9d-b4e9-621e07cb8173",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48304249-ab7e-4d9d-b4e9-621e07cb8173",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.09329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d49b35f5-4df0-4ab5-a8c6-098eccf07bdd",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d49b35f5-4df0-4ab5-a8c6-098eccf07bdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2201503-b19b-4c1b-86c9-3bc019e88250",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2201503-b19b-4c1b-86c9-3bc019e88250",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.093032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c543e60-8537-4750-9063-8230fcc885ce",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c543e60-8537-4750-9063-8230fcc885ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52bf6429-2a35-4b44-a27e-7ded6706f51d",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52bf6429-2a35-4b44-a27e-7ded6706f51d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7178363c-5b07-4b78-8633-e86eb913e09c",
    "name" : "OBC Certificate (application/json)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7178363c-5b07-4b78-8633-e86eb913e09c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "126ac164-a456-4e33-bae9-ae3e0f0adbb2",
    "name" : "OBC Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/obcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "126ac164-a456-4e33-bae9-ae3e0f0adbb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "obcer"
        }
      }
    }
  }, {
    "id" : "b434bee0-c41c-4673-9e88-a0febee15ff7",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b434bee0-c41c-4673-9e88-a0febee15ff7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "926c0e3e-8129-498d-957e-acfc4662405e",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "926c0e3e-8129-498d-957e-acfc4662405e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3247b856-3bac-490f-a5fe-2cf535caac8a",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3247b856-3bac-490f-a5fe-2cf535caac8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "db0c7fb6-8e65-41ca-9453-7349d6473a1a",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db0c7fb6-8e65-41ca-9453-7349d6473a1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.092075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21fcf12c-6311-429f-a632-9c368fe5045d",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21fcf12c-6311-429f-a632-9c368fe5045d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac2c15b5-f81a-4853-8696-3f3ee374be3d",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac2c15b5-f81a-4853-8696-3f3ee374be3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee293fa5-860a-4af7-abf6-3e285d4bc1d7",
    "name" : "Small Savings Agent License (application/json)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee293fa5-860a-4af7-abf6-3e285d4bc1d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b690ef84-94c3-4a2d-8578-eeb6f6a9b2cb",
    "name" : "Small Savings Agent License (application/pdf)",
    "request" : {
      "urlPath" : "/mpkby/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "b690ef84-94c3-4a2d-8578-eeb6f6a9b2cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mpkby"
        }
      }
    }
  }, {
    "id" : "9050d4c5-ffc2-435f-8b83-3d400ff9dd38",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9050d4c5-ffc2-435f-8b83-3d400ff9dd38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e63cc181-8b82-4091-94e5-920b73ec3c51",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e63cc181-8b82-4091-94e5-920b73ec3c51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7ac41423-cccc-4433-8ca1-ea7df1bb4c5b",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ac41423-cccc-4433-8ca1-ea7df1bb4c5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "88a93b22-7863-4dde-ad74-dae6aed4cc72",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88a93b22-7863-4dde-ad74-dae6aed4cc72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a81e296d-9b65-4a97-a436-3d5d77dc6b76",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a81e296d-9b65-4a97-a436-3d5d77dc6b76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39247126-cb13-4c95-960f-bc41e42ae02f",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39247126-cb13-4c95-960f-bc41e42ae02f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.090863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6117e4d7-abf9-4acd-94c6-b399fedacb38",
    "name" : "Manufacturer License (application/json)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6117e4d7-abf9-4acd-94c6-b399fedacb38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.090729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e8eaeaa0-ef5b-4168-b052-fbaf21918c1c",
    "name" : "Manufacturer License (application/pdf)",
    "request" : {
      "urlPath" : "/malcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "e8eaeaa0-ef5b-4168-b052-fbaf21918c1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.09059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "malcs"
        }
      }
    }
  }, {
    "id" : "ceff752a-2de5-4dc3-af80-2699f31ff61d",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ceff752a-2de5-4dc3-af80-2699f31ff61d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.090515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "adcc6da7-58bd-470a-9be9-764ad0c9cf6b",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adcc6da7-58bd-470a-9be9-764ad0c9cf6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.090376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "76886b9f-55d5-40e2-ac3a-30d31be01357",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76886b9f-55d5-40e2-ac3a-30d31be01357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.09025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f680bb92-e266-475e-8aa5-9428734fb0a4",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f680bb92-e266-475e-8aa5-9428734fb0a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.090123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae0695ae-bc77-48b7-a03d-b176beb0627a",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae0695ae-bc77-48b7-a03d-b176beb0627a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.089982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e8dd1695-41cd-490d-ab81-c642a151568b",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8dd1695-41cd-490d-ab81-c642a151568b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.089815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad3521cc-7a72-4385-b792-f6d92b50d734",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/json)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad3521cc-7a72-4385-b792-f6d92b50d734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.089628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d52982cd-0d79-49d6-9237-9a64e08d0d61",
    "name" : "Land Valuation/ Holding/ Record Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/lvcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "d52982cd-0d79-49d6-9237-9a64e08d0d61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.089446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lvcer"
        }
      }
    }
  }, {
    "id" : "3db0787f-e831-4848-b741-fb6223ed6280",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3db0787f-e831-4848-b741-fb6223ed6280",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.089367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59e4dd2d-ff90-4284-a1c6-01589f9b5143",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59e4dd2d-ff90-4284-a1c6-01589f9b5143",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "afe8ff8a-acef-49a6-922f-3d9c21d01858",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afe8ff8a-acef-49a6-922f-3d9c21d01858",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.089107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8119e90-4562-4f2c-87f1-92ae6b2ecd22",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8119e90-4562-4f2c-87f1-92ae6b2ecd22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.088972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "612b55b5-b68d-47fa-9f1a-ceb171178963",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "612b55b5-b68d-47fa-9f1a-ceb171178963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.088794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "309401d8-c6c9-462b-a1d3-7689dbdbe45e",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "309401d8-c6c9-462b-a1d3-7689dbdbe45e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.088606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b1b79652-4618-4f2a-8900-dd368404d422",
    "name" : "Issue of Arm Licence (application/json)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1b79652-4618-4f2a-8900-dd368404d422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.088463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2f5ed9f-d9cd-4777-9786-86abe1bb30e7",
    "name" : "Issue of Arm Licence (application/pdf)",
    "request" : {
      "urlPath" : "/isoal/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "c2f5ed9f-d9cd-4777-9786-86abe1bb30e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "isoal"
        }
      }
    }
  }, {
    "id" : "99bfc772-5d6a-494b-9f5f-4b21560e4589",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99bfc772-5d6a-494b-9f5f-4b21560e4589",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.088084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2839736a-ef28-406d-82fa-56649b702145",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2839736a-ef28-406d-82fa-56649b702145",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32a5df89-fb67-4f57-8a16-68da934fda88",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32a5df89-fb67-4f57-8a16-68da934fda88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4205f8ea-1108-4509-9f6c-9ea19dd6f76b",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4205f8ea-1108-4509-9f6c-9ea19dd6f76b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0f315fae-ee79-4264-b537-bbf2bb59bb53",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f315fae-ee79-4264-b537-bbf2bb59bb53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec41ec3b-4c8a-456d-b2ac-620c7d42b617",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec41ec3b-4c8a-456d-b2ac-620c7d42b617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2ca3c109-59c2-414d-9aee-459a65803906",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ca3c109-59c2-414d-9aee-459a65803906",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "891bf375-d8c7-4f93-b5f2-f4b1dc0609ec",
    "name" : "Income Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "891bf375-d8c7-4f93-b5f2-f4b1dc0609ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer"
        }
      }
    }
  }, {
    "id" : "0a29434e-3b73-4cbb-84df-b37e6e028799",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a29434e-3b73-4cbb-84df-b37e6e028799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a470359b-0d15-4da8-b52a-18adc47ece33",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a470359b-0d15-4da8-b52a-18adc47ece33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.087023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67761b37-4271-4fe7-93e3-1ab131a35793",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67761b37-4271-4fe7-93e3-1ab131a35793",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c1300fdf-2836-44dc-a336-372b5a6776cc",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1300fdf-2836-44dc-a336-372b5a6776cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e90fa44-31f4-46c7-8672-f912269ce156",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e90fa44-31f4-46c7-8672-f912269ce156",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6bdfa4dc-9c79-4277-8903-91b080900721",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bdfa4dc-9c79-4277-8903-91b080900721",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "672d8f69-a325-4a47-9b79-9a92a92e7efd",
    "name" : "Grievance Redressal/ Registration (application/json)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "672d8f69-a325-4a47-9b79-9a92a92e7efd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f2663db-50b7-4a50-827d-13627f0e473e",
    "name" : "Grievance Redressal/ Registration (application/pdf)",
    "request" : {
      "urlPath" : "/grred/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "5f2663db-50b7-4a50-827d-13627f0e473e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "grred"
        }
      }
    }
  }, {
    "id" : "e2d0266c-9dca-4f26-ad94-f8a4c24e6cf5",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2d0266c-9dca-4f26-ad94-f8a4c24e6cf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "20c50063-c969-4df5-a7ff-42aacc1c0865",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20c50063-c969-4df5-a7ff-42aacc1c0865",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.086084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9c72944a-77dd-4e93-838c-239257a8ed18",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c72944a-77dd-4e93-838c-239257a8ed18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65b962ea-ac88-4a67-8d33-d0c0a90a7aed",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65b962ea-ac88-4a67-8d33-d0c0a90a7aed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9acbd66d-c122-40e6-89db-2db5ab2f3f60",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9acbd66d-c122-40e6-89db-2db5ab2f3f60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "80073beb-5a86-4fa3-9732-919d451c017c",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80073beb-5a86-4fa3-9732-919d451c017c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "623a869d-4c3d-4c2a-bb5e-547c22da6295",
    "name" : "Food Stuff License (application/json)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "623a869d-4c3d-4c2a-bb5e-547c22da6295",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4c20bec5-65d0-4768-9402-013d6c63d799",
    "name" : "Food Stuff License (application/pdf)",
    "request" : {
      "urlPath" : "/fslcs/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "4c20bec5-65d0-4768-9402-013d6c63d799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fslcs"
        }
      }
    }
  }, {
    "id" : "6f9d104a-ba49-4da6-b584-58b7566cc913",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f9d104a-ba49-4da6-b584-58b7566cc913",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ce98975e-773f-449e-af7f-2cdf53821b49",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce98975e-773f-449e-af7f-2cdf53821b49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0d9b2422-d5fa-4c77-8620-cb65ed5a85f7",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d9b2422-d5fa-4c77-8620-cb65ed5a85f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1b65d4be-9f44-48f8-8f0a-5872a1f249f4",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b65d4be-9f44-48f8-8f0a-5872a1f249f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.084868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "765a7830-6c29-49e8-98fc-c1f7e0b078fe",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "765a7830-6c29-49e8-98fc-c1f7e0b078fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "06c4004f-5e21-4ec3-beef-1ff87d2ce548",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06c4004f-5e21-4ec3-beef-1ff87d2ce548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.084547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01787ab0-66f8-4c6c-a991-7bf486439f4b",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01787ab0-66f8-4c6c-a991-7bf486439f4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.084412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2a8e4094-7aeb-4738-bb57-209960b1f5f2",
    "name" : "Dependency Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "2a8e4094-7aeb-4738-bb57-209960b1f5f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer"
        }
      }
    }
  }, {
    "id" : "6bc2b619-c636-4bd2-a2ee-b283ddbd2b94",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bc2b619-c636-4bd2-a2ee-b283ddbd2b94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.084115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aad64d65-c9c8-46cb-a690-d04488e663d4",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aad64d65-c9c8-46cb-a690-d04488e663d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.083982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e8bf00dd-d74f-4256-987a-9aa948a10111",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8bf00dd-d74f-4256-987a-9aa948a10111",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.083846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "42c32051-d0db-4f3c-a115-cddeb47b6342",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42c32051-d0db-4f3c-a115-cddeb47b6342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b69f984-c556-4899-b372-12e2c9aacae0",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b69f984-c556-4899-b372-12e2c9aacae0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.083575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9a4526b-1fd5-4b8b-aac3-22f0c8345a7c",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9a4526b-1fd5-4b8b-aac3-22f0c8345a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.08344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1cf61f2e-ffd4-43bd-83a3-ca95c680b455",
    "name" : "Distance Certificate (application/json)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cf61f2e-ffd4-43bd-83a3-ca95c680b455",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.083322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d228b19a-cfd5-4fb7-a98e-490d28ed9395",
    "name" : "Distance Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dncer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "d228b19a-cfd5-4fb7-a98e-490d28ed9395",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.083175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dncer"
        }
      }
    }
  }, {
    "id" : "11b87016-16b1-45eb-9db2-126750a778b3",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11b87016-16b1-45eb-9db2-126750a778b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.083075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b974612-c68c-4a35-906b-8784accac605",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b974612-c68c-4a35-906b-8784accac605",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.082937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b2f3ec5-14b0-4608-a91b-2d77ee55ba51",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b2f3ec5-14b0-4608-a91b-2d77ee55ba51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.082805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "44f2a8c7-3198-4310-aa32-22734c887abf",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44f2a8c7-3198-4310-aa32-22734c887abf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.082667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "561dd20c-d9f6-42e8-a207-47a1ab93fe9f",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "561dd20c-d9f6-42e8-a207-47a1ab93fe9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.082526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8fc2f1a1-7849-4616-a33f-6592e740f327",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fc2f1a1-7849-4616-a33f-6592e740f327",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.082375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d1286f8a-0c3b-41b4-bf16-6b2f62302c3e",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1286f8a-0c3b-41b4-bf16-6b2f62302c3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.082138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1ea974f4-2a02-4270-a908-5e1a172f68d7",
    "name" : "Character Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "1ea974f4-2a02-4270-a908-5e1a172f68d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:52.081416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer"
        }
      }
    }
  } ]
}