{
  "mappings" : [ {
    "id" : "4d60495b-e584-4841-9b43-0618dc83fed0",
    "name" : "Fetch a specific Event Type.",
    "request" : {
      "urlPath" : "/v1/Types/nym5tenwhm1meuncaong35vpxjhefgemeqlkr3wgn9ty1vrv1m3c56iuhhg082sq5k3q4evnjvaid7rqisgk0z2nez7fg1j5a75j2m4clb72m92ekdctp0tybq8s2sjtdvjtbtf5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2024-01-17T01:04:29.521Z\",\n  \"date_created\" : \"2023-08-25T20:24:51.521Z\",\n  \"schema_id\" : \"r450\",\n  \"description\" : \"Reiciendis debitis qui mollitia minus iste esse odio. Consequatur et et et voluptatem accusantium quisquam. Aperiam officia quia et. Sunt quos voluptatem minus enim mollitia consequatur neque. Qui sit\",\n  \"links\" : { },\n  \"type\" : \"r8wmi4nh0721z1uaptlotb7fc86e6mawbhygql3kphaywxmyp1sq13r7844mbiy9r1nobob76frlnoezi7ws\",\n  \"url\" : \"https://web.example.mocklab.io/982222\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d60495b-e584-4841-9b43-0618dc83fed0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.521517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEventType",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Event Type was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Event Type was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "schema_id" : {
                "description" : "A string that uniquely identifies the Schema this Event Type adheres to.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A string that uniquely identifies this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "ac379ba8-440f-419c-a566-d7ae78ce9980",
    "name" : "Retrieve a paginated list of all the available Event Types.",
    "request" : {
      "urlPath" : "/v1/Types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"date_updated\" : \"2022-06-24T17:59:33.52Z\",\n    \"date_created\" : \"2022-09-14T02:05:27.52Z\",\n    \"schema_id\" : \"9v57\",\n    \"description\" : \"Quasi est saepe saepe iste. Sunt nostrum earum quia. Odio modi autem omnis optio alias consectetur. Quia tenetur temporibus dicta nobis architecto quia.\",\n    \"links\" : { },\n    \"type\" : \"0s81j4zd2j0uc1heqlrg9uxcjkatwo\",\n    \"url\" : \"https://web.example.mocklab.io/189106\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/177653\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/489632\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/677085\",\n    \"page\" : 3790033176724657555,\n    \"key\" : \"jmqw81vpry1rp6ita2e22k1p0fpkmi3l1masg1b73ewz5l4tjz23ik2hdz8vr9bwrs211url21ae1nxho00y6w6favoimv8a3m4gs91\",\n    \"url\" : \"https://web.example.mocklab.io/322526\",\n    \"page_size\" : 5587354545519655958\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac379ba8-440f-419c-a566-d7ae78ce9980",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.521237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEventType",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.event_type"
                },
                "type" : "array"
              }
            },
            "title" : "ListEventTypeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6f4c18f5-bb8e-436b-b976-a6114c4a571e",
    "name" : "Update an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF696BBF75908B6940dEf8CFf77bEABD5C/SubscribedEvents/xt01726cyb0kn9qsq2p5y12bn2j3cx4eb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 5130502600741871851,\n  \"account_sid\" : \"AC5baeF17B55a09D9833863DBf5Bfdd5BE\",\n  \"subscription_sid\" : \"DFEDDBc8DF4Fa3Ce0ccDf68b7Ec4c24198\",\n  \"type\" : \"tjjzlnv6fxokjr23yz4d\",\n  \"url\" : \"https://web.example.mocklab.io/343615\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f4c18f5-bb8e-436b-b976-a6114c4a571e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.520672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "4018d4c4-7e96-415a-b857-32673cbfd1fa",
    "name" : "Read an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF0cA1aa1A17D78ECACCE7F7fbAC06bFfa/SubscribedEvents/t0qnfwii9zn4qfp716nbfakx8cxk6l2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 2956023958877937545,\n  \"account_sid\" : \"AC5065cB1B186f842ABfb96eff7813DEc2\",\n  \"subscription_sid\" : \"DF2d86B6FedBccC94EBE094Fd52555fAA3\",\n  \"type\" : \"933rfdblrujwczut22gzh344ixwrergiy7zi13ihu8noavxr2gmz2ynz8f4ic74smncjy88b5f3bo7nnej4noprg1cly4ru2szcnirr17zihna14vsq3ftjs6s6jep98hf951pp7lzz7x0i7dg8jvx4aprgyy9\",\n  \"url\" : \"https://web.example.mocklab.io/228766\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4018d4c4-7e96-415a-b857-32673cbfd1fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.520511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "085a498b-7478-4c4a-9516-f12ec45039e6",
    "name" : "Remove an event type from a subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFFfa8bcaEA42Fd5DCb5f1DA12131C9700/SubscribedEvents/7fmvhpl8flzas10p61jx4ulsa5g50u4ts8pkcukg3l0jd1xv2qof89rk9v4deup97yyot0qdqb1v1fripj3qofnjl33jib5hg3zq1v4n8tib13e3o9jwgvwdtwwaf3j46irvrm6md6z2sw5i7fjwhafpz5qrlu8gjcxyvdfdc5t1vr9ryctfdj7p",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "085a498b-7478-4c4a-9516-f12ec45039e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.520352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscribedEvent"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "dcb3cee6-1ab3-4a10-887a-ca6e74b0579c",
    "name" : "Create a new Subscribed Event type for the subscription",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFc8A8c7DE1A497B0EE17edE53EadE5081/SubscribedEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"schema_version\" : 1126096635076359510,\n  \"account_sid\" : \"ACb54C46AdB2ab111b494DDd11dfcb9b36\",\n  \"subscription_sid\" : \"DFfb6fbEDdc6Ef6Dce5B3F05c17b785BF2\",\n  \"type\" : \"a9bcgrxm0tarwsmaaec1\",\n  \"url\" : \"https://web.example.mocklab.io/636654\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcb3cee6-1ab3-4a10-887a-ca6e74b0579c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.520304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "2d40d2db-7f14-4e1b-b190-4475b048fd13",
    "name" : "Retrieve a list of all Subscribed Event types for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF2ecBFae1CFf2a54b4d969615f49FCCD7/SubscribedEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"schema_version\" : 7420520374315641447,\n    \"account_sid\" : \"ACeAe5bD97fA7448B62cd549e3e4d36bE4\",\n    \"subscription_sid\" : \"DFeE5fF5B88DE8E75E170F8a8def6AfDA5\",\n    \"type\" : \"xoypzbt2acfmymgmbsk1e7lee5pdx48t3y4p9f2kw1um1cvc1vxr2d86pxa3ee2x630z489oc1vum39teypvljk66nsysg1d5q5083299pq655fd1upry3753je8lyull0k8hq97vhguhx\",\n    \"url\" : \"https://web.example.mocklab.io/228711\"\n  }, {\n    \"schema_version\" : 22497475869357122,\n    \"account_sid\" : \"AC34241fc436dfC4B1268FAa7bb4a11D36\",\n    \"subscription_sid\" : \"DF466EAe294Da2AecD5Bb5E2da56DCf7e7\",\n    \"type\" : \"7filo41xickz6mbztiua0c1df9micvdlj0hnb48b8gh7xl6q208s28bdy17wa81p2lsu5sj4ypbwffj4b5kdhtg0ft7q1ug7ejezi32ce1ywxqokwp95cnmn50xgqixopx\",\n    \"url\" : \"https://web.example.mocklab.io/882102\"\n  }, {\n    \"schema_version\" : 5789780410268682340,\n    \"account_sid\" : \"ACf9fc883e960cc0E0B650ECf29d57da6a\",\n    \"subscription_sid\" : \"DFED1642a6802fD90241DBE5dbBBaD5f7e\",\n    \"type\" : \"0jpnkf1tk72jljqle8oq3la2izafyo5bx77yrro8dioiskj0axscofb3fxqgw21raebryo9hz01pisfbmyoe\",\n    \"url\" : \"https://web.example.mocklab.io/685644\"\n  }, {\n    \"schema_version\" : 1645850009157777144,\n    \"account_sid\" : \"ACdFd51C713f8Be8E6B736F32cc1ED9eE1\",\n    \"subscription_sid\" : \"DFFbD5b5C3BFE714e0C5eD71C09b2D2f4a\",\n    \"type\" : \"5h3v8lok5sqx9si87up9xr5qx2n95d8mwtp74ryv5lgfwj94l8hibd84tc7qytqc7uf6xt8aadrocyrp92n63s3tz3n4ms06oxe21c8xzo08teyslj4fompcwuarp3my16m0dypdcx\",\n    \"url\" : \"https://web.example.mocklab.io/043321\"\n  }, {\n    \"schema_version\" : 1224193956377492010,\n    \"account_sid\" : \"ACcfCcd04b6dA4fd3CcA817C54BaE3a5aC\",\n    \"subscription_sid\" : \"DF99974dc8A6784944dF33ab9E54cBa7CD\",\n    \"type\" : \"skiw8lxl9obbtpu0z\",\n    \"url\" : \"https://web.example.mocklab.io/160101\"\n  }, {\n    \"schema_version\" : 1843429199501660837,\n    \"account_sid\" : \"AC7056258C2A4EFBFFa3dcDB9e9d4d3BDC\",\n    \"subscription_sid\" : \"DF6678B54B2ACd2E2fa0a66e6574cfB39b\",\n    \"type\" : \"l98muajhttkv2ee9ispqgnyxahpkjpakrrcpj9fnv6srion3iewhdwwnv4j8atvkw9lhp2jatyixw5hdaersdtr57l6ip7vp4l3kw7egzv77dkbz3umnt9r8gjpcsstgzpm8l7tt1i1vlxa4lczuw4i0sddcca6kt\",\n    \"url\" : \"https://web.example.mocklab.io/651594\"\n  }, {\n    \"schema_version\" : 7805686175780840748,\n    \"account_sid\" : \"AC2BA97a5c9BC01ad0739662A6B12D9cdf\",\n    \"subscription_sid\" : \"DFdCAecC0B0ef6Ff4Eebc7Facfa66A30a4\",\n    \"type\" : \"2zazuwaadsknq92xx1ipncc7t4aisijzji4owzu6686dh726sh84obeal74w23gpyjj6e64xrsadkrzitde5a8d3ntk33ntllvxsrvpo0obfjdrfq1lyj8ts8fexmv1fix5bnwda52eyzovotygh8k6rurkmr3rnneknj68fmxtbguj4czjacuzzvtk8gr2m20\",\n    \"url\" : \"https://web.example.mocklab.io/870243\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/270463\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/125230\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/068138\",\n    \"page\" : 2790735604956454025,\n    \"key\" : \"l3tmp0ihrhkkcxo0dn5bj7haj58ec93gup3ebkxraonq50kyd4sz8dz8lw3nzr6lldzrcwy\",\n    \"url\" : \"https://web.example.mocklab.io/620999\",\n    \"page_size\" : 3925506054154407866\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d40d2db-7f14-4e1b-b190-4475b048fd13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.520139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscribedEvent",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription.subscribed_event"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscribedEventResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "862696df-3256-4f94-b478-78e1bbf542c6",
    "name" : "Update a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFaE7B4639509ceEAAaefcbc16AcF8380f",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-09-04T16:21:17.518Z\",\n  \"date_created\" : \"2022-06-20T04:37:32.518Z\",\n  \"account_sid\" : \"ACbE5FE5a52AaC1F070b49De896a68fe5C\",\n  \"description\" : \"Omnis et et non sapiente dolorem. Dolorem aut animi aut. Et ut non. Ea ipsa similique consequuntur.\",\n  \"sink_sid\" : \"DGEFdb8Cf3e06dACd139Fb1D2Df86D583a\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/481335\",\n  \"sid\" : \"DF072315fF8cfbEcFA10171B03BAed9a69\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "862696df-3256-4f94-b478-78e1bbf542c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.519139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "63f511e0-a99b-4e48-bf51-e6eb21e33d66",
    "name" : "Fetch a specific Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFaCAa6eB2Fe6bfab8cAcA9bf2fAFACea6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-04-30T12:42:06.518Z\",\n  \"date_created\" : \"2022-07-09T23:16:02.518Z\",\n  \"account_sid\" : \"AC1e3BAA3debeAd6ac4154fCa6ED22BE1b\",\n  \"description\" : \"Ut accusantium pariatur voluptate at laudantium atque debitis. Vitae accusantium velit deserunt laudantium maiores nemo. Consequatur ipsa exercitationem reprehenderit non rem consequuntur eligendi.\",\n  \"sink_sid\" : \"DGc465A0C2ad3D77F5E3bAACceaEaf68eC\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/149548\",\n  \"sid\" : \"DFCFa092e2fd6fEEE6346dCD3e2627b9bd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f511e0-a99b-4e48-bf51-e6eb21e33d66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.518944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "418dbcaf-2309-4039-85af-52bdc04afd98",
    "name" : "Delete a specific Subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFF1aBAe5070AeE55EB95D559cCb5c17c5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "418dbcaf-2309-4039-85af-52bdc04afd98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.51873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscription"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "e73b9efe-6fc4-4f51-a1b9-7e8fb2bfd673",
    "name" : "Create a new Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2023-05-10T09:40:23.518Z\",\n  \"date_created\" : \"2022-11-18T19:05:02.518Z\",\n  \"account_sid\" : \"AC186D2a16EeF17DF8D5CE380e8612bAfA\",\n  \"description\" : \"Perspiciatis asperiores molestias. Aspernatur consequuntur eveniet in et laboriosam qui et. Quos quas fuga recusandae aliquid. Aliquid non debitis debitis consequatur. Est culpa quia est nesciunt poss\",\n  \"sink_sid\" : \"DGfd7cC47814CEB8d20eAaBAbBBB55550B\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/460461\",\n  \"sid\" : \"DF7BDf03aDf1e274aDbDa5eBD88dbfC2Cb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e73b9efe-6fc4-4f51-a1b9-7e8fb2bfd673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.518696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "26904b7a-b1c7-4129-b875-7e7393a2107e",
    "name" : "Retrieve a paginated list of Subscriptions belonging to the account used to make...",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"date_updated\" : \"2023-01-03T00:54:05.517Z\",\n    \"date_created\" : \"2024-01-06T20:08:09.517Z\",\n    \"account_sid\" : \"AC03B440d661Bbaa2aD6D74Cf264Efee38\",\n    \"description\" : \"Natus sequi omnis explicabo magnam culpa quis. Molestias modi eius esse. Et id ut.\",\n    \"sink_sid\" : \"DG9aD626caDdEf6febEc2Bfb12b1De917b\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/892965\",\n    \"sid\" : \"DF3105eAEb0cE4c04458F936a94B2E5f4E\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/769905\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/878648\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/096145\",\n    \"page\" : 8064682817510545109,\n    \"key\" : \"e4ux2e48qebaxpb60fq93rymaeamefqc0wipg4iecpj3vsw1i8n728f7sd00njpfqnjrusuaek974qfip6db0nc719z4nkybohqphgpnmma4ay2uj4ef9uhihnu534fo7xyp5a1us85glwb0rre9pk690\",\n    \"url\" : \"https://web.example.mocklab.io/777497\",\n    \"page_size\" : 4422619487150655742\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26904b7a-b1c7-4129-b875-7e7393a2107e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.518475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscription",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "subscriptions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscriptionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "571a8bbf-07e5-4d89-af7f-2c59056ebd3c",
    "name" : "Validate that a test event for a Sink was received.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG4E21Fe24C4Df3E392AAfA7ab5Cdf3E6a/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"zaaksgv187in3229pow21wdwmrvm3tkgmxpid7qatcpvlch3vx8dmcpo1h2ovlathwcfcxg6ghpj2rw1tbf1d2j5oud3ycblp6kr7s51cu0vnkzc8uld8v2ju6kkjyms1khlczan21czx53e7fur9pivocjfjk0cexnu55z9tb2q73cazaqtrhr0u4toc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "571a8bbf-07e5-4d89-af7f-2c59056ebd3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkValidate",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the given Sink was validated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "2fd006d3-4488-4d25-ba99-03d3d844d882",
    "name" : "Create a new Sink Test Event for the given Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG2a9bDDC3f9Db41d3d9c2be2c5Baf4EC4/Test",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"tvmeo5eslpf87n2lxvwfwawzzqg26zwrf1zxejy4fv7ricjbq2c2v4326o9344xsswrzx20j81n27bm9o2yfoldncoq65pg88b3kyx8u6xoqezx7jghdm4cefrsz0l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fd006d3-4488-4d25-ba99-03d3d844d882",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkTest",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the test event was generated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4518991b-fdca-4de5-b702-72fe1a278163",
    "name" : "Update a specific Sink",
    "request" : {
      "urlPath" : "/v1/Sinks/DG6eAEeB7591BDac0B5734006C6095a0a0",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-08-30T01:16:17.517Z\",\n  \"date_created\" : \"2022-09-28T03:34:37.517Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Ab consequatur repellendus velit. Impedit quam est quia reiciendis at expedita sit. Voluptatem dolores ducimus ut ut animi laboriosam. Esse voluptas nisi.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/671657\",\n  \"sid\" : \"DGEbA410598cA316Cb8864D6F4BC1fFb0e\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4518991b-fdca-4de5-b702-72fe1a278163",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "926deb0c-3b1f-4276-a096-385d3865b040",
    "name" : "Fetch a specific Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGA4b9FcaDC3b28Cc68EA3Ee0F9Ef3Db8C",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-09-16T07:23:47.517Z\",\n  \"date_created\" : \"2023-05-12T04:02:17.517Z\",\n  \"sink_type\" : \"kinesis\",\n  \"description\" : \"Ratione debitis nemo perferendis ut. Sequi atque debitis laborum sint. Cum quos est eligendi ab id architecto. Amet vel odio. Quia repudiandae mollitia aut nostrum velit.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/776230\",\n  \"sid\" : \"DG903Cc79Ca5FbE568bc6FF9D1b37a5929\",\n  \"status\" : \"validating\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "926deb0c-3b1f-4276-a096-385d3865b040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "fed58b2c-2b8f-439b-992c-a1c6dec0632c",
    "name" : "Delete a specific Sink. - 204",
    "request" : {
      "urlPath" : "/v1/Sinks/DG540EAb76dc2Aa9cF4C3C12e29dD21Bd5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fed58b2c-2b8f-439b-992c-a1c6dec0632c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSink"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "34ccf079-977e-44a9-bc36-214233807c6c",
    "name" : "Create a new Sink",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-04-19T00:51:54.517Z\",\n  \"date_created\" : \"2023-04-06T08:24:24.517Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Labore cum molestias. Quasi rem ab. Qui doloribus ipsa ab saepe est alias ratione.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/852713\",\n  \"sid\" : \"DGA4beE9C8AaFE51fbA1Fb206bEEA4839D\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34ccf079-977e-44a9-bc36-214233807c6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "404a5e53-0b75-4650-b34e-239fc491c09d",
    "name" : "Retrieve a paginated list of Sinks belonging to the account used to make the req...",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sinks\" : [ {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-05-17T19:33:22.516Z\",\n    \"date_created\" : \"2022-11-18T22:13:00.516Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Et placeat illo officiis labore porro est. Ea perspiciatis ex molestiae minus ducimus eaque. Consequatur voluptas quaerat aut fugiat ab necessitatibus. Beatae consectetur neque dignissimos. Animi culp\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/278893\",\n    \"sid\" : \"DGe7F7aCC4DC6Ae2DfdB08d8e3EcA8e2f7\",\n    \"status\" : \"active\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-10-25T03:48:50.516Z\",\n    \"date_created\" : \"2022-05-27T05:17:47.516Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Quaerat provident voluptatem aut vitae enim sint. Commodi temporibus sit totam distinctio corporis nisi. Amet placeat laudantium qui ad.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/224791\",\n    \"sid\" : \"DG6AFCAEEC8c95fe6a79d29b80eB7A4E50\",\n    \"status\" : \"initialized\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-09-10T17:55:23.516Z\",\n    \"date_created\" : \"2022-11-17T18:28:36.516Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Odio distinctio rerum quo. Et vel necessitatibus facilis ipsa dolores provident. Molestias dolore tempora illo fugit asperiores quia modi.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/171976\",\n    \"sid\" : \"DG33F573e7A2E17c8Ce4ec5e90a3daDDBA\",\n    \"status\" : \"initialized\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/249331\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/253179\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/859279\",\n    \"page\" : 6376027689713150205,\n    \"key\" : \"y4jag61s59gxbenmr5sxbnxi8qkxg99hprf9iln6w5xy5tooh5c4lpsmdb67rpspmut5e786p65feb1xectdkv\",\n    \"url\" : \"https://web.example.mocklab.io/952828\",\n    \"page_size\" : 4752459354240422049\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "404a5e53-0b75-4650-b34e-239fc491c09d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.517147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSink",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sinks" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.sink"
                },
                "type" : "array"
              }
            },
            "title" : "ListSinkResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "ee17df0c-85c3-46bb-aeb3-afff96bf2574",
    "name" : "Fetch a specific schema and version.",
    "request" : {
      "urlPath" : "/v1/Schemas/n882/Versions/8238067736836289217",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 3623190625897607655,\n  \"date_created\" : \"2023-03-08T05:36:36.516Z\",\n  \"raw\" : \"bwm3tdwpjcanbc3g1c6u\",\n  \"id\" : \"7my9\",\n  \"url\" : \"https://web.example.mocklab.io/050837\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee17df0c-85c3-46bb-aeb3-afff96bf2574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.516351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchemaVersion",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date the schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "raw" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The version of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "bc4b2dc2-fa69-4ac0-967e-eafcbf478f5d",
    "name" : "Retrieve a paginated list of versions of the schema.",
    "request" : {
      "urlPath" : "/v1/Schemas/g23s/Versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/778069\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/967158\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/995324\",\n    \"page\" : 6317070101630035449,\n    \"key\" : \"zfre40etiwjt3udoahanue7gcj6wyowbdgkbzgicebexem1xmj287u78ww5dhkrxjdb6ytot0ro86fowgki5\",\n    \"url\" : \"https://web.example.mocklab.io/521272\",\n    \"page_size\" : 8197175682017969759\n  },\n  \"schema_versions\" : [ {\n    \"schema_version\" : 2961334583309506958,\n    \"date_created\" : \"2022-11-28T01:25:12.514Z\",\n    \"raw\" : \"h3gubjuc5gd8c7tiehqbj5rnxggxg34u9xr60ctf8llu60kkay34k2\",\n    \"id\" : \"l47r\",\n    \"url\" : \"https://web.example.mocklab.io/713332\"\n  }, {\n    \"schema_version\" : 4231204898587271837,\n    \"date_created\" : \"2022-03-23T15:42:15.515Z\",\n    \"raw\" : \"v1yma1edvbot0znvxeeioa3zi4g1ykhmn3ypibwqvd5za09awb4jgjtxj6lt80iu2cf9r5lxssik3li4ddgkohh70egrmq84tkvgflz2d5xbbafhjzehc1kpufrhp3w68e0c9tpm3r4anm7iziut4psr8ykk6p1muvki9zskh0xvlv6ih1we\",\n    \"id\" : \"f6ow\",\n    \"url\" : \"https://web.example.mocklab.io/953674\"\n  }, {\n    \"schema_version\" : 7604416544152807675,\n    \"date_created\" : \"2022-11-13T00:02:33.515Z\",\n    \"raw\" : \"e8xqolfcthp\",\n    \"id\" : \"3ky3\",\n    \"url\" : \"https://web.example.mocklab.io/520827\"\n  }, {\n    \"schema_version\" : 5142449037450575046,\n    \"date_created\" : \"2022-05-19T05:38:21.515Z\",\n    \"raw\" : \"e677rhzhl9rh7pt3cuiuvmus216xdnokrouuqu161ss0rk2vy7pluudip19cog19k290i9iycx7xm5w3i7qxgde05o918akk316vsi7sz006j0m622bxqwo7gv8yz8ylpcc0jnshacsirqllj0vl\",\n    \"id\" : \"zl66\",\n    \"url\" : \"https://web.example.mocklab.io/294511\"\n  }, {\n    \"schema_version\" : 8495065320393892932,\n    \"date_created\" : \"2023-12-09T06:06:35.515Z\",\n    \"raw\" : \"gul53ti2ae7847uy5whjqok9jr4ghhz4ks6hqigyzjwt72y4ue5iazxksfo2rhaux0d41\",\n    \"id\" : \"185p\",\n    \"url\" : \"https://web.example.mocklab.io/288211\"\n  }, {\n    \"schema_version\" : 2482042187949444899,\n    \"date_created\" : \"2023-03-25T16:48:24.515Z\",\n    \"raw\" : \"vzzpwhjj3krndhu\",\n    \"id\" : \"b007\",\n    \"url\" : \"https://web.example.mocklab.io/070151\"\n  }, {\n    \"schema_version\" : 6115911706907628532,\n    \"date_created\" : \"2024-02-13T06:58:48.515Z\",\n    \"raw\" : \"qnac75gli8uq17414wu4lzq9ednk1x9xm0p49aayy9y1llf3gd941e0uflzi4wx6vuyd7fe40tdn8c5nr1kf8i7pvipt74nx51wof0wdcrqjpc73lpv\",\n    \"id\" : \"7016\",\n    \"url\" : \"https://web.example.mocklab.io/874032\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc4b2dc2-fa69-4ac0-967e-eafcbf478f5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.516059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSchemaVersion",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "schema_versions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.schema.schema_version"
                },
                "type" : "array"
              }
            },
            "title" : "ListSchemaVersionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "8ea7a9d5-7ca5-43d6-9d01-ff935ef88e49",
    "name" : "Fetch a specific schema with its nested versions.",
    "request" : {
      "urlPath" : "/v1/Schemas/u56j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"latest_version\" : 5477263380715496847,\n  \"links\" : { },\n  \"id\" : \"6yu9\",\n  \"latest_version_date_created\" : \"2023-11-19T13:11:16.514Z\",\n  \"url\" : \"https://web.example.mocklab.io/194368\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea7a9d5-7ca5-43d6-9d01-ff935ef88e49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:29.514509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchema",
          "schema" : {
            "properties" : {
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_version" : {
                "description" : "The latest version published of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "latest_version_date_created" : {
                "description" : "The date that the latest schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this schema.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}