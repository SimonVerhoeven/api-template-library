{
  "mappings" : [ {
    "id" : "17e6be07-9fa4-4042-be69-ade697edde5f",
    "name" : "Fetch a specific Event Type.",
    "request" : {
      "urlPath" : "/v1/Types/qjxqpiuy9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-09-25T14:45:38.354Z\",\n  \"date_created\" : \"2024-02-16T15:59:23.354Z\",\n  \"schema_id\" : \"a896\",\n  \"description\" : \"Sint ut dolorem nulla et molestiae tempore repellendus. Molestiae quia dolorum et. Ea odit est. Beatae veritatis eos culpa non itaque dicta repudiandae.\",\n  \"links\" : { },\n  \"type\" : \"p4h9r60qfeoktijxaa8niz0ufthnhomelzk0v94vgu94us5wuvof0q7x92k64y7iz0668jbu1864v722c0pw0nbxj6lcdqma2avnholf70f82ycyk8efbid8mfnklpgk0cisekvy5yw1966ldm4yjmrvor\",\n  \"url\" : \"https://web.example.mocklab.io/065208\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17e6be07-9fa4-4042-be69-ade697edde5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.355066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEventType",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Event Type was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Event Type was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "schema_id" : {
                "description" : "A string that uniquely identifies the Schema this Event Type adheres to.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A string that uniquely identifies this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "c196c169-23d0-4664-b7f0-25f2f3d5abee",
    "name" : "Retrieve a paginated list of all the available Event Types.",
    "request" : {
      "urlPath" : "/v1/Types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"date_updated\" : \"2023-09-11T21:17:03.353Z\",\n    \"date_created\" : \"2022-10-27T00:36:11.353Z\",\n    \"schema_id\" : \"ncfy\",\n    \"description\" : \"Perferendis minima consequatur culpa aliquam facilis. Nulla excepturi dignissimos. Iusto voluptates qui fugit accusamus delectus et. Sit inventore veritatis et eius aspernatur deleniti. Esse odio maio\",\n    \"links\" : { },\n    \"type\" : \"ife6e3x8sxscze7b91zit0qxl62cmnhyowdzfxbcclmt6y0js64jbykku9f16oc7de1enj7nb3bmc6dajyhmmpqrjwkwfsc1jt\",\n    \"url\" : \"https://web.example.mocklab.io/758577\"\n  }, {\n    \"date_updated\" : \"2023-06-29T17:09:21.353Z\",\n    \"date_created\" : \"2022-07-22T12:37:12.353Z\",\n    \"schema_id\" : \"tw7s\",\n    \"description\" : \"Similique nisi est pariatur quia vitae. Consequuntur consequatur aliquam non reprehenderit nesciunt quia. Consequatur hic velit veniam est enim hic. Sit similique itaque nemo deserunt.\",\n    \"links\" : { },\n    \"type\" : \"i5ty4el46so9nwz0bcpm898p3xnsgk3v8p538v6wu9q3pcrjr3h07lnbhk1xl99f3117afva47\",\n    \"url\" : \"https://web.example.mocklab.io/596023\"\n  }, {\n    \"date_updated\" : \"2023-02-25T07:40:59.353Z\",\n    \"date_created\" : \"2023-07-20T21:52:05.353Z\",\n    \"schema_id\" : \"7dg8\",\n    \"description\" : \"Qui dicta reprehenderit. Totam iusto repellat a harum sequi officiis expedita. Cum omnis quasi eos sunt necessitatibus deserunt aut. Sed aut error. Ex libero quod et.\",\n    \"links\" : { },\n    \"type\" : \"eaj5aazkz98sneni3s6shqe156j051n5d95s0subuhr68xruec13dhp70cr9xswjkmy8r9cl6mmzk0vu42o2kuybjigzxkn3x\",\n    \"url\" : \"https://web.example.mocklab.io/512060\"\n  }, {\n    \"date_updated\" : \"2023-04-09T14:50:32.353Z\",\n    \"date_created\" : \"2023-08-23T04:16:54.353Z\",\n    \"schema_id\" : \"ew5h\",\n    \"description\" : \"Iure quasi enim beatae. Cupiditate ipsam ut. Ut odio non. Ut et qui.\",\n    \"links\" : { },\n    \"type\" : \"fm784bdw5olt53rnoq73thv4jeu1cqmhb9x3ov7aux1qpjl\",\n    \"url\" : \"https://web.example.mocklab.io/031583\"\n  }, {\n    \"date_updated\" : \"2022-05-09T06:22:05.353Z\",\n    \"date_created\" : \"2024-02-03T08:42:49.353Z\",\n    \"schema_id\" : \"y668\",\n    \"description\" : \"Sed numquam aut dolore consectetur et dolore. Velit perspiciatis vel dicta sequi quia reiciendis quidem. Error incidunt doloribus qui aut sunt vitae.\",\n    \"links\" : { },\n    \"type\" : \"nswezzo0rsd31ufvngs6ugwgc09a53a7r47z9ggmiug2z4m93g6bod2u2wj40frfnlug7dsn55y6zb9wo3p58r5trsm3iiuvqvys6lz49n858exfnh9c26hrfg84r2jlpyib8kucuu6lymxwba2stva9p\",\n    \"url\" : \"https://web.example.mocklab.io/271389\"\n  }, {\n    \"date_updated\" : \"2022-05-25T00:37:17.353Z\",\n    \"date_created\" : \"2023-05-30T06:05:43.353Z\",\n    \"schema_id\" : \"19vb\",\n    \"description\" : \"Iure quam eum eum. Reiciendis qui enim fuga temporibus doloribus aperiam. Inventore eum optio ea porro.\",\n    \"links\" : { },\n    \"type\" : \"8m7rligzft0gqrswzdgkc86zgufm8j3\",\n    \"url\" : \"https://web.example.mocklab.io/545106\"\n  }, {\n    \"date_updated\" : \"2022-10-06T04:36:09.354Z\",\n    \"date_created\" : \"2022-05-10T06:35:09.354Z\",\n    \"schema_id\" : \"0ia2\",\n    \"description\" : \"Ut fugiat aut vero. Omnis corrupti culpa fugit voluptate. Neque possimus iusto unde nemo eaque et ea.\",\n    \"links\" : { },\n    \"type\" : \"1xfzgygsz9s5e49f9ywgsvjpleexaffz5gyhqatjgtdz4g57380urdvwius4o5142rg7cj1sn64sf6qat42ux9brx5onl8t9ih7bajv25cwq8eujgeyq9n0twfke6pvrwbd3dkkmn7dem62iupc08f6vssn5aiqpr5stkdwn3ejxmgd\",\n    \"url\" : \"https://web.example.mocklab.io/636650\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/497059\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/797024\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/150225\",\n    \"page\" : 6723572630422060306,\n    \"key\" : \"xs2tkwmqnchzx18ftvgmqhiqqucbx7o2wjfd0hi995d1ba4jkka1afymwc6a8gwgjmw841fe4o5ag3u5qzbstpxcu53jg2gfsmddrzpsy0nrz3thuh2krduy4p7poes5ii21jdnma5y014yryx3peqnjbp29wcw8krov4aq\",\n    \"url\" : \"https://web.example.mocklab.io/399498\",\n    \"page_size\" : 1496260251119217115\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c196c169-23d0-4664-b7f0-25f2f3d5abee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.354748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEventType",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.event_type"
                },
                "type" : "array"
              }
            },
            "title" : "ListEventTypeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4b142ca4-70e1-49ce-86d8-809d12ee7f8a",
    "name" : "Update an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFcCAaAf0b2bd43c4CE3FFF0Fc5561d99C/SubscribedEvents/b7x26vjcl5upd01gdsl52raep19y",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 1768991293142151010,\n  \"account_sid\" : \"ACFb784Af7F5E4b9Ee2f8520B5d9839cF1\",\n  \"subscription_sid\" : \"DF31E172900BA31c61aeDB2458e508750B\",\n  \"type\" : \"598quz4je7gmjczdg2tvw12bh44sta5hk6uod8mpa7w8zslc6hu8rc5pzvqy3oxsnhrispfzsj0bw15t8akgboo51cpc8sq3fbnfbelevbs0een2g33h9ayck374fi8xhgudwx92p28df7pabhrosl8xq4er9vq2jkt6akme8lkzd8\",\n  \"url\" : \"https://web.example.mocklab.io/665442\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b142ca4-70e1-49ce-86d8-809d12ee7f8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.352993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "958a2cd6-895e-4d31-8337-8ac5e8c8d456",
    "name" : "Read an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFFAdC9FBadB061e8ED93cAE0c494aACf5/SubscribedEvents/lneq5q4plxtgsxw9ytucfcy2cjbb89r9sngcdrc4kg5q4dsw0wtzoddueoggi7iurpuxppts7vyvlqewcivpvkm3fxmqvctrhgtfwbclq0kf70ehhwgosyyv1vypj0zye28b7hvtx3keibl0rdfz3dqiblv92ra",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 2982066394246843356,\n  \"account_sid\" : \"ACF1F058ac56cC572D634B4E5BB4943Fca\",\n  \"subscription_sid\" : \"DF6F41ADc9D857598494518f1bCa16A2BC\",\n  \"type\" : \"v53tnadvrtqa6ryj4w03wmv9ggla5xxyq1bc4l6kodqn1yo5s28qqha9t4t9ztkzp6974p8dq9uvrk13io55glw3hwxfnzefzhup6931wf5fpxjd6mqi7x83fejro5\",\n  \"url\" : \"https://web.example.mocklab.io/444590\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "958a2cd6-895e-4d31-8337-8ac5e8c8d456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.35283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f0ba7687-c502-469d-985c-0e4d35b5760f",
    "name" : "Remove an event type from a subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFDE395aB20F846dc8E3BA161cC75E90f1/SubscribedEvents/e7cqxo77zwgmaxdqomxky5umtzlcd3jueilbbjzax4788zktimocwujjn328cfjbjo9n786zqo665losfnzyf7l1c136o7i9x6ww1rp26do2tdn6nqyid9wnuanw193cd754w4a072xqw9vk73a4b35ddp3wycepi95oe3ygrhqgl0i9qy3w18203zugx8bvwh4p1h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f0ba7687-c502-469d-985c-0e4d35b5760f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.352663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscribedEvent"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "529bb34d-dc03-4ee6-8fb7-9df64444314c",
    "name" : "Create a new Subscribed Event type for the subscription",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFb754Fe8eEc2aeD23BbCb14E8c30bCCBc/SubscribedEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"schema_version\" : 1396953299102672875,\n  \"account_sid\" : \"ACbAFe4AC2af7425B6BDcDFa0C62BE7dc6\",\n  \"subscription_sid\" : \"DF159C9E29eCDB2145c04254d4c9Dca5eD\",\n  \"type\" : \"uhqvpxphbof61r\",\n  \"url\" : \"https://web.example.mocklab.io/945697\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "529bb34d-dc03-4ee6-8fb7-9df64444314c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.352611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "03d336f1-94b3-43af-b9ac-d43b382702dd",
    "name" : "Retrieve a list of all Subscribed Event types for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFf8A00c535219F8E35BFD1aa674D2ED3e/SubscribedEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"schema_version\" : 738426908449800998,\n    \"account_sid\" : \"ACE4Af8b3CAC3f69FdB2b96Fd4C6a53c31\",\n    \"subscription_sid\" : \"DFE7Ba6Ae8Ec495BA4Bf694def384a7B6E\",\n    \"type\" : \"pogceaz7kvy5pl72mgfb5x8njb51yedd3bp5mbfobl8e2fpfih52jorea6r46bk0\",\n    \"url\" : \"https://web.example.mocklab.io/785091\"\n  }, {\n    \"schema_version\" : 872700921698342785,\n    \"account_sid\" : \"ACC2647bDE5f1546f817Eb8Cd0A29E2ECD\",\n    \"subscription_sid\" : \"DFDC0bDEeEfBaeCa4ef3eC0ceDaabbBeA2\",\n    \"type\" : \"wwve55q0mgvuqoe7094q5tln2rjhes8vm2jhqeim0xwoffm46hl5o63kbgn2thb6rxb9j3j02snqpo5nkwlc7cs47rypzdp90ajcfcxfw306k1tbofj359ofpits\",\n    \"url\" : \"https://web.example.mocklab.io/674126\"\n  }, {\n    \"schema_version\" : 5453562114541039828,\n    \"account_sid\" : \"AC7b1c0B30BA03bB08A17Bc614234Fc44a\",\n    \"subscription_sid\" : \"DF6B43044fC080503FAc8F73A9f14Aee77\",\n    \"type\" : \"09rztb90kuwh973azmrw5yiqe9xbnef3fxtca02yygkk87qyk5hkztu3e2dzjz455twcerdjxcqi227rhebsipaeg6jg1tbv6ol6p5r67x3ogc\",\n    \"url\" : \"https://web.example.mocklab.io/539237\"\n  }, {\n    \"schema_version\" : 5080376283195463440,\n    \"account_sid\" : \"AC08F6Ad2A3e28AC06E091F5E49B591721\",\n    \"subscription_sid\" : \"DF97eb75BFB6aD9de4FD81D204FaA1b1f9\",\n    \"type\" : \"lb95zb0s4vd2en0ocicqck97xa0by5wwmhnunpvzntrs5gg6lc1dvqancvyw858dg3soy24ovhxaw89kdrm2h5snsqlhoiu5ftbl2ocgut3udzhp4w080k7zsby0kgat43xiwpv2whsm95iajzvt6wow4g\",\n    \"url\" : \"https://web.example.mocklab.io/305134\"\n  }, {\n    \"schema_version\" : 1565144323244865904,\n    \"account_sid\" : \"AC57709f975A1cCB40Bef24D479DFDf2FB\",\n    \"subscription_sid\" : \"DFD36b2c848C1FCF8CA82B749831Bc90dB\",\n    \"type\" : \"4nnpqifotq0yspj8yk8qx14lt6hbbxn981b62m29rvzh1oqdeam80g6ncplc5sww084xk09i9fxdi26m7j8yz6r3j42bpr4xld8zdsguse68d44kvki1r1y40ss0ugso93m0pr8eo0e8o4fy0a5lb5wfkc8osqsyxo6cv\",\n    \"url\" : \"https://web.example.mocklab.io/096927\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/203315\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/280091\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/787253\",\n    \"page\" : 3744283007169845034,\n    \"key\" : \"e18cbkp94zgozcpre1\",\n    \"url\" : \"https://web.example.mocklab.io/664703\",\n    \"page_size\" : 4676188866105386237\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03d336f1-94b3-43af-b9ac-d43b382702dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.352419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscribedEvent",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription.subscribed_event"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscribedEventResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "aad7d692-4878-4f96-8f90-3796ba677e07",
    "name" : "Update a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFdCE2398FCB2fEa6bD3B8F9dc2DCC48ee",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-04-02T00:24:20.351Z\",\n  \"date_created\" : \"2024-02-24T22:22:33.351Z\",\n  \"account_sid\" : \"AC55aaA4B87F6bB4e30aCaCc1DbB772A82\",\n  \"description\" : \"Exercitationem quia totam tenetur unde quo commodi itaque. Dolore totam facilis officiis qui. Et eius sed est repellat. Et molestias dolore ut rerum consequuntur. Omnis dolorem accusantium reiciendis.\",\n  \"sink_sid\" : \"DGEffcB4Aeb2e757FfBd7DEb84E4b1Ab47\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/830668\",\n  \"sid\" : \"DFF3a1DbE4802aEAebaaeC3F2d0ABbBA7f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aad7d692-4878-4f96-8f90-3796ba677e07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.351539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "4fc13161-3618-445b-b29e-bdf5d587d2c8",
    "name" : "Fetch a specific Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFc523ddbB7A90a07EdfEb3b06dAE1eDbA",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2024-01-08T19:44:52.351Z\",\n  \"date_created\" : \"2023-01-24T16:26:00.351Z\",\n  \"account_sid\" : \"ACa49FbCCE1EEb5767bEcf6DA115EF3470\",\n  \"description\" : \"Nihil et culpa sit ducimus maxime. Voluptatem id unde possimus excepturi ad similique ab. Atque ut debitis eius est. Est enim suscipit.\",\n  \"sink_sid\" : \"DG615e5a0deeacB0e3af334c249AF5ec93\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/924607\",\n  \"sid\" : \"DFCD03A236eB0DFd5aD5ACAB1751CC4F26\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fc13161-3618-445b-b29e-bdf5d587d2c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.351329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "ae7eccf2-ae1f-467e-ae39-e8023f79f9bc",
    "name" : "Delete a specific Subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFfaB14f712cCa3c0a5688ffe70d32f07C",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ae7eccf2-ae1f-467e-ae39-e8023f79f9bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.351127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscription"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "cd34c148-e5c6-4e92-81de-0c749ef3d9ee",
    "name" : "Create a new Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2023-01-16T08:54:06.35Z\",\n  \"date_created\" : \"2023-06-09T08:42:37.35Z\",\n  \"account_sid\" : \"AC5ED8eeCf59bEB0df11DE9EaacdB621da\",\n  \"description\" : \"Ea harum ducimus. Magni ut quaerat reiciendis nobis molestiae dolores. Neque deserunt autem officiis.\",\n  \"sink_sid\" : \"DG177c0aa5BBA16afC9e33Fa944bce40E7\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/270262\",\n  \"sid\" : \"DF40dcF2fe4A9ddaec9DCe0a35fbA6bbA0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd34c148-e5c6-4e92-81de-0c749ef3d9ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.351086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "67b6370d-525f-47ba-aed2-913bd14f80db",
    "name" : "Retrieve a paginated list of Subscriptions belonging to the account used to make...",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"date_updated\" : \"2023-08-14T09:35:12.35Z\",\n    \"date_created\" : \"2023-08-21T04:27:41.35Z\",\n    \"account_sid\" : \"ACD87FfefEA25e0C1BbBd0214bAc6FbdC9\",\n    \"description\" : \"Dicta incidunt aperiam qui. Pariatur est pariatur quis iusto numquam et explicabo. Saepe vero a porro rerum. Alias dolor veniam officiis doloribus. Facere iusto error adipisci accusantium illum deleni\",\n    \"sink_sid\" : \"DG4E4c20c31D442e3Cf95347f6dC00Ccd4\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/019235\",\n    \"sid\" : \"DFDff57e5c96E57Fd71B07EB544CfB5DAc\"\n  }, {\n    \"date_updated\" : \"2023-08-13T08:47:47.35Z\",\n    \"date_created\" : \"2023-04-17T15:24:39.35Z\",\n    \"account_sid\" : \"ACefC8fbB521956A0cED2AcFa7b6a50bA4\",\n    \"description\" : \"Dignissimos modi quae saepe alias vero et. Ducimus quod rerum numquam voluptas aut consequatur. Et aliquam aperiam nobis beatae rerum nam et.\",\n    \"sink_sid\" : \"DGc8BD7B1a65bAF7f9E20b1D36DD2d4034\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/590871\",\n    \"sid\" : \"DF65D686C507CF9AcE5EEd9A721bAA292d\"\n  }, {\n    \"date_updated\" : \"2023-11-28T14:27:53.35Z\",\n    \"date_created\" : \"2023-06-16T07:10:10.35Z\",\n    \"account_sid\" : \"AC331c8BF91Bb3dCDBC8dbCf2b4D5603e7\",\n    \"description\" : \"Quibusdam vel minima molestiae voluptatem architecto qui. Accusamus dolorum dolorem omnis. Soluta repellat voluptate quidem. Eligendi accusamus asperiores.\",\n    \"sink_sid\" : \"DG3AfA9D0Ff6e9BDc7CCf3A987b7b45CD0\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/446307\",\n    \"sid\" : \"DFC2aA39bf757FFAB10bBBA1C6E35864D2\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/964977\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/201885\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/387015\",\n    \"page\" : 4845897222138583536,\n    \"key\" : \"o31suy3xbi3tkgye0jdbiqe68wx0x3aw1pjc2wvxb05h90a4e9xo9vkjx218e4dlyyucp8n377feb6v9d1u3qv1f0r4iptuahicjwex\",\n    \"url\" : \"https://web.example.mocklab.io/604761\",\n    \"page_size\" : 5839721875913897564\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67b6370d-525f-47ba-aed2-913bd14f80db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.350847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscription",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "subscriptions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscriptionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "6abfbb8c-f0f3-44ae-96c2-53592bbc99e1",
    "name" : "Validate that a test event for a Sink was received.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG42BfBB1EEd56145fF4c02B3d7fb88A6e/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"nf71erajsls351igzs2hibphvrf7p5j2a08uiwvemqe38kardwjkb4doesrkr7zhtdgrku6yfd5nt89jkj84b01k31tw9llrmycropj515wzdhfkl4r5nidfq9624forzz4ul4jnu9rsoorh3q83vjgjbztqwgkmrgassssugvap64z3i32q6qg5716h4d0cme8u946\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6abfbb8c-f0f3-44ae-96c2-53592bbc99e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.350038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkValidate",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the given Sink was validated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "d9c83d6a-9a37-4ef0-87ef-2c9305f18fe4",
    "name" : "Create a new Sink Test Event for the given Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGb6C2A910Bf01aabFf65844266ff922Ad/Test",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"ljwmmbidtp6euot1bb2ofjrm1e1tw25wax1l8pfih54zn3483eeo0fvgsj5sy3v8wtowsp42bkucnwkj60xlpregt5psdmjjoy0lrjqztyq4rue6mm532cwypvzmyjoth28lhvg2wm25a2q7sf4rklg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9c83d6a-9a37-4ef0-87ef-2c9305f18fe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.349968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkTest",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the test event was generated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "1cd89efa-1905-48f6-b938-574334ccb63f",
    "name" : "Update a specific Sink",
    "request" : {
      "urlPath" : "/v1/Sinks/DGB0Edb0aa779a894EB0fCa5a781a83a5A",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-09-19T15:26:48.349Z\",\n  \"date_created\" : \"2023-11-07T15:32:35.349Z\",\n  \"sink_type\" : \"kinesis\",\n  \"description\" : \"Distinctio quae sunt doloremque itaque dolore nisi. Excepturi sit recusandae. Eum natus amet illo. Et fuga repellendus asperiores praesentium alias. Atque ut laborum dolorem numquam.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/571309\",\n  \"sid\" : \"DGD9bCd5d1973dc03e69987aC222Acdc52\",\n  \"status\" : \"validating\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cd89efa-1905-48f6-b938-574334ccb63f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.349895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "c7634fc6-adcb-4bfa-9198-d1c44a5aa30e",
    "name" : "Fetch a specific Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGEecb1ccD21a1D3fdf7DC77Da2FFA9eEC",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-10-08T20:13:34.349Z\",\n  \"date_created\" : \"2022-08-14T16:14:15.349Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Fugit at laborum veritatis quas explicabo. Tempora voluptatem est laudantium. Deserunt eveniet cumque omnis fugiat.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/216221\",\n  \"sid\" : \"DG00F296AEe1E89a34De835a9902f46a52\",\n  \"status\" : \"validating\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7634fc6-adcb-4bfa-9198-d1c44a5aa30e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.349681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "cbfd30e2-f057-4739-b421-a66d380021ee",
    "name" : "Delete a specific Sink. - 204",
    "request" : {
      "urlPath" : "/v1/Sinks/DGA7a6fAb2645C2c0cE7F8FF93114F3c53",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cbfd30e2-f057-4739-b421-a66d380021ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.34948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSink"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "c5dafd51-f741-4904-beec-8bca0c002b0c",
    "name" : "Create a new Sink",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-10-01T08:59:00.349Z\",\n  \"date_created\" : \"2024-01-18T00:35:43.349Z\",\n  \"sink_type\" : \"kinesis\",\n  \"description\" : \"Distinctio totam optio libero neque qui. Quo temporibus quae tempora quo ipsum. Ducimus quibusdam reprehenderit ut voluptate placeat tenetur laudantium.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/082757\",\n  \"sid\" : \"DGBA0d9DCF9ed6818DBe5bF1EA7BC46f9f\",\n  \"status\" : \"initialized\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5dafd51-f741-4904-beec-8bca0c002b0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.349433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "337f534a-14af-4660-9d5c-ada3ec3b3a32",
    "name" : "Retrieve a paginated list of Sinks belonging to the account used to make the req...",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sinks\" : [ {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-11-28T04:05:37.348Z\",\n    \"date_created\" : \"2024-01-31T21:56:58.348Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Et dolorum et fugiat aliquid. Odio animi omnis. Et ut dolorum non voluptate similique.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/281801\",\n    \"sid\" : \"DG4A970Ca1A09eAF4FFD341dEfaFd9e2B8\",\n    \"status\" : \"validating\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-03-30T08:57:41.348Z\",\n    \"date_created\" : \"2023-06-28T04:35:20.348Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Eum quae quas rerum quidem quia placeat. Quia est voluptatibus ea saepe ea tempora nesciunt. Nulla enim autem. Quidem fugit ab ad aperiam.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/003172\",\n    \"sid\" : \"DGfe4B57a01cd5Cdffd906d38D57f7c5A1\",\n    \"status\" : \"initialized\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/816057\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/810652\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/946165\",\n    \"page\" : 4995862853896472679,\n    \"key\" : \"8xl2imzjk4eavbnp5yfepz6iqwmib1vj1a1lcgqazyv750dpjw9u8na9cwvs41tbj\",\n    \"url\" : \"https://web.example.mocklab.io/712888\",\n    \"page_size\" : 2686225423749670454\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "337f534a-14af-4660-9d5c-ada3ec3b3a32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.349194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSink",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sinks" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.sink"
                },
                "type" : "array"
              }
            },
            "title" : "ListSinkResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "3ecda306-eda8-4056-970a-f5f9bc0182e8",
    "name" : "Fetch a specific schema and version.",
    "request" : {
      "urlPath" : "/v1/Schemas/3ub5/Versions/2801582971848041260",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 7468155259749388228,\n  \"date_created\" : \"2023-01-11T15:04:23.348Z\",\n  \"raw\" : \"tpg92qyphu2xvpjj48\",\n  \"id\" : \"f14a\",\n  \"url\" : \"https://web.example.mocklab.io/308876\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ecda306-eda8-4056-970a-f5f9bc0182e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.348467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchemaVersion",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date the schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "raw" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The version of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d14ac9a1-6439-4fe5-bb9d-d23478442544",
    "name" : "Retrieve a paginated list of versions of the schema.",
    "request" : {
      "urlPath" : "/v1/Schemas/dh48/Versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/755842\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/798456\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/609031\",\n    \"page\" : 7131905304642877194,\n    \"key\" : \"e9ml6z85nvfi2yydw9ex6\",\n    \"url\" : \"https://web.example.mocklab.io/893931\",\n    \"page_size\" : 2933555597407855830\n  },\n  \"schema_versions\" : [ {\n    \"schema_version\" : 2344776290327740389,\n    \"date_created\" : \"2022-10-17T12:42:30.347Z\",\n    \"raw\" : \"htdzts2e78kk7kw25z87agkhbegud2n8q97tffhx3e0eh5uuns7tz1zqah37nxglix0vja50bsk4qvbru040ngucs45vj7amt5\",\n    \"id\" : \"38u1\",\n    \"url\" : \"https://web.example.mocklab.io/781359\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d14ac9a1-6439-4fe5-bb9d-d23478442544",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.348146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSchemaVersion",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "schema_versions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.schema.schema_version"
                },
                "type" : "array"
              }
            },
            "title" : "ListSchemaVersionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "496d9c93-f6db-4897-ba48-5408f299729d",
    "name" : "Fetch a specific schema with its nested versions.",
    "request" : {
      "urlPath" : "/v1/Schemas/ot72",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"latest_version\" : 6348939903810712517,\n  \"links\" : { },\n  \"id\" : \"18p9\",\n  \"latest_version_date_created\" : \"2022-07-01T09:57:32.347Z\",\n  \"url\" : \"https://web.example.mocklab.io/206856\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "496d9c93-f6db-4897-ba48-5408f299729d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.347426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchema",
          "schema" : {
            "properties" : {
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_version" : {
                "description" : "The latest version published of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "latest_version_date_created" : {
                "description" : "The date that the latest schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this schema.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}