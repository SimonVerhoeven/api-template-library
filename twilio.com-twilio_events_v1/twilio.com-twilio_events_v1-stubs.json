{
  "mappings" : [ {
    "id" : "8f846963-b267-4411-ad1d-e757265b97b3",
    "name" : "Fetch a specific Event Type.",
    "request" : {
      "urlPath" : "/v1/Types/h8ahya2slqkqlgkkwpfiolridtga2vbcaqd9v487ao29pll5jyniukvxre1wmow1ker5bxm2tcj01hzscmfzkr1lb3g13b9ptwe80wp087nvdncejejxav2qvkvoar2omb0eddtat4ujwy5enaf4hixpdjb4iwm984473wpjux",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-05-23T08:22:05.045Z\",\n  \"date_created\" : \"2023-09-30T14:48:28.045Z\",\n  \"schema_id\" : \"x53b\",\n  \"description\" : \"Facilis nisi a et voluptatem deserunt. Cum sed inventore. Assumenda sequi vero error ratione.\",\n  \"links\" : { },\n  \"type\" : \"m6yvr4syqo7cce1l2m07r91765rw6oqhsd1ea38rb0qfbq6byp1o1oqckq2em9703xkd0be5yqekpgk0wnkefq3ghehac6abp6r8dp0nuu8\",\n  \"url\" : \"https://web.example.mocklab.io/661128\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f846963-b267-4411-ad1d-e757265b97b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.04532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEventType",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Event Type was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Event Type was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "schema_id" : {
                "description" : "A string that uniquely identifies the Schema this Event Type adheres to.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A string that uniquely identifies this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0d403ac-1a93-4421-9811-304a3a2999db",
    "name" : "Retrieve a paginated list of all the available Event Types.",
    "request" : {
      "urlPath" : "/v1/Types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"date_updated\" : \"2023-01-28T20:43:35.044Z\",\n    \"date_created\" : \"2023-04-06T08:54:25.044Z\",\n    \"schema_id\" : \"4622\",\n    \"description\" : \"Consequatur nisi corporis sed. Asperiores dolorem architecto. Quod in nobis ut. Iusto veniam quasi et. Autem iure illum eos unde.\",\n    \"links\" : { },\n    \"type\" : \"l9iaq6if8o518ym5fhyu2ivrenfvzgjt8pawckqfgdlf9xh5nsazl36qsfcipg2ji1s58lk28jc0yno60mykwsl33phyattk2d7fg8d30ilcr5qol5ad\",\n    \"url\" : \"https://web.example.mocklab.io/126862\"\n  }, {\n    \"date_updated\" : \"2022-11-30T05:48:32.044Z\",\n    \"date_created\" : \"2022-11-14T12:32:21.044Z\",\n    \"schema_id\" : \"4b7w\",\n    \"description\" : \"Cum sapiente dolorem id dignissimos ullam consectetur. Aperiam autem qui. Rerum magnam autem et eligendi dolorum nulla. Odio quas nisi est impedit ea. Illum aspernatur et exercitationem adipisci labor\",\n    \"links\" : { },\n    \"type\" : \"mmmre1a2xw3vj3g9prchqaae6g3g3ngve740msfm406noqcuzdc12fxvn9b07k4y4mw0obhq3fgvjd1rifxpu5zi840g6706\",\n    \"url\" : \"https://web.example.mocklab.io/597380\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/446541\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/553819\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/446552\",\n    \"page\" : 2036048724247980472,\n    \"key\" : \"lew1xex9mq59hn\",\n    \"url\" : \"https://web.example.mocklab.io/333748\",\n    \"page_size\" : 4993179010934472647\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0d403ac-1a93-4421-9811-304a3a2999db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.045045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEventType",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.event_type"
                },
                "type" : "array"
              }
            },
            "title" : "ListEventTypeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0e48a180-651e-42bb-a486-6c148eb6b76b",
    "name" : "Update an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFE18CfE0D3B4DfFA3Bc142Ac4Ba7b152D/SubscribedEvents/yr7uap9k3oqp3fxy3asrpxt6jog3ysafyi2w3lmj629p4ygsss7lf8bkxxeguu711tvckoh5kg3kl41yioc8w13244myjqtcpqr2uj5pyitjt0k0nwcfkjn1opmay1atkf1bdtp4e8ixq0h1ci1fvnp2q51bqrzklu6yh3",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 7839647964406145114,\n  \"account_sid\" : \"AC6dD80A6c76Dfa3ee5Bb7E9aF5AbBE54D\",\n  \"subscription_sid\" : \"DFCC5b61aeeFD8AF212E6C4B83eEa041f0\",\n  \"type\" : \"8xg2wiv3cus801pd7ohg4408i49hee7z9r31jme3sibnlbkpcsqahgzfwbccw5k79d0zv01lo8wqdo4l5avp\",\n  \"url\" : \"https://web.example.mocklab.io/792215\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e48a180-651e-42bb-a486-6c148eb6b76b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.044218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84c49495-6014-4af2-9715-b252d50675df",
    "name" : "Read an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF9111fc30869361A3bf6BC480ceDECD4C/SubscribedEvents/l5rgi016kafe87okmh55jshyrvmxh1scc7ohynxofavvdz7rg7kpl5bk3m7ve35gwd2i7ynoui5e403lll9dyonet0jdvw0g3mwx9uo5v3boriihiy8f9hz8rhxvjdkp435gyqk0vo7voep4f9h9f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 3757139066950195575,\n  \"account_sid\" : \"ACf4EfecAe4B5Cb27F41Fa0eA59De9f6FA\",\n  \"subscription_sid\" : \"DF5d448E8Ee6E2DC1abff2Ae3E5322BE68\",\n  \"type\" : \"z9lc2b0l27furvly8do28wiwqruhyxq1zybrsic9ec0yr91ucb2va0d2k8kq6kjxh9tka1gi692wo0vwywi42b87b5gvtd0mnylq9sd3a4ut614c1d15f8l2l3ctvq8hkokfy4r5b1w9c2mxyhr2fzp3iiwg7990xoptw4rnze7s39\",\n  \"url\" : \"https://web.example.mocklab.io/832383\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84c49495-6014-4af2-9715-b252d50675df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.04404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09bec712-f9f3-4217-9fae-540ad5f46e41",
    "name" : "Remove an event type from a subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFDdE3f956eB317Cd7d28ceeA7BCE4fF4C/SubscribedEvents/nu91rhdarxorkubl",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "09bec712-f9f3-4217-9fae-540ad5f46e41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.043862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscribedEvent"
        }
      }
    }
  }, {
    "id" : "ba4bb669-1b6f-4953-9b4d-5331bf6cedef",
    "name" : "Create a new Subscribed Event type for the subscription",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF2244d71eA6a9aAeCf73BCA4Cb5B3EcC1/SubscribedEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"schema_version\" : 1820412656471614812,\n  \"account_sid\" : \"AC3dD8a6A6937F1fC7b0FB04888c1E8Eca\",\n  \"subscription_sid\" : \"DF07BCAc0cB6af8acC5Ec4FeebC8CD6D4A\",\n  \"type\" : \"rs3s9a0wh7unvxd8bsceukag9lfs7hhe4pvojyl4o72d5bbjos1\",\n  \"url\" : \"https://web.example.mocklab.io/364547\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba4bb669-1b6f-4953-9b4d-5331bf6cedef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.043806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f4cf95ea-98c8-4c74-a3a6-4292aba2c285",
    "name" : "Retrieve a list of all Subscribed Event types for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF0e15FfC2df93F693Bb0Cb6af34cd95F4/SubscribedEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"schema_version\" : 7752061493956207307,\n    \"account_sid\" : \"ACB942e06C9CA1aDE66E49C488Bb45007D\",\n    \"subscription_sid\" : \"DF180a2b65D3614fd29c6B3a26527B7303\",\n    \"type\" : \"qcmbom3b2sreykm2vahmjx3v2wc503ea2dcbykmm0z63lrh7x55ypwzc4oux7qy3tu8d88vlag8e8mn1pdhqwf2oz20dgqf3289hxjqqzd89n0og4spvgeqabfsjv8u3t9oj50onw772325i14on1av327sabvq7fi9z4jck0itbqr10pfb8jq321a9t\",\n    \"url\" : \"https://web.example.mocklab.io/908995\"\n  }, {\n    \"schema_version\" : 4407548598297723862,\n    \"account_sid\" : \"ACBBcDCefB65aCe0d58D5b3A9D3eB00Fdf\",\n    \"subscription_sid\" : \"DFEfe19BAfd071a285Fb844255b18DFDDE\",\n    \"type\" : \"km2l\",\n    \"url\" : \"https://web.example.mocklab.io/844783\"\n  }, {\n    \"schema_version\" : 4272610120004597859,\n    \"account_sid\" : \"AC5616DEEe9F688eeEeFc3AA0Fccf4f74D\",\n    \"subscription_sid\" : \"DF7cd221a9C4C1E35dbD1f3CCcdf9C47E2\",\n    \"type\" : \"cof7itaj1uvkx7i4cz66g9t63ydodzxyh3dkdkbxsb\",\n    \"url\" : \"https://web.example.mocklab.io/761447\"\n  }, {\n    \"schema_version\" : 8800621815915882032,\n    \"account_sid\" : \"AC540bb360fCd3994edE4cDEe63d55f7dB\",\n    \"subscription_sid\" : \"DF6aEb7027B5fEd74bC73dAAeb9AB8DefD\",\n    \"type\" : \"rvbru9bm12lgyvqe271whhw66itoyi2a0eaou5gbnr5h0w4jeple9jg0n5ip1jam3pcxgli34a1fhyepxjizae575o\",\n    \"url\" : \"https://web.example.mocklab.io/912907\"\n  }, {\n    \"schema_version\" : 7938976810293451518,\n    \"account_sid\" : \"ACFD520A4Fc5fc8a8BbFC3b2942640a815\",\n    \"subscription_sid\" : \"DFe7bF8BED4BeC5Ac6B81bc6bC7abF4DAB\",\n    \"type\" : \"ykjvfpgm1ndzz7xn4fs0or8dus2it5pusoayyob1y5ufdezzcnmtl8nwe1v0g87crdhdw06cdagq6yxp3zax1wjx63y1lbfv8cahklthou5oycxsjviribhdr23u2dehzq2on3byhi3me8oea77d7o8h9jqx9brz8e9\",\n    \"url\" : \"https://web.example.mocklab.io/988027\"\n  }, {\n    \"schema_version\" : 6103183126677281400,\n    \"account_sid\" : \"AC32CE7ADDe3C1C1E9F9AD901bD3cCcFab\",\n    \"subscription_sid\" : \"DF206736e745e26adc6F3b0feBE1Ba926c\",\n    \"type\" : \"bsb2b6qwkigjuwqg8o8oso00vrtr2lnaggbf7kve1kpx35we4xpv85wm4s3qf8kmo6u53q7gitd9cs6d\",\n    \"url\" : \"https://web.example.mocklab.io/688823\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/774747\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/485609\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/912544\",\n    \"page\" : 2288823887206363011,\n    \"key\" : \"71khimp90zchmcb9y3r8z6nvfjdbzc4mg\",\n    \"url\" : \"https://web.example.mocklab.io/337277\",\n    \"page_size\" : 3514563210791036675\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4cf95ea-98c8-4c74-a3a6-4292aba2c285",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.04362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscribedEvent",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription.subscribed_event"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscribedEventResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa0fe572-c4ec-4c78-8e8c-c740f4fcbd50",
    "name" : "Update a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF382DF831Ab1A6303F2BC68d1Ef471d88",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-11-07T09:50:24.042Z\",\n  \"date_created\" : \"2022-05-18T19:42:59.042Z\",\n  \"account_sid\" : \"ACEE0Ab08DFDeA04adBDED0B123Dd66C3c\",\n  \"description\" : \"Sit aut fugit quia illo praesentium quod. Aut facere vel omnis et pariatur et molestias. Aut sit quos ducimus culpa eos. Nulla quasi est non corrupti.\",\n  \"sink_sid\" : \"DG26A47f997D4d2Ea058B0AFA72fD6cE4d\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/510762\",\n  \"sid\" : \"DFDfEB56FDFDFbb212BdcdccF4DB1caF5B\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa0fe572-c4ec-4c78-8e8c-c740f4fcbd50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.042635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f7bda974-7ac4-4162-9b36-7fbef543665a",
    "name" : "Fetch a specific Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFEEa2C0D32d45b43DaF79E9385F9b5fAC",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-08-29T13:39:07.042Z\",\n  \"date_created\" : \"2023-01-28T09:27:39.042Z\",\n  \"account_sid\" : \"ACbfF3c04B74fFe49Dc0FfA831EB57Aba4\",\n  \"description\" : \"Excepturi aut eos necessitatibus. Repellat quo corporis labore. Porro voluptatem molestiae et sed et id.\",\n  \"sink_sid\" : \"DGE1aD8878f1573b7aaba0DE0ACdbAcA61\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/447679\",\n  \"sid\" : \"DFC8fc3003B5D52865E0770c7521F48EFd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7bda974-7ac4-4162-9b36-7fbef543665a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.042414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1cffd20-a9b1-4709-9aa7-4a55a2121d1d",
    "name" : "Delete a specific Subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFfeBEb5DbdC380240B30Dc3f35d9F80E8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e1cffd20-a9b1-4709-9aa7-4a55a2121d1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.042205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscription"
        }
      }
    }
  }, {
    "id" : "7f881518-d49c-4446-9e98-23539ef6ff70",
    "name" : "Create a new Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2023-01-25T17:57:28.041Z\",\n  \"date_created\" : \"2023-06-16T00:34:38.041Z\",\n  \"account_sid\" : \"AC4d55cA4CD7ccbB7b7F77e3cB9c9CC3BA\",\n  \"description\" : \"Quia inventore ut eos quia tempore laborum quis. In dolores sit mollitia. Porro consequatur hic dolores.\",\n  \"sink_sid\" : \"DGD4CDc0CC1441dDf1dB7FaEC3A38bBa9F\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/057942\",\n  \"sid\" : \"DFefDaF55d647a1CcadCc9a826A8cfFAC0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f881518-d49c-4446-9e98-23539ef6ff70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.042165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "acf80e34-176e-4a90-8877-f840a99aca47",
    "name" : "Retrieve a paginated list of Subscriptions belonging to the account used to make...",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"date_updated\" : \"2022-08-30T12:49:28.04Z\",\n    \"date_created\" : \"2022-07-01T19:56:45.04Z\",\n    \"account_sid\" : \"AC3b68edADD6faEe09EDcCfFAca86AB19e\",\n    \"description\" : \"Ipsam et sed consequuntur eum temporibus placeat ea. Consequatur voluptas aut. Ut pariatur expedita dolores impedit quidem.\",\n    \"sink_sid\" : \"DG1e5BEFAebEC0cBFc94dc1F40FB0AfFaC\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/402082\",\n    \"sid\" : \"DF8EAb5D44cc6AaaAA153AAF3fBe374dff\"\n  }, {\n    \"date_updated\" : \"2022-09-23T17:15:07.041Z\",\n    \"date_created\" : \"2023-09-03T19:54:05.041Z\",\n    \"account_sid\" : \"ACdE1bEa4a9bcB67e3Ae19AaA379ADB2b0\",\n    \"description\" : \"Doloribus aperiam et maiores totam eum sapiente. Et iste aliquam quibusdam beatae impedit. Incidunt recusandae ut quae voluptatem accusantium quos.\",\n    \"sink_sid\" : \"DG2218AcBB75ef8FdB5D01dfa5DCcfdCDE\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/390917\",\n    \"sid\" : \"DF911922f60Ee5e3fb26bE5615061C8bee\"\n  }, {\n    \"date_updated\" : \"2022-10-21T22:41:13.041Z\",\n    \"date_created\" : \"2022-07-13T15:35:01.041Z\",\n    \"account_sid\" : \"ACbC71D3EcA38becEdccF362F0bB90EDbc\",\n    \"description\" : \"Cum nostrum est. Atque quaerat voluptates laudantium quia quis. Reiciendis totam et sunt cum.\",\n    \"sink_sid\" : \"DG4E94CA76CD8E0dFFdCB0bdE3FB248Da3\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/040865\",\n    \"sid\" : \"DFe3B4f0c14DfBE1b3Cb1Bb15342DDcE2A\"\n  }, {\n    \"date_updated\" : \"2022-12-30T13:45:56.041Z\",\n    \"date_created\" : \"2023-02-19T07:26:42.041Z\",\n    \"account_sid\" : \"AC9B1FcECB869B7d0B3ec5eea503109687\",\n    \"description\" : \"Similique sapiente sed. Iusto laudantium eius rerum est quisquam ut. Qui praesentium perferendis rem voluptatem saepe voluptas. Dicta amet eius facilis.\",\n    \"sink_sid\" : \"DGaDc27E3c9F8cCef108bEFb4c2BbeAef3\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/911314\",\n    \"sid\" : \"DF3A5aDec0a2DF4bcFc6B8A2f32cbB74c4\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/923803\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/527776\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/176600\",\n    \"page\" : 3090809037640735189,\n    \"key\" : \"pbuvky27dni5i361df5011q6s141i04tlpt92z3kgvx5s6w59d5eax66i2fyg3ctz3rhanksaosg4evpmcuxpzaj9oftml8f47k3\",\n    \"url\" : \"https://web.example.mocklab.io/425347\",\n    \"page_size\" : 547348289071152972\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acf80e34-176e-4a90-8877-f840a99aca47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.041926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscription",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "subscriptions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscriptionResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa19e4f3-9ec1-44b0-b063-577c9e8467fc",
    "name" : "Validate that a test event for a Sink was received.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGB4CbEdFcBf804f6Ace1b7A141ED3ab64/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"4ufbqbw0jzlaem3xd266hlpslipvv8d6eajs9y0e8tq4dfn6f0hmg6gz44kiio6xzsegqu4gbabc5b2fyumw53\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa19e4f3-9ec1-44b0-b063-577c9e8467fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkValidate",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the given Sink was validated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e65e6f32-2acb-422a-9df9-073d098206f4",
    "name" : "Create a new Sink Test Event for the given Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG555BB6EeA78B2f7aD05EDaC9CD312713/Test",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"h98l2tv28tgu986nigeuure09i4y8lmf8smmjk524fbfooegbiusustnpn709lavf11c1131nzjbktb4j36hxi2hese6xbxog5y05g10vimdd4oj294594tvv2q4cqnq3iwuiq62qxktb0bxofbgrr258mm71q4w6pjserc526\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e65e6f32-2acb-422a-9df9-073d098206f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkTest",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the test event was generated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95e7c926-ec9a-44d9-83e4-1fcc811b7b97",
    "name" : "Update a specific Sink",
    "request" : {
      "urlPath" : "/v1/Sinks/DG4f71a394683bDf7337bdCcd9009dbDBb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-05-24T02:26:36.04Z\",\n  \"date_created\" : \"2022-07-26T19:06:26.04Z\",\n  \"sink_type\" : \"webhook\",\n  \"description\" : \"Facere eveniet repudiandae. Eos quibusdam non. Quo suscipit facere at ut minus non. Rem unde fuga incidunt et unde corporis hic.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/229896\",\n  \"sid\" : \"DGc931E62eE8355629c5Ed55951cAbFCCB\",\n  \"status\" : \"initialized\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95e7c926-ec9a-44d9-83e4-1fcc811b7b97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "42d18b90-9a44-44fb-8d53-bec4068d781c",
    "name" : "Fetch a specific Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG0cef08Af8C4DEdedfd92aEA51dCcC737",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-07-25T06:31:10.04Z\",\n  \"date_created\" : \"2023-09-04T11:08:40.04Z\",\n  \"sink_type\" : \"webhook\",\n  \"description\" : \"Et quia magni cumque ex rem ut. Tenetur similique ipsam tenetur atque voluptatum esse atque. Suscipit ipsa iusto reiciendis distinctio fugit aspernatur.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/822099\",\n  \"sid\" : \"DG8033CffFb45af7AB80b3B1E5E4379558\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42d18b90-9a44-44fb-8d53-bec4068d781c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64fa5e4e-9f18-4978-8eef-17b5477341f0",
    "name" : "Delete a specific Sink. - 204",
    "request" : {
      "urlPath" : "/v1/Sinks/DGEF4aDaF7efeD7d76ab09b6DecFC8EB0D",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "64fa5e4e-9f18-4978-8eef-17b5477341f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSink"
        }
      }
    }
  }, {
    "id" : "38ad2155-aaa1-4d43-97f8-0da81b42ef89",
    "name" : "Create a new Sink",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-06-25T02:08:51.04Z\",\n  \"date_created\" : \"2022-11-05T11:40:14.04Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Doloribus hic minima quae minima similique. Expedita illum officia eius. Repellendus debitis qui ut dignissimos est perspiciatis porro. Incidunt odit velit. Commodi officia nihil.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/809019\",\n  \"sid\" : \"DGffFBA9F631Aa068fCa4E5497A1C26dc6\",\n  \"status\" : \"initialized\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38ad2155-aaa1-4d43-97f8-0da81b42ef89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8dbbe9e6-0c6a-4803-af97-56826d44c45f",
    "name" : "Retrieve a paginated list of Sinks belonging to the account used to make the req...",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sinks\" : [ {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2024-02-02T21:42:34.038Z\",\n    \"date_created\" : \"2023-02-11T20:36:51.038Z\",\n    \"sink_type\" : \"segment\",\n    \"description\" : \"Aut libero suscipit et. Suscipit ea excepturi eos suscipit in. Quo aliquam modi.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/356168\",\n    \"sid\" : \"DG929C7B82FAa4627babaDB3c2e1DC8723\",\n    \"status\" : \"active\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-06-27T23:15:31.039Z\",\n    \"date_created\" : \"2023-12-27T16:21:41.039Z\",\n    \"sink_type\" : \"segment\",\n    \"description\" : \"Assumenda et laudantium veniam ratione. Laborum qui ut illo. Aut at cum maiores animi voluptatem. Dicta voluptatem cum consequatur.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/858668\",\n    \"sid\" : \"DGdEd88cbbF5CeBD1EdE3241ED82F14E8e\",\n    \"status\" : \"failed\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-03-01T04:29:26.039Z\",\n    \"date_created\" : \"2022-08-14T17:08:44.039Z\",\n    \"sink_type\" : \"segment\",\n    \"description\" : \"Eos beatae modi facilis autem distinctio dolor. Velit ea vitae quae facere. Quas dignissimos ut repudiandae. Possimus atque tempora vel omnis veritatis. Autem dignissimos totam dolor.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/676111\",\n    \"sid\" : \"DGAf423aFfae3Ccc949aA0C4E67B172bd6\",\n    \"status\" : \"initialized\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-05-17T19:54:17.039Z\",\n    \"date_created\" : \"2023-05-13T17:20:46.039Z\",\n    \"sink_type\" : \"segment\",\n    \"description\" : \"Aut est consequatur aut sed quia sed. Reiciendis facilis debitis voluptas doloribus. Exercitationem libero tempora ullam voluptatem doloribus alias.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/690162\",\n    \"sid\" : \"DGc6e59482aD66280d74FBE018fA198BCF\",\n    \"status\" : \"initialized\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-03-05T00:09:34.039Z\",\n    \"date_created\" : \"2022-06-01T11:14:07.039Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Consequuntur veritatis fugiat est. Aliquam ea velit. Unde et est est est doloremque. Itaque repellendus dolor et vitae.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/302347\",\n    \"sid\" : \"DGc1d256FfF2B4F4D6B2bBBB60cc67C15C\",\n    \"status\" : \"validating\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-07-16T21:04:25.039Z\",\n    \"date_created\" : \"2022-10-31T07:54:19.039Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Et eos ab voluptatum laudantium. Labore nemo accusamus est veniam. Ipsam omnis nisi quisquam. Aliquid pariatur unde quo. Placeat ab molestiae aut.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/639698\",\n    \"sid\" : \"DG9dAb35F4B40daDfDBe7FDEB2E5f7D9de\",\n    \"status\" : \"initialized\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/033739\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/922363\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/717232\",\n    \"page\" : 5480028838343011208,\n    \"key\" : \"vngmcyw4s6l2mysho7id36mzpk4qplcfqgwhqsuh19mb6ecarkvn4v5mvwf9vz55nk0m36jfw7k1tgoqqsyx23akaeghbxxzqy2qahda3t6pr7lnlwlwz20554crtngpaifhr0xmk2zh5j2i0hlvtvklpsxynkxnc4\",\n    \"url\" : \"https://web.example.mocklab.io/959417\",\n    \"page_size\" : 8162622121899527766\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dbbe9e6-0c6a-4803-af97-56826d44c45f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.040072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSink",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sinks" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.sink"
                },
                "type" : "array"
              }
            },
            "title" : "ListSinkResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ce146294-b7ac-4e19-b427-dd04e86d2baa",
    "name" : "Fetch a specific schema and version.",
    "request" : {
      "urlPath" : "/v1/Schemas/8a3x/Versions/579057157880562981",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 5863685401592583041,\n  \"date_created\" : \"2022-08-17T00:53:38.038Z\",\n  \"raw\" : \"sqgcf1u6k7yru5fs1q6qlnivwrrzyd173nu2wt5tmk7lom3hfzhnp4u1kcsgxki3apkafx\",\n  \"id\" : \"704i\",\n  \"url\" : \"https://web.example.mocklab.io/309076\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce146294-b7ac-4e19-b427-dd04e86d2baa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.038807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchemaVersion",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date the schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "raw" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The version of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "371e23c9-4c36-4d54-9254-b6caf2655067",
    "name" : "Retrieve a paginated list of versions of the schema.",
    "request" : {
      "urlPath" : "/v1/Schemas/zp95/Versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/830540\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/499595\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/802437\",\n    \"page\" : 8105523092596764806,\n    \"key\" : \"etmz7bdcs8ogwkreld\",\n    \"url\" : \"https://web.example.mocklab.io/000861\",\n    \"page_size\" : 8427377470627907092\n  },\n  \"schema_versions\" : [ {\n    \"schema_version\" : 6336297959414759827,\n    \"date_created\" : \"2022-12-27T02:33:18.037Z\",\n    \"raw\" : \"i9tofqz51saz06czso3wypokvioqhelhzu46cks7od9grjepjpbys4rzn4kn1hk7e0m5aeu7qzqz898l60dj62v98gjowjtiq5tpgd49fmc8qgp3xs9n2irzqutyy5rho24mm3wczdzz656cjv4ekh4lhwm3k1wdp3v05qv1y2z4jij4ezgokd\",\n    \"id\" : \"089q\",\n    \"url\" : \"https://web.example.mocklab.io/980409\"\n  }, {\n    \"schema_version\" : 1993139768757930082,\n    \"date_created\" : \"2023-07-01T22:14:19.037Z\",\n    \"raw\" : \"dahpj4hu39duoeeatok2y59g45uhrd7l7zno5o6gvv63bwxjytt9gknbkq7k140apt0jnkahogz16xpr1if5rhf5znd5r6sq2lfdpjmvl\",\n    \"id\" : \"n837\",\n    \"url\" : \"https://web.example.mocklab.io/094849\"\n  }, {\n    \"schema_version\" : 9039404095763288712,\n    \"date_created\" : \"2023-06-02T18:00:59.037Z\",\n    \"raw\" : \"vhvsz39tk8iuudvdsqsnux5xde6e9a7sw45w784ggvd87k1s6ilahriv8loh87m9wzl603ry5200wlsoqk78mg8flixwqmxdpttlmgm5zqgvsu75ob2ah1sypac47hmwxudbgu88ebnlp5rjkw6vzeyj8kygg92267f163uz3fjdnnw3aycgjrmdy8hy5il\",\n    \"id\" : \"1aqt\",\n    \"url\" : \"https://web.example.mocklab.io/784193\"\n  }, {\n    \"schema_version\" : 544711090100912509,\n    \"date_created\" : \"2023-02-21T17:01:47.037Z\",\n    \"raw\" : \"4ogv9xmfkm3suat1luco6ouqf7qzrqws2q67g4fyj49xwdqusab343kzvd99c77i3i0d9ojy09vtyi7mbzsqq98\",\n    \"id\" : \"e8sm\",\n    \"url\" : \"https://web.example.mocklab.io/865873\"\n  }, {\n    \"schema_version\" : 5562210084518644737,\n    \"date_created\" : \"2022-03-11T14:05:45.037Z\",\n    \"raw\" : \"5yu71v92qonfuwnv5fyv0aalbgvygv9a4fhbtm6fgg1gemph1mwrr1f551omfmre2p8k4dcbcajvlvno5ng22493xx02krnctryquu17oupsg8b2db1g392ee5udm6bh7ur1ivue7z0zrige1qg4gn5v4xzxurekg2416nb1qi0s9o9tewt4\",\n    \"id\" : \"8zac\",\n    \"url\" : \"https://web.example.mocklab.io/434506\"\n  }, {\n    \"schema_version\" : 953481754007714235,\n    \"date_created\" : \"2023-03-08T14:17:52.037Z\",\n    \"raw\" : \"rxix2gcsi8d35mm8ias72xlww3hddr8dashe0i7oyx90zapozd648nmyeyfjjqift7u36hjuzszdemndd23r0mfeyl5x534r0bc994pfcnrgjdv1il796xnu9mza5uvx36784tdcagw9ccp9wapljxj30n6fpem85abi3lqjea4nf325c53z2yat9r8zgo6qsh\",\n    \"id\" : \"xa5y\",\n    \"url\" : \"https://web.example.mocklab.io/303911\"\n  }, {\n    \"schema_version\" : 863044308349822914,\n    \"date_created\" : \"2022-12-28T14:22:54.038Z\",\n    \"raw\" : \"giq651469f9me05iqi2g5e09gh8xjogg0er9gw3dzo3top3s36ys61ygjst8gwlxyvnv4cld89s98xspuwzqyo9nqq3e9ygnxfpyevu0zcoqfxmi2zg2n\",\n    \"id\" : \"wc6o\",\n    \"url\" : \"https://web.example.mocklab.io/309133\"\n  }, {\n    \"schema_version\" : 347459585298250755,\n    \"date_created\" : \"2023-08-11T21:48:34.038Z\",\n    \"raw\" : \"szoxt4kar4x1edo47vlck7s571vcfar74eho9hyrduudbjbbskmtc0v48l6r7x1d61mceqrt6c903vx1h6o92ynvi7py6vp4yz7dbo6i67slr0j1tqlkbffp1kemd03vdmlzdpsn1jps56ds6002jrk3kgvp7guuw46qzfh\",\n    \"id\" : \"07s3\",\n    \"url\" : \"https://web.example.mocklab.io/145090\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "371e23c9-4c36-4d54-9254-b6caf2655067",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.0385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSchemaVersion",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "schema_versions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.schema.schema_version"
                },
                "type" : "array"
              }
            },
            "title" : "ListSchemaVersionResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0eea627-816a-4e28-8703-a59fbe2762d2",
    "name" : "Fetch a specific schema with its nested versions.",
    "request" : {
      "urlPath" : "/v1/Schemas/kmc7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"latest_version\" : 2656065384713063894,\n  \"links\" : { },\n  \"id\" : \"1ej7\",\n  \"latest_version_date_created\" : \"2023-08-14T20:14:47.036Z\",\n  \"url\" : \"https://web.example.mocklab.io/502039\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0eea627-816a-4e28-8703-a59fbe2762d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:38.036759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchema",
          "schema" : {
            "properties" : {
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_version" : {
                "description" : "The latest version published of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "latest_version_date_created" : {
                "description" : "The date that the latest schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this schema.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}