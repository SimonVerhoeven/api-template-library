{
  "mappings" : [ {
    "id" : "b339c04c-ca44-385e-ad41-3da16669becb",
    "name" : "Fetch a specific Event Type.",
    "request" : {
      "urlPath" : "/v1/Types/62hh96smhbw4ycp2l0x77qd02l",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-07-07T07:01:05.343Z\",\n  \"date_created\" : \"2023-08-25T10:18:59.343Z\",\n  \"schema_id\" : \"2b1v\",\n  \"description\" : \"Laudantium ut et repudiandae. Fugiat cupiditate molestiae eum id. Atque ducimus recusandae odio sunt quia explicabo aut. Assumenda sunt non perspiciatis.\",\n  \"links\" : { },\n  \"type\" : \"5wen2gda2vjjmyjkcmdqnvcg3qurnb7\",\n  \"url\" : \"https://web.example.mocklab.io/133926\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b339c04c-ca44-385e-ad41-3da16669becb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchEventType",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Event Type was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Event Type was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "schema_id" : {
                "description" : "A string that uniquely identifies the Schema this Event Type adheres to.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A string that uniquely identifies this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0275e97d-f8ba-33a6-b7de-49763eb7eb71",
    "name" : "Retrieve a paginated list of all the available Event Types.",
    "request" : {
      "urlPath" : "/v1/Types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"date_updated\" : \"2023-11-17T00:03:52.342Z\",\n    \"date_created\" : \"2023-01-08T19:19:43.342Z\",\n    \"schema_id\" : \"n925\",\n    \"description\" : \"Ipsa enim repellendus sit officia adipisci. Totam id voluptas aliquid libero quasi suscipit. Fugiat dolores sequi quae voluptas quam eveniet. Aut aut recusandae omnis veritatis. Nihil ut qui et debiti\",\n    \"links\" : { },\n    \"type\" : \"x76voe6vmwy27wnjtgdfkyx6st5q4nl0av0fz\",\n    \"url\" : \"https://web.example.mocklab.io/123844\"\n  }, {\n    \"date_updated\" : \"2023-03-20T20:14:52.342Z\",\n    \"date_created\" : \"2022-03-10T02:17:48.342Z\",\n    \"schema_id\" : \"k30k\",\n    \"description\" : \"Nulla eos eaque. Aut earum quisquam hic aliquid. Non rerum rem veniam repellendus laboriosam illo. Voluptas nobis impedit voluptatem.\",\n    \"links\" : { },\n    \"type\" : \"3fsnqkk\",\n    \"url\" : \"https://web.example.mocklab.io/959454\"\n  }, {\n    \"date_updated\" : \"2023-04-11T14:29:29.342Z\",\n    \"date_created\" : \"2022-09-15T14:06:40.342Z\",\n    \"schema_id\" : \"2sci\",\n    \"description\" : \"Occaecati debitis velit odit vel delectus ut. Maxime quos sunt perferendis qui non dignissimos ut. Labore veritatis minima vel.\",\n    \"links\" : { },\n    \"type\" : \"jvx18l1c70wwwx7lh63y4qjgrlva1yih6wekupwmoip8ec73wzk6x2xl7eey3w6\",\n    \"url\" : \"https://web.example.mocklab.io/591330\"\n  }, {\n    \"date_updated\" : \"2023-12-21T02:40:41.342Z\",\n    \"date_created\" : \"2023-08-02T04:20:51.342Z\",\n    \"schema_id\" : \"np5z\",\n    \"description\" : \"Dolorem in dolores blanditiis eius. Vel delectus accusantium ipsa rerum voluptate sunt quidem. Cupiditate a et aut laborum beatae. Dolorum sed libero reiciendis nisi non pariatur.\",\n    \"links\" : { },\n    \"type\" : \"h7d9iw4wcu7ld4ljuaaff2o9u48vxpn6twqrhkuv9ndcm9afv2jmoha6e013u9fd4458egyo58re06imo2d5h635j\",\n    \"url\" : \"https://web.example.mocklab.io/255210\"\n  }, {\n    \"date_updated\" : \"2023-05-26T17:57:33.342Z\",\n    \"date_created\" : \"2022-03-19T16:38:53.342Z\",\n    \"schema_id\" : \"088r\",\n    \"description\" : \"Nulla eos odit qui. Exercitationem laborum quia repellendus enim non. Dignissimos dolorum eius perspiciatis.\",\n    \"links\" : { },\n    \"type\" : \"xo3k7zawqpot3md15cadqi2tinehtuq37okc7wkf6y3epaezp4z28fya47x1mse2x52yll7jrdwylz9zc72zuw5in2wfnsph9awwk4fh31deo7mi27\",\n    \"url\" : \"https://web.example.mocklab.io/731456\"\n  }, {\n    \"date_updated\" : \"2023-01-25T20:13:06.343Z\",\n    \"date_created\" : \"2022-07-16T15:21:46.343Z\",\n    \"schema_id\" : \"qr36\",\n    \"description\" : \"Aut eos blanditiis itaque. Eos ab eos sit similique. Odio mollitia assumenda et eum. Qui temporibus pariatur est ab eius eius.\",\n    \"links\" : { },\n    \"type\" : \"sz1r2ctgkw8lkd6l673bsbd7l718x6a7qdm2w3z2ucyqfcev4fo55hbphvz8cnfauf3hga907og\",\n    \"url\" : \"https://web.example.mocklab.io/079257\"\n  }, {\n    \"date_updated\" : \"2022-08-27T23:15:24.343Z\",\n    \"date_created\" : \"2023-08-27T23:22:57.343Z\",\n    \"schema_id\" : \"v7mu\",\n    \"description\" : \"Qui rerum aliquid. In doloribus adipisci laborum maxime molestiae. Voluptatum est voluptatem eius.\",\n    \"links\" : { },\n    \"type\" : \"xebajdmsjwj551gip4cfyivtjo97ny8l137h3ianug7gbwumkomuxhpim7273kqg7\",\n    \"url\" : \"https://web.example.mocklab.io/756131\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/289863\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/238186\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/418821\",\n    \"page\" : 4317372396145644582,\n    \"key\" : \"jk0gpi7g6kebwy3t1cxe3oew296iakcmkr5y86cg26h45ij9cp08omrdnb6v0552n1vhswwqkpqjxvi28t2pwz0hhgsk2ubboji5l9zeagfntdkbj3dxei5tzjxtiv7krh8umb1zqlxqz4n22i74av0cm2i63y5m3b6s3dd\",\n    \"url\" : \"https://web.example.mocklab.io/499583\",\n    \"page_size\" : 5907530305546753411\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0275e97d-f8ba-33a6-b7de-49763eb7eb71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListEventType",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.event_type"
                },
                "type" : "array"
              }
            },
            "title" : "ListEventTypeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "9816aaed-5ccf-3a8a-9064-13e0aea8050f",
    "name" : "Update an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFfbf3501C33E39C2FD6FF9249AfdAbffE/SubscribedEvents/ffwwpnoi3755scmyh57dkevr7p2sb8s7xltays1ljzry8gtnv7etqrku9cjmliclwpvsqxjbnq30gtyn9t4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 8162174331157420099,\n  \"account_sid\" : \"ACAB4cbd7A4b077e3f9170ef1A1b31105e\",\n  \"subscription_sid\" : \"DFB9d52DD8c38CAE6cf2Fd4eF91BAfBeE4\",\n  \"type\" : \"xlep5zdh5f2ozrmyy849nzv7apsevemfkibm0ycedkwlhpqqe192hvx7244s36jbeg8w9f9q1570\",\n  \"url\" : \"https://web.example.mocklab.io/249689\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9816aaed-5ccf-3a8a-9064-13e0aea8050f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "ea3dd362-a6b0-39bd-930d-2df48dab0e4b",
    "name" : "Read an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF3F23b8A350fBd15eFaD0c8765Aee46ff/SubscribedEvents/3pmlk6winh7ctre049u",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 4001385631354151391,\n  \"account_sid\" : \"ACc7a1BbC12ecF417F0FDCBb3f624F8b7B\",\n  \"subscription_sid\" : \"DFeB63a4C7fE32F3Fb4c9CaAcDcA503C47\",\n  \"type\" : \"q34j5kxglvp1epkx74xbn1wqc1acl971k6volgekikhs91r9nbssvieczadb3dplc303n79dje1ldzg4gigwmbjqjg3rcfbdzqw\",\n  \"url\" : \"https://web.example.mocklab.io/835362\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea3dd362-a6b0-39bd-930d-2df48dab0e4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "0ee6c5ae-e81a-388e-9018-cdaa636710d5",
    "name" : "Remove an event type from a subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF90f7262bFF2a1227FF4F4429f8F4c74d/SubscribedEvents/58qsck7hxqpngdjsgei0fbl6vw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0ee6c5ae-e81a-388e-9018-cdaa636710d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSubscribedEvent"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "a9b185d0-e4a8-37e0-a81e-f534188ee1d4",
    "name" : "Create a new Subscribed Event type for the subscription",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF01eCA7ba6CbaBBD3CC5b3eDBB467ab41/SubscribedEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"schema_version\" : 2071735524680079974,\n  \"account_sid\" : \"AC8797c9AF56e48Fc37a1Beeda6208811b\",\n  \"subscription_sid\" : \"DFd23Ff8bDcc8b8f81CeeCA2e96e70c324\",\n  \"type\" : \"o7ttzyy237ckdhg75c8xyj7pngqt63bhzader7ahqlbdg4itwki4vxz7kk9ndsgnawe65p1n3szfn0gody72hyqexbsox4gfnyctr2kl6j5kuhjit97ykddji02aojieg7n\",\n  \"url\" : \"https://web.example.mocklab.io/010019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9b185d0-e4a8-37e0-a81e-f534188ee1d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "79ee9701-a66c-3a8a-bdc7-7565e1a7702d",
    "name" : "Retrieve a list of all Subscribed Event types for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFa3187f474ba1FF464ffebc60E9A3ec3B/SubscribedEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"schema_version\" : 6498037700203031387,\n    \"account_sid\" : \"ACCc5D64e3c8dB9aadbfEcc7aCD09BDbb6\",\n    \"subscription_sid\" : \"DFE8137cb0AdcfEc41FcCfdc46cF4F4827\",\n    \"type\" : \"2vf9ndjmdep43est1esnglbfyq9zsne7ptbxslm1z359qm\",\n    \"url\" : \"https://web.example.mocklab.io/960196\"\n  }, {\n    \"schema_version\" : 8576861556638947209,\n    \"account_sid\" : \"AC5DCe8cd15FD33CDBD90f47DFA9e9C149\",\n    \"subscription_sid\" : \"DFdABBCB2Ef16ec293A38ad59acad37291\",\n    \"type\" : \"rlwrpt728omphujkot27ts9buxaf183wok1o4ctczwgycvdgilsjgu6go6sdutuhkyfd4vqmqffk0ovu1qit\",\n    \"url\" : \"https://web.example.mocklab.io/390388\"\n  }, {\n    \"schema_version\" : 7438743737520443984,\n    \"account_sid\" : \"ACB28fFE155C353c2Abf1276d5318d4B3B\",\n    \"subscription_sid\" : \"DFaF8Ca27Cc1Bb5daF05EaFd88feaa6Dfd\",\n    \"type\" : \"ajxkbj4imvudp3eufb60vkkoqkobm9jaq1phm1hdr8t6x49lcc4nhlyuiftwdaj7f3u44pzpbud93nexaj8if4ib3fempwnb6zkgze77ejsqx8i2n24c1kyhp67w5abm2im1\",\n    \"url\" : \"https://web.example.mocklab.io/992887\"\n  }, {\n    \"schema_version\" : 1969471068757285573,\n    \"account_sid\" : \"AC63Cefe34b54086e91AcBA74b039dc2Dd\",\n    \"subscription_sid\" : \"DFed82C021D4AD72b7Bf7BcbBE15b0e9a5\",\n    \"type\" : \"br9j3q6yerm2qxfqh6zaxd3hezfs7y48nm3d42f1rgg48p0q7gzvkbm4vnkzh8ul18tr6rnqa9ygrnl95wh\",\n    \"url\" : \"https://web.example.mocklab.io/075768\"\n  }, {\n    \"schema_version\" : 2719458525897291844,\n    \"account_sid\" : \"ACB013BECb44B5Eb6d2aC1596Ce1FcccC9\",\n    \"subscription_sid\" : \"DF2BAc0F4f3Ca69Fec92ceda4FDF93bb9d\",\n    \"type\" : \"a6z27g14rxnuffi4zg3\",\n    \"url\" : \"https://web.example.mocklab.io/785984\"\n  }, {\n    \"schema_version\" : 948259596536052062,\n    \"account_sid\" : \"AC484DF54db5B51eEe8b5A0Aca927f50ec\",\n    \"subscription_sid\" : \"DF6ecF3AD15f5dC8DE6BFeFde13F0cBDB8\",\n    \"type\" : \"zlpb4n7gw17uzuznaxpi2m1\",\n    \"url\" : \"https://web.example.mocklab.io/056311\"\n  }, {\n    \"schema_version\" : 6170758575509074209,\n    \"account_sid\" : \"ACCd2c042532A070626A76Cd4AC5dDC863\",\n    \"subscription_sid\" : \"DF0aCeF6AedfdaCD9b21CFcC1a7Dcc6CD4\",\n    \"type\" : \"q5aicczmjws1mlves4wrs5l4i2cs1h16tfi0ckdc2rl4vb7cr0gd0vp8rw48lur9w2ei7yd4q1corbwzbmnc2trfrabyanz1ryj0odlc31senqon6wnmcmd5ec205dhkyj96o5j8xm2pj0d6atvyy7xqoj7ua7hn1s7hab0\",\n    \"url\" : \"https://web.example.mocklab.io/559522\"\n  }, {\n    \"schema_version\" : 5708880701454637067,\n    \"account_sid\" : \"ACbD442c0939fdfB7fbD879d9ac270fe4b\",\n    \"subscription_sid\" : \"DF2d1Bb7bcdCddece9AC70d719cBFFAbEC\",\n    \"type\" : \"w88pq7weai8jfv643fu8mi0xa5hsg1c4b52pn64uj510c7pefkudih56o3fzyyaf148xan4k21hy453exh7hqsrllatlmz2xo7ea95u9631pwr98pcggw6v64ltjf54fi\",\n    \"url\" : \"https://web.example.mocklab.io/104810\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/047106\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/817904\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/382116\",\n    \"page\" : 6907227162169020617,\n    \"key\" : \"ymaq9na7vj3ja1761ut8ufym6ztgdtsayedkaym6wiac61g3nn1l0worqlh69j\",\n    \"url\" : \"https://web.example.mocklab.io/719665\",\n    \"page_size\" : 7761332789371733988\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79ee9701-a66c-3a8a-bdc7-7565e1a7702d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSubscribedEvent",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription.subscribed_event"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscribedEventResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f1209f59-c1fc-3e6b-9e20-9e9ef536e0fe",
    "name" : "Update a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFfC4aEe9daeffC6aFb2FE53DCD49eF412",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-08-18T08:21:57.34Z\",\n  \"date_created\" : \"2023-01-23T20:53:42.34Z\",\n  \"account_sid\" : \"AC9CF9b8482Cd40A3cE40dEFA315fDa081\",\n  \"description\" : \"Voluptatum exercitationem consequuntur. Aut asperiores expedita facilis qui consequuntur ex. Sunt cupiditate accusantium autem repellat quia.\",\n  \"sink_sid\" : \"DG55D2816dBdee2a6aaAFD06daeE8D1BAE\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/649081\",\n  \"sid\" : \"DF80870b1f0A70cA5b2F52eEfeaC9C11b0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1209f59-c1fc-3e6b-9e20-9e9ef536e0fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "04e16a08-3f30-3e3b-b197-93a4a3a64860",
    "name" : "Fetch a specific Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFdCdc8f1cb6AFADAA89c9FAFBDbA90ae6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-09-14T01:57:06.34Z\",\n  \"date_created\" : \"2022-05-18T13:47:18.34Z\",\n  \"account_sid\" : \"AC99Ee8a1FCA7fD79Da4f5fd01C1aa96f4\",\n  \"description\" : \"Autem ea natus itaque totam. Qui atque quibusdam non non qui eos. Perferendis omnis et. Quasi sed incidunt quia quo eos ut ipsa. Qui expedita quia est labore delectus.\",\n  \"sink_sid\" : \"DG3E12C020832f62ffEa9F0b1C8f1d6F7a\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/615846\",\n  \"sid\" : \"DFCbA10AB5EbdD6cf3C18154F87D98B0c7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04e16a08-3f30-3e3b-b197-93a4a3a64860",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "99a02a98-fc8b-3b15-9fc5-2e0e75db717c",
    "name" : "Delete a specific Subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFaa352DBD66C5f3fc8bd3B53AfacC9578",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "99a02a98-fc8b-3b15-9fc5-2e0e75db717c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSubscription"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a0a63959-edbf-38d0-a8dc-0ba24b17d7d6",
    "name" : "Create a new Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2022-10-03T01:30:09.34Z\",\n  \"date_created\" : \"2023-09-24T05:24:04.34Z\",\n  \"account_sid\" : \"ACCfD998bcbA8b890CDe5D5FdE34fDE591\",\n  \"description\" : \"Ipsam in corrupti. Rerum necessitatibus tempore molestiae id consectetur. Commodi explicabo in. Atque veniam veritatis ut esse provident.\",\n  \"sink_sid\" : \"DGdF25eADB0AaF4f9bD000c522aA63D95a\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/611033\",\n  \"sid\" : \"DFcAEeEc7CcF0C33D1af72aa114DfBb129\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0a63959-edbf-38d0-a8dc-0ba24b17d7d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "62686b8e-0f8e-3290-98bd-4b44f4710322",
    "name" : "Retrieve a paginated list of Subscriptions belonging to the account used to make...",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"date_updated\" : \"2022-04-16T18:31:36.339Z\",\n    \"date_created\" : \"2023-05-23T02:23:46.339Z\",\n    \"account_sid\" : \"ACaA4a3D7Ed1Ad5d8fADd220fA08c6cD6f\",\n    \"description\" : \"Ipsum rerum beatae repudiandae. Aut provident nostrum quaerat. Aut quo fuga corrupti perferendis. Dolores repellat cupiditate totam maiores qui omnis. Incidunt fugit omnis autem voluptatem illum.\",\n    \"sink_sid\" : \"DGaaED5BEcadBC16Bde2Bb5A07aC5F503D\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/359260\",\n    \"sid\" : \"DFACb482902fCbcEa7e9fF3368cdfBd4D7\"\n  }, {\n    \"date_updated\" : \"2022-09-21T14:43:19.339Z\",\n    \"date_created\" : \"2023-12-29T19:42:58.339Z\",\n    \"account_sid\" : \"ACe4E18C7f3aeAb73bbBb6aacbBCe8A573\",\n    \"description\" : \"In et voluptates laborum ab ipsa praesentium temporibus. Laudantium id nam voluptatem. Eligendi recusandae voluptatem earum veniam sit quidem. Quia voluptatem libero explicabo et voluptatem.\",\n    \"sink_sid\" : \"DGDf1a526F132B1f6b626e4A6a379e37Df\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/111343\",\n    \"sid\" : \"DFF3789e038aFFAfeecEb2b2ceafEFFa50\"\n  }, {\n    \"date_updated\" : \"2023-09-17T12:55:44.339Z\",\n    \"date_created\" : \"2023-11-30T12:52:30.339Z\",\n    \"account_sid\" : \"ACD87313e34Fd3Ac645c198BA3DE88B884\",\n    \"description\" : \"Facere totam iusto id voluptas aperiam praesentium. Et dolore aut. Asperiores consequatur veritatis corporis in non animi sunt.\",\n    \"sink_sid\" : \"DGD9cDB7750CA1Cf4fE460A17Ed59c9304\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/561910\",\n    \"sid\" : \"DF2ab281cBdD3FdaBDD7eaD8bBaE7c2EDE\"\n  }, {\n    \"date_updated\" : \"2022-08-28T06:40:34.339Z\",\n    \"date_created\" : \"2023-01-07T08:30:57.339Z\",\n    \"account_sid\" : \"ACDAce09ecA5BFc5c4FFb6AeBEe8dDB717\",\n    \"description\" : \"Et non velit alias. Beatae optio voluptas quaerat laborum laboriosam. Harum distinctio quasi.\",\n    \"sink_sid\" : \"DG3638f76e6c15CAFdaFBFB0B1653f8AD2\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/084334\",\n    \"sid\" : \"DFcD2627EB29ac08C308fe8BbfCd9c163f\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/345970\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/748367\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/927018\",\n    \"page\" : 404262065967129053,\n    \"key\" : \"2ffbypi7h5996vwoi8lp9o9oc\",\n    \"url\" : \"https://web.example.mocklab.io/823175\",\n    \"page_size\" : 4647445855704411380\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62686b8e-0f8e-3290-98bd-4b44f4710322",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSubscription",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "subscriptions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscriptionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ac6b4f3f-672c-3330-b8cd-330ea68f143d",
    "name" : "Validate that a test event for a Sink was received.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG0c48cA23Ac51AC2F744DDa50Eb45AbB7/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"jxytb04y2dg0fdicq8w9cbvzlte0gcvyfmhllj0xl4db2f5hl625g2t6wa9it85e245m0jl0lvci6qz9ycltdw6ex3o1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac6b4f3f-672c-3330-b8cd-330ea68f143d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSinkValidate",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the given Sink was validated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "f02a7017-bb82-357f-a96f-bb69a78b7a39",
    "name" : "Create a new Sink Test Event for the given Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGccAF15dC4a17fa6CD50A4efEcA57E5eF/Test",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"a1dlpi1w1t5re7ps1b43g6kv23yml7i3ltk9bnf5zhjx3k6j28bp4bdaoozexodsh4iehwzrmxtw8ev4aycsu9h0ms2tgzktyafqz155jxv06vya5wue8910g60npsou8m3mktckr1l1wi4yj4ymo5wbqho4k84yfhmj0b5s0dr3a403o4agifkkrm1w2aatfg5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f02a7017-bb82-357f-a96f-bb69a78b7a39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSinkTest",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the test event was generated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "3f4cf1c8-7a9c-3e10-be6d-a54bd6e67e7d",
    "name" : "Update a specific Sink",
    "request" : {
      "urlPath" : "/v1/Sinks/DG8C5C54b4C8b35E20Bfa4CC7bb9029BCE",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-02-03T03:59:08.338Z\",\n  \"date_created\" : \"2022-09-16T04:52:37.338Z\",\n  \"sink_type\" : \"webhook\",\n  \"description\" : \"Doloremque ut eum aut tempora. Nobis aperiam quam eum quia praesentium. Possimus sed voluptatum expedita molestias eveniet maxime.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/601631\",\n  \"sid\" : \"DGdcEBD32Be9BE2A5857CcFdC9acBD978a\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f4cf1c8-7a9c-3e10-be6d-a54bd6e67e7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6b0c7ba9-22a2-3e57-bd5f-516558451569",
    "name" : "Fetch a specific Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG4983aB88571FeCAF944aeADcD8C4FB35",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-10-14T18:59:39.338Z\",\n  \"date_created\" : \"2024-01-01T09:57:33.338Z\",\n  \"sink_type\" : \"webhook\",\n  \"description\" : \"Ea qui voluptatem est dolores voluptas est. Tenetur et voluptas voluptas quidem et provident. Non quam qui. Repellat et sint modi rem voluptatem.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/965604\",\n  \"sid\" : \"DG9a6336dB09a8CA792f96c3FB0f85A30B\",\n  \"status\" : \"validating\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b0c7ba9-22a2-3e57-bd5f-516558451569",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "4fb93dbb-21e6-39c2-9558-0b0a222bc65c",
    "name" : "Delete a specific Sink. - 204",
    "request" : {
      "urlPath" : "/v1/Sinks/DG76E7246bbf6074aebAEE57aaBdCeD1bB",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4fb93dbb-21e6-39c2-9558-0b0a222bc65c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSink"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1f0d2f3a-2e1c-39cd-b133-4aab7c4bbb7d",
    "name" : "Create a new Sink",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2022-12-07T12:02:37.338Z\",\n  \"date_created\" : \"2023-01-23T15:43:15.338Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Cupiditate voluptatibus enim nam. Consectetur a consequuntur qui qui. Aspernatur recusandae unde ea ex iure laudantium vel. Voluptatem ipsum nostrum temporibus quidem.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/652177\",\n  \"sid\" : \"DGC689b3EB31ebdf82cc8F76BE18eD59CA\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f0d2f3a-2e1c-39cd-b133-4aab7c4bbb7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "b1a36140-d0d5-333d-96d5-b83da887858d",
    "name" : "Retrieve a paginated list of Sinks belonging to the account used to make the req...",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sinks\" : [ {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-03-13T20:58:47.337Z\",\n    \"date_created\" : \"2022-10-03T09:56:58.337Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Ullam aut et. Occaecati fuga fugiat ea omnis fugit fugiat. At quae aut natus. Minus commodi provident. Ducimus praesentium non ut accusantium officia sunt.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/482816\",\n    \"sid\" : \"DG9c0dEFEFF8F0EA4E4EB9DDAc75306c2b\",\n    \"status\" : \"validating\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-10-19T05:56:04.337Z\",\n    \"date_created\" : \"2024-02-17T23:41:50.337Z\",\n    \"sink_type\" : \"segment\",\n    \"description\" : \"Eos fugit quod. Suscipit tempora id sit provident. Nulla pariatur eaque et. Repudiandae ut laborum. Suscipit earum qui.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/904702\",\n    \"sid\" : \"DG25caCA239B80Fd556b1e7F3Cbb1bd8AC\",\n    \"status\" : \"failed\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2024-01-27T12:26:48.337Z\",\n    \"date_created\" : \"2022-04-04T23:23:55.337Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Ut cupiditate voluptates. Tenetur quo voluptatem. Eos dolor qui expedita qui dolores. Consequuntur eveniet est aut saepe. Voluptatem atque voluptatem sit veniam sint.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/201791\",\n    \"sid\" : \"DGe2ec2B1c6188fAfFDcCaD718F46CA630\",\n    \"status\" : \"failed\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-04-03T14:30:08.337Z\",\n    \"date_created\" : \"2023-07-27T21:25:54.337Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Delectus nemo asperiores possimus voluptatem. Eaque et maxime excepturi omnis autem sequi mollitia. Laboriosam ullam at voluptates voluptas et. Id et voluptas et modi. Id delectus natus qui.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/099074\",\n    \"sid\" : \"DG5E0BEf4aFA7aA4eD6d9C25aDDe99A4D4\",\n    \"status\" : \"initialized\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-10-04T02:05:02.337Z\",\n    \"date_created\" : \"2022-09-04T16:55:32.337Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Corporis voluptate fuga necessitatibus voluptas in. Aliquid exercitationem ipsum amet laborum et. Quis repellendus suscipit eos. Debitis minima consequatur. Atque exercitationem est atque.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/479694\",\n    \"sid\" : \"DGB9ecb9e46cE3168f6faFb2eBb9e8FdaB\",\n    \"status\" : \"validating\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/815702\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/113475\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/394246\",\n    \"page\" : 2506288839789396736,\n    \"key\" : \"zkfmf2cm70l0bj4bz4udgqifvoy996q1o0nd9bldqclrv4e3466nq12wk98fph9i10f4118knd6f6fjkmido93ejkv1xih60al03vovkwg0oypdjv2tjld4l0p5qluxhcsin41ghf6bqtp6sbc8kd2u6vbhvdzqee04ngwovv5o1g8jq8mirujllhp4ybkgnk4ef3kzh\",\n    \"url\" : \"https://web.example.mocklab.io/436356\",\n    \"page_size\" : 3819174372184162870\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1a36140-d0d5-333d-96d5-b83da887858d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSink",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sinks" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.sink"
                },
                "type" : "array"
              }
            },
            "title" : "ListSinkResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "a1215aea-f646-3e98-8faf-c6bfd3533674",
    "name" : "Fetch a specific schema and version.",
    "request" : {
      "urlPath" : "/v1/Schemas/6o6r/Versions/8044132621025732096",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 3702753286574862697,\n  \"date_created\" : \"2023-03-17T09:09:33.336Z\",\n  \"raw\" : \"oazwswg5iceyydc2uposqutuzix0d49dauvh0sv6y3e1c3nx5br8mu9x\",\n  \"id\" : \"63h9\",\n  \"url\" : \"https://web.example.mocklab.io/551103\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1215aea-f646-3e98-8faf-c6bfd3533674",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSchemaVersion",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date the schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "raw" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The version of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "5e52ab63-c221-37bc-b016-50147f09fd82",
    "name" : "Retrieve a paginated list of versions of the schema.",
    "request" : {
      "urlPath" : "/v1/Schemas/m5pf/Versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/589701\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/697670\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/021671\",\n    \"page\" : 4863194762350190756,\n    \"key\" : \"88g089owm\",\n    \"url\" : \"https://web.example.mocklab.io/668491\",\n    \"page_size\" : 934310382810227604\n  },\n  \"schema_versions\" : [ {\n    \"schema_version\" : 5026097305491013187,\n    \"date_created\" : \"2023-07-07T12:01:27.335Z\",\n    \"raw\" : \"hb1xcb8y9t6o2ba3b28t2f6j3x52b0hvkox65k164puqircvbqo3bfzchas5i4u56prtkgdobzhvt2u4zx84c6jptewl6jq1mndmk4p5l3ijn45g13qdg5k6b6fem\",\n    \"id\" : \"19x3\",\n    \"url\" : \"https://web.example.mocklab.io/084430\"\n  }, {\n    \"schema_version\" : 5110481725245871108,\n    \"date_created\" : \"2023-09-29T22:36:32.335Z\",\n    \"raw\" : \"tcnepxfjzc94s9rue6rfsrjw9etrp5e56gmayqo83kx3w9i2iuf7b5i9me2zpauu18500uvrlp2k150hhn27deaeg0lrhqvji45ubbxvvits0be6hmb59onem28rg26p5zgpm5qtz8kdo6vlkjyv\",\n    \"id\" : \"0195\",\n    \"url\" : \"https://web.example.mocklab.io/720842\"\n  }, {\n    \"schema_version\" : 7622078733477515240,\n    \"date_created\" : \"2022-07-11T02:10:38.335Z\",\n    \"raw\" : \"zes37jtcaw3vuohaiuuycucssx1efq8x61cggyxvng4qvctcc6e4lir7zcl8t68ajbfk2lkjmbworxew9ie2utkh7wf00huzmemqz5bwotxa2cc7jej1cjq2chv90\",\n    \"id\" : \"40pq\",\n    \"url\" : \"https://web.example.mocklab.io/140716\"\n  }, {\n    \"schema_version\" : 7495729384862766635,\n    \"date_created\" : \"2023-01-08T16:41:03.335Z\",\n    \"raw\" : \"pqgn7106m1s6ju5zc6iqz6o5u9jfl0ylo2alb3s50h4gbaxmqxdhojr1pe9ovul62kkpvdlhzvpl8rvu1j38zisq1zu28rkvggf32yga2kztyp3b2xw\",\n    \"id\" : \"k17w\",\n    \"url\" : \"https://web.example.mocklab.io/580752\"\n  }, {\n    \"schema_version\" : 5267524318750053321,\n    \"date_created\" : \"2023-09-07T11:06:39.336Z\",\n    \"raw\" : \"zof5nxqrucvbedfjreypyuagplfc8xtr1ej7tqmh87ukvz3wxjc3vxhdmks0zpww5y1lfsr3gadut2py2s0yiq4\",\n    \"id\" : \"4r7h\",\n    \"url\" : \"https://web.example.mocklab.io/949894\"\n  }, {\n    \"schema_version\" : 8403590163155184397,\n    \"date_created\" : \"2022-05-17T11:45:29.336Z\",\n    \"raw\" : \"ibyf3cphi7juyom0949129dujnpazw2yp86hncdfx5e0yescq38xn4wd9p658sj7sm0w1jv9jm3hp49h9pb1fgbr3p18emyytlpp8iojio8tef2ffemgmjaask5c3b78uqzjdxnxj14eq3vm0uxusr\",\n    \"id\" : \"0565\",\n    \"url\" : \"https://web.example.mocklab.io/385048\"\n  }, {\n    \"schema_version\" : 5936850766962417178,\n    \"date_created\" : \"2023-09-29T07:18:17.336Z\",\n    \"raw\" : \"vkjfkvycdla9o7u6v5mr631qh1ggo37k6shlj6l7okbu64ansu0s3l57j8azypdjdohbhcb8qc8wukf8jpnku7upla59apl36g79ssgwu90je37guqm5elon0znhe5700r\",\n    \"id\" : \"5y56\",\n    \"url\" : \"https://web.example.mocklab.io/157377\"\n  }, {\n    \"schema_version\" : 189461417019474146,\n    \"date_created\" : \"2023-01-21T16:10:53.336Z\",\n    \"raw\" : \"o11on72yshd27o3dnw676f39g6doin8dyu9ytfnyey3pzz9b2pewpizcfo0pjn217omqi62mvj3gytv7u46kp17mzxv65pkhvd9cmesjk9z2trn4ykhx11zzhxbdu3cdlieo1e8x4woblkfzfnthnl7n5c451ctg2yxjz8ivwc1vsh3s9jkqq1\",\n    \"id\" : \"8rh2\",\n    \"url\" : \"https://web.example.mocklab.io/037560\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e52ab63-c221-37bc-b016-50147f09fd82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSchemaVersion",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "schema_versions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.schema.schema_version"
                },
                "type" : "array"
              }
            },
            "title" : "ListSchemaVersionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "6f205e50-eb8d-3215-aca9-8360870451da",
    "name" : "Fetch a specific schema with its nested versions.",
    "request" : {
      "urlPath" : "/v1/Schemas/jjp3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"latest_version\" : 3469610066133063593,\n  \"links\" : { },\n  \"id\" : \"wk5b\",\n  \"latest_version_date_created\" : \"2024-02-28T17:32:53.334Z\",\n  \"url\" : \"https://web.example.mocklab.io/611647\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f205e50-eb8d-3215-aca9-8360870451da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSchema",
          "schema" : {
            "properties" : {
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_version" : {
                "description" : "The latest version published of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "latest_version_date_created" : {
                "description" : "The date that the latest schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this schema.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}