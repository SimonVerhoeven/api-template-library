{
  "mappings" : [ {
    "id" : "e4d84f9f-a0a4-43e1-8959-19fcfc42735a",
    "name" : "Fetch a specific Event Type.",
    "request" : {
      "urlPath" : "/v1/Types/s4ghb3gaewv397nzaxblnka2kg49t0dwio1d2y2935iwsq0ovbeweh598ycg5zg1qlx5b7njz0gy679jj78tx6485u9hl4c8rln4tai8t35lb0mzug3oo8lntpwar2vdlw00pbl71em0q43p4nn9b6vne6xe5xkvwc0bzz7kcr71sbkfegz01sanjqi8kp",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-04-14T22:54:29.715Z\",\n  \"date_created\" : \"2023-08-10T07:58:23.715Z\",\n  \"schema_id\" : \"nl10\",\n  \"description\" : \"Debitis qui doloremque cumque quae. Itaque quam nostrum iusto architecto. Fugiat consequatur illum. Ab totam sequi ducimus hic illo voluptate repudiandae. Et et beatae qui officia.\",\n  \"links\" : { },\n  \"type\" : \"9napu0m2ods4sdyxv1qh844irqge41e0asbx4rdjuzqs6gyk5ff1whex9edvz9rn34l2vir5luery89fdyqto7pcy38pi4innrmuhs3up3y1pb4tbxrxgisotezbipqo4kjvppeydxo\",\n  \"url\" : \"https://web.example.mocklab.io/536835\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4d84f9f-a0a4-43e1-8959-19fcfc42735a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.715582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEventType",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Event Type was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Event Type was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "schema_id" : {
                "description" : "A string that uniquely identifies the Schema this Event Type adheres to.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A string that uniquely identifies this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "96cb4fcf-572b-4bcc-9b12-8dee35dfb97a",
    "name" : "Retrieve a paginated list of all the available Event Types.",
    "request" : {
      "urlPath" : "/v1/Types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"date_updated\" : \"2023-01-17T19:22:22.713Z\",\n    \"date_created\" : \"2023-12-26T22:02:12.713Z\",\n    \"schema_id\" : \"bc9p\",\n    \"description\" : \"Voluptatem et est aspernatur. Sit autem rem. Iste labore earum similique voluptates. Ducimus quisquam et aliquam.\",\n    \"links\" : { },\n    \"type\" : \"so3tz3e41gsihd\",\n    \"url\" : \"https://web.example.mocklab.io/793626\"\n  }, {\n    \"date_updated\" : \"2023-04-24T10:52:54.713Z\",\n    \"date_created\" : \"2022-12-12T19:55:20.713Z\",\n    \"schema_id\" : \"u579\",\n    \"description\" : \"Architecto possimus libero quod aut suscipit cupiditate. Ipsam quos est est dicta rerum. Id velit non reiciendis.\",\n    \"links\" : { },\n    \"type\" : \"m2j9jdmpnhuj9jondpiwjyld836vbiekxyg3hkjog9ea2lrims3z4cvrfmt5ribno6mkyqgoeku1xbsv9e62g3gby1o5f74j16kk8b9i7z0nrt2iw2470v0flea7b6h6z3ye33ks58f186f7qg4osfup84rak3qy6g9z\",\n    \"url\" : \"https://web.example.mocklab.io/942731\"\n  }, {\n    \"date_updated\" : \"2023-09-07T04:36:57.714Z\",\n    \"date_created\" : \"2023-06-16T07:32:44.714Z\",\n    \"schema_id\" : \"079x\",\n    \"description\" : \"Asperiores nam voluptatum. Dolor voluptate unde sapiente asperiores illo. Autem ut voluptas non. Dignissimos fuga similique fugit ullam omnis nesciunt.\",\n    \"links\" : { },\n    \"type\" : \"bku3xiiq8lr7lukdk5dtdi2xhg8khva9\",\n    \"url\" : \"https://web.example.mocklab.io/799816\"\n  }, {\n    \"date_updated\" : \"2022-10-29T03:57:43.714Z\",\n    \"date_created\" : \"2023-10-09T00:45:30.714Z\",\n    \"schema_id\" : \"9kf2\",\n    \"description\" : \"At eum quibusdam perspiciatis omnis sunt dolorem. Qui consequatur minima iusto sit voluptas libero illo. Aut laborum suscipit aspernatur.\",\n    \"links\" : { },\n    \"type\" : \"f7qmj2f7knpdpnglfn2pd3xl7tjo17xpmos9qf0qati7f5av2fyc2mj87bumkm2jyk898cbuurom9vbu030dmdoh8jbbqszcumo06z42sl1erdiv4pfkfa9xo0iz2j1q80j0bj7ign77ywoxzb3xphy3g78eti4eis1jnl3fxt5\",\n    \"url\" : \"https://web.example.mocklab.io/438582\"\n  }, {\n    \"date_updated\" : \"2022-06-11T14:07:33.714Z\",\n    \"date_created\" : \"2023-06-17T03:22:10.714Z\",\n    \"schema_id\" : \"6gd1\",\n    \"description\" : \"Vel et est sit reprehenderit cum qui dolorem. Ipsa est magnam dolorem. Aperiam tempora reiciendis accusamus amet distinctio sed.\",\n    \"links\" : { },\n    \"type\" : \"1wpthhk9i1njbcc98v68678dimd7klfgmjvvva1m6cl3qdpfr0f4o0vc4m2otkf58svmevsrvhey8fl10h4s5qrk2xtpli0h\",\n    \"url\" : \"https://web.example.mocklab.io/925634\"\n  }, {\n    \"date_updated\" : \"2022-10-25T13:31:01.714Z\",\n    \"date_created\" : \"2023-10-04T17:41:47.714Z\",\n    \"schema_id\" : \"5023\",\n    \"description\" : \"Id eaque ea nisi culpa. In nihil voluptate occaecati et quidem. Et quae quibusdam dignissimos nemo quibusdam. Et dolores enim. Animi sint neque molestias qui ratione alias animi.\",\n    \"links\" : { },\n    \"type\" : \"1ur0r7wrvtlvbnwhn6fs30i08xnyj6a4la97baubt9buv9sdfi8ku83t3rkphryn62dad4va26xy4rgdjb9rswhr60bz4u801psdswyr8nub5n80i56jml7pd\",\n    \"url\" : \"https://web.example.mocklab.io/749534\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/960063\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/146011\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/267491\",\n    \"page\" : 2851188548715722117,\n    \"key\" : \"fr5sp35bfihtj5xynb4aoqf3ziem3clgge5vh7ljmfcr1c9x6b7fm28zsvl2fvzptczwa41o6gbdwyvxusr5ue0q7697z21x2itvrk15a2vh97hnwbcudmhmqjcsaep0zbfz85orw8r\",\n    \"url\" : \"https://web.example.mocklab.io/921253\",\n    \"page_size\" : 7851944766919538684\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96cb4fcf-572b-4bcc-9b12-8dee35dfb97a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.715243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEventType",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.event_type"
                },
                "type" : "array"
              }
            },
            "title" : "ListEventTypeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "40a23b34-82a5-4faa-b820-1b0b591394b4",
    "name" : "Update an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFfF9E0e8BdE9ecFFbb4ca5a970c23d4fC/SubscribedEvents/rnptwmozwyx3eed6rq4vvzajac4r3lmgx5ogaonwen3zgusccfywxs7jaxnlch",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 521717600447609299,\n  \"account_sid\" : \"AC34d2F7c4Cc2B3FFFd4fdCACd34FbC66A\",\n  \"subscription_sid\" : \"DFCaF55F4B8eF2cFc44c7E1BBFde4Bb5da\",\n  \"type\" : \"21io0ux83g00o0jfnvbikfmgodtvkysbdp62b396jrxcx9ia4ma0oxwymxpuuswxv0p9lshzsueaqwt41ahwmb6ainr4\",\n  \"url\" : \"https://web.example.mocklab.io/363862\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40a23b34-82a5-4faa-b820-1b0b591394b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.713595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "6b6318dd-5562-4002-b7b3-8ad02411a4e1",
    "name" : "Read an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF574D5F4EfcDb0f6A8EC1de8B812fbEed/SubscribedEvents/5aa81xiloiv4nvrxlwa5b2hkzkqzvuj5xu9af8bhebn70ekt2ymeq90v145pf6dlxgznstwoh7qxr5o5t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 3370536436578339920,\n  \"account_sid\" : \"AC9dbAbB014e1C3A0b6DB5a45CF586ef9F\",\n  \"subscription_sid\" : \"DFDF87F7DCe5E81d88b71D6F5b4ec94de7\",\n  \"type\" : \"muxsldm27lf80qj\",\n  \"url\" : \"https://web.example.mocklab.io/929520\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b6318dd-5562-4002-b7b3-8ad02411a4e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.713436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e2103420-5683-40b1-807c-e1d5990bec4d",
    "name" : "Remove an event type from a subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF7e6e03eE0A32CD242Ed543b64fae1CB0/SubscribedEvents/5t10vbf229iq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e2103420-5683-40b1-807c-e1d5990bec4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.713282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscribedEvent"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2e735c51-79b5-4904-a685-082eddb65646",
    "name" : "Create a new Subscribed Event type for the subscription",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFaD3bFAb77D023EfF22DC427485F188aC/SubscribedEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"schema_version\" : 4836863240994735527,\n  \"account_sid\" : \"ACB879a59f77Be7fA0d3cEf027ace3c27C\",\n  \"subscription_sid\" : \"DF4321dAeABC7d29e044FDd8D6f8071A59\",\n  \"type\" : \"etkik1h087q817k4xn3njgfw2zmx3ps10k8twsxqf7tv4mh1yc4ficbbgnfbhzj2\",\n  \"url\" : \"https://web.example.mocklab.io/416519\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e735c51-79b5-4904-a685-082eddb65646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.713236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "bcda9796-246d-4480-bfa7-5528943f4224",
    "name" : "Retrieve a list of all Subscribed Event types for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFdf86DD389ED4bbcCa37e0838ea9C6f7b/SubscribedEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"schema_version\" : 1456720747000816943,\n    \"account_sid\" : \"ACe594595fBc51ACfbc1695Ada6C8e50ca\",\n    \"subscription_sid\" : \"DF1125751D0F62B3D8b83FBe2Ead8E6ca9\",\n    \"type\" : \"3fcpd4rafsq4qp4nd8spih15g1qbivjgnf8a9hakw5loqc6bxdmv5jj0kc9ofzydcw0d1w8awgpcmhqec6\",\n    \"url\" : \"https://web.example.mocklab.io/340560\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/894496\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/698647\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/120165\",\n    \"page\" : 4434210817708120392,\n    \"key\" : \"gxqeh4x60qd6u9xrfx33x7aouh202s2gyk9fo424zcqhmf425jpsjpeq4bcfj434x2b56zb7omv8\",\n    \"url\" : \"https://web.example.mocklab.io/970867\",\n    \"page_size\" : 7810786825420033940\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcda9796-246d-4480-bfa7-5528943f4224",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.71307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscribedEvent",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription.subscribed_event"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscribedEventResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f371b853-ecba-478f-a6c5-8e650785ba07",
    "name" : "Update a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF69DCAF8B97dCAA7D47caab0f130d787F",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-08-18T00:28:13.712Z\",\n  \"date_created\" : \"2022-09-30T16:24:58.712Z\",\n  \"account_sid\" : \"AC7eABddb4ff5DD3aABdbb6fEF5ec54Cfc\",\n  \"description\" : \"Nemo et aspernatur pariatur placeat animi vitae. Perspiciatis tempora unde dolor saepe maiores. Et aut quia eveniet. Ut et dolores sint.\",\n  \"sink_sid\" : \"DGdbF507cE2EbBd2CCdEEabb5D0d62Bfb2\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/807448\",\n  \"sid\" : \"DFfDFf8ca4D887863C1eE00A751DCb3CAd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f371b853-ecba-478f-a6c5-8e650785ba07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.712574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "11e26096-7b07-4566-9fe4-bacbd0ef2b75",
    "name" : "Fetch a specific Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF05e814CeEF17DEe63ef8eDfAa2bAd4a7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-06-16T13:58:06.712Z\",\n  \"date_created\" : \"2023-12-20T12:19:55.712Z\",\n  \"account_sid\" : \"AC4A5C74e5DC02cE6e01bbE45352d110eC\",\n  \"description\" : \"Debitis dolore iure molestiae illo nisi enim. Nulla est sunt maiores. Consequatur est sit magni tenetur. Sit ratione sed.\",\n  \"sink_sid\" : \"DG6fDF9C1F8eD60A10aAe5fD261A0E3cF0\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/339258\",\n  \"sid\" : \"DFFB28C36d9C4FABdb96e6FFf1Dc0EAb00\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11e26096-7b07-4566-9fe4-bacbd0ef2b75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.712344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "90856848-e011-4490-9373-4264d2f24bc8",
    "name" : "Delete a specific Subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF96Ad2A50b5D5955bf5771ff4FA25713d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "90856848-e011-4490-9373-4264d2f24bc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.712121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscription"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "2893d682-821b-466f-bf17-33fd523c196b",
    "name" : "Create a new Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2022-09-12T02:35:56.711Z\",\n  \"date_created\" : \"2023-01-21T03:20:19.711Z\",\n  \"account_sid\" : \"AC3D6C7Ab03b93DC6BB6439FD95621Baeb\",\n  \"description\" : \"Et aut autem accusamus nisi in temporibus. Facere suscipit et praesentium odio tenetur. Ipsam quia autem omnis nihil.\",\n  \"sink_sid\" : \"DG8cC5d8E3a8E82fFAfBfBCfCa6E5acEd1\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/369178\",\n  \"sid\" : \"DF83Cbc2F5b12d0F1827aadfe3C8C91Ce2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2893d682-821b-466f-bf17-33fd523c196b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.712073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e6ad6bd4-9feb-42cd-b914-dabd71bd3c77",
    "name" : "Retrieve a paginated list of Subscriptions belonging to the account used to make...",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"date_updated\" : \"2023-05-20T21:32:06.711Z\",\n    \"date_created\" : \"2024-01-12T04:31:12.711Z\",\n    \"account_sid\" : \"ACA17c7B27A49CEcD35aDB84bc18eF8aF3\",\n    \"description\" : \"Iure quos laboriosam odit in aut. Quae et consequatur nobis ad. Et rerum amet. Ab dolor molestiae necessitatibus et.\",\n    \"sink_sid\" : \"DGcA7868DAC9028C11dDb5Cce2ddD47f5E\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/474915\",\n    \"sid\" : \"DFDc575aAecFFFC3825AD2B3d2d00380AC\"\n  }, {\n    \"date_updated\" : \"2022-10-28T06:20:53.711Z\",\n    \"date_created\" : \"2023-05-14T22:22:03.711Z\",\n    \"account_sid\" : \"AC5e2318F9f2ab8F781baDDb9ad9BAAD71\",\n    \"description\" : \"Velit a pariatur ad. Temporibus quod quia quam. Sunt qui sapiente unde eius voluptatem et.\",\n    \"sink_sid\" : \"DG80cA3d61fa419f2A91E4BA9300314aCE\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/047145\",\n    \"sid\" : \"DFD9DEDD761ce0E4e5CC6feF11Bf5B5b19\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/052260\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/120581\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/687483\",\n    \"page\" : 2685817761330939489,\n    \"key\" : \"3hxfw9r2ga1wgxiy7jm53in13u8r07eypeyd88smnjgqponounk7wr8ghibzy6tj2h\",\n    \"url\" : \"https://web.example.mocklab.io/690857\",\n    \"page_size\" : 3693427478259553628\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6ad6bd4-9feb-42cd-b914-dabd71bd3c77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.711817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscription",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "subscriptions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscriptionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "a306c299-8213-4658-8922-644bf864f4e4",
    "name" : "Validate that a test event for a Sink was received.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGdCCf5AbEA581dF1f8aFed87eBBF88c6f/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"knv5hhjiivef63914ql64pwyfxe3dbd1tfrack97w6imxgq01xp8jqkx2hqek9k6fejnd8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a306c299-8213-4658-8922-644bf864f4e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.711102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkValidate",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the given Sink was validated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "7c52211c-32f1-4ec4-bbcd-4b8d9868a83a",
    "name" : "Create a new Sink Test Event for the given Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGC42f4F571B2e23cee5cedcb8Cb5d5Db3/Test",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"cbb6usileme5f1xp38mb9m58hg636jiw0aju7da70d4wfgepdlbttx5ubpmo545su94e7qvuw100dk5vfczwvmjea5o07d4zx9c7ch3pr2f906l1xq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c52211c-32f1-4ec4-bbcd-4b8d9868a83a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.711034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkTest",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the test event was generated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "47b6780f-8358-4157-a338-980f464c6e06",
    "name" : "Update a specific Sink",
    "request" : {
      "urlPath" : "/v1/Sinks/DGDCaF069929B0d2c31ae3a09ce77af135",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-10-04T06:01:06.71Z\",\n  \"date_created\" : \"2022-06-07T07:53:26.71Z\",\n  \"sink_type\" : \"kinesis\",\n  \"description\" : \"Atque nulla ab dolores quos vero aut. Consectetur nihil est voluptatum sed corporis consequatur. Aperiam cum voluptatum veritatis beatae corporis doloremque.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/415993\",\n  \"sid\" : \"DGe4Fb3A32deF0C371D58CbA98cC69d5Ee\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47b6780f-8358-4157-a338-980f464c6e06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.710962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "16ce764f-58de-45f6-88d8-2dcf8821014a",
    "name" : "Fetch a specific Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DGc8aDaca18BDB1BBCa78EAdaa5ACE8e77",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-11-23T16:18:09.71Z\",\n  \"date_created\" : \"2023-06-04T22:06:50.71Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Illo et et. Autem minima blanditiis. Explicabo amet impedit accusamus doloremque asperiores.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/121402\",\n  \"sid\" : \"DG707AABF4fc30e94FbaF07c7aDFCDB3D8\",\n  \"status\" : \"initialized\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16ce764f-58de-45f6-88d8-2dcf8821014a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.710719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "3e2976e6-4c14-49e1-b161-484ae60f1d06",
    "name" : "Delete a specific Sink. - 204",
    "request" : {
      "urlPath" : "/v1/Sinks/DG0Ccb95aeBA5A66BBDD6c07dcf6C3D2aE",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3e2976e6-4c14-49e1-b161-484ae60f1d06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.710498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSink"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e0525ce9-f8d6-4c67-9daf-8f7316b55714",
    "name" : "Create a new Sink",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-09-22T12:40:41.71Z\",\n  \"date_created\" : \"2023-03-26T14:40:12.71Z\",\n  \"sink_type\" : \"kinesis\",\n  \"description\" : \"Eaque sed quo. Amet qui at. Facere dolore quia temporibus fugiat et neque rerum. Quasi vero nam voluptatum voluptatem ipsam. Animi illum esse est dignissimos.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/668606\",\n  \"sid\" : \"DGFA1C73D515cdCbAF56740DEEa12cABaf\",\n  \"status\" : \"validating\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0525ce9-f8d6-4c67-9daf-8f7316b55714",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.710461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "0ce8b6b7-ae94-4ba5-b81a-a10d55bf9327",
    "name" : "Retrieve a paginated list of Sinks belonging to the account used to make the req...",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sinks\" : [ {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-10-12T01:45:42.709Z\",\n    \"date_created\" : \"2023-06-09T06:49:25.709Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Ut nesciunt occaecati. Fuga sapiente minima. Non illum dolor dolorem voluptates.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/457735\",\n    \"sid\" : \"DGd1956FEC6ABd3d88a570Fda1aFBEd680\",\n    \"status\" : \"active\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-04-07T17:30:21.709Z\",\n    \"date_created\" : \"2023-01-26T11:55:29.709Z\",\n    \"sink_type\" : \"segment\",\n    \"description\" : \"Hic maiores accusamus quas quaerat natus labore exercitationem. Quod eaque dolor amet. Reprehenderit quam magnam.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/874218\",\n    \"sid\" : \"DG37a1A4737f93dDC7B922788E0914a4ca\",\n    \"status\" : \"initialized\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-08-06T11:17:54.709Z\",\n    \"date_created\" : \"2023-12-25T15:31:33.709Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Est dolore ipsam. Est asperiores harum velit. Et dicta incidunt est autem quasi consequatur. Necessitatibus magnam maiores fugiat. Molestiae saepe nihil ea et.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/444872\",\n    \"sid\" : \"DG8dA0Fbb3Aa5F3a2d53B01F9A94f969ad\",\n    \"status\" : \"initialized\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/579500\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/871680\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/851462\",\n    \"page\" : 787367150929599587,\n    \"key\" : \"ra22tvxkj1fktytu561cikfv753pf9rwgbs8a1b2i2q5k4pmdmbopuafmtccjg6rc73lvtzl7rfvt11vmnkkjll1j7lmy8wgv6fu2gbvcippk26t7skjvx6lmx9quv508a4zexa2h9h09n70kx26rhk7ph9ptbnf7hlzqizkx3u8ccccib3kd33nu6\",\n    \"url\" : \"https://web.example.mocklab.io/902015\",\n    \"page_size\" : 8193289466852377206\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ce8b6b7-ae94-4ba5-b81a-a10d55bf9327",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.710188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSink",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sinks" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.sink"
                },
                "type" : "array"
              }
            },
            "title" : "ListSinkResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "b5c6e45e-1645-4566-9e18-204bbb17b4b6",
    "name" : "Fetch a specific schema and version.",
    "request" : {
      "urlPath" : "/v1/Schemas/v939/Versions/8457228657559825071",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 5137671773204200773,\n  \"date_created\" : \"2024-01-20T07:50:21.709Z\",\n  \"raw\" : \"jkg3qg76w3tj3n6f7acdjw28ktvd9ny5djkm278un10utz49jr88f9kbmnslz56p1nq548dw54fh56f8rxpgsy3i089sbbwvi9rcrjkp54h9dpmh\",\n  \"id\" : \"0z2j\",\n  \"url\" : \"https://web.example.mocklab.io/837166\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5c6e45e-1645-4566-9e18-204bbb17b4b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.7093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchemaVersion",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date the schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "raw" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The version of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "aa6691a1-d630-43b8-9e5a-2c04290fec12",
    "name" : "Retrieve a paginated list of versions of the schema.",
    "request" : {
      "urlPath" : "/v1/Schemas/p40x/Versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/360003\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/448226\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/206620\",\n    \"page\" : 8060666345481913282,\n    \"key\" : \"z51kpwo4po5549cm548x\",\n    \"url\" : \"https://web.example.mocklab.io/687909\",\n    \"page_size\" : 513098500478866566\n  },\n  \"schema_versions\" : [ {\n    \"schema_version\" : 7362748787890594938,\n    \"date_created\" : \"2022-08-30T01:15:22.708Z\",\n    \"raw\" : \"3qibd57prt053mz5vreinutywbx4yuj2w759vkkmis0apewscqxicdrhdsvnje40f4d54a8s0ghsdf\",\n    \"id\" : \"9mj8\",\n    \"url\" : \"https://web.example.mocklab.io/510177\"\n  }, {\n    \"schema_version\" : 8823567456586518707,\n    \"date_created\" : \"2023-08-10T13:32:08.708Z\",\n    \"raw\" : \"x9vmq21aqm2wploc25z\",\n    \"id\" : \"mer2\",\n    \"url\" : \"https://web.example.mocklab.io/320641\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa6691a1-d630-43b8-9e5a-2c04290fec12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.709007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSchemaVersion",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "schema_versions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.schema.schema_version"
                },
                "type" : "array"
              }
            },
            "title" : "ListSchemaVersionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "9fb3d285-3e40-4944-8e6d-d3c06722a33c",
    "name" : "Fetch a specific schema with its nested versions.",
    "request" : {
      "urlPath" : "/v1/Schemas/6608",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"latest_version\" : 501229647759175296,\n  \"links\" : { },\n  \"id\" : \"g5ao\",\n  \"latest_version_date_created\" : \"2022-08-09T02:21:24.707Z\",\n  \"url\" : \"https://web.example.mocklab.io/437207\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fb3d285-3e40-4944-8e6d-d3c06722a33c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.708161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchema",
          "schema" : {
            "properties" : {
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_version" : {
                "description" : "The latest version published of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "latest_version_date_created" : {
                "description" : "The date that the latest schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this schema.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  } ]
}