{
  "mappings" : [ {
    "id" : "a725ba96-9b09-4bf0-a3e5-d1ef4d0c9d17",
    "name" : "Fetch a specific Event Type.",
    "request" : {
      "urlPath" : "/v1/Types/8a9dunz0tkl09h5kys1upklmga6bxri40aeguaus31nqmtfv9oh70vvlcr2b53xnnqr7eejzpft176wr166hz4w22zs5yu51uzyq16azo7w7mlrg32hl20utays94dxu3ruz5izi",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-04-16T21:07:22.358Z\",\n  \"date_created\" : \"2023-08-29T13:31:49.358Z\",\n  \"schema_id\" : \"760o\",\n  \"description\" : \"Sunt in cum occaecati distinctio. Ut deleniti possimus saepe eum. Repellendus omnis error. Voluptas accusamus rerum dolor veritatis.\",\n  \"links\" : { },\n  \"type\" : \"ypdpesn6yipox3es41xgqwbxp7m8sajwk5vdetbn76ddjhszj5h3aemt31wf5nspmh2patomobr71rxbpbg8rooydvue6udcc1i1ancde6fyp88b8azsv3hn1jlrvnnx59zmr\",\n  \"url\" : \"https://web.example.mocklab.io/511423\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a725ba96-9b09-4bf0-a3e5-d1ef4d0c9d17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.358899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEventType",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Event Type was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Event Type was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "schema_id" : {
                "description" : "A string that uniquely identifies the Schema this Event Type adheres to.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A string that uniquely identifies this Event Type.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24d561e4-0f07-4c31-bdb2-ffdee2f5fca2",
    "name" : "Retrieve a paginated list of all the available Event Types.",
    "request" : {
      "urlPath" : "/v1/Types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"date_updated\" : \"2023-06-01T10:22:00.357Z\",\n    \"date_created\" : \"2023-01-02T00:52:42.357Z\",\n    \"schema_id\" : \"2a0d\",\n    \"description\" : \"Et aut non eum quaerat fugiat consequatur qui. Sint quia ipsa saepe ipsum. In autem aut quo. Harum molestias quod in.\",\n    \"links\" : { },\n    \"type\" : \"x461j38e6j719qgk8vt46m5a48v079rquc54cmc5wx3yyfkaninze02ytl5nz1vcr8xvj8p\",\n    \"url\" : \"https://web.example.mocklab.io/936552\"\n  }, {\n    \"date_updated\" : \"2022-05-01T10:24:16.357Z\",\n    \"date_created\" : \"2022-11-26T16:11:56.357Z\",\n    \"schema_id\" : \"x103\",\n    \"description\" : \"Reprehenderit dolorem cumque. Nobis et aut reiciendis dolorem quo. Ut necessitatibus sunt et. Magni libero ipsum similique in suscipit.\",\n    \"links\" : { },\n    \"type\" : \"iyqclw7dcgyy6efblq5kzxodecj9ai0o5u7q9gkgmcxde0s2j893hxpm5okbam1lz\",\n    \"url\" : \"https://web.example.mocklab.io/492636\"\n  }, {\n    \"date_updated\" : \"2023-06-03T09:01:45.357Z\",\n    \"date_created\" : \"2023-10-09T14:16:42.357Z\",\n    \"schema_id\" : \"ectj\",\n    \"description\" : \"At minima quod veritatis nulla suscipit. Nesciunt est dolorem eius id iste. Cumque voluptatum consequuntur. Aut officia soluta minus nobis ea nam modi. Culpa odit molestiae inventore aliquam.\",\n    \"links\" : { },\n    \"type\" : \"ktutwtt87ugr9fowa450dvgmz8ikdr8gsx72iedhptfj2pjbg1ma78vu4r6clgn03bzrs4khwoqtz9ves6ozy8vf8rkwcoo7hos1ti6givgc9329dvnrauzui5b8h0ibtj8catbu\",\n    \"url\" : \"https://web.example.mocklab.io/050519\"\n  }, {\n    \"date_updated\" : \"2022-11-21T16:04:34.357Z\",\n    \"date_created\" : \"2022-04-23T21:42:51.357Z\",\n    \"schema_id\" : \"dd9o\",\n    \"description\" : \"Aut quasi maiores vero libero. Earum eligendi ipsa enim. Eaque rerum omnis quibusdam officia provident. Vitae qui at earum quis nobis.\",\n    \"links\" : { },\n    \"type\" : \"97og7e4ykiel732cnpmxp3ttdhbhgtiwsxvtkbg54b7xbe7vskq3u70uqnzjrrk5hmudbb6w6z3vnc4z840wdgydmr\",\n    \"url\" : \"https://web.example.mocklab.io/551298\"\n  }, {\n    \"date_updated\" : \"2023-05-07T01:52:05.357Z\",\n    \"date_created\" : \"2023-10-31T17:39:04.357Z\",\n    \"schema_id\" : \"84l7\",\n    \"description\" : \"Voluptatem rerum maiores aut quia suscipit sed rerum. Et rerum eos hic. Fuga voluptatem enim aperiam dignissimos et quas eligendi. Et aut architecto vel incidunt consequatur culpa distinctio.\",\n    \"links\" : { },\n    \"type\" : \"pikqrdmrbqi08tfjjswsty06rqcvjzhlc8z32twrz0q126pyevd0bt\",\n    \"url\" : \"https://web.example.mocklab.io/223364\"\n  }, {\n    \"date_updated\" : \"2022-09-09T22:02:59.358Z\",\n    \"date_created\" : \"2023-04-15T10:25:07.358Z\",\n    \"schema_id\" : \"vuw7\",\n    \"description\" : \"Eum labore ad ea est ipsum. Inventore cum eligendi. Pariatur sed vitae nulla explicabo accusamus consectetur aliquid. Officia ut aperiam blanditiis ea ea. Illo aut doloribus vero laborum.\",\n    \"links\" : { },\n    \"type\" : \"zvd40u67u4nd6lqhysx6qlavdrskh6sfat04bgxpo5v2fhxdy8iyz64dc0l0uvvpoo29g5zs58t55e5h7jmse8gs458spnt5cfz7wiu2dcrqum6qb4iqp0a5dq6b6pzzmfwpjh0rtilps7ovw3d\",\n    \"url\" : \"https://web.example.mocklab.io/162729\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/443015\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/890777\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/483388\",\n    \"page\" : 2085102865210039597,\n    \"key\" : \"azgy93a985d26o0ojahlmi3hhgznsce7r7dd6uwavjpkq6wxucktxol968yqfnrxpxbtkynyghb5aq3e9rulwtfawt0k4xgadiueph4igryzh0v8n4fsn9fyrdyndt\",\n    \"url\" : \"https://web.example.mocklab.io/347959\",\n    \"page_size\" : 7004092309730337884\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24d561e4-0f07-4c31-bdb2-ffdee2f5fca2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.358605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEventType",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.event_type"
                },
                "type" : "array"
              }
            },
            "title" : "ListEventTypeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2c964c85-f25b-457e-90a6-3e2a586d7bfe",
    "name" : "Update an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFf988A1Aa05dEAc7Ebc29722e79BDD06A/SubscribedEvents/cw2ddecrtl7jat7z4xce",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 515418552645098067,\n  \"account_sid\" : \"ACe52dfdae34368A2F8Aa82a363C995EC1\",\n  \"subscription_sid\" : \"DFbae8121D3CECedadf3E5977567404bA1\",\n  \"type\" : \"thpwde1xrxsobhb10oovbuz4mjw94wdljotreern1s6vryjbixvfh4uxr\",\n  \"url\" : \"https://web.example.mocklab.io/178507\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c964c85-f25b-457e-90a6-3e2a586d7bfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.3571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "461c0154-61fa-4184-800f-7a0a1f02bbce",
    "name" : "Read an Event for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF8Ceb46Bc1083fecEC6a6c1B5cC755C17/SubscribedEvents/cd5vu3r6yiecf297epzcu7hr1qpk2jymi5l61nybcugn5l5z7c1ovtq8ghjrj4n",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 7142364230023756362,\n  \"account_sid\" : \"AC0DBD0E50ce67fA0b29D9FD02af64Ed35\",\n  \"subscription_sid\" : \"DF96bCB36f4cA7E29fFE1BFf1531B998fC\",\n  \"type\" : \"8no173ljlj\",\n  \"url\" : \"https://web.example.mocklab.io/188001\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "461c0154-61fa-4184-800f-7a0a1f02bbce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.356933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2acdd35-22c9-4fc8-86b2-4a871c913775",
    "name" : "Remove an event type from a subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFf121fDCE7e4006f0D2EcaCc2fbd2dfdb/SubscribedEvents/p5p16tunppyuut065inn04gj7ko5mvadftks4scq82s4uizhl36lsm3tm1syeisrnjov2x5rtkyevdlkljno28en6n292yz4fenfwx40kdl3pzyfwa",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a2acdd35-22c9-4fc8-86b2-4a871c913775",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.356771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscribedEvent"
        }
      }
    }
  }, {
    "id" : "900c4970-8c87-4e6e-a680-4333fd200b9b",
    "name" : "Create a new Subscribed Event type for the subscription",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFA93211aae45E2d1833beaD85c3E7BbfB/SubscribedEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"schema_version\" : 7986675410724576480,\n  \"account_sid\" : \"ACBDf4130DffdeB842Ab1D5dbFC874C7e9\",\n  \"subscription_sid\" : \"DFbEaEfAbCC78eFcc11B11A364bCe36ee3\",\n  \"type\" : \"hfwdnfn9tr644ksvdgrtx0pjz3i317x7linqacze8kvh618hgnk2db9wtw3ncwoc6n4lwmz4upbszbn6pf24ygz4vxl0tcy5qaky9xj7ew8z4nocrru6ih2zqoh\",\n  \"url\" : \"https://web.example.mocklab.io/329195\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "900c4970-8c87-4e6e-a680-4333fd200b9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.356714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscribedEvent",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The schema version that the subscription should use.",
                "nullable" : true,
                "type" : "integer"
              },
              "subscription_sid" : {
                "description" : "The unique SID identifier of the Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of event being subscribed to.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "efa4ef05-95f9-4f25-ac90-d3cd578ce3c5",
    "name" : "Retrieve a list of all Subscribed Event types for a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFC0d7FeE127bAF66fA66B0fC3005fFbf1/SubscribedEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"types\" : [ {\n    \"schema_version\" : 6074005589278770347,\n    \"account_sid\" : \"ACBB5B0c2CE924Bf6B2f17ABc7dAb0742a\",\n    \"subscription_sid\" : \"DF6e49144C5d9D899AACB2bE53E536Ac78\",\n    \"type\" : \"w958kqidkkt6tvqno4dk66x9a94zv0rtl3uiz8thjnxpn9ygtpmv663fnefyw1hl2bfetnz77zft4tm43tlni6i1vfkvjew1nzxt9owxseiit8qpsr2rz5a56wtlnvi88p7tkygczie0u5akvluo5vv04hahphhkykd1t2vcih4ku1u00ecwrmlhaeah1wmjjz81uz\",\n    \"url\" : \"https://web.example.mocklab.io/700816\"\n  }, {\n    \"schema_version\" : 3828399799008498096,\n    \"account_sid\" : \"ACbA9CeAff24Cfe8AD7b0156BAbDa2A3f9\",\n    \"subscription_sid\" : \"DFFdCDd993Aac68c32efC43DA8f6F773b2\",\n    \"type\" : \"0x2efusxkenmvj5gw7xbgg7x7gx9rsn3z2p6re2mcplnvi4snbbwoocakn9w2zvqy6fmwnz8vy402rtwfl7z\",\n    \"url\" : \"https://web.example.mocklab.io/446662\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/507241\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/266288\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/123296\",\n    \"page\" : 6003952437063048689,\n    \"key\" : \"obklrse1g9gzi2\",\n    \"url\" : \"https://web.example.mocklab.io/013992\",\n    \"page_size\" : 3941357095082641049\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efa4ef05-95f9-4f25-ac90-d3cd578ce3c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.356532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscribedEvent",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "types" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription.subscribed_event"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscribedEventResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c35d6cef-8bfb-4d8b-b795-c24b55bb9298",
    "name" : "Update a Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF9cd3CB1AC89A5f83Cdded4d4BF2aE0C9",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-09-15T07:42:46.355Z\",\n  \"date_created\" : \"2022-06-08T07:04:15.355Z\",\n  \"account_sid\" : \"ACBd048e4f2d3eB31E4406f2E51061ee21\",\n  \"description\" : \"Vel architecto omnis dolor. Laborum sit delectus. Quia illum est voluptate veniam.\",\n  \"sink_sid\" : \"DGbc3afeD6E7b2cdDB03B1B9CFd4FA5C94\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/949967\",\n  \"sid\" : \"DFBEdFbD90c1801823B8AB4cFDab36bFc4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c35d6cef-8bfb-4d8b-b795-c24b55bb9298",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.355919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4add2111-752a-4a54-a46d-825b7d86faa7",
    "name" : "Fetch a specific Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DF825CDbF5D42f7cf81729fcB4Bfdb52C2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-04-20T20:26:30.355Z\",\n  \"date_created\" : \"2022-05-02T09:29:19.355Z\",\n  \"account_sid\" : \"ACDCBa8E0be5a28c117C40847B7EB6252B\",\n  \"description\" : \"Perspiciatis illo dolorum eius. Recusandae cum facilis qui. Minus tempore vel. In asperiores temporibus dolore. Est at explicabo.\",\n  \"sink_sid\" : \"DGbe9db44A6842d5BdF81ACCED9Fb6d9FB\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/340395\",\n  \"sid\" : \"DF46cD9Dcacb6aae89B2A037CDB88bF04A\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4add2111-752a-4a54-a46d-825b7d86faa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.355708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5fcd4a2e-d934-447a-a1d4-eb7256761fc4",
    "name" : "Delete a specific Subscription. - 204",
    "request" : {
      "urlPath" : "/v1/Subscriptions/DFD72500DfFcaCE4cEDB01d49ec1d141d7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5fcd4a2e-d934-447a-a1d4-eb7256761fc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.355498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSubscription"
        }
      }
    }
  }, {
    "id" : "6b0cd8e5-dd23-4aa9-8001-aa06e9d82855",
    "name" : "Create a new Subscription.",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2022-10-08T01:01:44.355Z\",\n  \"date_created\" : \"2023-03-26T03:38:35.355Z\",\n  \"account_sid\" : \"AC5bD68fF2126e3dEBCf8ABf3c15CadECB\",\n  \"description\" : \"Et non illum harum deserunt. Enim fugit quo. Beatae dolor saepe fugiat error id. Est nihil aut enim quis ipsam. Quaerat dolor unde voluptatem aspernatur dolores consequatur voluptas.\",\n  \"sink_sid\" : \"DGB58AafCbF854befBcDFf8e7cCa79f1e3\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/374903\",\n  \"sid\" : \"DFFbA988bB257FBFC3f5bf88EAFDcbDc5a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b0cd8e5-dd23-4aa9-8001-aa06e9d82855",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.355456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSubscription",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Subscription was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Subscription was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Subscription",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Subscription.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Subscription.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_sid" : {
                "description" : "The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee7fd2aa-7610-43fb-a503-44f3e3924ec0",
    "name" : "Retrieve a paginated list of Subscriptions belonging to the account used to make...",
    "request" : {
      "urlPath" : "/v1/Subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"date_updated\" : \"2022-12-14T23:49:42.354Z\",\n    \"date_created\" : \"2023-07-27T15:27:14.354Z\",\n    \"account_sid\" : \"ACdddEb7A7D81d99bC13D023559C7ebF64\",\n    \"description\" : \"Repellat quos qui qui quidem in nisi. Fuga magnam in iure corrupti fuga quis possimus. Nobis fuga et voluptas. Non eveniet reprehenderit aspernatur perferendis. Quas autem nulla impedit laborum omnis \",\n    \"sink_sid\" : \"DG17Dd4A0eFc2ee1801C52f43487d8aA2C\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/809598\",\n    \"sid\" : \"DFE5d2fbDad60F5D0dAA1EFF46afFEF8Ac\"\n  }, {\n    \"date_updated\" : \"2023-01-28T05:46:00.354Z\",\n    \"date_created\" : \"2023-12-10T19:10:28.354Z\",\n    \"account_sid\" : \"ACfAE9Eb751ac9B35d99e7612c6Fbe9c0c\",\n    \"description\" : \"Provident est deserunt velit maxime eos modi facere. Magni numquam aspernatur. Nisi corrupti architecto ad. Magni eos omnis. Illum perspiciatis aliquid commodi eveniet aut quidem.\",\n    \"sink_sid\" : \"DGDe730Ef3F9a9AeECCb6a6A57f1ebbc77\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/065297\",\n    \"sid\" : \"DF7A899FcB5Fd99D57DF87a4eb4eC0Dc92\"\n  }, {\n    \"date_updated\" : \"2022-10-14T08:01:28.354Z\",\n    \"date_created\" : \"2023-08-05T19:44:00.354Z\",\n    \"account_sid\" : \"AC31A16B6AA8e63bD3c99a2ffCC26A3Bc4\",\n    \"description\" : \"Voluptas non sunt optio et deserunt. Vitae ad praesentium qui voluptatem excepturi tempora iste. Ex voluptatem commodi voluptatibus vitae repudiandae est et. Autem laboriosam veniam quo a. Et dolores \",\n    \"sink_sid\" : \"DGCfDEA67913FEc2DA4aD919152874D5A6\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/590408\",\n    \"sid\" : \"DFb37Ef11214fcD8072e2eA6AbCC7CD4dD\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/963921\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/985990\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/657813\",\n    \"page\" : 1993058327058005333,\n    \"key\" : \"25pgybuji7y6ifqxdggl5tfq1s3tstewij5b9wuq84mps5krot8w4pbq\",\n    \"url\" : \"https://web.example.mocklab.io/691708\",\n    \"page_size\" : 9007516634580625213\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee7fd2aa-7610-43fb-a503-44f3e3924ec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.355209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSubscription",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "subscriptions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.subscription"
                },
                "type" : "array"
              }
            },
            "title" : "ListSubscriptionResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2bf6d04c-4ac3-416e-ae1f-1c5d37410d80",
    "name" : "Validate that a test event for a Sink was received.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG3aD5FA70Ff6BE4a7fBbDef3f9157f179/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"z9ptjikdfaexpfm031uwcr7fy0qbtvvc57dpe0oyt3jduoq1cytni440sonou19gmy0dkdncjm8qchv9uvlsyazggf19nyat2dmkbm2oajxvbnojq7um4inwrm6nyd8uie2mhqgd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bf6d04c-4ac3-416e-ae1f-1c5d37410d80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.354342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkValidate",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the given Sink was validated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01209baa-c782-49bd-b559-9ae36c1738b4",
    "name" : "Create a new Sink Test Event for the given Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG38c7d2FA0Dc5470ec6e0D85f8aB0BF9D/Test",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"result\" : \"hrwoaeiuzh41pqoq51u437pqav49ioi0hjcqgoylxkptidnztv14xvim2qh3zvphgyle2iogke34dx8do0w000pkk9uh719yeya3bge3mfrns2nh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01209baa-c782-49bd-b559-9ae36c1738b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.354269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSinkTest",
          "schema" : {
            "properties" : {
              "result" : {
                "description" : "Feedback indicating whether the test event was generated.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7cc66f4f-5cdb-4219-9d02-95f15f002609",
    "name" : "Update a specific Sink",
    "request" : {
      "urlPath" : "/v1/Sinks/DGc76C0b26e67EFb4Dc2bFec70CDFA54b5",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-01-12T02:41:41.353Z\",\n  \"date_created\" : \"2022-12-03T01:35:02.354Z\",\n  \"sink_type\" : \"webhook\",\n  \"description\" : \"Quaerat beatae nobis et enim. Quam rerum aut. Quam et consequatur ducimus rerum pariatur repellat eos.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/140427\",\n  \"sid\" : \"DG67fA6BE5F16F40DfAE7d23B2eAcBf06f\",\n  \"status\" : \"initialized\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cc66f4f-5cdb-4219-9d02-95f15f002609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.354193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b9f8e40-da86-4b78-9b36-931bb11e0641",
    "name" : "Fetch a specific Sink.",
    "request" : {
      "urlPath" : "/v1/Sinks/DG1Fdeb8A2Dd652E8c27a0295c5ae06F38",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2024-01-16T14:28:01.353Z\",\n  \"date_created\" : \"2023-10-02T12:25:58.353Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Quia aut ipsa dicta. Corrupti ratione dolorem nobis consequatur distinctio delectus. Animi ut fugit aut natus labore temporibus.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/726620\",\n  \"sid\" : \"DGe7E1CCbEdccB7dfd83F8F8CFe026CC7F\",\n  \"status\" : \"initialized\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b9f8e40-da86-4b78-9b36-931bb11e0641",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.353971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0cec397-4c29-4581-bf56-af2cd9fb6b5b",
    "name" : "Delete a specific Sink. - 204",
    "request" : {
      "urlPath" : "/v1/Sinks/DGbbA505C0F4503Cc563D2CDd9ba1Ea34D",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e0cec397-4c29-4581-bf56-af2cd9fb6b5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.353748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSink"
        }
      }
    }
  }, {
    "id" : "6e570d61-93b9-4cc6-9d60-05ed7d8f296f",
    "name" : "Create a new Sink",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sink_configuration\" : { },\n  \"date_updated\" : \"2023-02-08T12:53:40.353Z\",\n  \"date_created\" : \"2023-04-26T19:28:02.353Z\",\n  \"sink_type\" : \"segment\",\n  \"description\" : \"Commodi nulla repellat tenetur excepturi officia. Quaerat incidunt ad. Aperiam assumenda nemo similique dignissimos est recusandae veritatis. Saepe qui et suscipit. Et veritatis aspernatur occaecati a\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/531512\",\n  \"sid\" : \"DGf7e3ce19eFd7b41CCBFaBE995Bed8a7A\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e570d61-93b9-4cc6-9d60-05ed7d8f296f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.353704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSink",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date that this Sink was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Sink was updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A human readable description for the Sink",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Sink.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Sink.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sink_configuration" : {
                "description" : "The information required for Twilio to connect to the provided Sink encoded as JSON.",
                "nullable" : true
              },
              "sink_type" : {
                "$ref" : "#/components/schemas/sink_enum_sink_type"
              },
              "status" : {
                "$ref" : "#/components/schemas/sink_enum_status"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e00d9ab2-46c8-4a7d-a003-63c9bed0608f",
    "name" : "Retrieve a paginated list of Sinks belonging to the account used to make the req...",
    "request" : {
      "urlPath" : "/v1/Sinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sinks\" : [ {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-10-12T16:03:47.352Z\",\n    \"date_created\" : \"2022-05-04T13:07:49.352Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Natus quia animi eveniet autem. Sit ut commodi est omnis provident commodi accusamus. Qui aut repudiandae ducimus voluptates consequatur officia.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/106287\",\n    \"sid\" : \"DGbE9Db7c6b3aD6Cef7CE5B87Aef34D2F3\",\n    \"status\" : \"validating\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2023-07-12T10:00:54.352Z\",\n    \"date_created\" : \"2023-01-08T11:52:18.352Z\",\n    \"sink_type\" : \"kinesis\",\n    \"description\" : \"Dolores aliquid eligendi ea doloribus laborum enim. Illum aliquid nesciunt hic repellat enim nihil. Eligendi quisquam consequuntur iste dolores cumque id exercitationem. Deleniti ipsam perferendis mol\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/613936\",\n    \"sid\" : \"DGeE0c23b4cA6bcDDAa77bfB90aCBBeDB8\",\n    \"status\" : \"validating\"\n  }, {\n    \"sink_configuration\" : { },\n    \"date_updated\" : \"2022-12-19T16:13:56.352Z\",\n    \"date_created\" : \"2024-02-21T02:43:53.352Z\",\n    \"sink_type\" : \"webhook\",\n    \"description\" : \"Quis est et in assumenda id ea. Aliquam molestias odit facere aperiam et occaecati. Deserunt eos voluptatum suscipit autem itaque nulla.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/042776\",\n    \"sid\" : \"DG303990B09aeE0602ccDa8336DC98Ff46\",\n    \"status\" : \"failed\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/626902\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/595751\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/499472\",\n    \"page\" : 1780484808619182677,\n    \"key\" : \"yzd5m0t3futnshm6n5epnzy25t5kzvzom573dij26rb17ydvtzswvk6x264duj2ws754acr5ttd4iw2d1730eoa9tq2v5sr062yhdjcoskf7nfej9cvi5fb3ydi3hs86207hhqsjwc1enxiebgl988rn5v46ev2zu2v4ny9lshlx5786ay0pysa\",\n    \"url\" : \"https://web.example.mocklab.io/424470\",\n    \"page_size\" : 2539705652744574810\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e00d9ab2-46c8-4a7d-a003-63c9bed0608f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.353434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSink",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sinks" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.sink"
                },
                "type" : "array"
              }
            },
            "title" : "ListSinkResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fec96da0-f142-4990-ba24-bcb9df155329",
    "name" : "Fetch a specific schema and version.",
    "request" : {
      "urlPath" : "/v1/Schemas/ta8w/Versions/3448450229367633374",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schema_version\" : 861932425506639198,\n  \"date_created\" : \"2023-11-14T15:40:33.352Z\",\n  \"raw\" : \"fwkhpyqzib0m4d2wcr6kceuwejxecfh1zjv74vu6ebh0xeezd74cq5q0sabps0qwq5uuj9ityykx2kx0bbt7i243\",\n  \"id\" : \"saxr\",\n  \"url\" : \"https://web.example.mocklab.io/349230\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fec96da0-f142-4990-ba24-bcb9df155329",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.352559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchemaVersion",
          "schema" : {
            "properties" : {
              "date_created" : {
                "description" : "The date the schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "raw" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "schema_version" : {
                "description" : "The version of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57abe4d7-1ba0-48e3-b1bd-36abeadc63aa",
    "name" : "Retrieve a paginated list of versions of the schema.",
    "request" : {
      "urlPath" : "/v1/Schemas/lyc2/Versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/786477\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/355221\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/471059\",\n    \"page\" : 6814240341334079135,\n    \"key\" : \"ut4oe6dtdy9gqlaqf6h41aorwgevqg826p4cw5ey8zuw44r9pjl7w837tszyl4zxuoe343bi146ecnweylqg6fzbbvjz1mb\",\n    \"url\" : \"https://web.example.mocklab.io/320117\",\n    \"page_size\" : 5700161798959707133\n  },\n  \"schema_versions\" : [ {\n    \"schema_version\" : 2701575617645964032,\n    \"date_created\" : \"2023-09-09T14:51:19.351Z\",\n    \"raw\" : \"m1pmue94rn5w5haooj3itwf0mqlqbpi6m66ejgverg79bdkiq2nwnpne46wed4pk9lmfc82daskobg5u\",\n    \"id\" : \"pq90\",\n    \"url\" : \"https://web.example.mocklab.io/822303\"\n  }, {\n    \"schema_version\" : 637684761040660860,\n    \"date_created\" : \"2023-01-02T07:20:04.351Z\",\n    \"raw\" : \"6058edqwwe02axokt0d5skbb\",\n    \"id\" : \"irer\",\n    \"url\" : \"https://web.example.mocklab.io/246689\"\n  }, {\n    \"schema_version\" : 6179440782614656987,\n    \"date_created\" : \"2023-03-09T07:39:35.351Z\",\n    \"raw\" : \"w35qyu8xawxdg5wgei19qxh1kila3o2il9szp9rdwqrokdw09xqbmqsy9bskvtzwjthq39nvo4qeu3pern9prulhee435hdjj3yc3iutzlpb5fr6ei8rrc708i2ghhq5k3top7o8tgwgqc9zswxu01ehq7jqxp630dcv5cy9l3rsvzrv6\",\n    \"id\" : \"4010\",\n    \"url\" : \"https://web.example.mocklab.io/123431\"\n  }, {\n    \"schema_version\" : 8194023621539136431,\n    \"date_created\" : \"2022-05-07T10:23:33.351Z\",\n    \"raw\" : \"pxchutk5cu96eob1ubds7rekbid2hbpb8yb365qe4nqvzkhmzw35gdgkzzkt77m790irhv2eqikiycyr8s3en3i50p5a34oin3s78mntb4qyx63s0jck745n9\",\n    \"id\" : \"j743\",\n    \"url\" : \"https://web.example.mocklab.io/242419\"\n  }, {\n    \"schema_version\" : 3275980358785588293,\n    \"date_created\" : \"2022-11-03T10:10:14.351Z\",\n    \"raw\" : \"1b3jezw4eiiolc2nl3x9jo95t01om79jhl85pr992pix86nl1o07pbq4u0bryfa1h61p057y0ougxk18r6styt9wu77fhzaidmlac1wv77eivckteapbdztj9cdcwdoeia8l8j91rzzqbkg2077kvdfwz8ldq\",\n    \"id\" : \"ozqa\",\n    \"url\" : \"https://web.example.mocklab.io/272861\"\n  }, {\n    \"schema_version\" : 6325514549606408606,\n    \"date_created\" : \"2024-01-31T06:38:42.351Z\",\n    \"raw\" : \"fu18n0ot4eqli6fa41gu79e4n9qwmdurisquovlceztv5aq46ybog7ip50i1m209dxc9hsy81gnk6gp034wyf0d0il86tz170ek6qnngttij06\",\n    \"id\" : \"wc02\",\n    \"url\" : \"https://web.example.mocklab.io/977288\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57abe4d7-1ba0-48e3-b1bd-36abeadc63aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.352218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListSchemaVersion",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "schema_versions" : {
                "items" : {
                  "$ref" : "#/components/schemas/events.v1.schema.schema_version"
                },
                "type" : "array"
              }
            },
            "title" : "ListSchemaVersionResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "38a3cd5f-efe3-4c6b-833f-c23ef974f51c",
    "name" : "Fetch a specific schema with its nested versions.",
    "request" : {
      "urlPath" : "/v1/Schemas/3l5c",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"latest_version\" : 1246107700309856218,\n  \"links\" : { },\n  \"id\" : \"h79k\",\n  \"latest_version_date_created\" : \"2023-07-29T15:34:45.35Z\",\n  \"url\" : \"https://web.example.mocklab.io/141954\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38a3cd5f-efe3-4c6b-833f-c23ef974f51c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:50.350768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSchema",
          "schema" : {
            "properties" : {
              "id" : {
                "description" : "The unique identifier of the schema. Each schema can have multiple versions, that share the same id.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_version" : {
                "description" : "The latest version published of this schema.",
                "nullable" : true,
                "type" : "integer"
              },
              "latest_version_date_created" : {
                "description" : "The date that the latest schema version was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this schema.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}