{
  "mappings" : [ {
    "id" : "7e48ad44-3ac8-4929-8699-0cf6eb02a524",
    "name" : "Creates a composite index. This returns a google.longrunning.Operation which may...",
    "request" : {
      "urlPath" : "/v1beta2/do7rhkmjc3u1i4dybvw69ywgidhh108o820d4bphpgd6dvshw3scl9zjow563o1hs9zwuk018afisptffpkuez0edbf1kn/indexes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kittie Robel V\",\n  \"error\" : {\n    \"code\" : 1315944956,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Autem quo sint repellendus. Eius tempora ad. Et voluptatem aut quibusdam. Qui alias odio. Animi odit aut laudantium ut rerum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e48ad44-3ac8-4929-8699-0cf6eb02a524",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.649658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "be9a4a26-3202-4d39-9d08-3a022c6060c9",
    "name" : "Lists composite indexes.",
    "request" : {
      "urlPath" : "/v1beta2/czjmbufricm2ftir2b6a09vrc63e3awa74rbiy3fteia5qyydi02yaz78j8pf4vdvjx002hs576avbh7nus8ax72tu80hxzgflssuhc1rk9jqcvt3b55rdebm3h15ggq115lnv8n352y1q303sc7trdqqd5moyx8gd96cpjp1eadx/indexes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"indexes\" : [ {\n    \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n    \"name\" : \"Lavonda Hegmann\",\n    \"state\" : \"CREATING\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"p91h9e714kgx9u4drt0qq8mebr4ctak9y78gf\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"lrwamo9bsr0o4otxsg3bnkq1423vt73k7d9nw172ygv2vcpufipa580jy9jql0ifsf0ic0gpviar2jsordqxlg2wvf4vczj6rkly0uwoz9us5xvorvskmgw4hw68cqco\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"r7mw7r2k01u42b9h3qcsrac95vyl3n37n4wlkwbx0wpqj7f6y47rv3z90tic81o9p81n0xqlo6fb9do6e63d9qw2igvq4cn9fahyd44c4wgtc1i3ap7d8d1w25q1m2k34yaxcca6gxpk3jfwkwbpxvzzrf677d7wsx6d\",\n      \"order\" : \"DESCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n    \"name\" : \"Clayton Harris MD\",\n    \"state\" : \"READY\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"b1rv\",\n      \"order\" : \"ASCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"COLLECTION\",\n    \"name\" : \"Misti Hyatt DDS\",\n    \"state\" : \"CREATING\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"vijkv3tzxg4qpaxdy195641h1rxhpkcjbnhy19yjv8ucvgtbd6og8eujpsrotne5elqazk74pbsk35b58r89t3qs1xqjyjpfjhumjp3nekuzpmww0f8hx5hp4nv9jp19vj1rc8vruvou2xfupricknods9ujgb0wmi3hy6lgzdhokrs2v\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"l94pfaguv8vkzlk9hgirl54mzerzpel55x2e1diflkx1aa3t6uxnr1ao97blhakkr93atvsuwhgygmssyqmc61ixraaxpkoz2etsmz3ymgd2hrvgowpx\",\n      \"order\" : \"DESCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"COLLECTION_GROUP\",\n    \"name\" : \"Ami Farrell\",\n    \"state\" : \"CREATING\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"0q0syjp353szlm200g671\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"kcmyu0lyv1tlh7qllb6l781of4l1huzygbhv27tk\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"0vjv\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"nnmuv9\",\n      \"order\" : \"ASCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n    \"name\" : \"Ali Wuckert\",\n    \"state\" : \"READY\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"r357zy4hvb7pat13phmgu42win4m1zjv\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"9j6tnyqfmwenj5arct46srpgo45tlha7qlyynije4316rkqztquzvh1dek6jihzs36akzw3lfmc7tmswjkhbukv8bzl5i2ebdntro8kgvmsrxrerc4t72bb9rx206fgq2nccxawggioqyqgbnivi6lgcm8d8e2gkg\",\n      \"order\" : \"DESCENDING\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"n9tuam0gq7atjid7ab9d1glk3qc2k2pkve4y9j1f46sekv0g5ewlqxcbu7wn2jo2jugvqcrayanxg4wkrdr43w5tc7t8dbasm6m9s1x7caihjr1l52dxcwdxgp68dlfylpmnh2jguzzrh6zdh87hhiad6lwh6\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"6tjbtw8vibko79qhze4ipxy5wolktzixzofmvu7yf7v5bwabsp9pvr4a\",\n      \"order\" : \"ASCENDING\"\n    } ]\n  } ],\n  \"nextPageToken\" : \"1jt666oxyegvwusai5skuks1eyzxrdmma9ptej4njl42c6kep\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be9a4a26-3202-4d39-9d08-3a022c6060c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.649471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.list",
          "schema" : {
            "description" : "The response for FirestoreAdmin.ListIndexes.",
            "properties" : {
              "indexes" : {
                "description" : "The requested indexes.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirestoreAdminV1beta2Index"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A page token that may be used to request another page of results. If blank, this is the last page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1decd833-e41f-433e-b969-77e3835efd0d",
    "name" : "Lists the field configuration and metadata for this database. Currently, Firesto...",
    "request" : {
      "urlPath" : "/v1beta2/4kegdjhgy44fuc8sdox7cxbg8h7ln6yslul4esevulf6vyv9nq7lxofghdrxs8m1eiges58mq0w7hmtn7/fields",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"yf6tmrc85z6lzb1bwepulphrkv6xdtrsmpfkhusap7vn1d0yhbv5z97sjxxec3549vow8p93ec1c1sm1c\",\n  \"fields\" : [ {\n    \"name\" : \"Mrs. Lemuel Stehr\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : true,\n      \"ancestorField\" : \"0o7rych95hpectwxpdzgpwg0ahkgrdjvrwjqm1u158bl1pkh73izcuyrw4ow5i6vunmop59cj3hde4eatbengar1vcquudtb3cw3odlxni8b4kf96br96qz5hyi0hrtqk8a6qj36glqxetv2xci\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Ned Renner\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Tatum Zulauf\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Elvin Mayer DDS\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"In Deckow\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Miss Refugia Mohr\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Nickolas Keeling\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Ms. Nannette Windler\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Cassi Stanton\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"reverting\" : false\n    }\n  }, {\n    \"name\" : \"Gabriel Predovic\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : false,\n      \"ancestorField\" : \"brzn3cezzjc8x01u1akb76xj3m4yzh9tnt6lge8tffmjfn66in2zovnrpm0tpqdxjh3s3vtz5hezeoefmrcnhtw88zpgja6c863pjolgd62ecsehtall5xzvy4sk65p160cv04birsoo0il83\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Mrs. Daphine Metz\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Keith Jast\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Ivey Gulgowski\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { } ]\n      } ],\n      \"reverting\" : false\n    }\n  }, {\n    \"name\" : \"Mr. Kenisha Gusikowski\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : false,\n      \"ancestorField\" : \"featmfmstbxf0otafmyrkl71nt3e752qrrp1v2q8a501u7ks25q2borbp2zsioe838ogemnrjwize0gybi51yix76yf3x8yzljktejrc82usccsnkrcoc41qpdcn8sc72a6wjqj35\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Faustino Schaefer V\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Trent Nikolaus\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Chong Maggio\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Lorelei Veum\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      } ],\n      \"reverting\" : false\n    }\n  }, {\n    \"name\" : \"Latasha Dooley\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : false,\n      \"ancestorField\" : \"c10gifr9pu2j6zpp2vii4lolfp4lotwie4j2d2bk8hfi5j9fc7nf7bv8pd5bpsasq5qcib63r4ddqvyenuvyi6c952pw2\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Kaylee Fay Jr.\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Dr. Jarrod Buckridge\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Otilia Tromp\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Mervin Sanford\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"reverting\" : true\n    }\n  }, {\n    \"name\" : \"Willis Mraz\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : false,\n      \"ancestorField\" : \"xty2atmyps4d8vogdby9kut0gqljjcmcgfvkkr3px1re0n5vl6lcpgybcx8qthmvb78qm62t7t3b02hs88tabx5p7\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Shannan Howe\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Idell Hahn\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Joesph Ruecker\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Isabella Corwin\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Mr. Rubye Murazik\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Maryalice Morar\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Catarina Okuneva\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"reverting\" : true\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1decd833-e41f-433e-b969-77e3835efd0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.64872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.fields.list",
          "schema" : {
            "description" : "The response for FirestoreAdmin.ListFields.",
            "properties" : {
              "fields" : {
                "description" : "The requested fields.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirestoreAdminV1beta2Field"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A page token that may be used to request another page of results. If blank, this is the last page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6c91a992-c606-4f7b-a173-539abe82677a",
    "name" : "Imports documents into Google Cloud Firestore. Existing documents with the same ...",
    "request" : {
      "urlPath" : "/v1beta2/Gabriel+Flatley:importDocuments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Leona Russel\",\n  \"error\" : {\n    \"code\" : 862324916,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Tenetur autem quia alias debitis aut sit ipsum. Illo sit dolores consequuntur nemo sint quo adipisci. Blanditiis cumque numquam minima reprehenderit eaque accusantium. Et sed numquam aut qui assumenda\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c91a992-c606-4f7b-a173-539abe82677a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.646603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.importDocuments",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24ee75af-acbc-422a-aaa5-d5d982a43661",
    "name" : "Exports a copy of all or a subset of documents from Google Cloud Firestore to an...",
    "request" : {
      "urlPath" : "/v1beta2/Hien+Torphy:exportDocuments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Thea Dickinson\",\n  \"error\" : {\n    \"code\" : 1680453425,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Velit laborum repellat. Beatae debitis voluptatum atque. Illo nemo sint neque est accusantium sit aliquam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24ee75af-acbc-422a-aaa5-d5d982a43661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.646402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.exportDocuments",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "76b63c50-b7e0-4f18-bc08-e94ad9636a38",
    "name" : "Updates a field configuration. Currently, field updates apply only to single fie...",
    "request" : {
      "urlPath" : "/v1beta2/Carlos+Bergnaum+DDS",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Orville Cruickshank\",\n  \"error\" : {\n    \"code\" : 784860412,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Non quia voluptas rem quisquam totam adipisci sed. Veniam et non harum eos. Temporibus et qui laboriosam illum perspiciatis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76b63c50-b7e0-4f18-bc08-e94ad9636a38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.646197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.fields.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4f1f3c48-71ac-454f-b990-10e1ae81ffa7",
    "name" : "Gets a composite index.",
    "request" : {
      "urlPath" : "/v1beta2/Buddy+Bashirian",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"queryScope\" : \"COLLECTION_GROUP\",\n  \"name\" : \"Nikki Rodriguez\",\n  \"state\" : \"CREATING\",\n  \"fields\" : [ {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"qgg6jig9m65s5cr\",\n    \"order\" : \"DESCENDING\"\n  }, {\n    \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n    \"fieldPath\" : \"00cx4d4p1uq5pwkuu1fqh5ahj4vmn84rd247hctwsih3fth8p86ursob8z2p453z2ebjdo9k49pjzyzmegjmsu8cdkjk4vxdsvhszytfh1lu46me1pkmrcirson7rpyvpq7v1p574ydbbk9v6wrtxjhdu6pre9143doj8bpr7fuvrmuh903wlxagvnx0\",\n    \"order\" : \"ORDER_UNSPECIFIED\"\n  }, {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"9qdbk8g652n44e5tjvobv9d095bb0ualqa8wafza2xv37gllzwmmp9ph3axehuja6p2i9xm970jqzj4t7i8l63lzftnqhsgqofaz93rz2754t6dd78ztxm7ifdvnii1zov5jl0svdrsehigpgsyhnis5dk5q616emvegy1m662lf\",\n    \"order\" : \"ASCENDING\"\n  }, {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"7eajyx4y7fkv6328qbdti69f2dr8a1u5tpliuu5h8kc5dpf2aa4i92xo8iu1e7hskwhre34kjfnqz0k8hyi82xuutm98s8r2cmmvlhcu\",\n    \"order\" : \"ASCENDING\"\n  }, {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"3teo9dwur2ju6hfsofgx57l1zayny9m4bnx0auj123v00i2yco1yusr81ye6aj2kgz7fvw1ijiv5rxwsnkz8oh4tfutya5vdavqk8cobfsddcc52qab2tmv66mag85h16h8ctaif5gvddpxws5gs7y9dpb2jht8uj5tmuq\",\n    \"order\" : \"ORDER_UNSPECIFIED\"\n  }, {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"4m92xgps2t43wbx534075yz0b8uqlawkuyn6qrirn3qof0278nxjcxb2k4h5fq177hgqe8bn8xqmvspr2flwbkpv25a2if6eynm5mm4m976472pqgwua86v0bwfawlz2p008plmeaps7s0\",\n    \"order\" : \"DESCENDING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f1f3c48-71ac-454f-b990-10e1ae81ffa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.645965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.get",
          "schema" : {
            "description" : "Cloud Firestore indexes enable simple and complex queries against documents in a database.",
            "properties" : {
              "fields" : {
                "description" : "The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirestoreAdminV1beta2IndexField"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.",
                "type" : "string"
              },
              "queryScope" : {
                "description" : "Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.",
                "enum" : [ "QUERY_SCOPE_UNSPECIFIED", "COLLECTION", "COLLECTION_GROUP" ],
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The serving state of the index.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY", "NEEDS_REPAIR" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "343b4e47-e70f-4900-8ee5-dba237fd8139",
    "name" : "Deletes a composite index.",
    "request" : {
      "urlPath" : "/v1beta2/Renetta+Streich+DVM",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "343b4e47-e70f-4900-8ee5-dba237fd8139",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.645563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}