{
  "mappings" : [ {
    "id" : "96ad13d7-14b6-4c7e-92b5-a0a799bf7b6e",
    "name" : "Creates a composite index. This returns a google.longrunning.Operation which may...",
    "request" : {
      "urlPath" : "/v1beta2/yr3lgr1on97upua9i4zg346x6w0ybdbxy16qei8sm7m4v96yzeq5dyy9hmq5rq8fgoitqjruqzchfurqw7gienpeexohosija8zxmdiq5ckxxlpe772njrsjdbmek5c86s2ccdotgc6odyf1ela4sv/indexes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Jeff Quitzon\",\n  \"error\" : {\n    \"code\" : 623177180,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Odit alias esse cumque voluptates quia expedita. Ullam omnis odit debitis. In dolore molestiae. Molestiae at adipisci et placeat alias ipsam facere. Aut praesentium est velit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96ad13d7-14b6-4c7e-92b5-a0a799bf7b6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.371629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "aa3d7faf-cf1c-4f50-ae54-fa9d9ae420a3",
    "name" : "Lists composite indexes.",
    "request" : {
      "urlPath" : "/v1beta2/oabe40of8i062gq9ai34h5ctmqqapimav5fueatxe70mog2qntq7g5ims0g2n256fuu1g/indexes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"indexes\" : [ {\n    \"queryScope\" : \"COLLECTION_GROUP\",\n    \"name\" : \"Collin Schaden\",\n    \"state\" : \"NEEDS_REPAIR\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"3xlwz4jrdb3\",\n      \"order\" : \"ASCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n    \"name\" : \"Connie O'Conner\",\n    \"state\" : \"NEEDS_REPAIR\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"0ebpqzg6gb38eexj7wel5hhoj62r46cpqc41o22s8f32abk7lvnf3ss4e4lnuwqn61\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"bej16ws3e02d9lv8pn23cuf69sqdsjf7omjunlqe6dttoeule3be1sr0rc9036rnx7ucz2tb02ksulc5de0c652plsc492r070zfzcxivxyt4iblqqixsx97a3y0llv3px341abvj5bxuk576l133\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"0t0nrz1o3xi9w7kdzyw1akz5eprzghoow0bice1m2xzv7gyivcui5y5hbod0u3ynavsc91dlnt8m\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"fq7nbzabs7x5duaj2p0mkh2fg4f9mjpa4p\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"gjrwu706sv\",\n      \"order\" : \"DESCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"COLLECTION\",\n    \"name\" : \"Synthia Thompson\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"wxe4x1qknufoy7k\",\n      \"order\" : \"DESCENDING\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"619j1xwctzfkuarapkitxmbvofbv2kyfm1eknkqepon3kpk5gjvt4lp4glz42hceg0icgclya0jnufnuvodq4juwqpxsncpjxzvj4\",\n      \"order\" : \"ASCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n    \"name\" : \"Larry Cole II\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"xkzvfly138fehqsyeb2bysqipwrqzojrq60e5zzqee7swdbggajzmf1atje9z5btujhr5wttvn9cz4p2rqp33jdynfrs1b4zifmiv8yfco3govr61qi2n8sm0tvsoorvu5773jin1oauxnwn870ucegmb9a103nhhu82hh7dgo62t64mot9pd91v\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"v2bu8bx06gdbsudgjnp89x609q5dbrem5cmzns4ccqbblrevg2bqj22qikywwn0htdjqyft8togqvu7zkvs3fc2mpcbggg4kz2yo\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"k1be2ifudbs9nazo38p2zuymkc5zlbytp9swp2o7y2zb0qirnx5ert\",\n      \"order\" : \"DESCENDING\"\n    }, {\n      \"arrayConfig\" : \"CONTAINS\",\n      \"fieldPath\" : \"215wfgbuotzt6dludey9sl066946unxmfqgi281bkvqb5stmfewb9jw7n85qnu91muypthnfs4r78xnihaifvswnn8knahgz\",\n      \"order\" : \"ASCENDING\"\n    }, {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"drcbjajxqsw403gik3x1z6ruxims7le7csalp52fqekt7v7vf3zfhsck911i54hdxdmx8m6j2j35o1qr0fp6686zi8t9fved9sqrxbx52tcwgemzxl1c7s3iyq8d22l2wf8i\",\n      \"order\" : \"DESCENDING\"\n    } ]\n  }, {\n    \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n    \"name\" : \"Ms. Gerard Farrell\",\n    \"state\" : \"CREATING\",\n    \"fields\" : [ {\n      \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n      \"fieldPath\" : \"07i987495t7oef0vpuhx2tz6l0h3f4xn9q62jqc7gc3rby9trzs4djfuq3w3oldpib9snxs198b1ixho08r7bjzjfepomxrqvk9opb5vrjep0aancfuh5homs6rkdrqeav8pg5eow8okwv98iuxmectfte9uv83htnxv8\",\n      \"order\" : \"ORDER_UNSPECIFIED\"\n    } ]\n  } ],\n  \"nextPageToken\" : \"1t95fjpppb4r80197xreh53ewaxvxgd2uaqotkf90gqmuav3dq5k79s52szdqq445m3m9cw4estd20om78prxdlepggnaal5bf4bp6n4bguhwi2e2ft4hjclythq2johb7y0bgmnor1i40obl1zq1lcyc72tjimpe1ll1kofp59ndqe2g4g2r0ptk7ny7r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa3d7faf-cf1c-4f50-ae54-fa9d9ae420a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.371418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.list",
          "schema" : {
            "description" : "The response for FirestoreAdmin.ListIndexes.",
            "properties" : {
              "indexes" : {
                "description" : "The requested indexes.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirestoreAdminV1beta2Index"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A page token that may be used to request another page of results. If blank, this is the last page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3addaa2f-4a9e-46e0-ae12-8abe3613d5e0",
    "name" : "Lists the field configuration and metadata for this database. Currently, Firesto...",
    "request" : {
      "urlPath" : "/v1beta2/bm5tt2gwejfm9yshulknm8yckxk1pyhv5t7b4bxbomdj7xhlnqrvi0f6f7xtbw9cau8vy7gjrpkfs09h1h08qhqhdfumdxyjfyuph6qimzfmozw8mz7c6785ettscsh3w1ngnwi3597r76ba4u80blnleo/fields",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"vvplrf96rc9ph\",\n  \"fields\" : [ {\n    \"name\" : \"Louetta Stamm\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : true,\n      \"ancestorField\" : \"25oiu0lic3xfbgfa1y66mzpcg5qpz8\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Mrs. Andrew Bahringer\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Maurice Bins\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Katerine Tremblay\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Alba Yost\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Karl Abernathy\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"reverting\" : false\n    }\n  }, {\n    \"name\" : \"Ignacio Weimann\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : true,\n      \"ancestorField\" : \"y9kofqqkw218chz58vue4erw0gky3o16x36exoof6hpoguiwxvwlhdqx3ijz3ynsy79whl9fe3bg5q1p3vgm1tq13t5nfisc1dwtad5z7k7182catw8lve8yotfeinfgn5gifj57e9ga5anpfxt9x\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Viola Breitenberg Sr.\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Dr. Tommie Bednar\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Dominick Cole\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Antonette Donnelly\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Eugene McKenzie\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Jerold Wisoky\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Adelaida Jast DDS\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Ms. Piper Swaniawski\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { } ]\n      } ],\n      \"reverting\" : false\n    }\n  }, {\n    \"name\" : \"Mr. Echo Blanda\",\n    \"indexConfig\" : {\n      \"usesAncestorConfig\" : false,\n      \"ancestorField\" : \"6tyxuaicc1l7t5lsuuz41nc9rzaq6rx53pvv8o784jttj7ro9xgro5ye5u77hbgw105c0qyu1883gjdea5gzt60unf8jwc5rral40uvdgpx9edpzitt4xa6pohyoy1eqp9rn5z3pnioqp282wa0esh3ksm8zoqdin4yx7t8f5mywb4\",\n      \"indexes\" : [ {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Patrick Crona\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Miyoko Anderson PhD\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Dr. Collene Konopelski\",\n        \"state\" : \"STATE_UNSPECIFIED\",\n        \"fields\" : [ { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Myrtis Gleason\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION_GROUP\",\n        \"name\" : \"Marybelle Fisher\",\n        \"state\" : \"READY\",\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"QUERY_SCOPE_UNSPECIFIED\",\n        \"name\" : \"Katelynn Cummings PhD\",\n        \"state\" : \"NEEDS_REPAIR\",\n        \"fields\" : [ { }, { }, { } ]\n      }, {\n        \"queryScope\" : \"COLLECTION\",\n        \"name\" : \"Ms. Malcom Breitenberg\",\n        \"state\" : \"CREATING\",\n        \"fields\" : [ { }, { }, { }, { } ]\n      } ],\n      \"reverting\" : false\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3addaa2f-4a9e-46e0-ae12-8abe3613d5e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.370578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.fields.list",
          "schema" : {
            "description" : "The response for FirestoreAdmin.ListFields.",
            "properties" : {
              "fields" : {
                "description" : "The requested fields.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirestoreAdminV1beta2Field"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A page token that may be used to request another page of results. If blank, this is the last page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "46ff85f4-499b-48e6-a727-ab378304aeeb",
    "name" : "Imports documents into Google Cloud Firestore. Existing documents with the same ...",
    "request" : {
      "urlPath" : "/v1beta2/Chelsea+Donnelly:importDocuments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Solange Mitchell\",\n  \"error\" : {\n    \"code\" : 956077204,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Similique et rem dignissimos est. Odit sed sit soluta sed repellat. Voluptas doloremque atque perspiciatis occaecati quis quidem dolorum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46ff85f4-499b-48e6-a727-ab378304aeeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.368853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.importDocuments",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "8076aa41-f938-422a-a220-acb932ad21f0",
    "name" : "Exports a copy of all or a subset of documents from Google Cloud Firestore to an...",
    "request" : {
      "urlPath" : "/v1beta2/Mr.+Ulysses+Jaskolski:exportDocuments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Delana Heidenreich\",\n  \"error\" : {\n    \"code\" : 1356299171,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ut voluptatem quia beatae. Doloremque qui est corrupti sed ab qui totam. Exercitationem debitis nihil nostrum reiciendis assumenda.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8076aa41-f938-422a-a220-acb932ad21f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.368646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.exportDocuments",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "229aeb2c-293f-4630-8e80-84afe7d1e548",
    "name" : "Updates a field configuration. Currently, field updates apply only to single fie...",
    "request" : {
      "urlPath" : "/v1beta2/Bernetta+Abshire",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Perry Hermann\",\n  \"error\" : {\n    \"code\" : 1029102398,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Cum dolor sequi cum. Dolorem libero odit et exercitationem magni. Qui nemo tempore sed. Corrupti iste nemo eius beatae consequatur. Animi consequuntur dolorem molestias ut ut explicabo accusamus.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "229aeb2c-293f-4630-8e80-84afe7d1e548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.368432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.fields.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "92056a70-f2cd-4782-8689-8467d70a253d",
    "name" : "Gets a composite index.",
    "request" : {
      "urlPath" : "/v1beta2/Mrs.+Wilma+Steuber",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"queryScope\" : \"COLLECTION\",\n  \"name\" : \"Miss Felicitas Schoen\",\n  \"state\" : \"READY\",\n  \"fields\" : [ {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"t39yvypb7v1223vny9p1cwslm74lhiz6w9gfs64mv3bk85p9g7x2bhk1uez2isnfrgldqk9i9qgd0kvx9kd3xn4me5ngihofucc9hfxec619yzc60ck723p1aox6bs2ln5uvltkhhts3i3tonswf3gviunbdwaezcftibrtd5uzfdgy60asez3kdm\",\n    \"order\" : \"ORDER_UNSPECIFIED\"\n  }, {\n    \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n    \"fieldPath\" : \"xefl8b6hv76uvi2hurtcq0d3l071053xdt1dogju21f2dqdf4u39a71c35j872mqqi641ybc0hcmr\",\n    \"order\" : \"ASCENDING\"\n  }, {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"01294pbp\",\n    \"order\" : \"ORDER_UNSPECIFIED\"\n  }, {\n    \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n    \"fieldPath\" : \"98cqpvxve8qwnu8fzwzo808sj5401lyes2j4s5fudpzjveev2q5n4l4mrd3ok29rmshl57v1crhyaknhd\",\n    \"order\" : \"ASCENDING\"\n  }, {\n    \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n    \"fieldPath\" : \"yqhj1bd9i2wbz0xmbyyz2k6wke\",\n    \"order\" : \"ORDER_UNSPECIFIED\"\n  }, {\n    \"arrayConfig\" : \"CONTAINS\",\n    \"fieldPath\" : \"d2hjq09lpxzzvz5d1ig73h9edo5spz7t87s333bbevfyzcgo4bm86xyp3zxbg4inc4imx8jdhh2iatwe61tzhcjhld9mom8m2hf5u07gev98f9svkpdvsg6tbevf0xbb55acgl\",\n    \"order\" : \"ASCENDING\"\n  }, {\n    \"arrayConfig\" : \"ARRAY_CONFIG_UNSPECIFIED\",\n    \"fieldPath\" : \"08omdlv274q8osrikgmvgjikulwqpg513uf6e2r14762lo2vbnywex3ayqfqmq01zbvxyvdrjn7hbuxctn6ihm5xd5z4e4hgncrf\",\n    \"order\" : \"ASCENDING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92056a70-f2cd-4782-8689-8467d70a253d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.368155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.get",
          "schema" : {
            "description" : "Cloud Firestore indexes enable simple and complex queries against documents in a database.",
            "properties" : {
              "fields" : {
                "description" : "The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirestoreAdminV1beta2IndexField"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.",
                "type" : "string"
              },
              "queryScope" : {
                "description" : "Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.",
                "enum" : [ "QUERY_SCOPE_UNSPECIFIED", "COLLECTION", "COLLECTION_GROUP" ],
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The serving state of the index.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY", "NEEDS_REPAIR" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "80f6929f-68e5-4ea1-a417-af9339bda3ed",
    "name" : "Deletes a composite index.",
    "request" : {
      "urlPath" : "/v1beta2/Leila+Stoltenberg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80f6929f-68e5-4ea1-a417-af9339bda3ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.36766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firestore.projects.databases.collectionGroups.indexes.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  } ]
}