{
  "mappings" : [ {
    "id" : "6eefcf01-f6ee-4d14-80ba-0103b815608d",
    "name" : "Cancel a pending Wire Transfer",
    "request" : {
      "urlPath" : "/wire_transfers/wgso/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"beneficiary_address_line1\" : null,\n  \"beneficiary_address_line2\" : null,\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_financial_institution_address_line1\" : null,\n  \"beneficiary_financial_institution_address_line2\" : null,\n  \"beneficiary_financial_institution_address_line3\" : null,\n  \"beneficiary_financial_institution_identifier\" : null,\n  \"beneficiary_financial_institution_identifier_type\" : null,\n  \"beneficiary_financial_institution_name\" : null,\n  \"beneficiary_name\" : null,\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n  \"message_to_recipient\" : \"Message to recipient\",\n  \"network\" : \"wire\",\n  \"reversal\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"complete\",\n  \"submission\" : null,\n  \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"wire_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6eefcf01-f6ee-4d14-80ba-0103b815608d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.608449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancel_a_pending_wire_transfer",
          "schema" : {
            "description" : "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient" : "Message to recipient",
              "network" : "wire",
              "routing_number" : "101050001",
              "status" : "complete",
              "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "wire_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "beneficiary_address_line1" : {
                "description" : "The beneficiary's address line 1.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "The beneficiary's address line 2.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "The beneficiary's address line 3.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The wire transfer's identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message that will show on the recipient's bank statement.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "wire" ],
                "type" : "string"
              },
              "reversal" : {
                "description" : "If your transfer is reversed, this will contain details of the reversal.",
                "example" : {
                  "amount" : 12345,
                  "description" : "Inbound wire reversal 2022021100335128",
                  "input_cycle_date" : "2022-02-11",
                  "input_message_accountability_data" : "20220211B6B7HU2R011023",
                  "input_sequence_number" : "11023",
                  "input_source" : "B6B7HU2R",
                  "previous_message_input_cycle_date" : "2022-02-10",
                  "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                  "previous_message_input_sequence_number" : "3",
                  "previous_message_input_source" : "MMQFMP0P"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount that was reversed.",
                    "type" : "integer"
                  },
                  "description" : {
                    "description" : "The description on the reversal message from Fedwire.",
                    "type" : "string"
                  },
                  "financial_institution_to_financial_institution_information" : {
                    "description" : "Additional financial institution information included in the wire reversal.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire reversal.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier.",
                    "type" : "string"
                  },
                  "input_sequence_number" : {
                    "description" : "The Fedwire sequence number.",
                    "type" : "string"
                  },
                  "input_source" : {
                    "description" : "The Fedwire input source identifier.",
                    "type" : "string"
                  },
                  "previous_message_input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "previous_message_input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_sequence_number" : {
                    "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_source" : {
                    "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "receiver_financial_institution_information" : {
                    "description" : "Information included in the wire reversal for the receiving financial institution.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                "title" : "Inbound Wire Reversal",
                "type" : "object",
                "x-title-plural" : "Inbound Wire Reversals"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "canceled", "requires_attention", "pending_approval", "rejected", "reversed", "complete", "pending_creating" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer has been canceled.", "The transfer requires your attention.", "The transfer is pending approval.", "The transfer has been rejected.", "The transfer has been reversed.", "The transfer is complete.", "The transfer is pending creation." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000002",
                  "submitted_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The accountability data for the submission.",
                    "type" : "string"
                  },
                  "submitted_at" : {
                    "description" : "When this wire transfer was submitted to Fedwire.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data", "submitted_at" ],
                "title" : "Wire Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Wire Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_transfer`.",
                "enum" : [ "wire_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "message_to_recipient", "amount", "currency", "account_number", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "account_id", "external_account_id", "routing_number", "approval", "cancellation", "reversal", "created_at", "network", "status", "submission", "template_id", "transaction_id", "type" ],
            "title" : "Wire Transfer",
            "type" : "object",
            "x-tag" : "Wire Transfers",
            "x-title-plural" : "Wire Transfers"
          }
        }
      }
    }
  }, {
    "id" : "6e859f6d-c2d7-4899-a09a-468538cf8a0a",
    "name" : "Approve a Wire Transfer",
    "request" : {
      "urlPath" : "/wire_transfers/w7kj/approve",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"beneficiary_address_line1\" : null,\n  \"beneficiary_address_line2\" : null,\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_financial_institution_address_line1\" : null,\n  \"beneficiary_financial_institution_address_line2\" : null,\n  \"beneficiary_financial_institution_address_line3\" : null,\n  \"beneficiary_financial_institution_identifier\" : null,\n  \"beneficiary_financial_institution_identifier_type\" : null,\n  \"beneficiary_financial_institution_name\" : null,\n  \"beneficiary_name\" : null,\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n  \"message_to_recipient\" : \"Message to recipient\",\n  \"network\" : \"wire\",\n  \"reversal\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"complete\",\n  \"submission\" : null,\n  \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"wire_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e859f6d-c2d7-4899-a09a-468538cf8a0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.60807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "approve_a_wire_transfer",
          "schema" : {
            "description" : "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient" : "Message to recipient",
              "network" : "wire",
              "routing_number" : "101050001",
              "status" : "complete",
              "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "wire_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "beneficiary_address_line1" : {
                "description" : "The beneficiary's address line 1.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "The beneficiary's address line 2.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "The beneficiary's address line 3.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The wire transfer's identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message that will show on the recipient's bank statement.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "wire" ],
                "type" : "string"
              },
              "reversal" : {
                "description" : "If your transfer is reversed, this will contain details of the reversal.",
                "example" : {
                  "amount" : 12345,
                  "description" : "Inbound wire reversal 2022021100335128",
                  "input_cycle_date" : "2022-02-11",
                  "input_message_accountability_data" : "20220211B6B7HU2R011023",
                  "input_sequence_number" : "11023",
                  "input_source" : "B6B7HU2R",
                  "previous_message_input_cycle_date" : "2022-02-10",
                  "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                  "previous_message_input_sequence_number" : "3",
                  "previous_message_input_source" : "MMQFMP0P"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount that was reversed.",
                    "type" : "integer"
                  },
                  "description" : {
                    "description" : "The description on the reversal message from Fedwire.",
                    "type" : "string"
                  },
                  "financial_institution_to_financial_institution_information" : {
                    "description" : "Additional financial institution information included in the wire reversal.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire reversal.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier.",
                    "type" : "string"
                  },
                  "input_sequence_number" : {
                    "description" : "The Fedwire sequence number.",
                    "type" : "string"
                  },
                  "input_source" : {
                    "description" : "The Fedwire input source identifier.",
                    "type" : "string"
                  },
                  "previous_message_input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "previous_message_input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_sequence_number" : {
                    "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_source" : {
                    "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "receiver_financial_institution_information" : {
                    "description" : "Information included in the wire reversal for the receiving financial institution.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                "title" : "Inbound Wire Reversal",
                "type" : "object",
                "x-title-plural" : "Inbound Wire Reversals"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "canceled", "requires_attention", "pending_approval", "rejected", "reversed", "complete", "pending_creating" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer has been canceled.", "The transfer requires your attention.", "The transfer is pending approval.", "The transfer has been rejected.", "The transfer has been reversed.", "The transfer is complete.", "The transfer is pending creation." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000002",
                  "submitted_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The accountability data for the submission.",
                    "type" : "string"
                  },
                  "submitted_at" : {
                    "description" : "When this wire transfer was submitted to Fedwire.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data", "submitted_at" ],
                "title" : "Wire Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Wire Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_transfer`.",
                "enum" : [ "wire_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "message_to_recipient", "amount", "currency", "account_number", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "account_id", "external_account_id", "routing_number", "approval", "cancellation", "reversal", "created_at", "network", "status", "submission", "template_id", "transaction_id", "type" ],
            "title" : "Wire Transfer",
            "type" : "object",
            "x-tag" : "Wire Transfers",
            "x-title-plural" : "Wire Transfers"
          }
        }
      }
    }
  }, {
    "id" : "ee9d8f10-5bd9-4db4-92f0-cd9933f06471",
    "name" : "Retrieve a Wire Transfer",
    "request" : {
      "urlPath" : "/wire_transfers/n7p3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"beneficiary_address_line1\" : null,\n  \"beneficiary_address_line2\" : null,\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_financial_institution_address_line1\" : null,\n  \"beneficiary_financial_institution_address_line2\" : null,\n  \"beneficiary_financial_institution_address_line3\" : null,\n  \"beneficiary_financial_institution_identifier\" : null,\n  \"beneficiary_financial_institution_identifier_type\" : null,\n  \"beneficiary_financial_institution_name\" : null,\n  \"beneficiary_name\" : null,\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n  \"message_to_recipient\" : \"Message to recipient\",\n  \"network\" : \"wire\",\n  \"reversal\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"complete\",\n  \"submission\" : null,\n  \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"wire_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee9d8f10-5bd9-4db4-92f0-cd9933f06471",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.607694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_wire_transfer",
          "schema" : {
            "description" : "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient" : "Message to recipient",
              "network" : "wire",
              "routing_number" : "101050001",
              "status" : "complete",
              "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "wire_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "beneficiary_address_line1" : {
                "description" : "The beneficiary's address line 1.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "The beneficiary's address line 2.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "The beneficiary's address line 3.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The wire transfer's identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message that will show on the recipient's bank statement.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "wire" ],
                "type" : "string"
              },
              "reversal" : {
                "description" : "If your transfer is reversed, this will contain details of the reversal.",
                "example" : {
                  "amount" : 12345,
                  "description" : "Inbound wire reversal 2022021100335128",
                  "input_cycle_date" : "2022-02-11",
                  "input_message_accountability_data" : "20220211B6B7HU2R011023",
                  "input_sequence_number" : "11023",
                  "input_source" : "B6B7HU2R",
                  "previous_message_input_cycle_date" : "2022-02-10",
                  "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                  "previous_message_input_sequence_number" : "3",
                  "previous_message_input_source" : "MMQFMP0P"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount that was reversed.",
                    "type" : "integer"
                  },
                  "description" : {
                    "description" : "The description on the reversal message from Fedwire.",
                    "type" : "string"
                  },
                  "financial_institution_to_financial_institution_information" : {
                    "description" : "Additional financial institution information included in the wire reversal.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire reversal.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier.",
                    "type" : "string"
                  },
                  "input_sequence_number" : {
                    "description" : "The Fedwire sequence number.",
                    "type" : "string"
                  },
                  "input_source" : {
                    "description" : "The Fedwire input source identifier.",
                    "type" : "string"
                  },
                  "previous_message_input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "previous_message_input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_sequence_number" : {
                    "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_source" : {
                    "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "receiver_financial_institution_information" : {
                    "description" : "Information included in the wire reversal for the receiving financial institution.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                "title" : "Inbound Wire Reversal",
                "type" : "object",
                "x-title-plural" : "Inbound Wire Reversals"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "canceled", "requires_attention", "pending_approval", "rejected", "reversed", "complete", "pending_creating" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer has been canceled.", "The transfer requires your attention.", "The transfer is pending approval.", "The transfer has been rejected.", "The transfer has been reversed.", "The transfer is complete.", "The transfer is pending creation." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000002",
                  "submitted_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The accountability data for the submission.",
                    "type" : "string"
                  },
                  "submitted_at" : {
                    "description" : "When this wire transfer was submitted to Fedwire.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data", "submitted_at" ],
                "title" : "Wire Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Wire Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_transfer`.",
                "enum" : [ "wire_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "message_to_recipient", "amount", "currency", "account_number", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "account_id", "external_account_id", "routing_number", "approval", "cancellation", "reversal", "created_at", "network", "status", "submission", "template_id", "transaction_id", "type" ],
            "title" : "Wire Transfer",
            "type" : "object",
            "x-tag" : "Wire Transfers",
            "x-title-plural" : "Wire Transfers"
          }
        }
      }
    }
  }, {
    "id" : "6c76f354-0327-495d-9950-16725647adca",
    "name" : "Create a Wire Transfer",
    "request" : {
      "urlPath" : "/wire_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"beneficiary_address_line1\" : null,\n  \"beneficiary_address_line2\" : null,\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_financial_institution_address_line1\" : null,\n  \"beneficiary_financial_institution_address_line2\" : null,\n  \"beneficiary_financial_institution_address_line3\" : null,\n  \"beneficiary_financial_institution_identifier\" : null,\n  \"beneficiary_financial_institution_identifier_type\" : null,\n  \"beneficiary_financial_institution_name\" : null,\n  \"beneficiary_name\" : null,\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n  \"message_to_recipient\" : \"Message to recipient\",\n  \"network\" : \"wire\",\n  \"reversal\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"complete\",\n  \"submission\" : null,\n  \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"wire_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c76f354-0327-495d-9950-16725647adca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.607285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_wire_transfer",
          "schema" : {
            "description" : "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient" : "Message to recipient",
              "network" : "wire",
              "routing_number" : "101050001",
              "status" : "complete",
              "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "wire_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "beneficiary_address_line1" : {
                "description" : "The beneficiary's address line 1.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "The beneficiary's address line 2.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "The beneficiary's address line 3.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The wire transfer's identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message that will show on the recipient's bank statement.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "wire" ],
                "type" : "string"
              },
              "reversal" : {
                "description" : "If your transfer is reversed, this will contain details of the reversal.",
                "example" : {
                  "amount" : 12345,
                  "description" : "Inbound wire reversal 2022021100335128",
                  "input_cycle_date" : "2022-02-11",
                  "input_message_accountability_data" : "20220211B6B7HU2R011023",
                  "input_sequence_number" : "11023",
                  "input_source" : "B6B7HU2R",
                  "previous_message_input_cycle_date" : "2022-02-10",
                  "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                  "previous_message_input_sequence_number" : "3",
                  "previous_message_input_source" : "MMQFMP0P"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount that was reversed.",
                    "type" : "integer"
                  },
                  "description" : {
                    "description" : "The description on the reversal message from Fedwire.",
                    "type" : "string"
                  },
                  "financial_institution_to_financial_institution_information" : {
                    "description" : "Additional financial institution information included in the wire reversal.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire reversal.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier.",
                    "type" : "string"
                  },
                  "input_sequence_number" : {
                    "description" : "The Fedwire sequence number.",
                    "type" : "string"
                  },
                  "input_source" : {
                    "description" : "The Fedwire input source identifier.",
                    "type" : "string"
                  },
                  "previous_message_input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "previous_message_input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_sequence_number" : {
                    "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_source" : {
                    "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "receiver_financial_institution_information" : {
                    "description" : "Information included in the wire reversal for the receiving financial institution.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                "title" : "Inbound Wire Reversal",
                "type" : "object",
                "x-title-plural" : "Inbound Wire Reversals"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "canceled", "requires_attention", "pending_approval", "rejected", "reversed", "complete", "pending_creating" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer has been canceled.", "The transfer requires your attention.", "The transfer is pending approval.", "The transfer has been rejected.", "The transfer has been reversed.", "The transfer is complete.", "The transfer is pending creation." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000002",
                  "submitted_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The accountability data for the submission.",
                    "type" : "string"
                  },
                  "submitted_at" : {
                    "description" : "When this wire transfer was submitted to Fedwire.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data", "submitted_at" ],
                "title" : "Wire Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Wire Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_transfer`.",
                "enum" : [ "wire_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "message_to_recipient", "amount", "currency", "account_number", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "account_id", "external_account_id", "routing_number", "approval", "cancellation", "reversal", "created_at", "network", "status", "submission", "template_id", "transaction_id", "type" ],
            "title" : "Wire Transfer",
            "type" : "object",
            "x-tag" : "Wire Transfers",
            "x-title-plural" : "Wire Transfers"
          }
        }
      }
    }
  }, {
    "id" : "21b42fb1-52eb-41cb-b46d-d732bd6c88a1",
    "name" : "List Wire Transfers",
    "request" : {
      "urlPath" : "/wire_transfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"account_number\" : \"987654321\",\n    \"amount\" : 100,\n    \"approval\" : {\n      \"approved_at\" : \"2020-01-31T23:59:59Z\"\n    },\n    \"beneficiary_address_line1\" : null,\n    \"beneficiary_address_line2\" : null,\n    \"beneficiary_address_line3\" : null,\n    \"beneficiary_financial_institution_address_line1\" : null,\n    \"beneficiary_financial_institution_address_line2\" : null,\n    \"beneficiary_financial_institution_address_line3\" : null,\n    \"beneficiary_financial_institution_identifier\" : null,\n    \"beneficiary_financial_institution_identifier_type\" : null,\n    \"beneficiary_financial_institution_name\" : null,\n    \"beneficiary_name\" : null,\n    \"cancellation\" : null,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n    \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n    \"message_to_recipient\" : \"Message to recipient\",\n    \"network\" : \"wire\",\n    \"reversal\" : null,\n    \"routing_number\" : \"101050001\",\n    \"status\" : \"complete\",\n    \"submission\" : null,\n    \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n    \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"type\" : \"wire_transfer\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21b42fb1-52eb-41cb-b46d-d732bd6c88a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.606853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_wire_transfers",
          "schema" : {
            "description" : "A list of Wire Transfer objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "account_number" : "987654321",
                "amount" : 100,
                "approval" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
                "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
                "message_to_recipient" : "Message to recipient",
                "network" : "wire",
                "routing_number" : "101050001",
                "status" : "complete",
                "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
                "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "type" : "wire_transfer"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/wire_transfer"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Wire Transfer List",
            "type" : "object",
            "x-title-plural" : "Wire Transfer Lists"
          }
        }
      }
    }
  }, {
    "id" : "d70e3104-6baa-454f-b506-0915ece7d3c1",
    "name" : "Retrieve a Wire Drawdown Request",
    "request" : {
      "urlPath" : "/wire_drawdown_requests/1b7n",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"amount\" : 10000,\n  \"currency\" : \"USD\",\n  \"fulfillment_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"id\" : \"wire_drawdown_request_q6lmocus3glo0lr2bfv3\",\n  \"message_to_recipient\" : \"Invoice 29582\",\n  \"recipient_account_number\" : \"987654321\",\n  \"recipient_address_line1\" : \"33 Liberty Street\",\n  \"recipient_address_line2\" : \"New York, NY, 10045\",\n  \"recipient_address_line3\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"recipient_routing_number\" : \"101050001\",\n  \"status\" : \"fulfilled\",\n  \"submission\" : {\n    \"input_message_accountability_data\" : \"20220118MMQFMP0P000003\"\n  },\n  \"type\" : \"wire_drawdown_request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d70e3104-6baa-454f-b506-0915ece7d3c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.606757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_wire_drawdown_request",
          "schema" : {
            "description" : "Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
            "example" : {
              "account_number_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "amount" : 10000,
              "currency" : "USD",
              "fulfillment_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "id" : "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
              "message_to_recipient" : "Invoice 29582",
              "recipient_account_number" : "987654321",
              "recipient_address_line1" : "33 Liberty Street",
              "recipient_address_line2" : "New York, NY, 10045",
              "recipient_name" : "Ian Crease",
              "recipient_routing_number" : "101050001",
              "status" : "fulfilled",
              "submission" : {
                "input_message_accountability_data" : "20220118MMQFMP0P000003"
              },
              "type" : "wire_drawdown_request"
            },
            "properties" : {
              "account_number_id" : {
                "description" : "The Account Number to which the recipient of this request is being requested to send funds.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The amount being requested in cents.",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\".",
                "type" : "string"
              },
              "fulfillment_transaction_id" : {
                "description" : "If the recipient fulfills the drawdown request by sending funds, then this will be the identifier of the corresponding Transaction.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The Wire drawdown request identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message the recipient will see as part of the drawdown request.",
                "type" : "string"
              },
              "recipient_account_number" : {
                "description" : "The drawdown request's recipient's account number.",
                "type" : "string"
              },
              "recipient_address_line1" : {
                "description" : "Line 1 of the drawdown request's recipient's address.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_address_line2" : {
                "description" : "Line 2 of the drawdown request's recipient's address.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_address_line3" : {
                "description" : "Line 3 of the drawdown request's recipient's address.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The drawdown request's recipient's name.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_routing_number" : {
                "description" : "The drawdown request's recipient's routing number.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the drawdown request.",
                "enum" : [ "pending_submission", "pending_response", "fulfilled", "refused" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The drawdown request is queued to be submitted to Fedwire.", "The drawdown request has been sent and the recipient should respond in some way.", "The drawdown request has been fulfilled by the recipient.", "The drawdown request has been refused by the recipient." ]
              },
              "submission" : {
                "description" : "After the drawdown request is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000003"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The input message accountability data (IMAD) uniquely identifying the submission with Fedwire.",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data" ],
                "title" : "Wire Drawdown Request Submission",
                "type" : "object",
                "x-title-plural" : "Wire Drawdown Request Submissions"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_drawdown_request`.",
                "enum" : [ "wire_drawdown_request" ],
                "type" : "string"
              }
            },
            "required" : [ "type", "id", "account_number_id", "recipient_account_number", "recipient_routing_number", "amount", "currency", "message_to_recipient", "recipient_name", "recipient_address_line1", "recipient_address_line2", "recipient_address_line3", "submission", "fulfillment_transaction_id", "status" ],
            "title" : "Wire Drawdown Request",
            "type" : "object",
            "x-tag" : "Wire Drawdown Requests",
            "x-title-plural" : "Wire Drawdown Requests"
          }
        }
      }
    }
  }, {
    "id" : "7bb0136f-0d9d-4eb5-a4df-613ca18a5278",
    "name" : "Create a Wire Drawdown Request",
    "request" : {
      "urlPath" : "/wire_drawdown_requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"amount\" : 10000,\n  \"currency\" : \"USD\",\n  \"fulfillment_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"id\" : \"wire_drawdown_request_q6lmocus3glo0lr2bfv3\",\n  \"message_to_recipient\" : \"Invoice 29582\",\n  \"recipient_account_number\" : \"987654321\",\n  \"recipient_address_line1\" : \"33 Liberty Street\",\n  \"recipient_address_line2\" : \"New York, NY, 10045\",\n  \"recipient_address_line3\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"recipient_routing_number\" : \"101050001\",\n  \"status\" : \"fulfilled\",\n  \"submission\" : {\n    \"input_message_accountability_data\" : \"20220118MMQFMP0P000003\"\n  },\n  \"type\" : \"wire_drawdown_request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bb0136f-0d9d-4eb5-a4df-613ca18a5278",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.606465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_wire_drawdown_request",
          "schema" : {
            "description" : "Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
            "example" : {
              "account_number_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "amount" : 10000,
              "currency" : "USD",
              "fulfillment_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "id" : "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
              "message_to_recipient" : "Invoice 29582",
              "recipient_account_number" : "987654321",
              "recipient_address_line1" : "33 Liberty Street",
              "recipient_address_line2" : "New York, NY, 10045",
              "recipient_name" : "Ian Crease",
              "recipient_routing_number" : "101050001",
              "status" : "fulfilled",
              "submission" : {
                "input_message_accountability_data" : "20220118MMQFMP0P000003"
              },
              "type" : "wire_drawdown_request"
            },
            "properties" : {
              "account_number_id" : {
                "description" : "The Account Number to which the recipient of this request is being requested to send funds.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The amount being requested in cents.",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\".",
                "type" : "string"
              },
              "fulfillment_transaction_id" : {
                "description" : "If the recipient fulfills the drawdown request by sending funds, then this will be the identifier of the corresponding Transaction.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The Wire drawdown request identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message the recipient will see as part of the drawdown request.",
                "type" : "string"
              },
              "recipient_account_number" : {
                "description" : "The drawdown request's recipient's account number.",
                "type" : "string"
              },
              "recipient_address_line1" : {
                "description" : "Line 1 of the drawdown request's recipient's address.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_address_line2" : {
                "description" : "Line 2 of the drawdown request's recipient's address.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_address_line3" : {
                "description" : "Line 3 of the drawdown request's recipient's address.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The drawdown request's recipient's name.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_routing_number" : {
                "description" : "The drawdown request's recipient's routing number.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the drawdown request.",
                "enum" : [ "pending_submission", "pending_response", "fulfilled", "refused" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The drawdown request is queued to be submitted to Fedwire.", "The drawdown request has been sent and the recipient should respond in some way.", "The drawdown request has been fulfilled by the recipient.", "The drawdown request has been refused by the recipient." ]
              },
              "submission" : {
                "description" : "After the drawdown request is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000003"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The input message accountability data (IMAD) uniquely identifying the submission with Fedwire.",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data" ],
                "title" : "Wire Drawdown Request Submission",
                "type" : "object",
                "x-title-plural" : "Wire Drawdown Request Submissions"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_drawdown_request`.",
                "enum" : [ "wire_drawdown_request" ],
                "type" : "string"
              }
            },
            "required" : [ "type", "id", "account_number_id", "recipient_account_number", "recipient_routing_number", "amount", "currency", "message_to_recipient", "recipient_name", "recipient_address_line1", "recipient_address_line2", "recipient_address_line3", "submission", "fulfillment_transaction_id", "status" ],
            "title" : "Wire Drawdown Request",
            "type" : "object",
            "x-tag" : "Wire Drawdown Requests",
            "x-title-plural" : "Wire Drawdown Requests"
          }
        }
      }
    }
  }, {
    "id" : "54b1ba37-798d-4a45-9d26-7850830abd15",
    "name" : "List Wire Drawdown Requests",
    "request" : {
      "urlPath" : "/wire_drawdown_requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_number_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"amount\" : 10000,\n    \"currency\" : \"USD\",\n    \"fulfillment_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"id\" : \"wire_drawdown_request_q6lmocus3glo0lr2bfv3\",\n    \"message_to_recipient\" : \"Invoice 29582\",\n    \"recipient_account_number\" : \"987654321\",\n    \"recipient_address_line1\" : \"33 Liberty Street\",\n    \"recipient_address_line2\" : \"New York, NY, 10045\",\n    \"recipient_address_line3\" : null,\n    \"recipient_name\" : \"Ian Crease\",\n    \"recipient_routing_number\" : \"101050001\",\n    \"status\" : \"fulfilled\",\n    \"submission\" : {\n      \"input_message_accountability_data\" : \"20220118MMQFMP0P000003\"\n    },\n    \"type\" : \"wire_drawdown_request\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54b1ba37-798d-4a45-9d26-7850830abd15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.606266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_wire_drawdown_requests",
          "schema" : {
            "description" : "A list of Wire Drawdown Request objects",
            "example" : {
              "data" : [ {
                "account_number_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "amount" : 10000,
                "currency" : "USD",
                "fulfillment_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "id" : "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
                "message_to_recipient" : "Invoice 29582",
                "recipient_account_number" : "987654321",
                "recipient_address_line1" : "33 Liberty Street",
                "recipient_address_line2" : "New York, NY, 10045",
                "recipient_name" : "Ian Crease",
                "recipient_routing_number" : "101050001",
                "status" : "fulfilled",
                "submission" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000003"
                },
                "type" : "wire_drawdown_request"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/wire_drawdown_request"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Wire Drawdown Request List",
            "type" : "object",
            "x-title-plural" : "Wire Drawdown Request Lists"
          }
        }
      }
    }
  }, {
    "id" : "9638c427-8535-48a2-8fdb-0eb359a60622",
    "name" : "Retrieve a Transaction",
    "request" : {
      "urlPath" : "/transactions/vmw2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Frederick S. Holmes\",\n  \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"route_type\" : \"account_number\",\n  \"source\" : {\n    \"category\" : \"inbound_ach_transfer\",\n    \"inbound_ach_transfer\" : {\n      \"amount\" : 100,\n      \"originator_company_descriptive_date\" : null,\n      \"originator_company_discretionary_data\" : null,\n      \"originator_company_entry_description\" : \"RESERVE\",\n      \"originator_company_id\" : \"0987654321\",\n      \"originator_company_name\" : \"BIG BANK\",\n      \"receiver_id_number\" : \"12345678900\",\n      \"receiver_name\" : \"IAN CREASE\",\n      \"trace_number\" : \"021000038461022\"\n    }\n  },\n  \"type\" : \"transaction\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9638c427-8535-48a2-8fdb-0eb359a60622",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.605977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_transaction",
          "schema" : {
            "description" : "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Frederick S. Holmes",
              "id" : "transaction_uyrp7fld2ium70oa7oi",
              "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "route_type" : "account_number",
              "source" : {
                "category" : "inbound_ach_transfer",
                "inbound_ach_transfer" : {
                  "amount" : 100,
                  "originator_company_entry_description" : "RESERVE",
                  "originator_company_id" : "0987654321",
                  "originator_company_name" : "BIG BANK",
                  "receiver_id_number" : "12345678900",
                  "receiver_name" : "IAN CREASE",
                  "trace_number" : "021000038461022"
                }
              },
              "type" : "transaction"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the Account the Transaction belongs to.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Transaction identifier.",
                "type" : "string"
              },
              "route_id" : {
                "description" : "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable" : true,
                "type" : "string"
              },
              "route_type" : {
                "description" : "The type of the route this Transaction came through.",
                "nullable" : true,
                "type" : "string"
              },
              "source" : {
                "description" : "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example" : {
                  "category" : "inbound_ach_transfer",
                  "inbound_ach_transfer" : {
                    "amount" : 100,
                    "originator_company_entry_description" : "RESERVE",
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  }
                },
                "properties" : {
                  "account_transfer_intention" : {
                    "description" : "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "description" : "Frederick S. Holmes",
                      "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                      "source_account_id" : "account_in71c4amph0vgo2qllky",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "description" : {
                        "description" : "The description you chose to give the transfer.",
                        "type" : "string"
                      },
                      "destination_account_id" : {
                        "description" : "The identifier of the Account to where the Account Transfer was sent.",
                        "type" : "string"
                      },
                      "source_account_id" : {
                        "description" : "The identifier of the Account from where the Account Transfer was sent.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "description", "destination_account_id", "source_account_id", "transfer_id" ],
                    "title" : "Account Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Account Transfer Intentions"
                  },
                  "ach_check_conversion" : {
                    "description" : "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                    "example" : {
                      "amount" : 100,
                      "file_id" : "file_makxrc67oh9l6sg7w9yc"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "file_id" : {
                        "description" : "The identifier of the File containing an image of the returned check.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "file_id" ],
                    "title" : "ACH Check Conversion",
                    "type" : "object",
                    "x-title-plural" : "ACH Check Conversions"
                  },
                  "ach_check_conversion_return" : {
                    "description" : "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                    "example" : {
                      "amount" : 100,
                      "return_reason_code" : ""
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "return_reason_code" : {
                        "description" : "Why the transfer was returned.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "return_reason_code" ],
                    "title" : "ACH Check Conversion Return",
                    "type" : "object",
                    "x-title-plural" : "ACH Check Conversion Returns"
                  },
                  "ach_transfer_intention" : {
                    "description" : "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "routing_number" : "101050001",
                      "statement_descriptor" : "Frederick S. Holmes",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "statement_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "statement_descriptor", "transfer_id" ],
                    "title" : "ACH Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection" : {
                    "description" : "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "ACH Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Rejections"
                  },
                  "ach_transfer_return" : {
                    "description" : "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example" : {
                      "created_at" : "2020-01-31T23:59:59Z",
                      "return_reason_code" : "insufficient_fund",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                    },
                    "nullable" : true,
                    "properties" : {
                      "created_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "return_reason_code" : {
                        "description" : "Why the ACH Transfer was returned.",
                        "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the Tranasaction associated with this return.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer associated with this return.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                    "title" : "ACH Transfer Return",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance" : {
                    "description" : "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example" : {
                      "accepted_at" : "2020-01-31T23:59:59Z",
                      "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "accepted_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "card_dispute_id" : {
                        "description" : "The identifier of the Card Dispute that was accepted.",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                    "title" : "Card Dispute Acceptance",
                    "type" : "object",
                    "x-title-plural" : "Card Dispute Acceptances"
                  },
                  "card_refund" : {
                    "description" : "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example" : {
                      "amount" : 100,
                      "card_settlement_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "currency" : "USD",
                      "type" : "card_refund"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "card_settlement_transaction_id" : {
                        "description" : "The identifier for the Transaction this refunds, if any.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `card_refund`.",
                        "enum" : [ "card_refund" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "card_settlement_transaction_id", "type" ],
                    "title" : "Card Refund",
                    "type" : "object",
                    "x-title-plural" : "Card Refunds"
                  },
                  "card_route_refund" : {
                    "description" : "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                    "example" : {
                      "amount" : 1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Refund",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Refunds"
                  },
                  "card_route_settlement" : {
                    "description" : "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                    "example" : {
                      "amount" : 1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Settlement",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Settlements"
                  },
                  "card_settlement" : {
                    "description" : "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "merchant_category_code" : "5734",
                      "merchant_city" : "New York",
                      "merchant_country" : "US",
                      "merchant_name" : "AMAZON.COM",
                      "merchant_state" : "NY",
                      "presentment_amount" : 100,
                      "presentment_currency" : "USD",
                      "type" : "card_settlement"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "pending_transaction_id" : {
                        "description" : "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "presentment_amount" : {
                        "description" : "The amount in the minor unit of the transaction's presentment currency.",
                        "type" : "integer"
                      },
                      "presentment_currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.",
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `card_settlement`.",
                        "enum" : [ "card_settlement" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "presentment_amount", "presentment_currency", "merchant_city", "merchant_country", "merchant_name", "merchant_category_code", "merchant_state", "pending_transaction_id", "type" ],
                    "title" : "Card Settlement",
                    "type" : "object",
                    "x-title-plural" : "Card Settlements"
                  },
                  "category" : {
                    "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "enum" : [ "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_ach_transfer_return_intention", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_general_ledger_transaction", "internal_source", "card_route_refund", "card_route_settlement", "real_time_payments_transfer_acknowledgement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.", "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.", "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.", "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.", "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.", "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.", "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.", "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.", "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.", "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.", "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.", "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.", "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.", "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.", "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.", "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.", "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.", "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.", "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.", "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.", "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.", "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.", "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.", "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.", "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.", "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.", "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.", "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.", "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.", "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.", "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.", "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.", "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.", "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.", "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.", "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.", "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.", "The Transaction was made for an undocumented or deprecated reason." ]
                  },
                  "check_deposit_acceptance" : {
                    "description" : "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "auxiliary_on_us" : "101",
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "routing_number" : "101050001"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "The account number printed on the check.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "auxiliary_on_us" : {
                        "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_deposit_id" : {
                        "description" : "The ID of the Check Deposit that was accepted.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "routing_number" : {
                        "description" : "The routing number printed on the check.",
                        "type" : "string"
                      },
                      "serial_number" : {
                        "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                    "title" : "Check Deposit Acceptance",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Acceptances"
                  },
                  "check_deposit_return" : {
                    "description" : "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example" : {
                      "amount" : 100,
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "return_reason" : "insufficient_funds",
                      "returned_at" : "2020-01-31T23:59:59Z",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "check_deposit_id" : {
                        "description" : "The identifier of the Check Deposit that was returned.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "return_reason" : {
                        "description" : "",
                        "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                      },
                      "returned_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                    "title" : "Check Deposit Return",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Returns"
                  },
                  "check_transfer_intention" : {
                    "description" : "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example" : {
                      "address_city" : "New York",
                      "address_line1" : "33 Liberty Street",
                      "address_state" : "NY",
                      "address_zip" : "10045",
                      "amount" : 1000,
                      "currency" : "USD",
                      "recipient_name" : "Ian Crease",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "address_city" : {
                        "description" : "The city of the check's destination.",
                        "type" : "string"
                      },
                      "address_line1" : {
                        "description" : "The street address of the check's destination.",
                        "type" : "string"
                      },
                      "address_line2" : {
                        "description" : "The second line of the address of the check's destination.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "address_state" : {
                        "description" : "The state of the check's destination.",
                        "type" : "string"
                      },
                      "address_zip" : {
                        "description" : "The postal code of the check's destination.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "recipient_name" : {
                        "description" : "The name that will be printed on the check.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer with which this is associated.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "address_line1", "address_line2", "address_city", "address_state", "address_zip", "amount", "currency", "recipient_name", "transfer_id" ],
                    "title" : "Check Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Intentions"
                  },
                  "check_transfer_rejection" : {
                    "description" : "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Check Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Rejections"
                  },
                  "check_transfer_return" : {
                    "description" : "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                    "example" : {
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "file_id" : {
                        "description" : "If available, a document with additional information about the return.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the returned Check Transfer.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id", "file_id" ],
                    "title" : "Check Transfer Return",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Returns"
                  },
                  "check_transfer_stop_payment_request" : {
                    "description" : "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example" : {
                      "requested_at" : "2020-01-31T23:59:59Z",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                      "type" : "check_transfer_stop_payment_request"
                    },
                    "nullable" : true,
                    "properties" : {
                      "requested_at" : {
                        "description" : "The time the stop-payment was requested.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The transaction ID of the corresponding credit transaction.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The ID of the check transfer that was stopped.",
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                        "enum" : [ "check_transfer_stop_payment_request" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                    "title" : "Check Transfer Stop Payment Request",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Stop Payment Requests"
                  },
                  "dispute_resolution" : {
                    "description" : "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "disputed_transaction_id" : {
                        "description" : "The identifier of the Transaction that was disputed.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "disputed_transaction_id" ],
                    "title" : "Dispute Resolution",
                    "type" : "object",
                    "x-title-plural" : "Dispute Resolutions"
                  },
                  "empyreal_cash_deposit" : {
                    "description" : "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                    "example" : {
                      "amount" : 100,
                      "bag_id" : "12345",
                      "deposit_date" : "2020-01-31T23:59:59Z"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "bag_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "deposit_date" : {
                        "description" : "",
                        "format" : "date-time",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "bag_id", "deposit_date" ],
                    "title" : "Empyreal Cash Deposit",
                    "type" : "object",
                    "x-title-plural" : "Empyreal Cash Deposits"
                  },
                  "inbound_ach_transfer" : {
                    "description" : "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example" : {
                      "amount" : 100,
                      "originator_company_entry_description" : "RESERVE",
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "originator_company_descriptive_date" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_discretionary_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_id_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_entry_description", "originator_company_id", "receiver_id_number", "receiver_name", "trace_number" ],
                    "title" : "Inbound ACH Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound ACH Transfers"
                  },
                  "inbound_check" : {
                    "description" : "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example" : {
                      "amount" : 100,
                      "check_front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                      "check_number" : "       00000123",
                      "check_rear_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                      "currency" : "USD"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "check_front_image_file_id" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_rear_image_file_id" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      }
                    },
                    "required" : [ "amount", "currency", "check_number", "check_front_image_file_id", "check_rear_image_file_id" ],
                    "title" : "Inbound Check",
                    "type" : "object",
                    "x-title-plural" : "Inbound Checks"
                  },
                  "inbound_international_ach_transfer" : {
                    "description" : "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example" : {
                      "amount" : -1000,
                      "destination_country_code" : "US",
                      "destination_currency_code" : "USD",
                      "foreign_exchange_indicator" : "fixed_to_fixed",
                      "foreign_exchange_reference_indicator" : "blank",
                      "foreign_payment_amount" : 199,
                      "international_transaction_type_code" : "internet_initiated",
                      "originating_currency_code" : "USD",
                      "originating_depository_financial_institution_branch_country" : "US",
                      "originating_depository_financial_institution_id" : "091000019",
                      "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                      "originator_city" : "BERLIN",
                      "originator_company_entry_description" : "RETRY PYMT",
                      "originator_country" : "DE",
                      "originator_identification" : "770510487A",
                      "originator_name" : "BERGHAIN",
                      "originator_postal_code" : "50825",
                      "originator_street_address" : "Ruedersdorferstr. 7",
                      "receiver_city" : "BEVERLY HILLS",
                      "receiver_country" : "US",
                      "receiver_identification_number" : "1018790279274",
                      "receiver_postal_code" : "90210",
                      "receiver_state_or_province" : "CA",
                      "receiver_street_address" : "123 FAKE ST",
                      "receiving_company_or_individual_name" : "IAN CREASE",
                      "receiving_depository_financial_institution_country" : "US",
                      "receiving_depository_financial_institution_id" : "101050001",
                      "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "trace_number" : "010202909100090"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "destination_country_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "destination_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "foreign_exchange_reference_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_payment_amount" : {
                        "description" : "",
                        "type" : "integer"
                      },
                      "foreign_trace_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "international_transaction_type_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_branch_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_identification" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "payment_related_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "payment_related_information2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_identification_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_company_or_individual_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                    "title" : "Inbound International ACH Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation" : {
                    "description" : "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example" : {
                      "amount" : 100,
                      "creditor_name" : "Ian Crease",
                      "currency" : "USD",
                      "debtor_account_number" : "987654321",
                      "debtor_name" : "National Phonograph Company",
                      "debtor_routing_number" : "101050001",
                      "remittance_information" : "Invoice 29582",
                      "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "creditor_name" : {
                        "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "debtor_account_number" : {
                        "description" : "The account number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "debtor_name" : {
                        "description" : "The name provided by the sender of the transfer.",
                        "type" : "string"
                      },
                      "debtor_routing_number" : {
                        "description" : "The routing number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "remittance_information" : {
                        "description" : "Additional information included with the transfer.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transaction_identification" : {
                        "description" : "The Real Time Payments network identification of the transfer",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                    "title" : "Inbound Real Time Payments Transfer Confirmation",
                    "type" : "object",
                    "x-title-plural" : "Inbound Real Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment" : {
                    "description" : "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example" : {
                      "amount" : 100,
                      "description" : "Inbound wire drawdown payment"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "beneficiary_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information" ],
                    "title" : "Inbound Wire Drawdown Payment",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_drawdown_payment_reversal" : {
                    "description" : "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example" : {
                      "amount" : 12345,
                      "description" : "Inbound wire reversal 2022021100335128",
                      "input_cycle_date" : "2022-02-11",
                      "input_message_accountability_data" : "20220211B6B7HU2R011023",
                      "input_sequence_number" : "11023",
                      "input_source" : "B6B7HU2R",
                      "previous_message_input_cycle_date" : "2022-02-10",
                      "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                      "previous_message_input_sequence_number" : "3",
                      "previous_message_input_source" : "MMQFMP0P"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount that was reversed.",
                        "type" : "integer"
                      },
                      "description" : {
                        "description" : "The description on the reversal message from Fedwire.",
                        "type" : "string"
                      },
                      "input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire reversal.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier.",
                        "type" : "string"
                      },
                      "input_sequence_number" : {
                        "description" : "The Fedwire sequence number.",
                        "type" : "string"
                      },
                      "input_source" : {
                        "description" : "The Fedwire input source identifier.",
                        "type" : "string"
                      },
                      "previous_message_input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "previous_message_input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_sequence_number" : {
                        "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_source" : {
                        "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source" ],
                    "title" : "Inbound Wire Drawdown Payment Reversal",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_reversal" : {
                    "description" : "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example" : {
                      "amount" : 12345,
                      "description" : "Inbound wire reversal 2022021100335128",
                      "input_cycle_date" : "2022-02-11",
                      "input_message_accountability_data" : "20220211B6B7HU2R011023",
                      "input_sequence_number" : "11023",
                      "input_source" : "B6B7HU2R",
                      "previous_message_input_cycle_date" : "2022-02-10",
                      "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                      "previous_message_input_sequence_number" : "3",
                      "previous_message_input_source" : "MMQFMP0P"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount that was reversed.",
                        "type" : "integer"
                      },
                      "description" : {
                        "description" : "The description on the reversal message from Fedwire.",
                        "type" : "string"
                      },
                      "financial_institution_to_financial_institution_information" : {
                        "description" : "Additional financial institution information included in the wire reversal.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire reversal.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier.",
                        "type" : "string"
                      },
                      "input_sequence_number" : {
                        "description" : "The Fedwire sequence number.",
                        "type" : "string"
                      },
                      "input_source" : {
                        "description" : "The Fedwire input source identifier.",
                        "type" : "string"
                      },
                      "previous_message_input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "previous_message_input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_sequence_number" : {
                        "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_source" : {
                        "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "receiver_financial_institution_information" : {
                        "description" : "Information included in the wire reversal for the receiving financial institution.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                    "title" : "Inbound Wire Reversal",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer" : {
                    "description" : "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example" : {
                      "amount" : 100,
                      "description" : "Inbound wire transfer"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "beneficiary_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line4" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_to_beneficiary_information" ],
                    "title" : "Inbound Wire Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Transfers"
                  },
                  "interest_payment" : {
                    "description" : "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example" : {
                      "accrued_on_account_id" : "account_in71c4amph0vgo2qllky",
                      "amount" : 100,
                      "currency" : "USD",
                      "period_end" : "2023-03-31T23:59:59Z",
                      "period_start" : "2023-03-01T00:00:00Z"
                    },
                    "nullable" : true,
                    "properties" : {
                      "accrued_on_account_id" : {
                        "description" : "The account on which the interest was accrued.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "period_end" : {
                        "description" : "The end of the period for which this transaction paid interest.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "period_start" : {
                        "description" : "The start of the period for which this transaction paid interest.",
                        "format" : "date-time",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "period_start", "period_end", "accrued_on_account_id" ],
                    "title" : "Interest Payment",
                    "type" : "object",
                    "x-title-plural" : "Interest Payments"
                  },
                  "internal_source" : {
                    "description" : "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "reason" : "sample_funds"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "reason" : {
                        "description" : "",
                        "enum" : [ "bank_migration", "cashback", "empyreal_adjustment", "error", "error_correction", "fees", "interest", "sample_funds", "sample_funds_return" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Bank Migration", "Cashback", "Empyreal adjustment", "Error", "Error correction", "Fees", "Interest", "Sample funds", "Sample funds return" ]
                      }
                    },
                    "required" : [ "amount", "currency", "reason" ],
                    "title" : "Internal Source",
                    "type" : "object",
                    "x-title-plural" : "Internal Sources"
                  },
                  "sample_funds" : {
                    "description" : "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example" : {
                      "originator" : "dashboard"
                    },
                    "nullable" : true,
                    "properties" : {
                      "originator" : {
                        "description" : "Where the sample funds came from.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "originator" ],
                    "title" : "Sample Funds",
                    "type" : "object",
                    "x-title-plural" : "Sample Fundss"
                  },
                  "wire_drawdown_payment_intention" : {
                    "description" : "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Drawdown Payment Intention",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Intentions"
                  },
                  "wire_drawdown_payment_rejection" : {
                    "description" : "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                    "example" : {
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Wire Drawdown Payment Rejection",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Rejections"
                  },
                  "wire_transfer_intention" : {
                    "description" : "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "The destination account number.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "The message that will show on the recipient's bank statement.",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection" : {
                    "description" : "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Wire Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Rejections"
                  }
                },
                "required" : [ "category", "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_source", "card_route_refund", "card_route_settlement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection" ],
                "title" : "Transaction Source",
                "type" : "object",
                "x-title-plural" : "Transaction Sources"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `transaction`.",
                "enum" : [ "transaction" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
            "title" : "Transaction",
            "type" : "object",
            "x-tag" : "Transactions",
            "x-title-plural" : "Transactions"
          }
        }
      }
    }
  }, {
    "id" : "d26a3d99-7fbf-4d88-974f-63af01d6b024",
    "name" : "List Transactions",
    "request" : {
      "urlPath" : "/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"route_type\" : \"account_number\",\n    \"source\" : {\n      \"category\" : \"inbound_ach_transfer\",\n      \"inbound_ach_transfer\" : {\n        \"amount\" : 100,\n        \"originator_company_descriptive_date\" : null,\n        \"originator_company_discretionary_data\" : null,\n        \"originator_company_entry_description\" : \"RESERVE\",\n        \"originator_company_id\" : \"0987654321\",\n        \"originator_company_name\" : \"BIG BANK\",\n        \"receiver_id_number\" : \"12345678900\",\n        \"receiver_name\" : \"IAN CREASE\",\n        \"trace_number\" : \"021000038461022\"\n      }\n    },\n    \"type\" : \"transaction\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d26a3d99-7fbf-4d88-974f-63af01d6b024",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.603212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_transactions",
          "schema" : {
            "description" : "A list of Transaction objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "transaction_uyrp7fld2ium70oa7oi",
                "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "route_type" : "account_number",
                "source" : {
                  "category" : "inbound_ach_transfer",
                  "inbound_ach_transfer" : {
                    "amount" : 100,
                    "originator_company_entry_description" : "RESERVE",
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  }
                },
                "type" : "transaction"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/transaction"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Transaction List",
            "type" : "object",
            "x-title-plural" : "Transaction Lists"
          }
        }
      }
    }
  }, {
    "id" : "716dfefa-3310-434d-ac3d-4d2267d81a13",
    "name" : "Submit a Sandbox Wire Transfer",
    "request" : {
      "urlPath" : "/simulations/wire_transfers/i2jf/submit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"beneficiary_address_line1\" : null,\n  \"beneficiary_address_line2\" : null,\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_financial_institution_address_line1\" : null,\n  \"beneficiary_financial_institution_address_line2\" : null,\n  \"beneficiary_financial_institution_address_line3\" : null,\n  \"beneficiary_financial_institution_identifier\" : null,\n  \"beneficiary_financial_institution_identifier_type\" : null,\n  \"beneficiary_financial_institution_name\" : null,\n  \"beneficiary_name\" : null,\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n  \"message_to_recipient\" : \"Message to recipient\",\n  \"network\" : \"wire\",\n  \"reversal\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"complete\",\n  \"submission\" : null,\n  \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"wire_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "716dfefa-3310-434d-ac3d-4d2267d81a13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.603114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submit_a_sandbox_wire_transfer",
          "schema" : {
            "description" : "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient" : "Message to recipient",
              "network" : "wire",
              "routing_number" : "101050001",
              "status" : "complete",
              "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "wire_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "beneficiary_address_line1" : {
                "description" : "The beneficiary's address line 1.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "The beneficiary's address line 2.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "The beneficiary's address line 3.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The wire transfer's identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message that will show on the recipient's bank statement.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "wire" ],
                "type" : "string"
              },
              "reversal" : {
                "description" : "If your transfer is reversed, this will contain details of the reversal.",
                "example" : {
                  "amount" : 12345,
                  "description" : "Inbound wire reversal 2022021100335128",
                  "input_cycle_date" : "2022-02-11",
                  "input_message_accountability_data" : "20220211B6B7HU2R011023",
                  "input_sequence_number" : "11023",
                  "input_source" : "B6B7HU2R",
                  "previous_message_input_cycle_date" : "2022-02-10",
                  "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                  "previous_message_input_sequence_number" : "3",
                  "previous_message_input_source" : "MMQFMP0P"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount that was reversed.",
                    "type" : "integer"
                  },
                  "description" : {
                    "description" : "The description on the reversal message from Fedwire.",
                    "type" : "string"
                  },
                  "financial_institution_to_financial_institution_information" : {
                    "description" : "Additional financial institution information included in the wire reversal.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire reversal.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier.",
                    "type" : "string"
                  },
                  "input_sequence_number" : {
                    "description" : "The Fedwire sequence number.",
                    "type" : "string"
                  },
                  "input_source" : {
                    "description" : "The Fedwire input source identifier.",
                    "type" : "string"
                  },
                  "previous_message_input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "previous_message_input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_sequence_number" : {
                    "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_source" : {
                    "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "receiver_financial_institution_information" : {
                    "description" : "Information included in the wire reversal for the receiving financial institution.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                "title" : "Inbound Wire Reversal",
                "type" : "object",
                "x-title-plural" : "Inbound Wire Reversals"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "canceled", "requires_attention", "pending_approval", "rejected", "reversed", "complete", "pending_creating" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer has been canceled.", "The transfer requires your attention.", "The transfer is pending approval.", "The transfer has been rejected.", "The transfer has been reversed.", "The transfer is complete.", "The transfer is pending creation." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000002",
                  "submitted_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The accountability data for the submission.",
                    "type" : "string"
                  },
                  "submitted_at" : {
                    "description" : "When this wire transfer was submitted to Fedwire.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data", "submitted_at" ],
                "title" : "Wire Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Wire Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_transfer`.",
                "enum" : [ "wire_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "message_to_recipient", "amount", "currency", "account_number", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "account_id", "external_account_id", "routing_number", "approval", "cancellation", "reversal", "created_at", "network", "status", "submission", "template_id", "transaction_id", "type" ],
            "title" : "Wire Transfer",
            "type" : "object",
            "x-tag" : "Wire Transfers",
            "x-title-plural" : "Wire Transfers"
          }
        }
      }
    }
  }, {
    "id" : "d4cf938b-7941-40ee-a8c5-67c52dd692f7",
    "name" : "Reverse a Sandbox Wire Transfer",
    "request" : {
      "urlPath" : "/simulations/wire_transfers/mj88/reverse",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"beneficiary_address_line1\" : null,\n  \"beneficiary_address_line2\" : null,\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_financial_institution_address_line1\" : null,\n  \"beneficiary_financial_institution_address_line2\" : null,\n  \"beneficiary_financial_institution_address_line3\" : null,\n  \"beneficiary_financial_institution_identifier\" : null,\n  \"beneficiary_financial_institution_identifier_type\" : null,\n  \"beneficiary_financial_institution_name\" : null,\n  \"beneficiary_name\" : null,\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"id\" : \"wire_transfer_5akynk7dqsq25qwk9q2u\",\n  \"message_to_recipient\" : \"Message to recipient\",\n  \"network\" : \"wire\",\n  \"reversal\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"complete\",\n  \"submission\" : null,\n  \"template_id\" : \"wire_transfer_template_1brjk98vuwdd2er5o5sy\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"wire_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4cf938b-7941-40ee-a8c5-67c52dd692f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.602739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "reverse_a_sandbox_wire_transfer",
          "schema" : {
            "description" : "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "id" : "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient" : "Message to recipient",
              "network" : "wire",
              "routing_number" : "101050001",
              "status" : "complete",
              "template_id" : "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "wire_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "beneficiary_address_line1" : {
                "description" : "The beneficiary's address line 1.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "The beneficiary's address line 2.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "The beneficiary's address line 3.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The wire transfer's identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "The message that will show on the recipient's bank statement.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "wire" ],
                "type" : "string"
              },
              "reversal" : {
                "description" : "If your transfer is reversed, this will contain details of the reversal.",
                "example" : {
                  "amount" : 12345,
                  "description" : "Inbound wire reversal 2022021100335128",
                  "input_cycle_date" : "2022-02-11",
                  "input_message_accountability_data" : "20220211B6B7HU2R011023",
                  "input_sequence_number" : "11023",
                  "input_source" : "B6B7HU2R",
                  "previous_message_input_cycle_date" : "2022-02-10",
                  "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                  "previous_message_input_sequence_number" : "3",
                  "previous_message_input_source" : "MMQFMP0P"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount that was reversed.",
                    "type" : "integer"
                  },
                  "description" : {
                    "description" : "The description on the reversal message from Fedwire.",
                    "type" : "string"
                  },
                  "financial_institution_to_financial_institution_information" : {
                    "description" : "Additional financial institution information included in the wire reversal.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire reversal.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier.",
                    "type" : "string"
                  },
                  "input_sequence_number" : {
                    "description" : "The Fedwire sequence number.",
                    "type" : "string"
                  },
                  "input_source" : {
                    "description" : "The Fedwire input source identifier.",
                    "type" : "string"
                  },
                  "previous_message_input_cycle_date" : {
                    "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "previous_message_input_message_accountability_data" : {
                    "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_sequence_number" : {
                    "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "previous_message_input_source" : {
                    "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                    "type" : "string"
                  },
                  "receiver_financial_institution_information" : {
                    "description" : "Information included in the wire reversal for the receiving financial institution.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                "title" : "Inbound Wire Reversal",
                "type" : "object",
                "x-title-plural" : "Inbound Wire Reversals"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "canceled", "requires_attention", "pending_approval", "rejected", "reversed", "complete", "pending_creating" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer has been canceled.", "The transfer requires your attention.", "The transfer is pending approval.", "The transfer has been rejected.", "The transfer has been reversed.", "The transfer is complete.", "The transfer is pending creation." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to Fedwire, this will contain supplemental details.",
                "example" : {
                  "input_message_accountability_data" : "20220118MMQFMP0P000002",
                  "submitted_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "input_message_accountability_data" : {
                    "description" : "The accountability data for the submission.",
                    "type" : "string"
                  },
                  "submitted_at" : {
                    "description" : "When this wire transfer was submitted to Fedwire.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "input_message_accountability_data", "submitted_at" ],
                "title" : "Wire Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Wire Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `wire_transfer`.",
                "enum" : [ "wire_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "message_to_recipient", "amount", "currency", "account_number", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "account_id", "external_account_id", "routing_number", "approval", "cancellation", "reversal", "created_at", "network", "status", "submission", "template_id", "transaction_id", "type" ],
            "title" : "Wire Transfer",
            "type" : "object",
            "x-tag" : "Wire Transfers",
            "x-title-plural" : "Wire Transfers"
          }
        }
      }
    }
  }, {
    "id" : "035cc830-a76b-4a2c-96e2-deba61ae4685",
    "name" : "Simulate a Wire Transfer to your account",
    "request" : {
      "urlPath" : "/simulations/inbound_wire_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transaction\" : {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"route_type\" : \"account_number\",\n    \"source\" : {\n      \"category\" : \"inbound_wire_transfer\",\n      \"inbound_wire_transfer\" : {\n        \"amount\" : 100,\n        \"beneficiary_address_line1\" : null,\n        \"beneficiary_address_line2\" : null,\n        \"beneficiary_address_line3\" : null,\n        \"beneficiary_name\" : null,\n        \"beneficiary_reference\" : null,\n        \"description\" : \"Inbound wire transfer\",\n        \"input_message_accountability_data\" : null,\n        \"originator_address_line1\" : null,\n        \"originator_address_line2\" : null,\n        \"originator_address_line3\" : null,\n        \"originator_name\" : null,\n        \"originator_to_beneficiary_information\" : null,\n        \"originator_to_beneficiary_information_line1\" : null,\n        \"originator_to_beneficiary_information_line2\" : null,\n        \"originator_to_beneficiary_information_line3\" : null,\n        \"originator_to_beneficiary_information_line4\" : null\n      }\n    },\n    \"type\" : \"transaction\"\n  },\n  \"type\" : \"inbound_wire_transfer_simulation_result\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "035cc830-a76b-4a2c-96e2-deba61ae4685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.60198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_a_wire_transfer_to_your_account",
          "schema" : {
            "description" : "The results of an inbound Wire Transfer simulation.",
            "example" : {
              "transaction" : {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "transaction_uyrp7fld2ium70oa7oi",
                "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "route_type" : "account_number",
                "source" : {
                  "category" : "inbound_wire_transfer",
                  "inbound_wire_transfer" : {
                    "amount" : 100,
                    "description" : "Inbound wire transfer"
                  }
                },
                "type" : "transaction"
              },
              "type" : "inbound_wire_transfer_simulation_result"
            },
            "properties" : {
              "transaction" : {
                "description" : "If the Wire Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_wire_transfer`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 100,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "transaction_uyrp7fld2ium70oa7oi",
                  "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                  "route_type" : "account_number",
                  "source" : {
                    "category" : "inbound_ach_transfer",
                    "inbound_ach_transfer" : {
                      "amount" : 100,
                      "originator_company_entry_description" : "RESERVE",
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    }
                  },
                  "type" : "transaction"
                },
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the Account the Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                    "example" : {
                      "category" : "inbound_ach_transfer",
                      "inbound_ach_transfer" : {
                        "amount" : 100,
                        "originator_company_entry_description" : "RESERVE",
                        "originator_company_id" : "0987654321",
                        "originator_company_name" : "BIG BANK",
                        "receiver_id_number" : "12345678900",
                        "receiver_name" : "IAN CREASE",
                        "trace_number" : "021000038461022"
                      }
                    },
                    "properties" : {
                      "account_transfer_intention" : {
                        "description" : "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "description" : "Frederick S. Holmes",
                          "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                          "source_account_id" : "account_in71c4amph0vgo2qllky",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "description" : {
                            "description" : "The description you chose to give the transfer.",
                            "type" : "string"
                          },
                          "destination_account_id" : {
                            "description" : "The identifier of the Account to where the Account Transfer was sent.",
                            "type" : "string"
                          },
                          "source_account_id" : {
                            "description" : "The identifier of the Account from where the Account Transfer was sent.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "description", "destination_account_id", "source_account_id", "transfer_id" ],
                        "title" : "Account Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Account Transfer Intentions"
                      },
                      "ach_check_conversion" : {
                        "description" : "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                        "example" : {
                          "amount" : 100,
                          "file_id" : "file_makxrc67oh9l6sg7w9yc"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "file_id" : {
                            "description" : "The identifier of the File containing an image of the returned check.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "file_id" ],
                        "title" : "ACH Check Conversion",
                        "type" : "object",
                        "x-title-plural" : "ACH Check Conversions"
                      },
                      "ach_check_conversion_return" : {
                        "description" : "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                        "example" : {
                          "amount" : 100,
                          "return_reason_code" : ""
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "return_reason_code" : {
                            "description" : "Why the transfer was returned.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "return_reason_code" ],
                        "title" : "ACH Check Conversion Return",
                        "type" : "object",
                        "x-title-plural" : "ACH Check Conversion Returns"
                      },
                      "ach_transfer_intention" : {
                        "description" : "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "routing_number" : "101050001",
                          "statement_descriptor" : "Frederick S. Holmes",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "statement_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "statement_descriptor", "transfer_id" ],
                        "title" : "ACH Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Intentions"
                      },
                      "ach_transfer_rejection" : {
                        "description" : "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "ACH Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Rejections"
                      },
                      "ach_transfer_return" : {
                        "description" : "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                        "example" : {
                          "created_at" : "2020-01-31T23:59:59Z",
                          "return_reason_code" : "insufficient_fund",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                        },
                        "nullable" : true,
                        "properties" : {
                          "created_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "return_reason_code" : {
                            "description" : "Why the ACH Transfer was returned.",
                            "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the Tranasaction associated with this return.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer associated with this return.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                        "title" : "ACH Transfer Return",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Returns"
                      },
                      "card_dispute_acceptance" : {
                        "description" : "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                        "example" : {
                          "accepted_at" : "2020-01-31T23:59:59Z",
                          "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "accepted_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "card_dispute_id" : {
                            "description" : "The identifier of the Card Dispute that was accepted.",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                        "title" : "Card Dispute Acceptance",
                        "type" : "object",
                        "x-title-plural" : "Card Dispute Acceptances"
                      },
                      "card_refund" : {
                        "description" : "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                        "example" : {
                          "amount" : 100,
                          "card_settlement_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "currency" : "USD",
                          "type" : "card_refund"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "card_settlement_transaction_id" : {
                            "description" : "The identifier for the Transaction this refunds, if any.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `card_refund`.",
                            "enum" : [ "card_refund" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "card_settlement_transaction_id", "type" ],
                        "title" : "Card Refund",
                        "type" : "object",
                        "x-title-plural" : "Card Refunds"
                      },
                      "card_route_refund" : {
                        "description" : "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                        "example" : {
                          "amount" : 1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Refund",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Refunds"
                      },
                      "card_route_settlement" : {
                        "description" : "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                        "example" : {
                          "amount" : 1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Settlement",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Settlements"
                      },
                      "card_settlement" : {
                        "description" : "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "merchant_category_code" : "5734",
                          "merchant_city" : "New York",
                          "merchant_country" : "US",
                          "merchant_name" : "AMAZON.COM",
                          "merchant_state" : "NY",
                          "presentment_amount" : 100,
                          "presentment_currency" : "USD",
                          "type" : "card_settlement"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "pending_transaction_id" : {
                            "description" : "The identifier of the Pending Transaction associated with this Transaction.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "presentment_amount" : {
                            "description" : "The amount in the minor unit of the transaction's presentment currency.",
                            "type" : "integer"
                          },
                          "presentment_currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `card_settlement`.",
                            "enum" : [ "card_settlement" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "presentment_amount", "presentment_currency", "merchant_city", "merchant_country", "merchant_name", "merchant_category_code", "merchant_state", "pending_transaction_id", "type" ],
                        "title" : "Card Settlement",
                        "type" : "object",
                        "x-title-plural" : "Card Settlements"
                      },
                      "category" : {
                        "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_ach_transfer_return_intention", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_general_ledger_transaction", "internal_source", "card_route_refund", "card_route_settlement", "real_time_payments_transfer_acknowledgement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.", "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.", "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.", "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.", "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.", "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.", "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.", "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.", "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.", "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.", "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.", "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.", "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.", "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.", "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.", "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.", "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.", "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.", "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.", "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.", "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.", "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.", "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.", "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.", "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.", "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.", "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.", "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.", "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.", "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.", "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.", "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.", "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.", "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.", "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.", "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.", "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.", "The Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_deposit_acceptance" : {
                        "description" : "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "auxiliary_on_us" : "101",
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "routing_number" : "101050001"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "The account number printed on the check.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "auxiliary_on_us" : {
                            "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_deposit_id" : {
                            "description" : "The ID of the Check Deposit that was accepted.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "routing_number" : {
                            "description" : "The routing number printed on the check.",
                            "type" : "string"
                          },
                          "serial_number" : {
                            "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                        "title" : "Check Deposit Acceptance",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Acceptances"
                      },
                      "check_deposit_return" : {
                        "description" : "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                        "example" : {
                          "amount" : 100,
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "return_reason" : "insufficient_funds",
                          "returned_at" : "2020-01-31T23:59:59Z",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "check_deposit_id" : {
                            "description" : "The identifier of the Check Deposit that was returned.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "return_reason" : {
                            "description" : "",
                            "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                          },
                          "returned_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                        "title" : "Check Deposit Return",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Returns"
                      },
                      "check_transfer_intention" : {
                        "description" : "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                        "example" : {
                          "address_city" : "New York",
                          "address_line1" : "33 Liberty Street",
                          "address_state" : "NY",
                          "address_zip" : "10045",
                          "amount" : 1000,
                          "currency" : "USD",
                          "recipient_name" : "Ian Crease",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "address_city" : {
                            "description" : "The city of the check's destination.",
                            "type" : "string"
                          },
                          "address_line1" : {
                            "description" : "The street address of the check's destination.",
                            "type" : "string"
                          },
                          "address_line2" : {
                            "description" : "The second line of the address of the check's destination.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "address_state" : {
                            "description" : "The state of the check's destination.",
                            "type" : "string"
                          },
                          "address_zip" : {
                            "description" : "The postal code of the check's destination.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "recipient_name" : {
                            "description" : "The name that will be printed on the check.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer with which this is associated.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "address_line1", "address_line2", "address_city", "address_state", "address_zip", "amount", "currency", "recipient_name", "transfer_id" ],
                        "title" : "Check Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Intentions"
                      },
                      "check_transfer_rejection" : {
                        "description" : "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Check Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Rejections"
                      },
                      "check_transfer_return" : {
                        "description" : "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                        "example" : {
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "file_id" : {
                            "description" : "If available, a document with additional information about the return.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the returned Check Transfer.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id", "file_id" ],
                        "title" : "Check Transfer Return",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Returns"
                      },
                      "check_transfer_stop_payment_request" : {
                        "description" : "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                        "example" : {
                          "requested_at" : "2020-01-31T23:59:59Z",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                          "type" : "check_transfer_stop_payment_request"
                        },
                        "nullable" : true,
                        "properties" : {
                          "requested_at" : {
                            "description" : "The time the stop-payment was requested.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The transaction ID of the corresponding credit transaction.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The ID of the check transfer that was stopped.",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                            "enum" : [ "check_transfer_stop_payment_request" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                        "title" : "Check Transfer Stop Payment Request",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Stop Payment Requests"
                      },
                      "dispute_resolution" : {
                        "description" : "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "disputed_transaction_id" : {
                            "description" : "The identifier of the Transaction that was disputed.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "disputed_transaction_id" ],
                        "title" : "Dispute Resolution",
                        "type" : "object",
                        "x-title-plural" : "Dispute Resolutions"
                      },
                      "empyreal_cash_deposit" : {
                        "description" : "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                        "example" : {
                          "amount" : 100,
                          "bag_id" : "12345",
                          "deposit_date" : "2020-01-31T23:59:59Z"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "bag_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "deposit_date" : {
                            "description" : "",
                            "format" : "date-time",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "bag_id", "deposit_date" ],
                        "title" : "Empyreal Cash Deposit",
                        "type" : "object",
                        "x-title-plural" : "Empyreal Cash Deposits"
                      },
                      "inbound_ach_transfer" : {
                        "description" : "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                        "example" : {
                          "amount" : 100,
                          "originator_company_entry_description" : "RESERVE",
                          "originator_company_id" : "0987654321",
                          "originator_company_name" : "BIG BANK",
                          "receiver_id_number" : "12345678900",
                          "receiver_name" : "IAN CREASE",
                          "trace_number" : "021000038461022"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "originator_company_descriptive_date" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_discretionary_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_id_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_entry_description", "originator_company_id", "receiver_id_number", "receiver_name", "trace_number" ],
                        "title" : "Inbound ACH Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound ACH Transfers"
                      },
                      "inbound_check" : {
                        "description" : "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                        "example" : {
                          "amount" : 100,
                          "check_front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                          "check_number" : "       00000123",
                          "check_rear_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                          "currency" : "USD"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "check_front_image_file_id" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_rear_image_file_id" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          }
                        },
                        "required" : [ "amount", "currency", "check_number", "check_front_image_file_id", "check_rear_image_file_id" ],
                        "title" : "Inbound Check",
                        "type" : "object",
                        "x-title-plural" : "Inbound Checks"
                      },
                      "inbound_international_ach_transfer" : {
                        "description" : "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                        "example" : {
                          "amount" : -1000,
                          "destination_country_code" : "US",
                          "destination_currency_code" : "USD",
                          "foreign_exchange_indicator" : "fixed_to_fixed",
                          "foreign_exchange_reference_indicator" : "blank",
                          "foreign_payment_amount" : 199,
                          "international_transaction_type_code" : "internet_initiated",
                          "originating_currency_code" : "USD",
                          "originating_depository_financial_institution_branch_country" : "US",
                          "originating_depository_financial_institution_id" : "091000019",
                          "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                          "originator_city" : "BERLIN",
                          "originator_company_entry_description" : "RETRY PYMT",
                          "originator_country" : "DE",
                          "originator_identification" : "770510487A",
                          "originator_name" : "BERGHAIN",
                          "originator_postal_code" : "50825",
                          "originator_street_address" : "Ruedersdorferstr. 7",
                          "receiver_city" : "BEVERLY HILLS",
                          "receiver_country" : "US",
                          "receiver_identification_number" : "1018790279274",
                          "receiver_postal_code" : "90210",
                          "receiver_state_or_province" : "CA",
                          "receiver_street_address" : "123 FAKE ST",
                          "receiving_company_or_individual_name" : "IAN CREASE",
                          "receiving_depository_financial_institution_country" : "US",
                          "receiving_depository_financial_institution_id" : "101050001",
                          "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                          "trace_number" : "010202909100090"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "destination_country_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "destination_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "foreign_exchange_reference_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_payment_amount" : {
                            "description" : "",
                            "type" : "integer"
                          },
                          "foreign_trace_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "international_transaction_type_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_branch_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_identification" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "payment_related_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "payment_related_information2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_identification_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_company_or_individual_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                        "title" : "Inbound International ACH Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound International ACH Transfers"
                      },
                      "inbound_real_time_payments_transfer_confirmation" : {
                        "description" : "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                        "example" : {
                          "amount" : 100,
                          "creditor_name" : "Ian Crease",
                          "currency" : "USD",
                          "debtor_account_number" : "987654321",
                          "debtor_name" : "National Phonograph Company",
                          "debtor_routing_number" : "101050001",
                          "remittance_information" : "Invoice 29582",
                          "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "creditor_name" : {
                            "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "debtor_account_number" : {
                            "description" : "The account number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "debtor_name" : {
                            "description" : "The name provided by the sender of the transfer.",
                            "type" : "string"
                          },
                          "debtor_routing_number" : {
                            "description" : "The routing number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "remittance_information" : {
                            "description" : "Additional information included with the transfer.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transaction_identification" : {
                            "description" : "The Real Time Payments network identification of the transfer",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                        "title" : "Inbound Real Time Payments Transfer Confirmation",
                        "type" : "object",
                        "x-title-plural" : "Inbound Real Time Payments Transfer Confirmations"
                      },
                      "inbound_wire_drawdown_payment" : {
                        "description" : "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                        "example" : {
                          "amount" : 100,
                          "description" : "Inbound wire drawdown payment"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "beneficiary_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information" ],
                        "title" : "Inbound Wire Drawdown Payment",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Drawdown Payments"
                      },
                      "inbound_wire_drawdown_payment_reversal" : {
                        "description" : "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                        "example" : {
                          "amount" : 12345,
                          "description" : "Inbound wire reversal 2022021100335128",
                          "input_cycle_date" : "2022-02-11",
                          "input_message_accountability_data" : "20220211B6B7HU2R011023",
                          "input_sequence_number" : "11023",
                          "input_source" : "B6B7HU2R",
                          "previous_message_input_cycle_date" : "2022-02-10",
                          "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                          "previous_message_input_sequence_number" : "3",
                          "previous_message_input_source" : "MMQFMP0P"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount that was reversed.",
                            "type" : "integer"
                          },
                          "description" : {
                            "description" : "The description on the reversal message from Fedwire.",
                            "type" : "string"
                          },
                          "input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire reversal.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier.",
                            "type" : "string"
                          },
                          "input_sequence_number" : {
                            "description" : "The Fedwire sequence number.",
                            "type" : "string"
                          },
                          "input_source" : {
                            "description" : "The Fedwire input source identifier.",
                            "type" : "string"
                          },
                          "previous_message_input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "previous_message_input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_sequence_number" : {
                            "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_source" : {
                            "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source" ],
                        "title" : "Inbound Wire Drawdown Payment Reversal",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Drawdown Payment Reversals"
                      },
                      "inbound_wire_reversal" : {
                        "description" : "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                        "example" : {
                          "amount" : 12345,
                          "description" : "Inbound wire reversal 2022021100335128",
                          "input_cycle_date" : "2022-02-11",
                          "input_message_accountability_data" : "20220211B6B7HU2R011023",
                          "input_sequence_number" : "11023",
                          "input_source" : "B6B7HU2R",
                          "previous_message_input_cycle_date" : "2022-02-10",
                          "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                          "previous_message_input_sequence_number" : "3",
                          "previous_message_input_source" : "MMQFMP0P"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount that was reversed.",
                            "type" : "integer"
                          },
                          "description" : {
                            "description" : "The description on the reversal message from Fedwire.",
                            "type" : "string"
                          },
                          "financial_institution_to_financial_institution_information" : {
                            "description" : "Additional financial institution information included in the wire reversal.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire reversal.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier.",
                            "type" : "string"
                          },
                          "input_sequence_number" : {
                            "description" : "The Fedwire sequence number.",
                            "type" : "string"
                          },
                          "input_source" : {
                            "description" : "The Fedwire input source identifier.",
                            "type" : "string"
                          },
                          "previous_message_input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "previous_message_input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_sequence_number" : {
                            "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_source" : {
                            "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "receiver_financial_institution_information" : {
                            "description" : "Information included in the wire reversal for the receiving financial institution.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                        "title" : "Inbound Wire Reversal",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Reversals"
                      },
                      "inbound_wire_transfer" : {
                        "description" : "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                        "example" : {
                          "amount" : 100,
                          "description" : "Inbound wire transfer"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "beneficiary_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line4" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_to_beneficiary_information" ],
                        "title" : "Inbound Wire Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Transfers"
                      },
                      "interest_payment" : {
                        "description" : "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                        "example" : {
                          "accrued_on_account_id" : "account_in71c4amph0vgo2qllky",
                          "amount" : 100,
                          "currency" : "USD",
                          "period_end" : "2023-03-31T23:59:59Z",
                          "period_start" : "2023-03-01T00:00:00Z"
                        },
                        "nullable" : true,
                        "properties" : {
                          "accrued_on_account_id" : {
                            "description" : "The account on which the interest was accrued.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "period_end" : {
                            "description" : "The end of the period for which this transaction paid interest.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "period_start" : {
                            "description" : "The start of the period for which this transaction paid interest.",
                            "format" : "date-time",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "period_start", "period_end", "accrued_on_account_id" ],
                        "title" : "Interest Payment",
                        "type" : "object",
                        "x-title-plural" : "Interest Payments"
                      },
                      "internal_source" : {
                        "description" : "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "reason" : "sample_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "reason" : {
                            "description" : "",
                            "enum" : [ "bank_migration", "cashback", "empyreal_adjustment", "error", "error_correction", "fees", "interest", "sample_funds", "sample_funds_return" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Bank Migration", "Cashback", "Empyreal adjustment", "Error", "Error correction", "Fees", "Interest", "Sample funds", "Sample funds return" ]
                          }
                        },
                        "required" : [ "amount", "currency", "reason" ],
                        "title" : "Internal Source",
                        "type" : "object",
                        "x-title-plural" : "Internal Sources"
                      },
                      "sample_funds" : {
                        "description" : "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                        "example" : {
                          "originator" : "dashboard"
                        },
                        "nullable" : true,
                        "properties" : {
                          "originator" : {
                            "description" : "Where the sample funds came from.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "originator" ],
                        "title" : "Sample Funds",
                        "type" : "object",
                        "x-title-plural" : "Sample Fundss"
                      },
                      "wire_drawdown_payment_intention" : {
                        "description" : "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Drawdown Payment Intention",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Intentions"
                      },
                      "wire_drawdown_payment_rejection" : {
                        "description" : "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                        "example" : {
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Wire Drawdown Payment Rejection",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Rejections"
                      },
                      "wire_transfer_intention" : {
                        "description" : "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "The destination account number.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "The message that will show on the recipient's bank statement.",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Intentions"
                      },
                      "wire_transfer_rejection" : {
                        "description" : "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Wire Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Rejections"
                      }
                    },
                    "required" : [ "category", "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_source", "card_route_refund", "card_route_settlement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection" ],
                    "title" : "Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Transaction Sources"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `transaction`.",
                    "enum" : [ "transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
                "title" : "Transaction",
                "type" : "object",
                "x-title-plural" : "Transactions"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_wire_transfer_simulation_result`.",
                "enum" : [ "inbound_wire_transfer_simulation_result" ],
                "type" : "string"
              }
            },
            "required" : [ "transaction", "type" ],
            "title" : "Inbound Wire Transfer Simulation Result",
            "type" : "object",
            "x-title-plural" : "Inbound Wire Transfer Simulation Results"
          }
        }
      }
    }
  }, {
    "id" : "3c478105-7aa5-4ea2-93d9-1236b68f58bc",
    "name" : "Simulate an Inbound Wire Drawdown request being created",
    "request" : {
      "urlPath" : "/simulations/inbound_wire_drawdown_requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 10000,\n  \"beneficiary_account_number\" : \"987654321\",\n  \"beneficiary_address_line1\" : \"33 Liberty Street\",\n  \"beneficiary_address_line2\" : \"New York, NY, 10045\",\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_name\" : \"Ian Crease\",\n  \"beneficiary_routing_number\" : \"101050001\",\n  \"currency\" : \"USD\",\n  \"id\" : \"inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e\",\n  \"message_to_recipient\" : \"Invoice 29582\",\n  \"originator_account_number\" : \"987654321\",\n  \"originator_address_line1\" : \"33 Liberty Street\",\n  \"originator_address_line2\" : \"New York, NY, 10045\",\n  \"originator_address_line3\" : null,\n  \"originator_name\" : \"Ian Crease\",\n  \"originator_routing_number\" : \"101050001\",\n  \"originator_to_beneficiary_information_line1\" : null,\n  \"originator_to_beneficiary_information_line2\" : null,\n  \"originator_to_beneficiary_information_line3\" : null,\n  \"originator_to_beneficiary_information_line4\" : null,\n  \"recipient_account_number_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"type\" : \"inbound_wire_drawdown_request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c478105-7aa5-4ea2-93d9-1236b68f58bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.598521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_an_inbound_wire_drawdown_request_being_created",
          "schema" : {
            "description" : "Inbound wire drawdown requests are requests from someone else to send them a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
            "example" : {
              "amount" : 10000,
              "beneficiary_account_number" : "987654321",
              "beneficiary_address_line1" : "33 Liberty Street",
              "beneficiary_address_line2" : "New York, NY, 10045",
              "beneficiary_name" : "Ian Crease",
              "beneficiary_routing_number" : "101050001",
              "currency" : "USD",
              "id" : "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
              "message_to_recipient" : "Invoice 29582",
              "originator_account_number" : "987654321",
              "originator_address_line1" : "33 Liberty Street",
              "originator_address_line2" : "New York, NY, 10045",
              "originator_name" : "Ian Crease",
              "originator_routing_number" : "101050001",
              "recipient_account_number_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "type" : "inbound_wire_drawdown_request"
            },
            "properties" : {
              "amount" : {
                "description" : "The amount being requested in cents.",
                "type" : "integer"
              },
              "beneficiary_account_number" : {
                "description" : "The drawdown request's beneficiary's account number.",
                "type" : "string"
              },
              "beneficiary_address_line1" : {
                "description" : "Line 1 of the drawdown request's beneficiary's address.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "Line 2 of the drawdown request's beneficiary's address.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "Line 3 of the drawdown request's beneficiary's address.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The drawdown request's beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_routing_number" : {
                "description" : "The drawdown request's beneficiary's routing number.",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\".",
                "type" : "string"
              },
              "id" : {
                "description" : "The Wire drawdown request identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "A message from the drawdown request's originator.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_account_number" : {
                "description" : "The drawdown request's originator's account number.",
                "type" : "string"
              },
              "originator_address_line1" : {
                "description" : "Line 1 of the drawdown request's originator's address.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_address_line2" : {
                "description" : "Line 2 of the drawdown request's originator's address.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_address_line3" : {
                "description" : "Line 3 of the drawdown request's originator's address.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_name" : {
                "description" : "The drawdown request's originator's name.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_routing_number" : {
                "description" : "The drawdown request's originator's routing number.",
                "type" : "string"
              },
              "originator_to_beneficiary_information_line1" : {
                "description" : "Line 1 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_to_beneficiary_information_line2" : {
                "description" : "Line 2 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_to_beneficiary_information_line3" : {
                "description" : "Line 3 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_to_beneficiary_information_line4" : {
                "description" : "Line 4 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_account_number_id" : {
                "description" : "The Account Number from which the recipient of this request is being requested to send funds.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_wire_drawdown_request`.",
                "enum" : [ "inbound_wire_drawdown_request" ],
                "type" : "string"
              }
            },
            "required" : [ "type", "id", "recipient_account_number_id", "originator_account_number", "originator_routing_number", "beneficiary_account_number", "beneficiary_routing_number", "amount", "currency", "message_to_recipient", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_name", "originator_address_line1", "originator_address_line2", "originator_address_line3", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3" ],
            "title" : "Inbound Wire Drawdown Request",
            "type" : "object",
            "x-tag" : "Inbound Wire Drawdown Requests",
            "x-title-plural" : "Inbound Wire Drawdown Requests"
          }
        }
      }
    }
  }, {
    "id" : "6f10338f-a3ba-4568-b9ad-59e936625c7a",
    "name" : "Simulate a Real Time Payments Transfer to your account",
    "request" : {
      "urlPath" : "/simulations/inbound_real_time_payments_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"declined_transaction\" : null,\n  \"transaction\" : {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"route_type\" : \"account_number\",\n    \"source\" : {\n      \"category\" : \"inbound_real_time_payments_transfer_confirmation\",\n      \"inbound_real_time_payments_transfer_confirmation\" : {\n        \"amount\" : 100,\n        \"creditor_name\" : \"Ian Crease\",\n        \"currency\" : \"USD\",\n        \"debtor_account_number\" : \"987654321\",\n        \"debtor_name\" : \"National Phonograph Company\",\n        \"debtor_routing_number\" : \"101050001\",\n        \"remittance_information\" : \"Invoice 29582\",\n        \"transaction_identification\" : \"20220501234567891T1BSLZO01745013025\"\n      }\n    },\n    \"type\" : \"transaction\"\n  },\n  \"type\" : \"inbound_real_time_payments_transfer_simulation_result\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f10338f-a3ba-4568-b9ad-59e936625c7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.59814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_a_real_time_payments_transfer_to_your_account",
          "schema" : {
            "description" : "The results of an inbound Real Time Payments Transfer simulation.",
            "example" : {
              "transaction" : {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "transaction_uyrp7fld2ium70oa7oi",
                "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "route_type" : "account_number",
                "source" : {
                  "category" : "inbound_real_time_payments_transfer_confirmation",
                  "inbound_real_time_payments_transfer_confirmation" : {
                    "amount" : 100,
                    "creditor_name" : "Ian Crease",
                    "currency" : "USD",
                    "debtor_account_number" : "987654321",
                    "debtor_name" : "National Phonograph Company",
                    "debtor_routing_number" : "101050001",
                    "remittance_information" : "Invoice 29582",
                    "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                  }
                },
                "type" : "transaction"
              },
              "type" : "inbound_real_time_payments_transfer_simulation_result"
            },
            "properties" : {
              "declined_transaction" : {
                "description" : "If the Real Time Payments Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_real_time_payments_transfer_decline`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 1750,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "declined_transaction_17jbn0yyhvkt4v4ooym8",
                  "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                  "route_type" : "account_number",
                  "source" : {
                    "ach_decline" : {
                      "amount" : 1750,
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "reason" : "insufficient_funds",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "category" : "ach_decline"
                  },
                  "type" : "declined_transaction"
                },
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the Account the Declined Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "This is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Declined Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Declined Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                    "example" : {
                      "ach_decline" : {
                        "amount" : 1750,
                        "originator_company_id" : "0987654321",
                        "originator_company_name" : "BIG BANK",
                        "reason" : "insufficient_funds",
                        "receiver_id_number" : "12345678900",
                        "receiver_name" : "IAN CREASE",
                        "trace_number" : "021000038461022"
                      },
                      "category" : "ach_decline"
                    },
                    "properties" : {
                      "ach_decline" : {
                        "description" : "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                        "example" : {
                          "amount" : 1750,
                          "originator_company_id" : "0987654321",
                          "originator_company_name" : "BIG BANK",
                          "reason" : "insufficient_funds",
                          "receiver_id_number" : "12345678900",
                          "receiver_name" : "IAN CREASE",
                          "trace_number" : "021000038461022"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "originator_company_descriptive_date" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_discretionary_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the ACH transfer was declined.",
                            "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "credit_entry_refused_by_receiver", "duplicate_return", "entity_not_active", "transaction_not_allowed", "group_locked", "insufficient_funds", "no_ach_route", "originator_request" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "A credit was refused.", "Other.", "The account's entity is not active.", "The transaction is not allowed per Increase's terms", "Your account is inactive.", "Your account contains insufficient funds.", "The account number that was debited does not exist.", "Other." ]
                          },
                          "receiver_id_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_id", "reason", "receiver_id_number", "receiver_name", "trace_number" ],
                        "title" : "ACH Decline",
                        "type" : "object",
                        "x-title-plural" : "ACH Declines"
                      },
                      "card_decline" : {
                        "description" : "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA",
                          "network" : "visa",
                          "network_details" : {
                            "visa" : {
                              "electronic_commerce_indicator" : "secure_electronic_commerce",
                              "point_of_service_entry_mode" : "manual"
                            }
                          },
                          "reason" : "insufficient_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "digital_wallet_token_id" : {
                            "description" : "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_acceptor_id" : {
                            "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "The city the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "The country the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "The merchant descriptor of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "The state the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "network" : {
                            "description" : "The payment network used to process this card authorization",
                            "enum" : [ "visa" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Visa" ]
                          },
                          "network_details" : {
                            "description" : "Fields specific to the `network`",
                            "properties" : {
                              "visa" : {
                                "description" : "Fields specific to the `visa` network",
                                "properties" : {
                                  "electronic_commerce_indicator" : {
                                    "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                    "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                                  },
                                  "point_of_service_entry_mode" : {
                                    "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                                    "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                                  }
                                },
                                "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                                "title" : "Visa",
                                "type" : "object",
                                "x-title-plural" : "Visas"
                              }
                            },
                            "required" : [ "visa" ],
                            "title" : "Network Details",
                            "type" : "object",
                            "x-title-plural" : "Network Detailss"
                          },
                          "real_time_decision_id" : {
                            "description" : "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the transaction was declined.",
                            "enum" : [ "card_not_active", "entity_not_active", "group_locked", "insufficient_funds", "cvv2_mismatch", "transaction_not_allowed", "breaches_limit", "webhook_declined", "webhook_timed_out", "declined_by_stand_in_processing" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The Card was not active.", "The account's entity was not active.", "The account was inactive.", "The Card's Account did not have a sufficient available balance.", "The given CVV2 did not match the card's value.", "The attempted card transaction is not allowed per Increase's terms.", "The transaction was blocked by a Limit.", "Your application declined the transaction via webhook.", "Your application webhook did not respond without the required timeout.", "Declined by stand-in processing" ]
                          }
                        },
                        "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "amount", "currency", "reason", "merchant_state", "real_time_decision_id", "digital_wallet_token_id" ],
                        "title" : "Card Decline",
                        "type" : "object",
                        "x-title-plural" : "Card Declines"
                      },
                      "card_route_decline" : {
                        "description" : "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Decline",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Declines"
                      },
                      "category" : {
                        "description" : "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.", "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.", "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.", "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.", "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.", "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.", "The Declined Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_decline" : {
                        "description" : "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "auxiliary_on_us" : "99999",
                          "reason" : "insufficient_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "auxiliary_on_us" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the check was declined.",
                            "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "entity_not_active", "group_locked", "insufficient_funds", "unable_to_locate_account", "unable_to_process", "refer_to_image", "stop_payment_requested", "returned" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "The account's entity is not active.", "Your account is inactive.", "Your account contains insufficient funds.", "Unable to locate account.", "Unable to process.", "Refer to image.", "Stop payment requested for this check.", "Check was returned to sender." ]
                          }
                        },
                        "required" : [ "amount", "auxiliary_on_us", "reason" ],
                        "title" : "Check Decline",
                        "type" : "object",
                        "x-title-plural" : "Check Declines"
                      },
                      "inbound_real_time_payments_transfer_decline" : {
                        "description" : "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                        "example" : {
                          "amount" : 100,
                          "creditor_name" : "Ian Crease",
                          "currency" : "USD",
                          "debtor_account_number" : "987654321",
                          "debtor_name" : "National Phonograph Company",
                          "debtor_routing_number" : "101050001",
                          "reason" : "account_number_disabled",
                          "remittance_information" : "Invoice 29582",
                          "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "creditor_name" : {
                            "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "debtor_account_number" : {
                            "description" : "The account number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "debtor_name" : {
                            "description" : "The name provided by the sender of the transfer.",
                            "type" : "string"
                          },
                          "debtor_routing_number" : {
                            "description" : "The routing number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the transfer was declined.",
                            "enum" : [ "account_number_canceled", "account_number_disabled", "group_locked", "entity_not_active", "real_time_payments_not_enabled" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "Your account is inactive.", "The account's entity is not active.", "Your account is not enabled to receive Real Time Payments transfers." ]
                          },
                          "remittance_information" : {
                            "description" : "Additional information included with the transfer.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transaction_identification" : {
                            "description" : "The Real Time Payments network identification of the declined transfer.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "reason", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                        "title" : "Inbound Real Time Payments Transfer Decline",
                        "type" : "object",
                        "x-title-plural" : "Inbound Real Time Payments Transfer Declines"
                      },
                      "international_ach_decline" : {
                        "description" : "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "destination_country_code" : "US",
                          "destination_currency_code" : "USD",
                          "foreign_exchange_indicator" : "fixed_to_fixed",
                          "foreign_exchange_reference_indicator" : "blank",
                          "foreign_payment_amount" : 199,
                          "international_transaction_type_code" : "internet_initiated",
                          "originating_currency_code" : "USD",
                          "originating_depository_financial_institution_branch_country" : "US",
                          "originating_depository_financial_institution_id" : "091000019",
                          "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                          "originator_city" : "BERLIN",
                          "originator_company_entry_description" : "RETRY PYMT",
                          "originator_country" : "DE",
                          "originator_identification" : "770510487A",
                          "originator_name" : "BERGHAIN",
                          "originator_postal_code" : "50825",
                          "originator_street_address" : "Ruedersdorferstr. 7",
                          "receiver_city" : "BEVERLY HILLS",
                          "receiver_country" : "US",
                          "receiver_identification_number" : "1018790279274",
                          "receiver_postal_code" : "90210",
                          "receiver_state_or_province" : "CA",
                          "receiver_street_address" : "123 FAKE ST",
                          "receiving_company_or_individual_name" : "IAN CREASE",
                          "receiving_depository_financial_institution_country" : "US",
                          "receiving_depository_financial_institution_id" : "101050001",
                          "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                          "trace_number" : "010202909100090"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "destination_country_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "destination_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "foreign_exchange_reference_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_payment_amount" : {
                            "description" : "",
                            "type" : "integer"
                          },
                          "foreign_trace_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "international_transaction_type_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_branch_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_identification" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "payment_related_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "payment_related_information2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_identification_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_company_or_individual_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                        "title" : "International ACH Decline",
                        "type" : "object",
                        "x-title-plural" : "International ACH Declines"
                      }
                    },
                    "required" : [ "category", "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline" ],
                    "title" : "Declined Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Declined Transaction Sources"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `declined_transaction`.",
                    "enum" : [ "declined_transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
                "title" : "Declined Transaction",
                "type" : "object",
                "x-title-plural" : "Declined Transactions"
              },
              "transaction" : {
                "description" : "If the Real Time Payments Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_real_time_payments_transfer_confirmation`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 100,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "transaction_uyrp7fld2ium70oa7oi",
                  "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                  "route_type" : "account_number",
                  "source" : {
                    "category" : "inbound_ach_transfer",
                    "inbound_ach_transfer" : {
                      "amount" : 100,
                      "originator_company_entry_description" : "RESERVE",
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    }
                  },
                  "type" : "transaction"
                },
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the Account the Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                    "example" : {
                      "category" : "inbound_ach_transfer",
                      "inbound_ach_transfer" : {
                        "amount" : 100,
                        "originator_company_entry_description" : "RESERVE",
                        "originator_company_id" : "0987654321",
                        "originator_company_name" : "BIG BANK",
                        "receiver_id_number" : "12345678900",
                        "receiver_name" : "IAN CREASE",
                        "trace_number" : "021000038461022"
                      }
                    },
                    "properties" : {
                      "account_transfer_intention" : {
                        "description" : "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "description" : "Frederick S. Holmes",
                          "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                          "source_account_id" : "account_in71c4amph0vgo2qllky",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "description" : {
                            "description" : "The description you chose to give the transfer.",
                            "type" : "string"
                          },
                          "destination_account_id" : {
                            "description" : "The identifier of the Account to where the Account Transfer was sent.",
                            "type" : "string"
                          },
                          "source_account_id" : {
                            "description" : "The identifier of the Account from where the Account Transfer was sent.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "description", "destination_account_id", "source_account_id", "transfer_id" ],
                        "title" : "Account Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Account Transfer Intentions"
                      },
                      "ach_check_conversion" : {
                        "description" : "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                        "example" : {
                          "amount" : 100,
                          "file_id" : "file_makxrc67oh9l6sg7w9yc"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "file_id" : {
                            "description" : "The identifier of the File containing an image of the returned check.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "file_id" ],
                        "title" : "ACH Check Conversion",
                        "type" : "object",
                        "x-title-plural" : "ACH Check Conversions"
                      },
                      "ach_check_conversion_return" : {
                        "description" : "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                        "example" : {
                          "amount" : 100,
                          "return_reason_code" : ""
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "return_reason_code" : {
                            "description" : "Why the transfer was returned.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "return_reason_code" ],
                        "title" : "ACH Check Conversion Return",
                        "type" : "object",
                        "x-title-plural" : "ACH Check Conversion Returns"
                      },
                      "ach_transfer_intention" : {
                        "description" : "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "routing_number" : "101050001",
                          "statement_descriptor" : "Frederick S. Holmes",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "statement_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "statement_descriptor", "transfer_id" ],
                        "title" : "ACH Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Intentions"
                      },
                      "ach_transfer_rejection" : {
                        "description" : "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "ACH Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Rejections"
                      },
                      "ach_transfer_return" : {
                        "description" : "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                        "example" : {
                          "created_at" : "2020-01-31T23:59:59Z",
                          "return_reason_code" : "insufficient_fund",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                        },
                        "nullable" : true,
                        "properties" : {
                          "created_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "return_reason_code" : {
                            "description" : "Why the ACH Transfer was returned.",
                            "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the Tranasaction associated with this return.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer associated with this return.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                        "title" : "ACH Transfer Return",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Returns"
                      },
                      "card_dispute_acceptance" : {
                        "description" : "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                        "example" : {
                          "accepted_at" : "2020-01-31T23:59:59Z",
                          "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "accepted_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "card_dispute_id" : {
                            "description" : "The identifier of the Card Dispute that was accepted.",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                        "title" : "Card Dispute Acceptance",
                        "type" : "object",
                        "x-title-plural" : "Card Dispute Acceptances"
                      },
                      "card_refund" : {
                        "description" : "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                        "example" : {
                          "amount" : 100,
                          "card_settlement_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "currency" : "USD",
                          "type" : "card_refund"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "card_settlement_transaction_id" : {
                            "description" : "The identifier for the Transaction this refunds, if any.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `card_refund`.",
                            "enum" : [ "card_refund" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "card_settlement_transaction_id", "type" ],
                        "title" : "Card Refund",
                        "type" : "object",
                        "x-title-plural" : "Card Refunds"
                      },
                      "card_route_refund" : {
                        "description" : "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                        "example" : {
                          "amount" : 1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Refund",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Refunds"
                      },
                      "card_route_settlement" : {
                        "description" : "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                        "example" : {
                          "amount" : 1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Settlement",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Settlements"
                      },
                      "card_settlement" : {
                        "description" : "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "merchant_category_code" : "5734",
                          "merchant_city" : "New York",
                          "merchant_country" : "US",
                          "merchant_name" : "AMAZON.COM",
                          "merchant_state" : "NY",
                          "presentment_amount" : 100,
                          "presentment_currency" : "USD",
                          "type" : "card_settlement"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "pending_transaction_id" : {
                            "description" : "The identifier of the Pending Transaction associated with this Transaction.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "presentment_amount" : {
                            "description" : "The amount in the minor unit of the transaction's presentment currency.",
                            "type" : "integer"
                          },
                          "presentment_currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `card_settlement`.",
                            "enum" : [ "card_settlement" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "presentment_amount", "presentment_currency", "merchant_city", "merchant_country", "merchant_name", "merchant_category_code", "merchant_state", "pending_transaction_id", "type" ],
                        "title" : "Card Settlement",
                        "type" : "object",
                        "x-title-plural" : "Card Settlements"
                      },
                      "category" : {
                        "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_ach_transfer_return_intention", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_general_ledger_transaction", "internal_source", "card_route_refund", "card_route_settlement", "real_time_payments_transfer_acknowledgement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.", "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.", "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.", "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.", "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.", "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.", "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.", "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.", "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.", "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.", "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.", "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.", "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.", "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.", "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.", "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.", "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.", "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.", "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.", "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.", "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.", "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.", "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.", "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.", "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.", "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.", "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.", "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.", "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.", "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.", "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.", "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.", "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.", "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.", "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.", "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.", "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.", "The Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_deposit_acceptance" : {
                        "description" : "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "auxiliary_on_us" : "101",
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "routing_number" : "101050001"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "The account number printed on the check.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "auxiliary_on_us" : {
                            "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_deposit_id" : {
                            "description" : "The ID of the Check Deposit that was accepted.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "routing_number" : {
                            "description" : "The routing number printed on the check.",
                            "type" : "string"
                          },
                          "serial_number" : {
                            "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                        "title" : "Check Deposit Acceptance",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Acceptances"
                      },
                      "check_deposit_return" : {
                        "description" : "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                        "example" : {
                          "amount" : 100,
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "return_reason" : "insufficient_funds",
                          "returned_at" : "2020-01-31T23:59:59Z",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "check_deposit_id" : {
                            "description" : "The identifier of the Check Deposit that was returned.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "return_reason" : {
                            "description" : "",
                            "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                          },
                          "returned_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                        "title" : "Check Deposit Return",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Returns"
                      },
                      "check_transfer_intention" : {
                        "description" : "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                        "example" : {
                          "address_city" : "New York",
                          "address_line1" : "33 Liberty Street",
                          "address_state" : "NY",
                          "address_zip" : "10045",
                          "amount" : 1000,
                          "currency" : "USD",
                          "recipient_name" : "Ian Crease",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "address_city" : {
                            "description" : "The city of the check's destination.",
                            "type" : "string"
                          },
                          "address_line1" : {
                            "description" : "The street address of the check's destination.",
                            "type" : "string"
                          },
                          "address_line2" : {
                            "description" : "The second line of the address of the check's destination.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "address_state" : {
                            "description" : "The state of the check's destination.",
                            "type" : "string"
                          },
                          "address_zip" : {
                            "description" : "The postal code of the check's destination.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "recipient_name" : {
                            "description" : "The name that will be printed on the check.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer with which this is associated.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "address_line1", "address_line2", "address_city", "address_state", "address_zip", "amount", "currency", "recipient_name", "transfer_id" ],
                        "title" : "Check Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Intentions"
                      },
                      "check_transfer_rejection" : {
                        "description" : "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Check Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Rejections"
                      },
                      "check_transfer_return" : {
                        "description" : "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                        "example" : {
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "file_id" : {
                            "description" : "If available, a document with additional information about the return.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the returned Check Transfer.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id", "file_id" ],
                        "title" : "Check Transfer Return",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Returns"
                      },
                      "check_transfer_stop_payment_request" : {
                        "description" : "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                        "example" : {
                          "requested_at" : "2020-01-31T23:59:59Z",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                          "type" : "check_transfer_stop_payment_request"
                        },
                        "nullable" : true,
                        "properties" : {
                          "requested_at" : {
                            "description" : "The time the stop-payment was requested.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The transaction ID of the corresponding credit transaction.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The ID of the check transfer that was stopped.",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                            "enum" : [ "check_transfer_stop_payment_request" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                        "title" : "Check Transfer Stop Payment Request",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Stop Payment Requests"
                      },
                      "dispute_resolution" : {
                        "description" : "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "disputed_transaction_id" : {
                            "description" : "The identifier of the Transaction that was disputed.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "disputed_transaction_id" ],
                        "title" : "Dispute Resolution",
                        "type" : "object",
                        "x-title-plural" : "Dispute Resolutions"
                      },
                      "empyreal_cash_deposit" : {
                        "description" : "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                        "example" : {
                          "amount" : 100,
                          "bag_id" : "12345",
                          "deposit_date" : "2020-01-31T23:59:59Z"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "bag_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "deposit_date" : {
                            "description" : "",
                            "format" : "date-time",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "bag_id", "deposit_date" ],
                        "title" : "Empyreal Cash Deposit",
                        "type" : "object",
                        "x-title-plural" : "Empyreal Cash Deposits"
                      },
                      "inbound_ach_transfer" : {
                        "description" : "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                        "example" : {
                          "amount" : 100,
                          "originator_company_entry_description" : "RESERVE",
                          "originator_company_id" : "0987654321",
                          "originator_company_name" : "BIG BANK",
                          "receiver_id_number" : "12345678900",
                          "receiver_name" : "IAN CREASE",
                          "trace_number" : "021000038461022"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "originator_company_descriptive_date" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_discretionary_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_id_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_entry_description", "originator_company_id", "receiver_id_number", "receiver_name", "trace_number" ],
                        "title" : "Inbound ACH Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound ACH Transfers"
                      },
                      "inbound_check" : {
                        "description" : "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                        "example" : {
                          "amount" : 100,
                          "check_front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                          "check_number" : "       00000123",
                          "check_rear_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                          "currency" : "USD"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "check_front_image_file_id" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_rear_image_file_id" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          }
                        },
                        "required" : [ "amount", "currency", "check_number", "check_front_image_file_id", "check_rear_image_file_id" ],
                        "title" : "Inbound Check",
                        "type" : "object",
                        "x-title-plural" : "Inbound Checks"
                      },
                      "inbound_international_ach_transfer" : {
                        "description" : "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                        "example" : {
                          "amount" : -1000,
                          "destination_country_code" : "US",
                          "destination_currency_code" : "USD",
                          "foreign_exchange_indicator" : "fixed_to_fixed",
                          "foreign_exchange_reference_indicator" : "blank",
                          "foreign_payment_amount" : 199,
                          "international_transaction_type_code" : "internet_initiated",
                          "originating_currency_code" : "USD",
                          "originating_depository_financial_institution_branch_country" : "US",
                          "originating_depository_financial_institution_id" : "091000019",
                          "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                          "originator_city" : "BERLIN",
                          "originator_company_entry_description" : "RETRY PYMT",
                          "originator_country" : "DE",
                          "originator_identification" : "770510487A",
                          "originator_name" : "BERGHAIN",
                          "originator_postal_code" : "50825",
                          "originator_street_address" : "Ruedersdorferstr. 7",
                          "receiver_city" : "BEVERLY HILLS",
                          "receiver_country" : "US",
                          "receiver_identification_number" : "1018790279274",
                          "receiver_postal_code" : "90210",
                          "receiver_state_or_province" : "CA",
                          "receiver_street_address" : "123 FAKE ST",
                          "receiving_company_or_individual_name" : "IAN CREASE",
                          "receiving_depository_financial_institution_country" : "US",
                          "receiving_depository_financial_institution_id" : "101050001",
                          "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                          "trace_number" : "010202909100090"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "destination_country_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "destination_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "foreign_exchange_reference_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_payment_amount" : {
                            "description" : "",
                            "type" : "integer"
                          },
                          "foreign_trace_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "international_transaction_type_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_branch_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_identification" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "payment_related_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "payment_related_information2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_identification_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_company_or_individual_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                        "title" : "Inbound International ACH Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound International ACH Transfers"
                      },
                      "inbound_real_time_payments_transfer_confirmation" : {
                        "description" : "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                        "example" : {
                          "amount" : 100,
                          "creditor_name" : "Ian Crease",
                          "currency" : "USD",
                          "debtor_account_number" : "987654321",
                          "debtor_name" : "National Phonograph Company",
                          "debtor_routing_number" : "101050001",
                          "remittance_information" : "Invoice 29582",
                          "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "creditor_name" : {
                            "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "debtor_account_number" : {
                            "description" : "The account number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "debtor_name" : {
                            "description" : "The name provided by the sender of the transfer.",
                            "type" : "string"
                          },
                          "debtor_routing_number" : {
                            "description" : "The routing number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "remittance_information" : {
                            "description" : "Additional information included with the transfer.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transaction_identification" : {
                            "description" : "The Real Time Payments network identification of the transfer",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                        "title" : "Inbound Real Time Payments Transfer Confirmation",
                        "type" : "object",
                        "x-title-plural" : "Inbound Real Time Payments Transfer Confirmations"
                      },
                      "inbound_wire_drawdown_payment" : {
                        "description" : "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                        "example" : {
                          "amount" : 100,
                          "description" : "Inbound wire drawdown payment"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "beneficiary_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information" ],
                        "title" : "Inbound Wire Drawdown Payment",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Drawdown Payments"
                      },
                      "inbound_wire_drawdown_payment_reversal" : {
                        "description" : "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                        "example" : {
                          "amount" : 12345,
                          "description" : "Inbound wire reversal 2022021100335128",
                          "input_cycle_date" : "2022-02-11",
                          "input_message_accountability_data" : "20220211B6B7HU2R011023",
                          "input_sequence_number" : "11023",
                          "input_source" : "B6B7HU2R",
                          "previous_message_input_cycle_date" : "2022-02-10",
                          "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                          "previous_message_input_sequence_number" : "3",
                          "previous_message_input_source" : "MMQFMP0P"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount that was reversed.",
                            "type" : "integer"
                          },
                          "description" : {
                            "description" : "The description on the reversal message from Fedwire.",
                            "type" : "string"
                          },
                          "input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire reversal.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier.",
                            "type" : "string"
                          },
                          "input_sequence_number" : {
                            "description" : "The Fedwire sequence number.",
                            "type" : "string"
                          },
                          "input_source" : {
                            "description" : "The Fedwire input source identifier.",
                            "type" : "string"
                          },
                          "previous_message_input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "previous_message_input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_sequence_number" : {
                            "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_source" : {
                            "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source" ],
                        "title" : "Inbound Wire Drawdown Payment Reversal",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Drawdown Payment Reversals"
                      },
                      "inbound_wire_reversal" : {
                        "description" : "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                        "example" : {
                          "amount" : 12345,
                          "description" : "Inbound wire reversal 2022021100335128",
                          "input_cycle_date" : "2022-02-11",
                          "input_message_accountability_data" : "20220211B6B7HU2R011023",
                          "input_sequence_number" : "11023",
                          "input_source" : "B6B7HU2R",
                          "previous_message_input_cycle_date" : "2022-02-10",
                          "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                          "previous_message_input_sequence_number" : "3",
                          "previous_message_input_source" : "MMQFMP0P"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount that was reversed.",
                            "type" : "integer"
                          },
                          "description" : {
                            "description" : "The description on the reversal message from Fedwire.",
                            "type" : "string"
                          },
                          "financial_institution_to_financial_institution_information" : {
                            "description" : "Additional financial institution information included in the wire reversal.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire reversal.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier.",
                            "type" : "string"
                          },
                          "input_sequence_number" : {
                            "description" : "The Fedwire sequence number.",
                            "type" : "string"
                          },
                          "input_source" : {
                            "description" : "The Fedwire input source identifier.",
                            "type" : "string"
                          },
                          "previous_message_input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "previous_message_input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_sequence_number" : {
                            "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_source" : {
                            "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "receiver_financial_institution_information" : {
                            "description" : "Information included in the wire reversal for the receiving financial institution.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                        "title" : "Inbound Wire Reversal",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Reversals"
                      },
                      "inbound_wire_transfer" : {
                        "description" : "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                        "example" : {
                          "amount" : 100,
                          "description" : "Inbound wire transfer"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "beneficiary_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line4" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_to_beneficiary_information" ],
                        "title" : "Inbound Wire Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Transfers"
                      },
                      "interest_payment" : {
                        "description" : "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                        "example" : {
                          "accrued_on_account_id" : "account_in71c4amph0vgo2qllky",
                          "amount" : 100,
                          "currency" : "USD",
                          "period_end" : "2023-03-31T23:59:59Z",
                          "period_start" : "2023-03-01T00:00:00Z"
                        },
                        "nullable" : true,
                        "properties" : {
                          "accrued_on_account_id" : {
                            "description" : "The account on which the interest was accrued.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "period_end" : {
                            "description" : "The end of the period for which this transaction paid interest.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "period_start" : {
                            "description" : "The start of the period for which this transaction paid interest.",
                            "format" : "date-time",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "period_start", "period_end", "accrued_on_account_id" ],
                        "title" : "Interest Payment",
                        "type" : "object",
                        "x-title-plural" : "Interest Payments"
                      },
                      "internal_source" : {
                        "description" : "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "reason" : "sample_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "reason" : {
                            "description" : "",
                            "enum" : [ "bank_migration", "cashback", "empyreal_adjustment", "error", "error_correction", "fees", "interest", "sample_funds", "sample_funds_return" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Bank Migration", "Cashback", "Empyreal adjustment", "Error", "Error correction", "Fees", "Interest", "Sample funds", "Sample funds return" ]
                          }
                        },
                        "required" : [ "amount", "currency", "reason" ],
                        "title" : "Internal Source",
                        "type" : "object",
                        "x-title-plural" : "Internal Sources"
                      },
                      "sample_funds" : {
                        "description" : "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                        "example" : {
                          "originator" : "dashboard"
                        },
                        "nullable" : true,
                        "properties" : {
                          "originator" : {
                            "description" : "Where the sample funds came from.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "originator" ],
                        "title" : "Sample Funds",
                        "type" : "object",
                        "x-title-plural" : "Sample Fundss"
                      },
                      "wire_drawdown_payment_intention" : {
                        "description" : "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Drawdown Payment Intention",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Intentions"
                      },
                      "wire_drawdown_payment_rejection" : {
                        "description" : "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                        "example" : {
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Wire Drawdown Payment Rejection",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Rejections"
                      },
                      "wire_transfer_intention" : {
                        "description" : "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "The destination account number.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "The message that will show on the recipient's bank statement.",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Intentions"
                      },
                      "wire_transfer_rejection" : {
                        "description" : "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Wire Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Rejections"
                      }
                    },
                    "required" : [ "category", "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_source", "card_route_refund", "card_route_settlement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection" ],
                    "title" : "Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Transaction Sources"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `transaction`.",
                    "enum" : [ "transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
                "title" : "Transaction",
                "type" : "object",
                "x-title-plural" : "Transactions"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`.",
                "enum" : [ "inbound_real_time_payments_transfer_simulation_result" ],
                "type" : "string"
              }
            },
            "required" : [ "transaction", "declined_transaction", "type" ],
            "title" : "Inbound Real Time Payments Transfer Simulation Result",
            "type" : "object",
            "x-title-plural" : "Inbound Real Time Payments Transfer Simulation Results"
          }
        }
      }
    }
  }, {
    "id" : "f6d2eb69-fce4-4623-8907-3fb9389c8505",
    "name" : "Simulate an ACH Transfer to your account",
    "request" : {
      "urlPath" : "/simulations/inbound_ach_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"declined_transaction\" : null,\n  \"transaction\" : {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"route_type\" : \"account_number\",\n    \"source\" : {\n      \"category\" : \"inbound_ach_transfer\",\n      \"inbound_ach_transfer\" : {\n        \"amount\" : 100,\n        \"originator_company_descriptive_date\" : null,\n        \"originator_company_discretionary_data\" : null,\n        \"originator_company_entry_description\" : \"RESERVE\",\n        \"originator_company_id\" : \"0987654321\",\n        \"originator_company_name\" : \"BIG BANK\",\n        \"receiver_id_number\" : \"12345678900\",\n        \"receiver_name\" : \"IAN CREASE\",\n        \"trace_number\" : \"021000038461022\"\n      }\n    },\n    \"type\" : \"transaction\"\n  },\n  \"type\" : \"inbound_ach_transfer_simulation_result\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6d2eb69-fce4-4623-8907-3fb9389c8505",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.592766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_an_ach_transfer_to_your_account",
          "schema" : {
            "description" : "The results of an inbound ACH Transfer simulation.",
            "example" : {
              "transaction" : {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "transaction_uyrp7fld2ium70oa7oi",
                "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "route_type" : "account_number",
                "source" : {
                  "category" : "inbound_ach_transfer",
                  "inbound_ach_transfer" : {
                    "amount" : 100,
                    "originator_company_entry_description" : "RESERVE",
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  }
                },
                "type" : "transaction"
              },
              "type" : "inbound_ach_transfer_simulation_result"
            },
            "properties" : {
              "declined_transaction" : {
                "description" : "If the ACH Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_ach_transfer`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 1750,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "declined_transaction_17jbn0yyhvkt4v4ooym8",
                  "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                  "route_type" : "account_number",
                  "source" : {
                    "ach_decline" : {
                      "amount" : 1750,
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "reason" : "insufficient_funds",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "category" : "ach_decline"
                  },
                  "type" : "declined_transaction"
                },
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the Account the Declined Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "This is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Declined Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Declined Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                    "example" : {
                      "ach_decline" : {
                        "amount" : 1750,
                        "originator_company_id" : "0987654321",
                        "originator_company_name" : "BIG BANK",
                        "reason" : "insufficient_funds",
                        "receiver_id_number" : "12345678900",
                        "receiver_name" : "IAN CREASE",
                        "trace_number" : "021000038461022"
                      },
                      "category" : "ach_decline"
                    },
                    "properties" : {
                      "ach_decline" : {
                        "description" : "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                        "example" : {
                          "amount" : 1750,
                          "originator_company_id" : "0987654321",
                          "originator_company_name" : "BIG BANK",
                          "reason" : "insufficient_funds",
                          "receiver_id_number" : "12345678900",
                          "receiver_name" : "IAN CREASE",
                          "trace_number" : "021000038461022"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "originator_company_descriptive_date" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_discretionary_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the ACH transfer was declined.",
                            "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "credit_entry_refused_by_receiver", "duplicate_return", "entity_not_active", "transaction_not_allowed", "group_locked", "insufficient_funds", "no_ach_route", "originator_request" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "A credit was refused.", "Other.", "The account's entity is not active.", "The transaction is not allowed per Increase's terms", "Your account is inactive.", "Your account contains insufficient funds.", "The account number that was debited does not exist.", "Other." ]
                          },
                          "receiver_id_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_id", "reason", "receiver_id_number", "receiver_name", "trace_number" ],
                        "title" : "ACH Decline",
                        "type" : "object",
                        "x-title-plural" : "ACH Declines"
                      },
                      "card_decline" : {
                        "description" : "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA",
                          "network" : "visa",
                          "network_details" : {
                            "visa" : {
                              "electronic_commerce_indicator" : "secure_electronic_commerce",
                              "point_of_service_entry_mode" : "manual"
                            }
                          },
                          "reason" : "insufficient_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "digital_wallet_token_id" : {
                            "description" : "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_acceptor_id" : {
                            "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "The city the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "The country the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "The merchant descriptor of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "The state the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "network" : {
                            "description" : "The payment network used to process this card authorization",
                            "enum" : [ "visa" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Visa" ]
                          },
                          "network_details" : {
                            "description" : "Fields specific to the `network`",
                            "properties" : {
                              "visa" : {
                                "description" : "Fields specific to the `visa` network",
                                "properties" : {
                                  "electronic_commerce_indicator" : {
                                    "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                    "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                                  },
                                  "point_of_service_entry_mode" : {
                                    "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                                    "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                                  }
                                },
                                "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                                "title" : "Visa",
                                "type" : "object",
                                "x-title-plural" : "Visas"
                              }
                            },
                            "required" : [ "visa" ],
                            "title" : "Network Details",
                            "type" : "object",
                            "x-title-plural" : "Network Detailss"
                          },
                          "real_time_decision_id" : {
                            "description" : "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the transaction was declined.",
                            "enum" : [ "card_not_active", "entity_not_active", "group_locked", "insufficient_funds", "cvv2_mismatch", "transaction_not_allowed", "breaches_limit", "webhook_declined", "webhook_timed_out", "declined_by_stand_in_processing" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The Card was not active.", "The account's entity was not active.", "The account was inactive.", "The Card's Account did not have a sufficient available balance.", "The given CVV2 did not match the card's value.", "The attempted card transaction is not allowed per Increase's terms.", "The transaction was blocked by a Limit.", "Your application declined the transaction via webhook.", "Your application webhook did not respond without the required timeout.", "Declined by stand-in processing" ]
                          }
                        },
                        "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "amount", "currency", "reason", "merchant_state", "real_time_decision_id", "digital_wallet_token_id" ],
                        "title" : "Card Decline",
                        "type" : "object",
                        "x-title-plural" : "Card Declines"
                      },
                      "card_route_decline" : {
                        "description" : "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Decline",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Declines"
                      },
                      "category" : {
                        "description" : "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.", "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.", "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.", "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.", "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.", "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.", "The Declined Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_decline" : {
                        "description" : "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "auxiliary_on_us" : "99999",
                          "reason" : "insufficient_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "auxiliary_on_us" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the check was declined.",
                            "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "entity_not_active", "group_locked", "insufficient_funds", "unable_to_locate_account", "unable_to_process", "refer_to_image", "stop_payment_requested", "returned" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "The account's entity is not active.", "Your account is inactive.", "Your account contains insufficient funds.", "Unable to locate account.", "Unable to process.", "Refer to image.", "Stop payment requested for this check.", "Check was returned to sender." ]
                          }
                        },
                        "required" : [ "amount", "auxiliary_on_us", "reason" ],
                        "title" : "Check Decline",
                        "type" : "object",
                        "x-title-plural" : "Check Declines"
                      },
                      "inbound_real_time_payments_transfer_decline" : {
                        "description" : "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                        "example" : {
                          "amount" : 100,
                          "creditor_name" : "Ian Crease",
                          "currency" : "USD",
                          "debtor_account_number" : "987654321",
                          "debtor_name" : "National Phonograph Company",
                          "debtor_routing_number" : "101050001",
                          "reason" : "account_number_disabled",
                          "remittance_information" : "Invoice 29582",
                          "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "creditor_name" : {
                            "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "debtor_account_number" : {
                            "description" : "The account number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "debtor_name" : {
                            "description" : "The name provided by the sender of the transfer.",
                            "type" : "string"
                          },
                          "debtor_routing_number" : {
                            "description" : "The routing number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the transfer was declined.",
                            "enum" : [ "account_number_canceled", "account_number_disabled", "group_locked", "entity_not_active", "real_time_payments_not_enabled" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "Your account is inactive.", "The account's entity is not active.", "Your account is not enabled to receive Real Time Payments transfers." ]
                          },
                          "remittance_information" : {
                            "description" : "Additional information included with the transfer.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transaction_identification" : {
                            "description" : "The Real Time Payments network identification of the declined transfer.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "reason", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                        "title" : "Inbound Real Time Payments Transfer Decline",
                        "type" : "object",
                        "x-title-plural" : "Inbound Real Time Payments Transfer Declines"
                      },
                      "international_ach_decline" : {
                        "description" : "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "destination_country_code" : "US",
                          "destination_currency_code" : "USD",
                          "foreign_exchange_indicator" : "fixed_to_fixed",
                          "foreign_exchange_reference_indicator" : "blank",
                          "foreign_payment_amount" : 199,
                          "international_transaction_type_code" : "internet_initiated",
                          "originating_currency_code" : "USD",
                          "originating_depository_financial_institution_branch_country" : "US",
                          "originating_depository_financial_institution_id" : "091000019",
                          "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                          "originator_city" : "BERLIN",
                          "originator_company_entry_description" : "RETRY PYMT",
                          "originator_country" : "DE",
                          "originator_identification" : "770510487A",
                          "originator_name" : "BERGHAIN",
                          "originator_postal_code" : "50825",
                          "originator_street_address" : "Ruedersdorferstr. 7",
                          "receiver_city" : "BEVERLY HILLS",
                          "receiver_country" : "US",
                          "receiver_identification_number" : "1018790279274",
                          "receiver_postal_code" : "90210",
                          "receiver_state_or_province" : "CA",
                          "receiver_street_address" : "123 FAKE ST",
                          "receiving_company_or_individual_name" : "IAN CREASE",
                          "receiving_depository_financial_institution_country" : "US",
                          "receiving_depository_financial_institution_id" : "101050001",
                          "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                          "trace_number" : "010202909100090"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "destination_country_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "destination_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "foreign_exchange_reference_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_payment_amount" : {
                            "description" : "",
                            "type" : "integer"
                          },
                          "foreign_trace_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "international_transaction_type_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_branch_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_identification" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "payment_related_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "payment_related_information2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_identification_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_company_or_individual_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                        "title" : "International ACH Decline",
                        "type" : "object",
                        "x-title-plural" : "International ACH Declines"
                      }
                    },
                    "required" : [ "category", "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline" ],
                    "title" : "Declined Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Declined Transaction Sources"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `declined_transaction`.",
                    "enum" : [ "declined_transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
                "title" : "Declined Transaction",
                "type" : "object",
                "x-title-plural" : "Declined Transactions"
              },
              "transaction" : {
                "description" : "If the ACH Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_ach_transfer`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 100,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "transaction_uyrp7fld2ium70oa7oi",
                  "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                  "route_type" : "account_number",
                  "source" : {
                    "category" : "inbound_ach_transfer",
                    "inbound_ach_transfer" : {
                      "amount" : 100,
                      "originator_company_entry_description" : "RESERVE",
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    }
                  },
                  "type" : "transaction"
                },
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the Account the Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                    "example" : {
                      "category" : "inbound_ach_transfer",
                      "inbound_ach_transfer" : {
                        "amount" : 100,
                        "originator_company_entry_description" : "RESERVE",
                        "originator_company_id" : "0987654321",
                        "originator_company_name" : "BIG BANK",
                        "receiver_id_number" : "12345678900",
                        "receiver_name" : "IAN CREASE",
                        "trace_number" : "021000038461022"
                      }
                    },
                    "properties" : {
                      "account_transfer_intention" : {
                        "description" : "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "description" : "Frederick S. Holmes",
                          "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                          "source_account_id" : "account_in71c4amph0vgo2qllky",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "description" : {
                            "description" : "The description you chose to give the transfer.",
                            "type" : "string"
                          },
                          "destination_account_id" : {
                            "description" : "The identifier of the Account to where the Account Transfer was sent.",
                            "type" : "string"
                          },
                          "source_account_id" : {
                            "description" : "The identifier of the Account from where the Account Transfer was sent.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "description", "destination_account_id", "source_account_id", "transfer_id" ],
                        "title" : "Account Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Account Transfer Intentions"
                      },
                      "ach_check_conversion" : {
                        "description" : "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                        "example" : {
                          "amount" : 100,
                          "file_id" : "file_makxrc67oh9l6sg7w9yc"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "file_id" : {
                            "description" : "The identifier of the File containing an image of the returned check.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "file_id" ],
                        "title" : "ACH Check Conversion",
                        "type" : "object",
                        "x-title-plural" : "ACH Check Conversions"
                      },
                      "ach_check_conversion_return" : {
                        "description" : "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                        "example" : {
                          "amount" : 100,
                          "return_reason_code" : ""
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "return_reason_code" : {
                            "description" : "Why the transfer was returned.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "return_reason_code" ],
                        "title" : "ACH Check Conversion Return",
                        "type" : "object",
                        "x-title-plural" : "ACH Check Conversion Returns"
                      },
                      "ach_transfer_intention" : {
                        "description" : "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "routing_number" : "101050001",
                          "statement_descriptor" : "Frederick S. Holmes",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "statement_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "statement_descriptor", "transfer_id" ],
                        "title" : "ACH Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Intentions"
                      },
                      "ach_transfer_rejection" : {
                        "description" : "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "ACH Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Rejections"
                      },
                      "ach_transfer_return" : {
                        "description" : "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                        "example" : {
                          "created_at" : "2020-01-31T23:59:59Z",
                          "return_reason_code" : "insufficient_fund",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                        },
                        "nullable" : true,
                        "properties" : {
                          "created_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "return_reason_code" : {
                            "description" : "Why the ACH Transfer was returned.",
                            "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the Tranasaction associated with this return.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer associated with this return.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                        "title" : "ACH Transfer Return",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Returns"
                      },
                      "card_dispute_acceptance" : {
                        "description" : "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                        "example" : {
                          "accepted_at" : "2020-01-31T23:59:59Z",
                          "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "accepted_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "card_dispute_id" : {
                            "description" : "The identifier of the Card Dispute that was accepted.",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                        "title" : "Card Dispute Acceptance",
                        "type" : "object",
                        "x-title-plural" : "Card Dispute Acceptances"
                      },
                      "card_refund" : {
                        "description" : "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                        "example" : {
                          "amount" : 100,
                          "card_settlement_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "currency" : "USD",
                          "type" : "card_refund"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "card_settlement_transaction_id" : {
                            "description" : "The identifier for the Transaction this refunds, if any.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `card_refund`.",
                            "enum" : [ "card_refund" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "card_settlement_transaction_id", "type" ],
                        "title" : "Card Refund",
                        "type" : "object",
                        "x-title-plural" : "Card Refunds"
                      },
                      "card_route_refund" : {
                        "description" : "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                        "example" : {
                          "amount" : 1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Refund",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Refunds"
                      },
                      "card_route_settlement" : {
                        "description" : "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                        "example" : {
                          "amount" : 1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Settlement",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Settlements"
                      },
                      "card_settlement" : {
                        "description" : "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "merchant_category_code" : "5734",
                          "merchant_city" : "New York",
                          "merchant_country" : "US",
                          "merchant_name" : "AMAZON.COM",
                          "merchant_state" : "NY",
                          "presentment_amount" : 100,
                          "presentment_currency" : "USD",
                          "type" : "card_settlement"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "pending_transaction_id" : {
                            "description" : "The identifier of the Pending Transaction associated with this Transaction.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "presentment_amount" : {
                            "description" : "The amount in the minor unit of the transaction's presentment currency.",
                            "type" : "integer"
                          },
                          "presentment_currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `card_settlement`.",
                            "enum" : [ "card_settlement" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "presentment_amount", "presentment_currency", "merchant_city", "merchant_country", "merchant_name", "merchant_category_code", "merchant_state", "pending_transaction_id", "type" ],
                        "title" : "Card Settlement",
                        "type" : "object",
                        "x-title-plural" : "Card Settlements"
                      },
                      "category" : {
                        "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_ach_transfer_return_intention", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_general_ledger_transaction", "internal_source", "card_route_refund", "card_route_settlement", "real_time_payments_transfer_acknowledgement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.", "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.", "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.", "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.", "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.", "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.", "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.", "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.", "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.", "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.", "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.", "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.", "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.", "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.", "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.", "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.", "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.", "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.", "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.", "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.", "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.", "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.", "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.", "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.", "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.", "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.", "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.", "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.", "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.", "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.", "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.", "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.", "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.", "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.", "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.", "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.", "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.", "The Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_deposit_acceptance" : {
                        "description" : "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "auxiliary_on_us" : "101",
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "routing_number" : "101050001"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "The account number printed on the check.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "auxiliary_on_us" : {
                            "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_deposit_id" : {
                            "description" : "The ID of the Check Deposit that was accepted.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "routing_number" : {
                            "description" : "The routing number printed on the check.",
                            "type" : "string"
                          },
                          "serial_number" : {
                            "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                        "title" : "Check Deposit Acceptance",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Acceptances"
                      },
                      "check_deposit_return" : {
                        "description" : "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                        "example" : {
                          "amount" : 100,
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "return_reason" : "insufficient_funds",
                          "returned_at" : "2020-01-31T23:59:59Z",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "check_deposit_id" : {
                            "description" : "The identifier of the Check Deposit that was returned.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "return_reason" : {
                            "description" : "",
                            "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                          },
                          "returned_at" : {
                            "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                        "title" : "Check Deposit Return",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Returns"
                      },
                      "check_transfer_intention" : {
                        "description" : "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                        "example" : {
                          "address_city" : "New York",
                          "address_line1" : "33 Liberty Street",
                          "address_state" : "NY",
                          "address_zip" : "10045",
                          "amount" : 1000,
                          "currency" : "USD",
                          "recipient_name" : "Ian Crease",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "address_city" : {
                            "description" : "The city of the check's destination.",
                            "type" : "string"
                          },
                          "address_line1" : {
                            "description" : "The street address of the check's destination.",
                            "type" : "string"
                          },
                          "address_line2" : {
                            "description" : "The second line of the address of the check's destination.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "address_state" : {
                            "description" : "The state of the check's destination.",
                            "type" : "string"
                          },
                          "address_zip" : {
                            "description" : "The postal code of the check's destination.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "recipient_name" : {
                            "description" : "The name that will be printed on the check.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer with which this is associated.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "address_line1", "address_line2", "address_city", "address_state", "address_zip", "amount", "currency", "recipient_name", "transfer_id" ],
                        "title" : "Check Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Intentions"
                      },
                      "check_transfer_rejection" : {
                        "description" : "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer that led to this Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Check Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Rejections"
                      },
                      "check_transfer_return" : {
                        "description" : "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                        "example" : {
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "file_id" : {
                            "description" : "If available, a document with additional information about the return.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the returned Check Transfer.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id", "file_id" ],
                        "title" : "Check Transfer Return",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Returns"
                      },
                      "check_transfer_stop_payment_request" : {
                        "description" : "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                        "example" : {
                          "requested_at" : "2020-01-31T23:59:59Z",
                          "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                          "type" : "check_transfer_stop_payment_request"
                        },
                        "nullable" : true,
                        "properties" : {
                          "requested_at" : {
                            "description" : "The time the stop-payment was requested.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "transaction_id" : {
                            "description" : "The transaction ID of the corresponding credit transaction.",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "The ID of the check transfer that was stopped.",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                            "enum" : [ "check_transfer_stop_payment_request" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                        "title" : "Check Transfer Stop Payment Request",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Stop Payment Requests"
                      },
                      "dispute_resolution" : {
                        "description" : "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "disputed_transaction_id" : {
                            "description" : "The identifier of the Transaction that was disputed.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "disputed_transaction_id" ],
                        "title" : "Dispute Resolution",
                        "type" : "object",
                        "x-title-plural" : "Dispute Resolutions"
                      },
                      "empyreal_cash_deposit" : {
                        "description" : "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                        "example" : {
                          "amount" : 100,
                          "bag_id" : "12345",
                          "deposit_date" : "2020-01-31T23:59:59Z"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "bag_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "deposit_date" : {
                            "description" : "",
                            "format" : "date-time",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "bag_id", "deposit_date" ],
                        "title" : "Empyreal Cash Deposit",
                        "type" : "object",
                        "x-title-plural" : "Empyreal Cash Deposits"
                      },
                      "inbound_ach_transfer" : {
                        "description" : "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                        "example" : {
                          "amount" : 100,
                          "originator_company_entry_description" : "RESERVE",
                          "originator_company_id" : "0987654321",
                          "originator_company_name" : "BIG BANK",
                          "receiver_id_number" : "12345678900",
                          "receiver_name" : "IAN CREASE",
                          "trace_number" : "021000038461022"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "originator_company_descriptive_date" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_discretionary_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_id_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_entry_description", "originator_company_id", "receiver_id_number", "receiver_name", "trace_number" ],
                        "title" : "Inbound ACH Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound ACH Transfers"
                      },
                      "inbound_check" : {
                        "description" : "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                        "example" : {
                          "amount" : 100,
                          "check_front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                          "check_number" : "       00000123",
                          "check_rear_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                          "currency" : "USD"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "check_front_image_file_id" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_rear_image_file_id" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          }
                        },
                        "required" : [ "amount", "currency", "check_number", "check_front_image_file_id", "check_rear_image_file_id" ],
                        "title" : "Inbound Check",
                        "type" : "object",
                        "x-title-plural" : "Inbound Checks"
                      },
                      "inbound_international_ach_transfer" : {
                        "description" : "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                        "example" : {
                          "amount" : -1000,
                          "destination_country_code" : "US",
                          "destination_currency_code" : "USD",
                          "foreign_exchange_indicator" : "fixed_to_fixed",
                          "foreign_exchange_reference_indicator" : "blank",
                          "foreign_payment_amount" : 199,
                          "international_transaction_type_code" : "internet_initiated",
                          "originating_currency_code" : "USD",
                          "originating_depository_financial_institution_branch_country" : "US",
                          "originating_depository_financial_institution_id" : "091000019",
                          "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                          "originator_city" : "BERLIN",
                          "originator_company_entry_description" : "RETRY PYMT",
                          "originator_country" : "DE",
                          "originator_identification" : "770510487A",
                          "originator_name" : "BERGHAIN",
                          "originator_postal_code" : "50825",
                          "originator_street_address" : "Ruedersdorferstr. 7",
                          "receiver_city" : "BEVERLY HILLS",
                          "receiver_country" : "US",
                          "receiver_identification_number" : "1018790279274",
                          "receiver_postal_code" : "90210",
                          "receiver_state_or_province" : "CA",
                          "receiver_street_address" : "123 FAKE ST",
                          "receiving_company_or_individual_name" : "IAN CREASE",
                          "receiving_depository_financial_institution_country" : "US",
                          "receiving_depository_financial_institution_id" : "101050001",
                          "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                          "trace_number" : "010202909100090"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "destination_country_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "destination_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "foreign_exchange_reference_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_payment_amount" : {
                            "description" : "",
                            "type" : "integer"
                          },
                          "foreign_trace_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "international_transaction_type_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_branch_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_identification" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "payment_related_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "payment_related_information2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_identification_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_company_or_individual_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                        "title" : "Inbound International ACH Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound International ACH Transfers"
                      },
                      "inbound_real_time_payments_transfer_confirmation" : {
                        "description" : "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                        "example" : {
                          "amount" : 100,
                          "creditor_name" : "Ian Crease",
                          "currency" : "USD",
                          "debtor_account_number" : "987654321",
                          "debtor_name" : "National Phonograph Company",
                          "debtor_routing_number" : "101050001",
                          "remittance_information" : "Invoice 29582",
                          "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "creditor_name" : {
                            "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "debtor_account_number" : {
                            "description" : "The account number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "debtor_name" : {
                            "description" : "The name provided by the sender of the transfer.",
                            "type" : "string"
                          },
                          "debtor_routing_number" : {
                            "description" : "The routing number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "remittance_information" : {
                            "description" : "Additional information included with the transfer.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transaction_identification" : {
                            "description" : "The Real Time Payments network identification of the transfer",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                        "title" : "Inbound Real Time Payments Transfer Confirmation",
                        "type" : "object",
                        "x-title-plural" : "Inbound Real Time Payments Transfer Confirmations"
                      },
                      "inbound_wire_drawdown_payment" : {
                        "description" : "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                        "example" : {
                          "amount" : 100,
                          "description" : "Inbound wire drawdown payment"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "beneficiary_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information" ],
                        "title" : "Inbound Wire Drawdown Payment",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Drawdown Payments"
                      },
                      "inbound_wire_drawdown_payment_reversal" : {
                        "description" : "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                        "example" : {
                          "amount" : 12345,
                          "description" : "Inbound wire reversal 2022021100335128",
                          "input_cycle_date" : "2022-02-11",
                          "input_message_accountability_data" : "20220211B6B7HU2R011023",
                          "input_sequence_number" : "11023",
                          "input_source" : "B6B7HU2R",
                          "previous_message_input_cycle_date" : "2022-02-10",
                          "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                          "previous_message_input_sequence_number" : "3",
                          "previous_message_input_source" : "MMQFMP0P"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount that was reversed.",
                            "type" : "integer"
                          },
                          "description" : {
                            "description" : "The description on the reversal message from Fedwire.",
                            "type" : "string"
                          },
                          "input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire reversal.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier.",
                            "type" : "string"
                          },
                          "input_sequence_number" : {
                            "description" : "The Fedwire sequence number.",
                            "type" : "string"
                          },
                          "input_source" : {
                            "description" : "The Fedwire input source identifier.",
                            "type" : "string"
                          },
                          "previous_message_input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "previous_message_input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_sequence_number" : {
                            "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_source" : {
                            "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source" ],
                        "title" : "Inbound Wire Drawdown Payment Reversal",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Drawdown Payment Reversals"
                      },
                      "inbound_wire_reversal" : {
                        "description" : "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                        "example" : {
                          "amount" : 12345,
                          "description" : "Inbound wire reversal 2022021100335128",
                          "input_cycle_date" : "2022-02-11",
                          "input_message_accountability_data" : "20220211B6B7HU2R011023",
                          "input_sequence_number" : "11023",
                          "input_source" : "B6B7HU2R",
                          "previous_message_input_cycle_date" : "2022-02-10",
                          "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                          "previous_message_input_sequence_number" : "3",
                          "previous_message_input_source" : "MMQFMP0P"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount that was reversed.",
                            "type" : "integer"
                          },
                          "description" : {
                            "description" : "The description on the reversal message from Fedwire.",
                            "type" : "string"
                          },
                          "financial_institution_to_financial_institution_information" : {
                            "description" : "Additional financial institution information included in the wire reversal.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire reversal.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier.",
                            "type" : "string"
                          },
                          "input_sequence_number" : {
                            "description" : "The Fedwire sequence number.",
                            "type" : "string"
                          },
                          "input_source" : {
                            "description" : "The Fedwire input source identifier.",
                            "type" : "string"
                          },
                          "previous_message_input_cycle_date" : {
                            "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                            "format" : "date",
                            "type" : "string"
                          },
                          "previous_message_input_message_accountability_data" : {
                            "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_sequence_number" : {
                            "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "previous_message_input_source" : {
                            "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                            "type" : "string"
                          },
                          "receiver_financial_institution_information" : {
                            "description" : "Information included in the wire reversal for the receiving financial institution.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                        "title" : "Inbound Wire Reversal",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Reversals"
                      },
                      "inbound_wire_transfer" : {
                        "description" : "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                        "example" : {
                          "amount" : 100,
                          "description" : "Inbound wire transfer"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "beneficiary_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "beneficiary_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "input_message_accountability_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_address_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line1" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line3" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_to_beneficiary_information_line4" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_to_beneficiary_information" ],
                        "title" : "Inbound Wire Transfer",
                        "type" : "object",
                        "x-title-plural" : "Inbound Wire Transfers"
                      },
                      "interest_payment" : {
                        "description" : "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                        "example" : {
                          "accrued_on_account_id" : "account_in71c4amph0vgo2qllky",
                          "amount" : 100,
                          "currency" : "USD",
                          "period_end" : "2023-03-31T23:59:59Z",
                          "period_start" : "2023-03-01T00:00:00Z"
                        },
                        "nullable" : true,
                        "properties" : {
                          "accrued_on_account_id" : {
                            "description" : "The account on which the interest was accrued.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "period_end" : {
                            "description" : "The end of the period for which this transaction paid interest.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "period_start" : {
                            "description" : "The start of the period for which this transaction paid interest.",
                            "format" : "date-time",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "period_start", "period_end", "accrued_on_account_id" ],
                        "title" : "Interest Payment",
                        "type" : "object",
                        "x-title-plural" : "Interest Payments"
                      },
                      "internal_source" : {
                        "description" : "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "reason" : "sample_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "reason" : {
                            "description" : "",
                            "enum" : [ "bank_migration", "cashback", "empyreal_adjustment", "error", "error_correction", "fees", "interest", "sample_funds", "sample_funds_return" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Bank Migration", "Cashback", "Empyreal adjustment", "Error", "Error correction", "Fees", "Interest", "Sample funds", "Sample funds return" ]
                          }
                        },
                        "required" : [ "amount", "currency", "reason" ],
                        "title" : "Internal Source",
                        "type" : "object",
                        "x-title-plural" : "Internal Sources"
                      },
                      "sample_funds" : {
                        "description" : "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                        "example" : {
                          "originator" : "dashboard"
                        },
                        "nullable" : true,
                        "properties" : {
                          "originator" : {
                            "description" : "Where the sample funds came from.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "originator" ],
                        "title" : "Sample Funds",
                        "type" : "object",
                        "x-title-plural" : "Sample Fundss"
                      },
                      "wire_drawdown_payment_intention" : {
                        "description" : "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Drawdown Payment Intention",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Intentions"
                      },
                      "wire_drawdown_payment_rejection" : {
                        "description" : "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                        "example" : {
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Wire Drawdown Payment Rejection",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Rejections"
                      },
                      "wire_transfer_intention" : {
                        "description" : "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "The destination account number.",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The transfer amount in USD cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "The message that will show on the recipient's bank statement.",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Transfer Intention",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Intentions"
                      },
                      "wire_transfer_rejection" : {
                        "description" : "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                        "example" : {
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "transfer_id" ],
                        "title" : "Wire Transfer Rejection",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Rejections"
                      }
                    },
                    "required" : [ "category", "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_source", "card_route_refund", "card_route_settlement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection" ],
                    "title" : "Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Transaction Sources"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `transaction`.",
                    "enum" : [ "transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
                "title" : "Transaction",
                "type" : "object",
                "x-title-plural" : "Transactions"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_simulation_result`.",
                "enum" : [ "inbound_ach_transfer_simulation_result" ],
                "type" : "string"
              }
            },
            "required" : [ "transaction", "declined_transaction", "type" ],
            "title" : "Inbound ACH Transfer Simulation Result",
            "type" : "object",
            "x-title-plural" : "Inbound ACH Transfer Simulation Results"
          }
        }
      }
    }
  }, {
    "id" : "668f4a9a-47af-41b1-ab0a-2a89707202b5",
    "name" : "Simulate a tax document being created",
    "request" : {
      "urlPath" : "/simulations/documents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"category\" : \"form_1099_int\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"document_qjtqc6s4c14ve2q89izm\",\n  \"type\" : \"document\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "668f4a9a-47af-41b1-ab0a-2a89707202b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.587734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_a_tax_document_being_created",
          "schema" : {
            "description" : "Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT.",
            "example" : {
              "category" : "form_1099_int",
              "created_at" : "2020-01-31T23:59:59Z",
              "entity_id" : "entity_n8y8tnk2p9339ti393yi",
              "file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "document_qjtqc6s4c14ve2q89izm",
              "type" : "document"
            },
            "properties" : {
              "category" : {
                "description" : "The type of document.",
                "enum" : [ "form_1099_int" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Internal Revenue Service Form 1099-INT." ]
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Document was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "entity_id" : {
                "description" : "The identifier of the Entity the document was generated for.",
                "nullable" : true,
                "type" : "string"
              },
              "file_id" : {
                "description" : "The identifier of the File containing the Document's contents.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Document identifier.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `document`.",
                "enum" : [ "document" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "category", "created_at", "entity_id", "file_id", "type" ],
            "title" : "Document",
            "type" : "object",
            "x-tag" : "Documents",
            "x-title-plural" : "Documents"
          }
        }
      }
    }
  }, {
    "id" : "b5490fd9-dccb-46f8-aefa-0d65501fd792",
    "name" : "Simulate digital wallet provisioning for a card",
    "request" : {
      "urlPath" : "/simulations/digital_wallet_token_requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"decline_reason\" : null,\n  \"digital_wallet_token_id\" : \"digital_wallet_token_izi62go3h51p369jrie0\",\n  \"type\" : \"inbound_digital_wallet_token_request_simulation_result\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5490fd9-dccb-46f8-aefa-0d65501fd792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.587649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_digital_wallet_provisioning_for_a_card",
          "schema" : {
            "description" : "The results of a Digital Wallet Token simulation.",
            "example" : {
              "digital_wallet_token_id" : "digital_wallet_token_izi62go3h51p369jrie0",
              "type" : "inbound_digital_wallet_token_request_simulation_result"
            },
            "properties" : {
              "decline_reason" : {
                "description" : "If the simulated tokenization attempt was declined, this field contains details as to why.",
                "enum" : [ "card_not_active", "no_verification_method", "webhook_timed_out", "webhook_declined" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "The card is not active.", "The card does not have a two-factor authentication method.", "Your webhook timed out when evaluating the token provisioning attempt.", "Your webhook declined the token provisioning attempt." ]
              },
              "digital_wallet_token_id" : {
                "description" : "If the simulated tokenization attempt was accepted, this field contains the id of the Digital Wallet Token that was created.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_digital_wallet_token_request_simulation_result`.",
                "enum" : [ "inbound_digital_wallet_token_request_simulation_result" ],
                "type" : "string"
              }
            },
            "required" : [ "decline_reason", "digital_wallet_token_id", "type" ],
            "title" : "Inbound Digital Wallet Token Request Simulation Result",
            "type" : "object",
            "x-title-plural" : "Inbound Digital Wallet Token Request Simulation Results"
          }
        }
      }
    }
  }, {
    "id" : "f58f7062-20de-46e7-8235-77b3e5f237d7",
    "name" : "Mail a Sandbox Check Transfer",
    "request" : {
      "urlPath" : "/simulations/check_transfers/856v/mail",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f58f7062-20de-46e7-8235-77b3e5f237d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.587545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mail_a_sandbox_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "dd56adea-558f-498d-a02e-71842cd301e0",
    "name" : "Deposit a Sandbox Check Transfer",
    "request" : {
      "urlPath" : "/simulations/check_transfers/c23o/deposit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd56adea-558f-498d-a02e-71842cd301e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.587203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deposit_a_sandbox_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "03758f93-c2bf-4b40-bd3b-1e6e1b9111e6",
    "name" : "Submit a Sandbox Check Deposit",
    "request" : {
      "urlPath" : "/simulations/check_deposits/9b7t/submit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 1000,\n  \"back_image_file_id\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit_acceptance\" : null,\n  \"deposit_rejection\" : null,\n  \"deposit_return\" : null,\n  \"front_image_file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"check_deposit_f06n9gpg7sxn8t19lfc1\",\n  \"status\" : \"submitted\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_deposit\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03758f93-c2bf-4b40-bd3b-1e6e1b9111e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.586799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submit_a_sandbox_check_deposit",
          "schema" : {
            "description" : "Check Deposits allow you to deposit images of paper checks into your account.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
              "status" : "submitted",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_deposit"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account the check was deposited into.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "back_image_file_id" : {
                "description" : "The ID for the File containing the image of the back of the check.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit_acceptance" : {
                "description" : "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
                "example" : {
                  "account_number" : "987654321",
                  "amount" : 100,
                  "auxiliary_on_us" : "101",
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "routing_number" : "101050001"
                },
                "nullable" : true,
                "properties" : {
                  "account_number" : {
                    "description" : "The account number printed on the check.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "auxiliary_on_us" : {
                    "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "check_deposit_id" : {
                    "description" : "The ID of the Check Deposit that was accepted.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "routing_number" : {
                    "description" : "The routing number printed on the check.",
                    "type" : "string"
                  },
                  "serial_number" : {
                    "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                "title" : "Check Deposit Acceptance",
                "type" : "object",
                "x-title-plural" : "Check Deposit Acceptances"
              },
              "deposit_rejection" : {
                "description" : "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
                "example" : {
                  "amount" : 1750,
                  "currency" : "USD",
                  "reason" : "incomplete_image",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "reason" : {
                    "description" : "Why the check deposit was rejected.",
                    "enum" : [ "incomplete_image", "duplicate", "poor_image_quality", "incorrect_amount", "incorrect_recipient", "not_eligible_for_mobile_deposit", "unknown" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check's image is incomplete.", "This is a duplicate check submission.", "This check has poor image quality.", "The check was deposited with the incorrect amount.", "The check is made out to someone other than the account holder.", "This check was not eligible for mobile deposit.", "The check was rejected for an unknown reason." ]
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "reason", "rejected_at" ],
                "title" : "Check Deposit Rejection",
                "type" : "object",
                "x-title-plural" : "Check Deposit Rejections"
              },
              "deposit_return" : {
                "description" : "If your deposit is returned, this will contain details as to why it was returned.",
                "example" : {
                  "amount" : 100,
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "return_reason" : "insufficient_funds",
                  "returned_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "check_deposit_id" : {
                    "description" : "The identifier of the Check Deposit that was returned.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "return_reason" : {
                    "description" : "",
                    "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                  },
                  "returned_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                "title" : "Check Deposit Return",
                "type" : "object",
                "x-title-plural" : "Check Deposit Returns"
              },
              "front_image_file_id" : {
                "description" : "The ID for the File containing the image of the front of the check.",
                "type" : "string"
              },
              "id" : {
                "description" : "The deposit's identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Check Deposit.",
                "enum" : [ "pending", "submitted", "rejected", "returned" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Check Deposit is pending review.", "The Check Deposit has been deposited.", "The Check Deposit has been rejected.", "The Check Deposit has been returned." ]
              },
              "transaction_id" : {
                "description" : "The ID for the Transaction created by the deposit.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_deposit`.",
                "enum" : [ "check_deposit" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "created_at", "currency", "status", "account_id", "front_image_file_id", "back_image_file_id", "transaction_id", "deposit_acceptance", "deposit_rejection", "deposit_return", "type" ],
            "title" : "Check Deposit",
            "type" : "object",
            "x-tag" : "Check Deposits",
            "x-title-plural" : "Check Deposits"
          }
        }
      }
    }
  }, {
    "id" : "9733277f-f1f9-488f-975a-a78b7b199e3a",
    "name" : "Return a Sandbox Check Deposit",
    "request" : {
      "urlPath" : "/simulations/check_deposits/z634/return",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 1000,\n  \"back_image_file_id\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit_acceptance\" : null,\n  \"deposit_rejection\" : null,\n  \"deposit_return\" : null,\n  \"front_image_file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"check_deposit_f06n9gpg7sxn8t19lfc1\",\n  \"status\" : \"submitted\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_deposit\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9733277f-f1f9-488f-975a-a78b7b199e3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.586475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "return_a_sandbox_check_deposit",
          "schema" : {
            "description" : "Check Deposits allow you to deposit images of paper checks into your account.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
              "status" : "submitted",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_deposit"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account the check was deposited into.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "back_image_file_id" : {
                "description" : "The ID for the File containing the image of the back of the check.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit_acceptance" : {
                "description" : "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
                "example" : {
                  "account_number" : "987654321",
                  "amount" : 100,
                  "auxiliary_on_us" : "101",
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "routing_number" : "101050001"
                },
                "nullable" : true,
                "properties" : {
                  "account_number" : {
                    "description" : "The account number printed on the check.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "auxiliary_on_us" : {
                    "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "check_deposit_id" : {
                    "description" : "The ID of the Check Deposit that was accepted.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "routing_number" : {
                    "description" : "The routing number printed on the check.",
                    "type" : "string"
                  },
                  "serial_number" : {
                    "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                "title" : "Check Deposit Acceptance",
                "type" : "object",
                "x-title-plural" : "Check Deposit Acceptances"
              },
              "deposit_rejection" : {
                "description" : "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
                "example" : {
                  "amount" : 1750,
                  "currency" : "USD",
                  "reason" : "incomplete_image",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "reason" : {
                    "description" : "Why the check deposit was rejected.",
                    "enum" : [ "incomplete_image", "duplicate", "poor_image_quality", "incorrect_amount", "incorrect_recipient", "not_eligible_for_mobile_deposit", "unknown" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check's image is incomplete.", "This is a duplicate check submission.", "This check has poor image quality.", "The check was deposited with the incorrect amount.", "The check is made out to someone other than the account holder.", "This check was not eligible for mobile deposit.", "The check was rejected for an unknown reason." ]
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "reason", "rejected_at" ],
                "title" : "Check Deposit Rejection",
                "type" : "object",
                "x-title-plural" : "Check Deposit Rejections"
              },
              "deposit_return" : {
                "description" : "If your deposit is returned, this will contain details as to why it was returned.",
                "example" : {
                  "amount" : 100,
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "return_reason" : "insufficient_funds",
                  "returned_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "check_deposit_id" : {
                    "description" : "The identifier of the Check Deposit that was returned.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "return_reason" : {
                    "description" : "",
                    "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                  },
                  "returned_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                "title" : "Check Deposit Return",
                "type" : "object",
                "x-title-plural" : "Check Deposit Returns"
              },
              "front_image_file_id" : {
                "description" : "The ID for the File containing the image of the front of the check.",
                "type" : "string"
              },
              "id" : {
                "description" : "The deposit's identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Check Deposit.",
                "enum" : [ "pending", "submitted", "rejected", "returned" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Check Deposit is pending review.", "The Check Deposit has been deposited.", "The Check Deposit has been rejected.", "The Check Deposit has been returned." ]
              },
              "transaction_id" : {
                "description" : "The ID for the Transaction created by the deposit.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_deposit`.",
                "enum" : [ "check_deposit" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "created_at", "currency", "status", "account_id", "front_image_file_id", "back_image_file_id", "transaction_id", "deposit_acceptance", "deposit_rejection", "deposit_return", "type" ],
            "title" : "Check Deposit",
            "type" : "object",
            "x-tag" : "Check Deposits",
            "x-title-plural" : "Check Deposits"
          }
        }
      }
    }
  }, {
    "id" : "6e4b10c2-6d86-4c21-b9ab-7a2dd007e240",
    "name" : "Reject a Sandbox Check Deposit",
    "request" : {
      "urlPath" : "/simulations/check_deposits/or04/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 1000,\n  \"back_image_file_id\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit_acceptance\" : null,\n  \"deposit_rejection\" : null,\n  \"deposit_return\" : null,\n  \"front_image_file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"check_deposit_f06n9gpg7sxn8t19lfc1\",\n  \"status\" : \"submitted\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_deposit\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e4b10c2-6d86-4c21-b9ab-7a2dd007e240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.586139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "reject_a_sandbox_check_deposit",
          "schema" : {
            "description" : "Check Deposits allow you to deposit images of paper checks into your account.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
              "status" : "submitted",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_deposit"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account the check was deposited into.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "back_image_file_id" : {
                "description" : "The ID for the File containing the image of the back of the check.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit_acceptance" : {
                "description" : "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
                "example" : {
                  "account_number" : "987654321",
                  "amount" : 100,
                  "auxiliary_on_us" : "101",
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "routing_number" : "101050001"
                },
                "nullable" : true,
                "properties" : {
                  "account_number" : {
                    "description" : "The account number printed on the check.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "auxiliary_on_us" : {
                    "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "check_deposit_id" : {
                    "description" : "The ID of the Check Deposit that was accepted.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "routing_number" : {
                    "description" : "The routing number printed on the check.",
                    "type" : "string"
                  },
                  "serial_number" : {
                    "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                "title" : "Check Deposit Acceptance",
                "type" : "object",
                "x-title-plural" : "Check Deposit Acceptances"
              },
              "deposit_rejection" : {
                "description" : "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
                "example" : {
                  "amount" : 1750,
                  "currency" : "USD",
                  "reason" : "incomplete_image",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "reason" : {
                    "description" : "Why the check deposit was rejected.",
                    "enum" : [ "incomplete_image", "duplicate", "poor_image_quality", "incorrect_amount", "incorrect_recipient", "not_eligible_for_mobile_deposit", "unknown" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check's image is incomplete.", "This is a duplicate check submission.", "This check has poor image quality.", "The check was deposited with the incorrect amount.", "The check is made out to someone other than the account holder.", "This check was not eligible for mobile deposit.", "The check was rejected for an unknown reason." ]
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "reason", "rejected_at" ],
                "title" : "Check Deposit Rejection",
                "type" : "object",
                "x-title-plural" : "Check Deposit Rejections"
              },
              "deposit_return" : {
                "description" : "If your deposit is returned, this will contain details as to why it was returned.",
                "example" : {
                  "amount" : 100,
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "return_reason" : "insufficient_funds",
                  "returned_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "check_deposit_id" : {
                    "description" : "The identifier of the Check Deposit that was returned.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "return_reason" : {
                    "description" : "",
                    "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                  },
                  "returned_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                "title" : "Check Deposit Return",
                "type" : "object",
                "x-title-plural" : "Check Deposit Returns"
              },
              "front_image_file_id" : {
                "description" : "The ID for the File containing the image of the front of the check.",
                "type" : "string"
              },
              "id" : {
                "description" : "The deposit's identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Check Deposit.",
                "enum" : [ "pending", "submitted", "rejected", "returned" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Check Deposit is pending review.", "The Check Deposit has been deposited.", "The Check Deposit has been rejected.", "The Check Deposit has been returned." ]
              },
              "transaction_id" : {
                "description" : "The ID for the Transaction created by the deposit.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_deposit`.",
                "enum" : [ "check_deposit" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "created_at", "currency", "status", "account_id", "front_image_file_id", "back_image_file_id", "transaction_id", "deposit_acceptance", "deposit_rejection", "deposit_return", "type" ],
            "title" : "Check Deposit",
            "type" : "object",
            "x-tag" : "Check Deposits",
            "x-title-plural" : "Check Deposits"
          }
        }
      }
    }
  }, {
    "id" : "00724561-45db-4fa4-b350-80561caf6203",
    "name" : "Simulate settling a card authorization",
    "request" : {
      "urlPath" : "/simulations/card_settlements",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Frederick S. Holmes\",\n  \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"route_type\" : \"account_number\",\n  \"source\" : {\n    \"category\" : \"inbound_ach_transfer\",\n    \"inbound_ach_transfer\" : {\n      \"amount\" : 100,\n      \"originator_company_descriptive_date\" : null,\n      \"originator_company_discretionary_data\" : null,\n      \"originator_company_entry_description\" : \"RESERVE\",\n      \"originator_company_id\" : \"0987654321\",\n      \"originator_company_name\" : \"BIG BANK\",\n      \"receiver_id_number\" : \"12345678900\",\n      \"receiver_name\" : \"IAN CREASE\",\n      \"trace_number\" : \"021000038461022\"\n    }\n  },\n  \"type\" : \"transaction\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00724561-45db-4fa4-b350-80561caf6203",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.585554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_settling_a_card_authorization",
          "schema" : {
            "description" : "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Frederick S. Holmes",
              "id" : "transaction_uyrp7fld2ium70oa7oi",
              "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "route_type" : "account_number",
              "source" : {
                "category" : "inbound_ach_transfer",
                "inbound_ach_transfer" : {
                  "amount" : 100,
                  "originator_company_entry_description" : "RESERVE",
                  "originator_company_id" : "0987654321",
                  "originator_company_name" : "BIG BANK",
                  "receiver_id_number" : "12345678900",
                  "receiver_name" : "IAN CREASE",
                  "trace_number" : "021000038461022"
                }
              },
              "type" : "transaction"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the Account the Transaction belongs to.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Transaction identifier.",
                "type" : "string"
              },
              "route_id" : {
                "description" : "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable" : true,
                "type" : "string"
              },
              "route_type" : {
                "description" : "The type of the route this Transaction came through.",
                "nullable" : true,
                "type" : "string"
              },
              "source" : {
                "description" : "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example" : {
                  "category" : "inbound_ach_transfer",
                  "inbound_ach_transfer" : {
                    "amount" : 100,
                    "originator_company_entry_description" : "RESERVE",
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  }
                },
                "properties" : {
                  "account_transfer_intention" : {
                    "description" : "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "description" : "Frederick S. Holmes",
                      "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                      "source_account_id" : "account_in71c4amph0vgo2qllky",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "description" : {
                        "description" : "The description you chose to give the transfer.",
                        "type" : "string"
                      },
                      "destination_account_id" : {
                        "description" : "The identifier of the Account to where the Account Transfer was sent.",
                        "type" : "string"
                      },
                      "source_account_id" : {
                        "description" : "The identifier of the Account from where the Account Transfer was sent.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "description", "destination_account_id", "source_account_id", "transfer_id" ],
                    "title" : "Account Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Account Transfer Intentions"
                  },
                  "ach_check_conversion" : {
                    "description" : "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                    "example" : {
                      "amount" : 100,
                      "file_id" : "file_makxrc67oh9l6sg7w9yc"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "file_id" : {
                        "description" : "The identifier of the File containing an image of the returned check.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "file_id" ],
                    "title" : "ACH Check Conversion",
                    "type" : "object",
                    "x-title-plural" : "ACH Check Conversions"
                  },
                  "ach_check_conversion_return" : {
                    "description" : "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                    "example" : {
                      "amount" : 100,
                      "return_reason_code" : ""
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "return_reason_code" : {
                        "description" : "Why the transfer was returned.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "return_reason_code" ],
                    "title" : "ACH Check Conversion Return",
                    "type" : "object",
                    "x-title-plural" : "ACH Check Conversion Returns"
                  },
                  "ach_transfer_intention" : {
                    "description" : "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "routing_number" : "101050001",
                      "statement_descriptor" : "Frederick S. Holmes",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "statement_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "statement_descriptor", "transfer_id" ],
                    "title" : "ACH Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection" : {
                    "description" : "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "ACH Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Rejections"
                  },
                  "ach_transfer_return" : {
                    "description" : "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example" : {
                      "created_at" : "2020-01-31T23:59:59Z",
                      "return_reason_code" : "insufficient_fund",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                    },
                    "nullable" : true,
                    "properties" : {
                      "created_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "return_reason_code" : {
                        "description" : "Why the ACH Transfer was returned.",
                        "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the Tranasaction associated with this return.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer associated with this return.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                    "title" : "ACH Transfer Return",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance" : {
                    "description" : "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example" : {
                      "accepted_at" : "2020-01-31T23:59:59Z",
                      "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "accepted_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "card_dispute_id" : {
                        "description" : "The identifier of the Card Dispute that was accepted.",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                    "title" : "Card Dispute Acceptance",
                    "type" : "object",
                    "x-title-plural" : "Card Dispute Acceptances"
                  },
                  "card_refund" : {
                    "description" : "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example" : {
                      "amount" : 100,
                      "card_settlement_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "currency" : "USD",
                      "type" : "card_refund"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "card_settlement_transaction_id" : {
                        "description" : "The identifier for the Transaction this refunds, if any.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `card_refund`.",
                        "enum" : [ "card_refund" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "card_settlement_transaction_id", "type" ],
                    "title" : "Card Refund",
                    "type" : "object",
                    "x-title-plural" : "Card Refunds"
                  },
                  "card_route_refund" : {
                    "description" : "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                    "example" : {
                      "amount" : 1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Refund",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Refunds"
                  },
                  "card_route_settlement" : {
                    "description" : "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                    "example" : {
                      "amount" : 1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Settlement",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Settlements"
                  },
                  "card_settlement" : {
                    "description" : "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "merchant_category_code" : "5734",
                      "merchant_city" : "New York",
                      "merchant_country" : "US",
                      "merchant_name" : "AMAZON.COM",
                      "merchant_state" : "NY",
                      "presentment_amount" : 100,
                      "presentment_currency" : "USD",
                      "type" : "card_settlement"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "pending_transaction_id" : {
                        "description" : "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "presentment_amount" : {
                        "description" : "The amount in the minor unit of the transaction's presentment currency.",
                        "type" : "integer"
                      },
                      "presentment_currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.",
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `card_settlement`.",
                        "enum" : [ "card_settlement" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "presentment_amount", "presentment_currency", "merchant_city", "merchant_country", "merchant_name", "merchant_category_code", "merchant_state", "pending_transaction_id", "type" ],
                    "title" : "Card Settlement",
                    "type" : "object",
                    "x-title-plural" : "Card Settlements"
                  },
                  "category" : {
                    "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "enum" : [ "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_ach_transfer_return_intention", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_general_ledger_transaction", "internal_source", "card_route_refund", "card_route_settlement", "real_time_payments_transfer_acknowledgement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.", "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.", "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.", "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.", "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.", "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.", "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.", "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.", "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.", "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.", "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.", "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.", "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.", "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.", "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.", "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.", "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.", "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.", "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.", "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.", "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.", "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.", "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.", "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.", "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.", "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.", "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.", "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.", "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.", "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.", "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.", "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.", "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.", "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.", "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.", "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.", "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.", "The Transaction was made for an undocumented or deprecated reason." ]
                  },
                  "check_deposit_acceptance" : {
                    "description" : "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "auxiliary_on_us" : "101",
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "routing_number" : "101050001"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "The account number printed on the check.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "auxiliary_on_us" : {
                        "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_deposit_id" : {
                        "description" : "The ID of the Check Deposit that was accepted.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "routing_number" : {
                        "description" : "The routing number printed on the check.",
                        "type" : "string"
                      },
                      "serial_number" : {
                        "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                    "title" : "Check Deposit Acceptance",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Acceptances"
                  },
                  "check_deposit_return" : {
                    "description" : "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example" : {
                      "amount" : 100,
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "return_reason" : "insufficient_funds",
                      "returned_at" : "2020-01-31T23:59:59Z",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "check_deposit_id" : {
                        "description" : "The identifier of the Check Deposit that was returned.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "return_reason" : {
                        "description" : "",
                        "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                      },
                      "returned_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                    "title" : "Check Deposit Return",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Returns"
                  },
                  "check_transfer_intention" : {
                    "description" : "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example" : {
                      "address_city" : "New York",
                      "address_line1" : "33 Liberty Street",
                      "address_state" : "NY",
                      "address_zip" : "10045",
                      "amount" : 1000,
                      "currency" : "USD",
                      "recipient_name" : "Ian Crease",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "address_city" : {
                        "description" : "The city of the check's destination.",
                        "type" : "string"
                      },
                      "address_line1" : {
                        "description" : "The street address of the check's destination.",
                        "type" : "string"
                      },
                      "address_line2" : {
                        "description" : "The second line of the address of the check's destination.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "address_state" : {
                        "description" : "The state of the check's destination.",
                        "type" : "string"
                      },
                      "address_zip" : {
                        "description" : "The postal code of the check's destination.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "recipient_name" : {
                        "description" : "The name that will be printed on the check.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer with which this is associated.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "address_line1", "address_line2", "address_city", "address_state", "address_zip", "amount", "currency", "recipient_name", "transfer_id" ],
                    "title" : "Check Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Intentions"
                  },
                  "check_transfer_rejection" : {
                    "description" : "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Check Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Rejections"
                  },
                  "check_transfer_return" : {
                    "description" : "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                    "example" : {
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "file_id" : {
                        "description" : "If available, a document with additional information about the return.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the returned Check Transfer.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id", "file_id" ],
                    "title" : "Check Transfer Return",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Returns"
                  },
                  "check_transfer_stop_payment_request" : {
                    "description" : "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example" : {
                      "requested_at" : "2020-01-31T23:59:59Z",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                      "type" : "check_transfer_stop_payment_request"
                    },
                    "nullable" : true,
                    "properties" : {
                      "requested_at" : {
                        "description" : "The time the stop-payment was requested.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The transaction ID of the corresponding credit transaction.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The ID of the check transfer that was stopped.",
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                        "enum" : [ "check_transfer_stop_payment_request" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                    "title" : "Check Transfer Stop Payment Request",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Stop Payment Requests"
                  },
                  "dispute_resolution" : {
                    "description" : "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "disputed_transaction_id" : {
                        "description" : "The identifier of the Transaction that was disputed.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "disputed_transaction_id" ],
                    "title" : "Dispute Resolution",
                    "type" : "object",
                    "x-title-plural" : "Dispute Resolutions"
                  },
                  "empyreal_cash_deposit" : {
                    "description" : "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                    "example" : {
                      "amount" : 100,
                      "bag_id" : "12345",
                      "deposit_date" : "2020-01-31T23:59:59Z"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "bag_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "deposit_date" : {
                        "description" : "",
                        "format" : "date-time",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "bag_id", "deposit_date" ],
                    "title" : "Empyreal Cash Deposit",
                    "type" : "object",
                    "x-title-plural" : "Empyreal Cash Deposits"
                  },
                  "inbound_ach_transfer" : {
                    "description" : "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example" : {
                      "amount" : 100,
                      "originator_company_entry_description" : "RESERVE",
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "originator_company_descriptive_date" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_discretionary_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_id_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_entry_description", "originator_company_id", "receiver_id_number", "receiver_name", "trace_number" ],
                    "title" : "Inbound ACH Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound ACH Transfers"
                  },
                  "inbound_check" : {
                    "description" : "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example" : {
                      "amount" : 100,
                      "check_front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                      "check_number" : "       00000123",
                      "check_rear_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                      "currency" : "USD"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "check_front_image_file_id" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_rear_image_file_id" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      }
                    },
                    "required" : [ "amount", "currency", "check_number", "check_front_image_file_id", "check_rear_image_file_id" ],
                    "title" : "Inbound Check",
                    "type" : "object",
                    "x-title-plural" : "Inbound Checks"
                  },
                  "inbound_international_ach_transfer" : {
                    "description" : "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example" : {
                      "amount" : -1000,
                      "destination_country_code" : "US",
                      "destination_currency_code" : "USD",
                      "foreign_exchange_indicator" : "fixed_to_fixed",
                      "foreign_exchange_reference_indicator" : "blank",
                      "foreign_payment_amount" : 199,
                      "international_transaction_type_code" : "internet_initiated",
                      "originating_currency_code" : "USD",
                      "originating_depository_financial_institution_branch_country" : "US",
                      "originating_depository_financial_institution_id" : "091000019",
                      "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                      "originator_city" : "BERLIN",
                      "originator_company_entry_description" : "RETRY PYMT",
                      "originator_country" : "DE",
                      "originator_identification" : "770510487A",
                      "originator_name" : "BERGHAIN",
                      "originator_postal_code" : "50825",
                      "originator_street_address" : "Ruedersdorferstr. 7",
                      "receiver_city" : "BEVERLY HILLS",
                      "receiver_country" : "US",
                      "receiver_identification_number" : "1018790279274",
                      "receiver_postal_code" : "90210",
                      "receiver_state_or_province" : "CA",
                      "receiver_street_address" : "123 FAKE ST",
                      "receiving_company_or_individual_name" : "IAN CREASE",
                      "receiving_depository_financial_institution_country" : "US",
                      "receiving_depository_financial_institution_id" : "101050001",
                      "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "trace_number" : "010202909100090"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "destination_country_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "destination_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "foreign_exchange_reference_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_payment_amount" : {
                        "description" : "",
                        "type" : "integer"
                      },
                      "foreign_trace_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "international_transaction_type_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_branch_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_identification" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "payment_related_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "payment_related_information2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_identification_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_company_or_individual_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                    "title" : "Inbound International ACH Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation" : {
                    "description" : "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example" : {
                      "amount" : 100,
                      "creditor_name" : "Ian Crease",
                      "currency" : "USD",
                      "debtor_account_number" : "987654321",
                      "debtor_name" : "National Phonograph Company",
                      "debtor_routing_number" : "101050001",
                      "remittance_information" : "Invoice 29582",
                      "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "creditor_name" : {
                        "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "debtor_account_number" : {
                        "description" : "The account number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "debtor_name" : {
                        "description" : "The name provided by the sender of the transfer.",
                        "type" : "string"
                      },
                      "debtor_routing_number" : {
                        "description" : "The routing number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "remittance_information" : {
                        "description" : "Additional information included with the transfer.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transaction_identification" : {
                        "description" : "The Real Time Payments network identification of the transfer",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                    "title" : "Inbound Real Time Payments Transfer Confirmation",
                    "type" : "object",
                    "x-title-plural" : "Inbound Real Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment" : {
                    "description" : "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example" : {
                      "amount" : 100,
                      "description" : "Inbound wire drawdown payment"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "beneficiary_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information" ],
                    "title" : "Inbound Wire Drawdown Payment",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_drawdown_payment_reversal" : {
                    "description" : "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example" : {
                      "amount" : 12345,
                      "description" : "Inbound wire reversal 2022021100335128",
                      "input_cycle_date" : "2022-02-11",
                      "input_message_accountability_data" : "20220211B6B7HU2R011023",
                      "input_sequence_number" : "11023",
                      "input_source" : "B6B7HU2R",
                      "previous_message_input_cycle_date" : "2022-02-10",
                      "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                      "previous_message_input_sequence_number" : "3",
                      "previous_message_input_source" : "MMQFMP0P"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount that was reversed.",
                        "type" : "integer"
                      },
                      "description" : {
                        "description" : "The description on the reversal message from Fedwire.",
                        "type" : "string"
                      },
                      "input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire reversal.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier.",
                        "type" : "string"
                      },
                      "input_sequence_number" : {
                        "description" : "The Fedwire sequence number.",
                        "type" : "string"
                      },
                      "input_source" : {
                        "description" : "The Fedwire input source identifier.",
                        "type" : "string"
                      },
                      "previous_message_input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "previous_message_input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_sequence_number" : {
                        "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_source" : {
                        "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source" ],
                    "title" : "Inbound Wire Drawdown Payment Reversal",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_reversal" : {
                    "description" : "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example" : {
                      "amount" : 12345,
                      "description" : "Inbound wire reversal 2022021100335128",
                      "input_cycle_date" : "2022-02-11",
                      "input_message_accountability_data" : "20220211B6B7HU2R011023",
                      "input_sequence_number" : "11023",
                      "input_source" : "B6B7HU2R",
                      "previous_message_input_cycle_date" : "2022-02-10",
                      "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                      "previous_message_input_sequence_number" : "3",
                      "previous_message_input_source" : "MMQFMP0P"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount that was reversed.",
                        "type" : "integer"
                      },
                      "description" : {
                        "description" : "The description on the reversal message from Fedwire.",
                        "type" : "string"
                      },
                      "financial_institution_to_financial_institution_information" : {
                        "description" : "Additional financial institution information included in the wire reversal.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire reversal.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier.",
                        "type" : "string"
                      },
                      "input_sequence_number" : {
                        "description" : "The Fedwire sequence number.",
                        "type" : "string"
                      },
                      "input_source" : {
                        "description" : "The Fedwire input source identifier.",
                        "type" : "string"
                      },
                      "previous_message_input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "previous_message_input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_sequence_number" : {
                        "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_source" : {
                        "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "receiver_financial_institution_information" : {
                        "description" : "Information included in the wire reversal for the receiving financial institution.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                    "title" : "Inbound Wire Reversal",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer" : {
                    "description" : "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example" : {
                      "amount" : 100,
                      "description" : "Inbound wire transfer"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "beneficiary_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line4" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_to_beneficiary_information" ],
                    "title" : "Inbound Wire Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Transfers"
                  },
                  "interest_payment" : {
                    "description" : "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example" : {
                      "accrued_on_account_id" : "account_in71c4amph0vgo2qllky",
                      "amount" : 100,
                      "currency" : "USD",
                      "period_end" : "2023-03-31T23:59:59Z",
                      "period_start" : "2023-03-01T00:00:00Z"
                    },
                    "nullable" : true,
                    "properties" : {
                      "accrued_on_account_id" : {
                        "description" : "The account on which the interest was accrued.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "period_end" : {
                        "description" : "The end of the period for which this transaction paid interest.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "period_start" : {
                        "description" : "The start of the period for which this transaction paid interest.",
                        "format" : "date-time",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "period_start", "period_end", "accrued_on_account_id" ],
                    "title" : "Interest Payment",
                    "type" : "object",
                    "x-title-plural" : "Interest Payments"
                  },
                  "internal_source" : {
                    "description" : "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "reason" : "sample_funds"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "reason" : {
                        "description" : "",
                        "enum" : [ "bank_migration", "cashback", "empyreal_adjustment", "error", "error_correction", "fees", "interest", "sample_funds", "sample_funds_return" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Bank Migration", "Cashback", "Empyreal adjustment", "Error", "Error correction", "Fees", "Interest", "Sample funds", "Sample funds return" ]
                      }
                    },
                    "required" : [ "amount", "currency", "reason" ],
                    "title" : "Internal Source",
                    "type" : "object",
                    "x-title-plural" : "Internal Sources"
                  },
                  "sample_funds" : {
                    "description" : "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example" : {
                      "originator" : "dashboard"
                    },
                    "nullable" : true,
                    "properties" : {
                      "originator" : {
                        "description" : "Where the sample funds came from.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "originator" ],
                    "title" : "Sample Funds",
                    "type" : "object",
                    "x-title-plural" : "Sample Fundss"
                  },
                  "wire_drawdown_payment_intention" : {
                    "description" : "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Drawdown Payment Intention",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Intentions"
                  },
                  "wire_drawdown_payment_rejection" : {
                    "description" : "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                    "example" : {
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Wire Drawdown Payment Rejection",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Rejections"
                  },
                  "wire_transfer_intention" : {
                    "description" : "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "The destination account number.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "The message that will show on the recipient's bank statement.",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection" : {
                    "description" : "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Wire Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Rejections"
                  }
                },
                "required" : [ "category", "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_source", "card_route_refund", "card_route_settlement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection" ],
                "title" : "Transaction Source",
                "type" : "object",
                "x-title-plural" : "Transaction Sources"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `transaction`.",
                "enum" : [ "transaction" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
            "title" : "Transaction",
            "type" : "object",
            "x-tag" : "Transactions",
            "x-title-plural" : "Transactions"
          }
        }
      }
    }
  }, {
    "id" : "a4e9ec26-61da-4bd1-9bb2-74872662f06a",
    "name" : "Simulate a refund on a card",
    "request" : {
      "urlPath" : "/simulations/card_refunds",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Frederick S. Holmes\",\n  \"id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"route_type\" : \"account_number\",\n  \"source\" : {\n    \"category\" : \"inbound_ach_transfer\",\n    \"inbound_ach_transfer\" : {\n      \"amount\" : 100,\n      \"originator_company_descriptive_date\" : null,\n      \"originator_company_discretionary_data\" : null,\n      \"originator_company_entry_description\" : \"RESERVE\",\n      \"originator_company_id\" : \"0987654321\",\n      \"originator_company_name\" : \"BIG BANK\",\n      \"receiver_id_number\" : \"12345678900\",\n      \"receiver_name\" : \"IAN CREASE\",\n      \"trace_number\" : \"021000038461022\"\n    }\n  },\n  \"type\" : \"transaction\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4e9ec26-61da-4bd1-9bb2-74872662f06a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.583031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_a_refund_on_a_card",
          "schema" : {
            "description" : "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Frederick S. Holmes",
              "id" : "transaction_uyrp7fld2ium70oa7oi",
              "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "route_type" : "account_number",
              "source" : {
                "category" : "inbound_ach_transfer",
                "inbound_ach_transfer" : {
                  "amount" : 100,
                  "originator_company_entry_description" : "RESERVE",
                  "originator_company_id" : "0987654321",
                  "originator_company_name" : "BIG BANK",
                  "receiver_id_number" : "12345678900",
                  "receiver_name" : "IAN CREASE",
                  "trace_number" : "021000038461022"
                }
              },
              "type" : "transaction"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the Account the Transaction belongs to.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Transaction identifier.",
                "type" : "string"
              },
              "route_id" : {
                "description" : "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable" : true,
                "type" : "string"
              },
              "route_type" : {
                "description" : "The type of the route this Transaction came through.",
                "nullable" : true,
                "type" : "string"
              },
              "source" : {
                "description" : "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example" : {
                  "category" : "inbound_ach_transfer",
                  "inbound_ach_transfer" : {
                    "amount" : 100,
                    "originator_company_entry_description" : "RESERVE",
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  }
                },
                "properties" : {
                  "account_transfer_intention" : {
                    "description" : "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "description" : "Frederick S. Holmes",
                      "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                      "source_account_id" : "account_in71c4amph0vgo2qllky",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "description" : {
                        "description" : "The description you chose to give the transfer.",
                        "type" : "string"
                      },
                      "destination_account_id" : {
                        "description" : "The identifier of the Account to where the Account Transfer was sent.",
                        "type" : "string"
                      },
                      "source_account_id" : {
                        "description" : "The identifier of the Account from where the Account Transfer was sent.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "description", "destination_account_id", "source_account_id", "transfer_id" ],
                    "title" : "Account Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Account Transfer Intentions"
                  },
                  "ach_check_conversion" : {
                    "description" : "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                    "example" : {
                      "amount" : 100,
                      "file_id" : "file_makxrc67oh9l6sg7w9yc"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "file_id" : {
                        "description" : "The identifier of the File containing an image of the returned check.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "file_id" ],
                    "title" : "ACH Check Conversion",
                    "type" : "object",
                    "x-title-plural" : "ACH Check Conversions"
                  },
                  "ach_check_conversion_return" : {
                    "description" : "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                    "example" : {
                      "amount" : 100,
                      "return_reason_code" : ""
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "return_reason_code" : {
                        "description" : "Why the transfer was returned.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "return_reason_code" ],
                    "title" : "ACH Check Conversion Return",
                    "type" : "object",
                    "x-title-plural" : "ACH Check Conversion Returns"
                  },
                  "ach_transfer_intention" : {
                    "description" : "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "routing_number" : "101050001",
                      "statement_descriptor" : "Frederick S. Holmes",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "statement_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "statement_descriptor", "transfer_id" ],
                    "title" : "ACH Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection" : {
                    "description" : "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "ACH Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Rejections"
                  },
                  "ach_transfer_return" : {
                    "description" : "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example" : {
                      "created_at" : "2020-01-31T23:59:59Z",
                      "return_reason_code" : "insufficient_fund",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                    },
                    "nullable" : true,
                    "properties" : {
                      "created_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "return_reason_code" : {
                        "description" : "Why the ACH Transfer was returned.",
                        "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the Tranasaction associated with this return.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer associated with this return.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                    "title" : "ACH Transfer Return",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance" : {
                    "description" : "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example" : {
                      "accepted_at" : "2020-01-31T23:59:59Z",
                      "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "accepted_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "card_dispute_id" : {
                        "description" : "The identifier of the Card Dispute that was accepted.",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                    "title" : "Card Dispute Acceptance",
                    "type" : "object",
                    "x-title-plural" : "Card Dispute Acceptances"
                  },
                  "card_refund" : {
                    "description" : "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example" : {
                      "amount" : 100,
                      "card_settlement_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "currency" : "USD",
                      "type" : "card_refund"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "card_settlement_transaction_id" : {
                        "description" : "The identifier for the Transaction this refunds, if any.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `card_refund`.",
                        "enum" : [ "card_refund" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "card_settlement_transaction_id", "type" ],
                    "title" : "Card Refund",
                    "type" : "object",
                    "x-title-plural" : "Card Refunds"
                  },
                  "card_route_refund" : {
                    "description" : "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                    "example" : {
                      "amount" : 1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Refund",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Refunds"
                  },
                  "card_route_settlement" : {
                    "description" : "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                    "example" : {
                      "amount" : 1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Settlement",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Settlements"
                  },
                  "card_settlement" : {
                    "description" : "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "merchant_category_code" : "5734",
                      "merchant_city" : "New York",
                      "merchant_country" : "US",
                      "merchant_name" : "AMAZON.COM",
                      "merchant_state" : "NY",
                      "presentment_amount" : 100,
                      "presentment_currency" : "USD",
                      "type" : "card_settlement"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "pending_transaction_id" : {
                        "description" : "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "presentment_amount" : {
                        "description" : "The amount in the minor unit of the transaction's presentment currency.",
                        "type" : "integer"
                      },
                      "presentment_currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.",
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `card_settlement`.",
                        "enum" : [ "card_settlement" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "presentment_amount", "presentment_currency", "merchant_city", "merchant_country", "merchant_name", "merchant_category_code", "merchant_state", "pending_transaction_id", "type" ],
                    "title" : "Card Settlement",
                    "type" : "object",
                    "x-title-plural" : "Card Settlements"
                  },
                  "category" : {
                    "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "enum" : [ "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_ach_transfer_return_intention", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_general_ledger_transaction", "internal_source", "card_route_refund", "card_route_settlement", "real_time_payments_transfer_acknowledgement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.", "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.", "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.", "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.", "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.", "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.", "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.", "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.", "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.", "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.", "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.", "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.", "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.", "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.", "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.", "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.", "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.", "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.", "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.", "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.", "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.", "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.", "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.", "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.", "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.", "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.", "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.", "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.", "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.", "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.", "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.", "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.", "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.", "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.", "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.", "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.", "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.", "The Transaction was made for an undocumented or deprecated reason." ]
                  },
                  "check_deposit_acceptance" : {
                    "description" : "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "auxiliary_on_us" : "101",
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "routing_number" : "101050001"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "The account number printed on the check.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "auxiliary_on_us" : {
                        "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_deposit_id" : {
                        "description" : "The ID of the Check Deposit that was accepted.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "routing_number" : {
                        "description" : "The routing number printed on the check.",
                        "type" : "string"
                      },
                      "serial_number" : {
                        "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                    "title" : "Check Deposit Acceptance",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Acceptances"
                  },
                  "check_deposit_return" : {
                    "description" : "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example" : {
                      "amount" : 100,
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "return_reason" : "insufficient_funds",
                      "returned_at" : "2020-01-31T23:59:59Z",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "check_deposit_id" : {
                        "description" : "The identifier of the Check Deposit that was returned.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "return_reason" : {
                        "description" : "",
                        "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                      },
                      "returned_at" : {
                        "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                    "title" : "Check Deposit Return",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Returns"
                  },
                  "check_transfer_intention" : {
                    "description" : "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example" : {
                      "address_city" : "New York",
                      "address_line1" : "33 Liberty Street",
                      "address_state" : "NY",
                      "address_zip" : "10045",
                      "amount" : 1000,
                      "currency" : "USD",
                      "recipient_name" : "Ian Crease",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "address_city" : {
                        "description" : "The city of the check's destination.",
                        "type" : "string"
                      },
                      "address_line1" : {
                        "description" : "The street address of the check's destination.",
                        "type" : "string"
                      },
                      "address_line2" : {
                        "description" : "The second line of the address of the check's destination.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "address_state" : {
                        "description" : "The state of the check's destination.",
                        "type" : "string"
                      },
                      "address_zip" : {
                        "description" : "The postal code of the check's destination.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "recipient_name" : {
                        "description" : "The name that will be printed on the check.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer with which this is associated.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "address_line1", "address_line2", "address_city", "address_state", "address_zip", "amount", "currency", "recipient_name", "transfer_id" ],
                    "title" : "Check Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Intentions"
                  },
                  "check_transfer_rejection" : {
                    "description" : "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer that led to this Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Check Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Rejections"
                  },
                  "check_transfer_return" : {
                    "description" : "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                    "example" : {
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "file_id" : {
                        "description" : "If available, a document with additional information about the return.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the returned Check Transfer.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id", "file_id" ],
                    "title" : "Check Transfer Return",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Returns"
                  },
                  "check_transfer_stop_payment_request" : {
                    "description" : "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example" : {
                      "requested_at" : "2020-01-31T23:59:59Z",
                      "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                      "type" : "check_transfer_stop_payment_request"
                    },
                    "nullable" : true,
                    "properties" : {
                      "requested_at" : {
                        "description" : "The time the stop-payment was requested.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "transaction_id" : {
                        "description" : "The transaction ID of the corresponding credit transaction.",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "The ID of the check transfer that was stopped.",
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                        "enum" : [ "check_transfer_stop_payment_request" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                    "title" : "Check Transfer Stop Payment Request",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Stop Payment Requests"
                  },
                  "dispute_resolution" : {
                    "description" : "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "disputed_transaction_id" : {
                        "description" : "The identifier of the Transaction that was disputed.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "disputed_transaction_id" ],
                    "title" : "Dispute Resolution",
                    "type" : "object",
                    "x-title-plural" : "Dispute Resolutions"
                  },
                  "empyreal_cash_deposit" : {
                    "description" : "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                    "example" : {
                      "amount" : 100,
                      "bag_id" : "12345",
                      "deposit_date" : "2020-01-31T23:59:59Z"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "bag_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "deposit_date" : {
                        "description" : "",
                        "format" : "date-time",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "bag_id", "deposit_date" ],
                    "title" : "Empyreal Cash Deposit",
                    "type" : "object",
                    "x-title-plural" : "Empyreal Cash Deposits"
                  },
                  "inbound_ach_transfer" : {
                    "description" : "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example" : {
                      "amount" : 100,
                      "originator_company_entry_description" : "RESERVE",
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "originator_company_descriptive_date" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_discretionary_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_id_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_entry_description", "originator_company_id", "receiver_id_number", "receiver_name", "trace_number" ],
                    "title" : "Inbound ACH Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound ACH Transfers"
                  },
                  "inbound_check" : {
                    "description" : "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example" : {
                      "amount" : 100,
                      "check_front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                      "check_number" : "       00000123",
                      "check_rear_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                      "currency" : "USD"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "check_front_image_file_id" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_rear_image_file_id" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      }
                    },
                    "required" : [ "amount", "currency", "check_number", "check_front_image_file_id", "check_rear_image_file_id" ],
                    "title" : "Inbound Check",
                    "type" : "object",
                    "x-title-plural" : "Inbound Checks"
                  },
                  "inbound_international_ach_transfer" : {
                    "description" : "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example" : {
                      "amount" : -1000,
                      "destination_country_code" : "US",
                      "destination_currency_code" : "USD",
                      "foreign_exchange_indicator" : "fixed_to_fixed",
                      "foreign_exchange_reference_indicator" : "blank",
                      "foreign_payment_amount" : 199,
                      "international_transaction_type_code" : "internet_initiated",
                      "originating_currency_code" : "USD",
                      "originating_depository_financial_institution_branch_country" : "US",
                      "originating_depository_financial_institution_id" : "091000019",
                      "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                      "originator_city" : "BERLIN",
                      "originator_company_entry_description" : "RETRY PYMT",
                      "originator_country" : "DE",
                      "originator_identification" : "770510487A",
                      "originator_name" : "BERGHAIN",
                      "originator_postal_code" : "50825",
                      "originator_street_address" : "Ruedersdorferstr. 7",
                      "receiver_city" : "BEVERLY HILLS",
                      "receiver_country" : "US",
                      "receiver_identification_number" : "1018790279274",
                      "receiver_postal_code" : "90210",
                      "receiver_state_or_province" : "CA",
                      "receiver_street_address" : "123 FAKE ST",
                      "receiving_company_or_individual_name" : "IAN CREASE",
                      "receiving_depository_financial_institution_country" : "US",
                      "receiving_depository_financial_institution_id" : "101050001",
                      "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "trace_number" : "010202909100090"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "destination_country_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "destination_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "foreign_exchange_reference_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_payment_amount" : {
                        "description" : "",
                        "type" : "integer"
                      },
                      "foreign_trace_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "international_transaction_type_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_branch_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_identification" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "payment_related_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "payment_related_information2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_identification_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_company_or_individual_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                    "title" : "Inbound International ACH Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation" : {
                    "description" : "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example" : {
                      "amount" : 100,
                      "creditor_name" : "Ian Crease",
                      "currency" : "USD",
                      "debtor_account_number" : "987654321",
                      "debtor_name" : "National Phonograph Company",
                      "debtor_routing_number" : "101050001",
                      "remittance_information" : "Invoice 29582",
                      "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "creditor_name" : {
                        "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "debtor_account_number" : {
                        "description" : "The account number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "debtor_name" : {
                        "description" : "The name provided by the sender of the transfer.",
                        "type" : "string"
                      },
                      "debtor_routing_number" : {
                        "description" : "The routing number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "remittance_information" : {
                        "description" : "Additional information included with the transfer.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transaction_identification" : {
                        "description" : "The Real Time Payments network identification of the transfer",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                    "title" : "Inbound Real Time Payments Transfer Confirmation",
                    "type" : "object",
                    "x-title-plural" : "Inbound Real Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment" : {
                    "description" : "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example" : {
                      "amount" : 100,
                      "description" : "Inbound wire drawdown payment"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "beneficiary_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information" ],
                    "title" : "Inbound Wire Drawdown Payment",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_drawdown_payment_reversal" : {
                    "description" : "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example" : {
                      "amount" : 12345,
                      "description" : "Inbound wire reversal 2022021100335128",
                      "input_cycle_date" : "2022-02-11",
                      "input_message_accountability_data" : "20220211B6B7HU2R011023",
                      "input_sequence_number" : "11023",
                      "input_source" : "B6B7HU2R",
                      "previous_message_input_cycle_date" : "2022-02-10",
                      "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                      "previous_message_input_sequence_number" : "3",
                      "previous_message_input_source" : "MMQFMP0P"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount that was reversed.",
                        "type" : "integer"
                      },
                      "description" : {
                        "description" : "The description on the reversal message from Fedwire.",
                        "type" : "string"
                      },
                      "input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire reversal.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier.",
                        "type" : "string"
                      },
                      "input_sequence_number" : {
                        "description" : "The Fedwire sequence number.",
                        "type" : "string"
                      },
                      "input_source" : {
                        "description" : "The Fedwire input source identifier.",
                        "type" : "string"
                      },
                      "previous_message_input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "previous_message_input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_sequence_number" : {
                        "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_source" : {
                        "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source" ],
                    "title" : "Inbound Wire Drawdown Payment Reversal",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_reversal" : {
                    "description" : "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example" : {
                      "amount" : 12345,
                      "description" : "Inbound wire reversal 2022021100335128",
                      "input_cycle_date" : "2022-02-11",
                      "input_message_accountability_data" : "20220211B6B7HU2R011023",
                      "input_sequence_number" : "11023",
                      "input_source" : "B6B7HU2R",
                      "previous_message_input_cycle_date" : "2022-02-10",
                      "previous_message_input_message_accountability_data" : "20220210MMQFMP0P000007",
                      "previous_message_input_sequence_number" : "3",
                      "previous_message_input_source" : "MMQFMP0P"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount that was reversed.",
                        "type" : "integer"
                      },
                      "description" : {
                        "description" : "The description on the reversal message from Fedwire.",
                        "type" : "string"
                      },
                      "financial_institution_to_financial_institution_information" : {
                        "description" : "Additional financial institution information included in the wire reversal.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire reversal.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier.",
                        "type" : "string"
                      },
                      "input_sequence_number" : {
                        "description" : "The Fedwire sequence number.",
                        "type" : "string"
                      },
                      "input_source" : {
                        "description" : "The Fedwire input source identifier.",
                        "type" : "string"
                      },
                      "previous_message_input_cycle_date" : {
                        "description" : "The Fedwire cycle date for the wire transfer that was reversed.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "previous_message_input_message_accountability_data" : {
                        "description" : "The Fedwire transaction identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_sequence_number" : {
                        "description" : "The Fedwire sequence number for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "previous_message_input_source" : {
                        "description" : "The Fedwire input source identifier for the wire transfer that was reversed.",
                        "type" : "string"
                      },
                      "receiver_financial_institution_information" : {
                        "description" : "Information included in the wire reversal for the receiving financial institution.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "description", "input_cycle_date", "input_sequence_number", "input_source", "input_message_accountability_data", "previous_message_input_message_accountability_data", "previous_message_input_cycle_date", "previous_message_input_sequence_number", "previous_message_input_source", "receiver_financial_institution_information", "financial_institution_to_financial_institution_information" ],
                    "title" : "Inbound Wire Reversal",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer" : {
                    "description" : "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example" : {
                      "amount" : 100,
                      "description" : "Inbound wire transfer"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "beneficiary_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "beneficiary_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "input_message_accountability_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_address_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line1" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line3" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_to_beneficiary_information_line4" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3", "beneficiary_name", "beneficiary_reference", "description", "input_message_accountability_data", "originator_address_line1", "originator_address_line2", "originator_address_line3", "originator_name", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_to_beneficiary_information" ],
                    "title" : "Inbound Wire Transfer",
                    "type" : "object",
                    "x-title-plural" : "Inbound Wire Transfers"
                  },
                  "interest_payment" : {
                    "description" : "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example" : {
                      "accrued_on_account_id" : "account_in71c4amph0vgo2qllky",
                      "amount" : 100,
                      "currency" : "USD",
                      "period_end" : "2023-03-31T23:59:59Z",
                      "period_start" : "2023-03-01T00:00:00Z"
                    },
                    "nullable" : true,
                    "properties" : {
                      "accrued_on_account_id" : {
                        "description" : "The account on which the interest was accrued.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "period_end" : {
                        "description" : "The end of the period for which this transaction paid interest.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "period_start" : {
                        "description" : "The start of the period for which this transaction paid interest.",
                        "format" : "date-time",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "period_start", "period_end", "accrued_on_account_id" ],
                    "title" : "Interest Payment",
                    "type" : "object",
                    "x-title-plural" : "Interest Payments"
                  },
                  "internal_source" : {
                    "description" : "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "reason" : "sample_funds"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "reason" : {
                        "description" : "",
                        "enum" : [ "bank_migration", "cashback", "empyreal_adjustment", "error", "error_correction", "fees", "interest", "sample_funds", "sample_funds_return" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Bank Migration", "Cashback", "Empyreal adjustment", "Error", "Error correction", "Fees", "Interest", "Sample funds", "Sample funds return" ]
                      }
                    },
                    "required" : [ "amount", "currency", "reason" ],
                    "title" : "Internal Source",
                    "type" : "object",
                    "x-title-plural" : "Internal Sources"
                  },
                  "sample_funds" : {
                    "description" : "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example" : {
                      "originator" : "dashboard"
                    },
                    "nullable" : true,
                    "properties" : {
                      "originator" : {
                        "description" : "Where the sample funds came from.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "originator" ],
                    "title" : "Sample Funds",
                    "type" : "object",
                    "x-title-plural" : "Sample Fundss"
                  },
                  "wire_drawdown_payment_intention" : {
                    "description" : "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Drawdown Payment Intention",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Intentions"
                  },
                  "wire_drawdown_payment_rejection" : {
                    "description" : "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                    "example" : {
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Wire Drawdown Payment Rejection",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Rejections"
                  },
                  "wire_transfer_intention" : {
                    "description" : "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "The destination account number.",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The transfer amount in USD cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "The message that will show on the recipient's bank statement.",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Transfer Intention",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection" : {
                    "description" : "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example" : {
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "transfer_id" ],
                    "title" : "Wire Transfer Rejection",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Rejections"
                  }
                },
                "required" : [ "category", "account_transfer_intention", "ach_check_conversion_return", "ach_check_conversion", "ach_transfer_intention", "ach_transfer_rejection", "ach_transfer_return", "card_dispute_acceptance", "card_refund", "card_settlement", "check_deposit_acceptance", "check_deposit_return", "check_transfer_intention", "check_transfer_return", "check_transfer_rejection", "check_transfer_stop_payment_request", "dispute_resolution", "empyreal_cash_deposit", "inbound_ach_transfer", "inbound_check", "inbound_international_ach_transfer", "inbound_real_time_payments_transfer_confirmation", "inbound_wire_drawdown_payment_reversal", "inbound_wire_drawdown_payment", "inbound_wire_reversal", "inbound_wire_transfer", "interest_payment", "internal_source", "card_route_refund", "card_route_settlement", "sample_funds", "wire_drawdown_payment_intention", "wire_drawdown_payment_rejection", "wire_transfer_intention", "wire_transfer_rejection" ],
                "title" : "Transaction Source",
                "type" : "object",
                "x-title-plural" : "Transaction Sources"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `transaction`.",
                "enum" : [ "transaction" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
            "title" : "Transaction",
            "type" : "object",
            "x-tag" : "Transactions",
            "x-title-plural" : "Transactions"
          }
        }
      }
    }
  }, {
    "id" : "0e308a95-b83d-4b81-a9d2-33fad5de9ef5",
    "name" : "Simulates advancing the state of a card dispute",
    "request" : {
      "urlPath" : "/simulations/card_disputes/u6vq/action",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"acceptance\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"disputed_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"explanation\" : \"Unauthorized recurring purchase\",\n  \"id\" : \"card_dispute_h9sc95nbl1cgltpp7men\",\n  \"rejection\" : null,\n  \"status\" : \"pending_reviewing\",\n  \"type\" : \"card_dispute\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e308a95-b83d-4b81-a9d2-33fad5de9ef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.58019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulates_advancing_the_state_of_a_card_dispute",
          "schema" : {
            "description" : "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "explanation" : "Unauthorized recurring purchase",
              "id" : "card_dispute_h9sc95nbl1cgltpp7men",
              "status" : "pending_reviewing",
              "type" : "card_dispute"
            },
            "properties" : {
              "acceptance" : {
                "description" : "If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.",
                "example" : {
                  "accepted_at" : "2020-01-31T23:59:59Z",
                  "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "accepted_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "card_dispute_id" : {
                    "description" : "The identifier of the Card Dispute that was accepted.",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                "title" : "Card Dispute Acceptance",
                "type" : "object",
                "x-title-plural" : "Card Dispute Acceptances"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "disputed_transaction_id" : {
                "description" : "The identifier of the Transaction that was disputed.",
                "type" : "string"
              },
              "explanation" : {
                "description" : "Why you disputed the Transaction in question.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Card Dispute identifier.",
                "type" : "string"
              },
              "rejection" : {
                "description" : "If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.",
                "example" : {
                  "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                  "explanation" : "Acquirer provided evidence that the transaction was authorized.",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "card_dispute_id" : {
                    "description" : "The identifier of the Card Dispute that was rejected.",
                    "type" : "string"
                  },
                  "explanation" : {
                    "description" : "Why the Card Dispute was rejected.",
                    "type" : "string"
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "explanation", "rejected_at", "card_dispute_id" ],
                "title" : "Card Dispute Rejection",
                "type" : "object",
                "x-title-plural" : "Card Dispute Rejections"
              },
              "status" : {
                "description" : "The results of the Dispute investigation.",
                "enum" : [ "pending_reviewing", "accepted", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Card Dispute is pending review.", "The Card Dispute has been accepted and your funds have been returned.", "The Card Dispute has been rejected." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card_dispute`.",
                "enum" : [ "card_dispute" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "explanation", "status", "created_at", "disputed_transaction_id", "acceptance", "rejection", "type" ],
            "title" : "Card Dispute",
            "type" : "object",
            "x-tag" : "Card Disputes",
            "x-title-plural" : "Card Disputes"
          }
        }
      }
    }
  }, {
    "id" : "55b24e97-70d4-46db-8405-614f66429322",
    "name" : "Simulate an authorization on a Card",
    "request" : {
      "urlPath" : "/simulations/card_authorizations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"declined_transaction\" : null,\n  \"pending_transaction\" : {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"pending_transaction_k1sfetcau2qbvjbzgju4\",\n    \"route_id\" : \"card_route_jk5pd79u6ydmbf9qzu6i\",\n    \"route_type\" : \"transfer_instruction\",\n    \"source\" : {\n      \"card_authorization\" : {\n        \"amount\" : 100,\n        \"currency\" : \"USD\",\n        \"digital_wallet_token_id\" : null,\n        \"merchant_acceptor_id\" : \"5665270011000168\",\n        \"merchant_category_code\" : \"5734\",\n        \"merchant_city\" : \"New York\",\n        \"merchant_country\" : \"US\",\n        \"merchant_descriptor\" : \"AMAZON.COM\",\n        \"network\" : \"visa\",\n        \"network_details\" : {\n          \"visa\" : {\n            \"electronic_commerce_indicator\" : \"secure_electronic_commerce\",\n            \"point_of_service_entry_mode\" : \"manual\"\n          }\n        },\n        \"real_time_decision_id\" : null\n      },\n      \"category\" : \"card_authorization\"\n    },\n    \"status\" : \"pending\",\n    \"type\" : \"pending_transaction\"\n  },\n  \"type\" : \"inbound_card_authorization_simulation_result\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55b24e97-70d4-46db-8405-614f66429322",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.579673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_an_authorization_on_a_card",
          "schema" : {
            "description" : "The results of a Card Authorization simulation.",
            "example" : {
              "pending_transaction" : {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "pending_transaction_k1sfetcau2qbvjbzgju4",
                "route_id" : "card_route_jk5pd79u6ydmbf9qzu6i",
                "route_type" : "transfer_instruction",
                "source" : {
                  "card_authorization" : {
                    "amount" : 100,
                    "currency" : "USD",
                    "merchant_acceptor_id" : "5665270011000168",
                    "merchant_category_code" : "5734",
                    "merchant_city" : "New York",
                    "merchant_country" : "US",
                    "merchant_descriptor" : "AMAZON.COM",
                    "network" : "visa",
                    "network_details" : {
                      "visa" : {
                        "electronic_commerce_indicator" : "secure_electronic_commerce",
                        "point_of_service_entry_mode" : "manual"
                      }
                    }
                  },
                  "category" : "card_authorization"
                },
                "status" : "pending",
                "type" : "pending_transaction"
              },
              "type" : "inbound_card_authorization_simulation_result"
            },
            "properties" : {
              "declined_transaction" : {
                "description" : "If the authorization attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: card_decline`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 1750,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "declined_transaction_17jbn0yyhvkt4v4ooym8",
                  "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                  "route_type" : "account_number",
                  "source" : {
                    "ach_decline" : {
                      "amount" : 1750,
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "reason" : "insufficient_funds",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "category" : "ach_decline"
                  },
                  "type" : "declined_transaction"
                },
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the Account the Declined Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "This is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Declined Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Declined Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                    "example" : {
                      "ach_decline" : {
                        "amount" : 1750,
                        "originator_company_id" : "0987654321",
                        "originator_company_name" : "BIG BANK",
                        "reason" : "insufficient_funds",
                        "receiver_id_number" : "12345678900",
                        "receiver_name" : "IAN CREASE",
                        "trace_number" : "021000038461022"
                      },
                      "category" : "ach_decline"
                    },
                    "properties" : {
                      "ach_decline" : {
                        "description" : "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                        "example" : {
                          "amount" : 1750,
                          "originator_company_id" : "0987654321",
                          "originator_company_name" : "BIG BANK",
                          "reason" : "insufficient_funds",
                          "receiver_id_number" : "12345678900",
                          "receiver_name" : "IAN CREASE",
                          "trace_number" : "021000038461022"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "originator_company_descriptive_date" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_discretionary_data" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_company_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the ACH transfer was declined.",
                            "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "credit_entry_refused_by_receiver", "duplicate_return", "entity_not_active", "transaction_not_allowed", "group_locked", "insufficient_funds", "no_ach_route", "originator_request" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "A credit was refused.", "Other.", "The account's entity is not active.", "The transaction is not allowed per Increase's terms", "Your account is inactive.", "Your account contains insufficient funds.", "The account number that was debited does not exist.", "Other." ]
                          },
                          "receiver_id_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_name" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_id", "reason", "receiver_id_number", "receiver_name", "trace_number" ],
                        "title" : "ACH Decline",
                        "type" : "object",
                        "x-title-plural" : "ACH Declines"
                      },
                      "card_decline" : {
                        "description" : "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA",
                          "network" : "visa",
                          "network_details" : {
                            "visa" : {
                              "electronic_commerce_indicator" : "secure_electronic_commerce",
                              "point_of_service_entry_mode" : "manual"
                            }
                          },
                          "reason" : "insufficient_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "digital_wallet_token_id" : {
                            "description" : "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_acceptor_id" : {
                            "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "The city the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "The country the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "The merchant descriptor of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "The state the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "network" : {
                            "description" : "The payment network used to process this card authorization",
                            "enum" : [ "visa" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Visa" ]
                          },
                          "network_details" : {
                            "description" : "Fields specific to the `network`",
                            "properties" : {
                              "visa" : {
                                "description" : "Fields specific to the `visa` network",
                                "properties" : {
                                  "electronic_commerce_indicator" : {
                                    "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                    "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                                  },
                                  "point_of_service_entry_mode" : {
                                    "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                                    "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                                  }
                                },
                                "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                                "title" : "Visa",
                                "type" : "object",
                                "x-title-plural" : "Visas"
                              }
                            },
                            "required" : [ "visa" ],
                            "title" : "Network Details",
                            "type" : "object",
                            "x-title-plural" : "Network Detailss"
                          },
                          "real_time_decision_id" : {
                            "description" : "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the transaction was declined.",
                            "enum" : [ "card_not_active", "entity_not_active", "group_locked", "insufficient_funds", "cvv2_mismatch", "transaction_not_allowed", "breaches_limit", "webhook_declined", "webhook_timed_out", "declined_by_stand_in_processing" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The Card was not active.", "The account's entity was not active.", "The account was inactive.", "The Card's Account did not have a sufficient available balance.", "The given CVV2 did not match the card's value.", "The attempted card transaction is not allowed per Increase's terms.", "The transaction was blocked by a Limit.", "Your application declined the transaction via webhook.", "Your application webhook did not respond without the required timeout.", "Declined by stand-in processing" ]
                          }
                        },
                        "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "amount", "currency", "reason", "merchant_state", "real_time_decision_id", "digital_wallet_token_id" ],
                        "title" : "Card Decline",
                        "type" : "object",
                        "x-title-plural" : "Card Declines"
                      },
                      "card_route_decline" : {
                        "description" : "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "372909060886",
                          "merchant_category_code" : "5998",
                          "merchant_city" : "5364086000",
                          "merchant_country" : "USA",
                          "merchant_descriptor" : "TENTS R US",
                          "merchant_state" : "CA"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                        "title" : "Deprecated Card Decline",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Declines"
                      },
                      "category" : {
                        "description" : "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.", "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.", "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.", "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.", "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.", "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.", "The Declined Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_decline" : {
                        "description" : "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "auxiliary_on_us" : "99999",
                          "reason" : "insufficient_funds"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "auxiliary_on_us" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the check was declined.",
                            "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "entity_not_active", "group_locked", "insufficient_funds", "unable_to_locate_account", "unable_to_process", "refer_to_image", "stop_payment_requested", "returned" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "The account's entity is not active.", "Your account is inactive.", "Your account contains insufficient funds.", "Unable to locate account.", "Unable to process.", "Refer to image.", "Stop payment requested for this check.", "Check was returned to sender." ]
                          }
                        },
                        "required" : [ "amount", "auxiliary_on_us", "reason" ],
                        "title" : "Check Decline",
                        "type" : "object",
                        "x-title-plural" : "Check Declines"
                      },
                      "inbound_real_time_payments_transfer_decline" : {
                        "description" : "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                        "example" : {
                          "amount" : 100,
                          "creditor_name" : "Ian Crease",
                          "currency" : "USD",
                          "debtor_account_number" : "987654321",
                          "debtor_name" : "National Phonograph Company",
                          "debtor_routing_number" : "101050001",
                          "reason" : "account_number_disabled",
                          "remittance_information" : "Invoice 29582",
                          "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "creditor_name" : {
                            "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "debtor_account_number" : {
                            "description" : "The account number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "debtor_name" : {
                            "description" : "The name provided by the sender of the transfer.",
                            "type" : "string"
                          },
                          "debtor_routing_number" : {
                            "description" : "The routing number of the account that sent the transfer.",
                            "type" : "string"
                          },
                          "reason" : {
                            "description" : "Why the transfer was declined.",
                            "enum" : [ "account_number_canceled", "account_number_disabled", "group_locked", "entity_not_active", "real_time_payments_not_enabled" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "Your account is inactive.", "The account's entity is not active.", "Your account is not enabled to receive Real Time Payments transfers." ]
                          },
                          "remittance_information" : {
                            "description" : "Additional information included with the transfer.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "transaction_identification" : {
                            "description" : "The Real Time Payments network identification of the declined transfer.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "reason", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                        "title" : "Inbound Real Time Payments Transfer Decline",
                        "type" : "object",
                        "x-title-plural" : "Inbound Real Time Payments Transfer Declines"
                      },
                      "international_ach_decline" : {
                        "description" : "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                        "example" : {
                          "amount" : -1000,
                          "destination_country_code" : "US",
                          "destination_currency_code" : "USD",
                          "foreign_exchange_indicator" : "fixed_to_fixed",
                          "foreign_exchange_reference_indicator" : "blank",
                          "foreign_payment_amount" : 199,
                          "international_transaction_type_code" : "internet_initiated",
                          "originating_currency_code" : "USD",
                          "originating_depository_financial_institution_branch_country" : "US",
                          "originating_depository_financial_institution_id" : "091000019",
                          "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                          "originator_city" : "BERLIN",
                          "originator_company_entry_description" : "RETRY PYMT",
                          "originator_country" : "DE",
                          "originator_identification" : "770510487A",
                          "originator_name" : "BERGHAIN",
                          "originator_postal_code" : "50825",
                          "originator_street_address" : "Ruedersdorferstr. 7",
                          "receiver_city" : "BEVERLY HILLS",
                          "receiver_country" : "US",
                          "receiver_identification_number" : "1018790279274",
                          "receiver_postal_code" : "90210",
                          "receiver_state_or_province" : "CA",
                          "receiver_street_address" : "123 FAKE ST",
                          "receiving_company_or_individual_name" : "IAN CREASE",
                          "receiving_depository_financial_institution_country" : "US",
                          "receiving_depository_financial_institution_id" : "101050001",
                          "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                          "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                          "trace_number" : "010202909100090"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "destination_country_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "destination_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_exchange_reference" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "foreign_exchange_reference_indicator" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "foreign_payment_amount" : {
                            "description" : "",
                            "type" : "integer"
                          },
                          "foreign_trace_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "international_transaction_type_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_currency_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_branch_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originating_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_company_entry_description" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_identification" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "originator_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "originator_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "payment_related_information" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "payment_related_information2" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_city" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiver_identification_number" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_postal_code" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_state_or_province" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "receiver_street_address" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_company_or_individual_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_id_qualifier" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "receiving_depository_financial_institution_name" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "trace_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                        "title" : "International ACH Decline",
                        "type" : "object",
                        "x-title-plural" : "International ACH Declines"
                      }
                    },
                    "required" : [ "category", "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline" ],
                    "title" : "Declined Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Declined Transaction Sources"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `declined_transaction`.",
                    "enum" : [ "declined_transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
                "title" : "Declined Transaction",
                "type" : "object",
                "x-title-plural" : "Declined Transactions"
              },
              "pending_transaction" : {
                "description" : "If the authorization attempt succeeds, this will contain the resulting Pending Transaction object. The Pending Transaction's `source` will be of `category: card_authorization`.",
                "example" : {
                  "account_id" : "account_in71c4amph0vgo2qllky",
                  "amount" : 100,
                  "created_at" : "2020-01-31T23:59:59Z",
                  "currency" : "USD",
                  "description" : "Frederick S. Holmes",
                  "id" : "pending_transaction_k1sfetcau2qbvjbzgju4",
                  "route_id" : "card_route_jk5pd79u6ydmbf9qzu6i",
                  "route_type" : "transfer_instruction",
                  "source" : {
                    "ach_transfer_instruction" : {
                      "amount" : 100,
                      "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                    },
                    "category" : "ach_transfer_instruction"
                  },
                  "status" : "pending",
                  "type" : "pending_transaction"
                },
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier for the account this Pending Transaction belongs to.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The Pending Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction occured.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Pending Transaction's currency. This will match the currency on the Pending Transcation's Account.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "description" : {
                    "description" : "For a Pending Transaction related to a transfer, this is the description you provide. For a Pending Transaction related to a payment, this is the description the vendor provides.",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The Pending Transaction identifier.",
                    "type" : "string"
                  },
                  "route_id" : {
                    "description" : "The identifier for the route this Pending Transaction came through. Routes are things like cards and ACH details.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "route_type" : {
                    "description" : "The type of the route this Pending Transaction came through.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "source" : {
                    "description" : "This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.",
                    "example" : {
                      "ach_transfer_instruction" : {
                        "amount" : 100,
                        "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                      },
                      "category" : "ach_transfer_instruction"
                    },
                    "properties" : {
                      "account_transfer_instruction" : {
                        "description" : "A Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "transfer_id" ],
                        "title" : "Account Transfer Instruction",
                        "type" : "object",
                        "x-title-plural" : "Account Transfer Instructions"
                      },
                      "ach_transfer_instruction" : {
                        "description" : "A ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.",
                        "example" : {
                          "amount" : 100,
                          "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the ACH Transfer that led to this Pending Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "transfer_id" ],
                        "title" : "ACH Transfer Instruction",
                        "type" : "object",
                        "x-title-plural" : "ACH Transfer Instructions"
                      },
                      "card_authorization" : {
                        "description" : "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "5665270011000168",
                          "merchant_category_code" : "5734",
                          "merchant_city" : "New York",
                          "merchant_country" : "US",
                          "merchant_descriptor" : "AMAZON.COM",
                          "network" : "visa",
                          "network_details" : {
                            "visa" : {
                              "electronic_commerce_indicator" : "secure_electronic_commerce",
                              "point_of_service_entry_mode" : "manual"
                            }
                          }
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "digital_wallet_token_id" : {
                            "description" : "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_acceptor_id" : {
                            "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "The city the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "The country the merchant resides in.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "The merchant descriptor of the merchant the card is transacting with.",
                            "type" : "string"
                          },
                          "network" : {
                            "description" : "The payment network used to process this card authorization",
                            "enum" : [ "visa" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Visa" ]
                          },
                          "network_details" : {
                            "description" : "Fields specific to the `network`",
                            "properties" : {
                              "visa" : {
                                "description" : "Fields specific to the `visa` network",
                                "properties" : {
                                  "electronic_commerce_indicator" : {
                                    "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                    "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                                  },
                                  "point_of_service_entry_mode" : {
                                    "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                                    "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                                    "nullable" : true,
                                    "type" : "string",
                                    "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                                  }
                                },
                                "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                                "title" : "Visa",
                                "type" : "object",
                                "x-title-plural" : "Visas"
                              }
                            },
                            "required" : [ "visa" ],
                            "title" : "Network Details",
                            "type" : "object",
                            "x-title-plural" : "Network Detailss"
                          },
                          "real_time_decision_id" : {
                            "description" : "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "amount", "currency", "real_time_decision_id", "digital_wallet_token_id" ],
                        "title" : "Card Authorization",
                        "type" : "object",
                        "x-title-plural" : "Card Authorizations"
                      },
                      "card_route_authorization" : {
                        "description" : "A Deprecated Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_route_authorization`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "merchant_acceptor_id" : "6631945550173363",
                          "merchant_category_code" : "5734",
                          "merchant_city" : "New York",
                          "merchant_country" : "US",
                          "merchant_descriptor" : "THUMP COFFEE",
                          "merchant_state" : "NY"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "merchant_acceptor_id" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_category_code" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_city" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "merchant_country" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_descriptor" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "merchant_state" : {
                            "description" : "",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_category_code", "merchant_state" ],
                        "title" : "Deprecated Card Authorization",
                        "type" : "object",
                        "x-title-plural" : "Deprecated Card Authorizations"
                      },
                      "category" : {
                        "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                        "enum" : [ "account_transfer_instruction", "ach_transfer_instruction", "card_authorization", "check_deposit_instruction", "check_transfer_instruction", "inbound_funds_hold", "card_route_authorization", "real_time_payments_transfer_instruction", "wire_drawdown_payment_instruction", "wire_transfer_instruction", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Pending Transaction was created by a Account Transfer Instruction object. Details will be under the `account_transfer_instruction` object.", "The Pending Transaction was created by a ACH Transfer Instruction object. Details will be under the `ach_transfer_instruction` object.", "The Pending Transaction was created by a Card Authorization object. Details will be under the `card_authorization` object.", "The Pending Transaction was created by a Check Deposit Instruction object. Details will be under the `check_deposit_instruction` object.", "The Pending Transaction was created by a Check Transfer Instruction object. Details will be under the `check_transfer_instruction` object.", "The Pending Transaction was created by a Inbound Funds Hold object. Details will be under the `inbound_funds_hold` object.", "The Pending Transaction was created by a Deprecated Card Authorization object. Details will be under the `card_route_authorization` object.", "The Pending Transaction was created by a Real Time Payments Transfer Instruction object. Details will be under the `real_time_payments_transfer_instruction` object.", "The Pending Transaction was created by a Wire Drawdown Payment Instruction object. Details will be under the `wire_drawdown_payment_instruction` object.", "The Pending Transaction was created by a Wire Transfer Instruction object. Details will be under the `wire_transfer_instruction` object.", "The Pending Transaction was made for an undocumented or deprecated reason." ]
                      },
                      "check_deposit_instruction" : {
                        "description" : "A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.",
                        "example" : {
                          "amount" : 100,
                          "back_image_file_id" : "file_26khfk98mzfz90a11oqx",
                          "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                          "currency" : "USD",
                          "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "back_image_file_id" : {
                            "description" : "The identifier of the File containing the image of the back of the check that was deposited.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "check_deposit_id" : {
                            "description" : "The identifier of the Check Deposit.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "front_image_file_id" : {
                            "description" : "The identifier of the File containing the image of the front of the check that was deposited.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "front_image_file_id", "back_image_file_id", "check_deposit_id" ],
                        "title" : "Check Deposit Instruction",
                        "type" : "object",
                        "x-title-plural" : "Check Deposit Instructions"
                      },
                      "check_transfer_instruction" : {
                        "description" : "A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.",
                        "example" : {
                          "amount" : 100,
                          "currency" : "USD",
                          "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "transfer_id" : {
                            "description" : "The identifier of the Check Transfer that led to this Pending Transaction.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "currency", "transfer_id" ],
                        "title" : "Check Transfer Instruction",
                        "type" : "object",
                        "x-title-plural" : "Check Transfer Instructions"
                      },
                      "inbound_funds_hold" : {
                        "description" : "A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.",
                        "example" : {
                          "amount" : 100,
                          "automatically_releases_at" : "2020-01-31T23:59:59Z",
                          "currency" : "USD",
                          "held_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                          "status" : "held"
                        },
                        "nullable" : true,
                        "properties" : {
                          "amount" : {
                            "description" : "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "automatically_releases_at" : {
                            "description" : "When the hold will be released automatically. Certain conditions may cause it to be released before this time.",
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "currency" : {
                            "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
                            "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                          },
                          "held_transaction_id" : {
                            "description" : "The ID of the Transaction for which funds were held.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "released_at" : {
                            "description" : "When the hold was released (if it has been released).",
                            "format" : "date-time",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The status of the hold.",
                            "enum" : [ "held", "complete" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "Funds are still being held.", "Funds have been released." ]
                          }
                        },
                        "required" : [ "amount", "currency", "automatically_releases_at", "released_at", "status", "held_transaction_id" ],
                        "title" : "Inbound Funds Hold",
                        "type" : "object",
                        "x-title-plural" : "Inbound Funds Holds"
                      },
                      "wire_drawdown_payment_instruction" : {
                        "description" : "A Wire Drawdown Payment Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_instruction`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient" ],
                        "title" : "Wire Drawdown Payment Instruction",
                        "type" : "object",
                        "x-title-plural" : "Wire Drawdown Payment Instructions"
                      },
                      "wire_transfer_instruction" : {
                        "description" : "A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.",
                        "example" : {
                          "account_number" : "987654321",
                          "amount" : 100,
                          "message_to_recipient" : "HELLO",
                          "routing_number" : "101050001",
                          "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                        },
                        "nullable" : true,
                        "properties" : {
                          "account_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "amount" : {
                            "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                            "type" : "integer"
                          },
                          "message_to_recipient" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "routing_number" : {
                            "description" : "",
                            "type" : "string"
                          },
                          "transfer_id" : {
                            "description" : "",
                            "type" : "string"
                          }
                        },
                        "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                        "title" : "Wire Transfer Instruction",
                        "type" : "object",
                        "x-title-plural" : "Wire Transfer Instructions"
                      }
                    },
                    "required" : [ "category", "account_transfer_instruction", "ach_transfer_instruction", "card_authorization", "check_deposit_instruction", "check_transfer_instruction", "inbound_funds_hold", "card_route_authorization", "wire_drawdown_payment_instruction", "wire_transfer_instruction" ],
                    "title" : "Pending Transaction Source",
                    "type" : "object",
                    "x-title-plural" : "Pending Transaction Sources"
                  },
                  "status" : {
                    "description" : "Whether the Pending Transaction has been confirmed and has an associated Transaction.",
                    "enum" : [ "pending", "complete" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The Pending Transaction is still awaiting confirmation.", "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc." ]
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `pending_transaction`.",
                    "enum" : [ "pending_transaction" ],
                    "type" : "string"
                  }
                },
                "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "status", "type" ],
                "title" : "Pending Transaction",
                "type" : "object",
                "x-title-plural" : "Pending Transactions"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_card_authorization_simulation_result`.",
                "enum" : [ "inbound_card_authorization_simulation_result" ],
                "type" : "string"
              }
            },
            "required" : [ "pending_transaction", "declined_transaction", "type" ],
            "title" : "Inbound Card Authorization Simulation Result",
            "type" : "object",
            "x-title-plural" : "Inbound Card Authorization Simulation Results"
          }
        }
      }
    }
  }, {
    "id" : "4706fa46-6bf8-4c6e-b517-a5c899a4a60d",
    "name" : "Submit a Sandbox ACH Transfer",
    "request" : {
      "urlPath" : "/simulations/ach_transfers/9203/submit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : \"National Phonograph Company\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"funding\" : \"checking\",\n  \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n  \"individual_id\" : null,\n  \"individual_name\" : \"Ian Crease\",\n  \"network\" : \"ach\",\n  \"notification_of_change\" : null,\n  \"return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n  \"statement_descriptor\" : \"Statement descriptor\",\n  \"status\" : \"returned\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"ach_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4706fa46-6bf8-4c6e-b517-a5c899a4a60d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.578091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submit_a_sandbox_ach_transfer",
          "schema" : {
            "description" : "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "company_name" : "National Phonograph Company",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "funding" : "checking",
              "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "individual_name" : "Ian Crease",
              "network" : "ach",
              "routing_number" : "101050001",
              "standard_entry_class_code" : "corporate_credit_or_debit",
              "statement_descriptor" : "Statement descriptor",
              "status" : "returned",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "ach_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information that will be sent to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "The data you chose to associate with the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the transfer you set to be shown to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which the recipient knows you.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account." ]
              },
              "id" : {
                "description" : "The ACH transfer's identifier.",
                "type" : "string"
              },
              "individual_id" : {
                "description" : "Your identifer for the transfer recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "individual_name" : {
                "description" : "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "ach" ],
                "type" : "string"
              },
              "notification_of_change" : {
                "description" : "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
                "example" : {
                  "change_code" : "incorrect_transaction_code",
                  "corrected_data" : "32",
                  "created_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "change_code" : {
                    "description" : "The type of change that occurred.",
                    "type" : "string"
                  },
                  "corrected_data" : {
                    "description" : "The corrected data.",
                    "type" : "string"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "change_code", "corrected_data" ],
                "title" : "ACH Notification of Change",
                "type" : "object",
                "x-title-plural" : "ACH Notification of Changes"
              },
              "return" : {
                "description" : "If your transfer is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "insufficient_fund",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the ACH Transfer was returned.",
                    "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Tranasaction associated with this return.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The identifier of the ACH Transfer associated with this return.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                "title" : "ACH Transfer Return",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "standard_entry_class_code" : {
                "description" : "The Standard Entry Class (SEC) code to use for the transfer.",
                "enum" : [ "corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Corporate Credit and Debit (CCD).", "Prearranged Payments and Deposits (PPD).", "Internet Initiated (WEB)." ]
              },
              "statement_descriptor" : {
                "description" : "The descriptor that will show on the recipient's bank statement.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "canceled", "pending_submission", "submitted", "returned", "requires_attention", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending approval.", "The transfer has been canceled.", "The transfer is pending submission.", "The transfer is complete.", "The transfer has been returned.", "The transfer requires your attention.", "The transfer has been rejected." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "ACH Transfer Submission",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_transfer`.",
                "enum" : [ "ach_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "addendum", "amount", "currency", "approval", "cancellation", "created_at", "external_account_id", "id", "network", "notification_of_change", "return", "routing_number", "statement_descriptor", "status", "submission", "template_id", "transaction_id", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "funding", "individual_id", "individual_name", "standard_entry_class_code", "type" ],
            "title" : "ACH Transfer",
            "type" : "object",
            "x-tag" : "ACH Transfers",
            "x-title-plural" : "ACH Transfers"
          }
        }
      }
    }
  }, {
    "id" : "431c288f-50e6-4645-81a0-65bd316f2c27",
    "name" : "Return a Sandbox ACH Transfer",
    "request" : {
      "urlPath" : "/simulations/ach_transfers/7t43/return",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : \"National Phonograph Company\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"funding\" : \"checking\",\n  \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n  \"individual_id\" : null,\n  \"individual_name\" : \"Ian Crease\",\n  \"network\" : \"ach\",\n  \"notification_of_change\" : null,\n  \"return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n  \"statement_descriptor\" : \"Statement descriptor\",\n  \"status\" : \"returned\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"ach_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "431c288f-50e6-4645-81a0-65bd316f2c27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.577694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "return_a_sandbox_ach_transfer",
          "schema" : {
            "description" : "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "company_name" : "National Phonograph Company",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "funding" : "checking",
              "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "individual_name" : "Ian Crease",
              "network" : "ach",
              "routing_number" : "101050001",
              "standard_entry_class_code" : "corporate_credit_or_debit",
              "statement_descriptor" : "Statement descriptor",
              "status" : "returned",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "ach_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information that will be sent to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "The data you chose to associate with the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the transfer you set to be shown to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which the recipient knows you.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account." ]
              },
              "id" : {
                "description" : "The ACH transfer's identifier.",
                "type" : "string"
              },
              "individual_id" : {
                "description" : "Your identifer for the transfer recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "individual_name" : {
                "description" : "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "ach" ],
                "type" : "string"
              },
              "notification_of_change" : {
                "description" : "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
                "example" : {
                  "change_code" : "incorrect_transaction_code",
                  "corrected_data" : "32",
                  "created_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "change_code" : {
                    "description" : "The type of change that occurred.",
                    "type" : "string"
                  },
                  "corrected_data" : {
                    "description" : "The corrected data.",
                    "type" : "string"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "change_code", "corrected_data" ],
                "title" : "ACH Notification of Change",
                "type" : "object",
                "x-title-plural" : "ACH Notification of Changes"
              },
              "return" : {
                "description" : "If your transfer is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "insufficient_fund",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the ACH Transfer was returned.",
                    "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Tranasaction associated with this return.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The identifier of the ACH Transfer associated with this return.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                "title" : "ACH Transfer Return",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "standard_entry_class_code" : {
                "description" : "The Standard Entry Class (SEC) code to use for the transfer.",
                "enum" : [ "corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Corporate Credit and Debit (CCD).", "Prearranged Payments and Deposits (PPD).", "Internet Initiated (WEB)." ]
              },
              "statement_descriptor" : {
                "description" : "The descriptor that will show on the recipient's bank statement.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "canceled", "pending_submission", "submitted", "returned", "requires_attention", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending approval.", "The transfer has been canceled.", "The transfer is pending submission.", "The transfer is complete.", "The transfer has been returned.", "The transfer requires your attention.", "The transfer has been rejected." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "ACH Transfer Submission",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_transfer`.",
                "enum" : [ "ach_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "addendum", "amount", "currency", "approval", "cancellation", "created_at", "external_account_id", "id", "network", "notification_of_change", "return", "routing_number", "statement_descriptor", "status", "submission", "template_id", "transaction_id", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "funding", "individual_id", "individual_name", "standard_entry_class_code", "type" ],
            "title" : "ACH Transfer",
            "type" : "object",
            "x-tag" : "ACH Transfers",
            "x-title-plural" : "ACH Transfers"
          }
        }
      }
    }
  }, {
    "id" : "2788de22-a878-4b02-bb79-b0d84725e3f7",
    "name" : "Complete a Sandbox Account Transfer",
    "request" : {
      "urlPath" : "/simulations/account_transfers/855v/complete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Move money into savings\",\n  \"destination_account_id\" : \"account_uf16sut2ct5bevmq3eh\",\n  \"destination_transaction_id\" : \"transaction_j3itv8dtk5o8pw3p1xj4\",\n  \"id\" : \"account_transfer_7k9qe1ysdgqztnt63l7n\",\n  \"network\" : \"account\",\n  \"status\" : \"complete\",\n  \"template_id\" : \"account_transfer_template_5nloco84eijzw0wcfhnn\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"account_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2788de22-a878-4b02-bb79-b0d84725e3f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.57729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "complete_a_sandbox_account_transfer",
          "schema" : {
            "description" : "Account transfers move funds between your own accounts at Increase.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Move money into savings",
              "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id" : "transaction_j3itv8dtk5o8pw3p1xj4",
              "id" : "account_transfer_7k9qe1ysdgqztnt63l7n",
              "network" : "account",
              "status" : "complete",
              "template_id" : "account_transfer_template_5nloco84eijzw0wcfhnn",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "account_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "The description that will show on the transactions.",
                "type" : "string"
              },
              "destination_account_id" : {
                "description" : "The destination account's identifier.",
                "type" : "string"
              },
              "destination_transaction_id" : {
                "description" : "The ID for the transaction receiving the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The account transfer's identifier.",
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "account" ],
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submission", "pending_approval", "canceled", "requires_attention", "flagged_by_operator", "complete" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending submission.", "The transfer is pending approval.", "The transfer has been canceled.", "The transfer requires your attention.", "The transfer requires your attention.", "The transfer is complete." ]
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_transfer`.",
                "enum" : [ "account_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "account_id", "currency", "destination_account_id", "destination_transaction_id", "created_at", "description", "network", "status", "template_id", "transaction_id", "approval", "cancellation", "type" ],
            "title" : "Account Transfer",
            "type" : "object",
            "x-tag" : "Account Transfers",
            "x-title-plural" : "Account Transfers"
          }
        }
      }
    }
  }, {
    "id" : "22bbb7a7-75a3-4bd0-aac2-011c3295e28f",
    "name" : "Simulate an Account Statement being created",
    "request" : {
      "urlPath" : "/simulations/account_statements",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"ending_balance\" : 100,\n  \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"account_statement_lkc03a4skm2k7f38vj15\",\n  \"starting_balance\" : 0,\n  \"statement_period_end\" : \"2020-01-31T23:59:59Z\",\n  \"statement_period_start\" : \"2020-01-31T23:59:59Z\",\n  \"type\" : \"account_statement\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22bbb7a7-75a3-4bd0-aac2-011c3295e28f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.577047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "simulate_an_account_statement_being_created",
          "schema" : {
            "description" : "Account Statements are generated monthly for every active Account. You can access the statement's data via the API or retrieve a PDF with its details via its associated File.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "created_at" : "2020-01-31T23:59:59Z",
              "ending_balance" : 100,
              "file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "account_statement_lkc03a4skm2k7f38vj15",
              "starting_balance" : 0,
              "statement_period_end" : "2020-01-31T23:59:59Z",
              "statement_period_start" : "2020-01-31T23:59:59Z",
              "type" : "account_statement"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the Account this Account Statement belongs to.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Statement was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "ending_balance" : {
                "description" : "The Account's balance at the start of its statement period.",
                "type" : "integer"
              },
              "file_id" : {
                "description" : "The identifier of the File containing a PDF of the statement.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Account Statement identifier.",
                "type" : "string"
              },
              "starting_balance" : {
                "description" : "The Account's balance at the start of its statement period.",
                "type" : "integer"
              },
              "statement_period_end" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the end of the period the Account Statement covers.",
                "format" : "date-time",
                "type" : "string"
              },
              "statement_period_start" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the start of the period the Account Statement covers.",
                "format" : "date-time",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_statement`.",
                "enum" : [ "account_statement" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_id", "created_at", "file_id", "statement_period_start", "statement_period_end", "starting_balance", "ending_balance", "type" ],
            "title" : "Account Statement",
            "type" : "object",
            "x-tag" : "Account Statements",
            "x-title-plural" : "Account Statements"
          }
        }
      }
    }
  }, {
    "id" : "35043f8e-e0fb-4126-9811-ea7c6baaae69",
    "name" : "List Routing Numbers",
    "request" : {
      "urlPath" : "/routing_numbers",
      "method" : "GET",
      "queryParameters" : {
        "routing_number" : {
          "equalTo" : "5qxmgk6p2"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"ach_transfers\" : \"supported\",\n    \"name\" : \"Chase\",\n    \"real_time_payments_transfers\" : \"supported\",\n    \"routing_number\" : \"021000021\",\n    \"type\" : \"routing_number\",\n    \"wire_transfers\" : \"supported\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35043f8e-e0fb-4126-9811-ea7c6baaae69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.576951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_routing_numbers",
          "schema" : {
            "description" : "A list of Routing Number objects",
            "example" : {
              "data" : [ {
                "ach_transfers" : "supported",
                "name" : "Chase",
                "real_time_payments_transfers" : "supported",
                "routing_number" : "021000021",
                "type" : "routing_number",
                "wire_transfers" : "supported"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/routing_number"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Routing Number List",
            "type" : "object",
            "x-title-plural" : "Routing Number Lists"
          }
        }
      }
    }
  }, {
    "id" : "8d5f7afc-7784-435f-994f-e612397918eb",
    "name" : "Action a Real-Time Decision",
    "request" : {
      "urlPath" : "/real_time_decisions/p34f/action",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"card_authorization\" : {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"card_id\" : \"card_oubs0hwk5rn6knuecxg2\",\n    \"decision\" : \"approve\",\n    \"merchant_acceptor_id\" : \"5665270011000168\",\n    \"merchant_category_code\" : \"5734\",\n    \"merchant_city\" : \"New York\",\n    \"merchant_country\" : \"US\",\n    \"merchant_descriptor\" : \"AMAZON.COM\",\n    \"network\" : \"visa\",\n    \"network_details\" : {\n      \"visa\" : {\n        \"electronic_commerce_indicator\" : \"secure_electronic_commerce\",\n        \"point_of_service_entry_mode\" : \"manual\"\n      }\n    },\n    \"presentment_amount\" : 100,\n    \"presentment_currency\" : \"USD\",\n    \"settlement_amount\" : 100,\n    \"settlement_currency\" : \"USD\"\n  },\n  \"category\" : \"card_authorization_requested\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"digital_wallet_authentication\" : null,\n  \"digital_wallet_token\" : null,\n  \"id\" : \"real_time_decision_j76n2e810ezcg3zh5qtn\",\n  \"status\" : \"pending\",\n  \"timeout_at\" : \"2020-01-31T23:59:59Z\",\n  \"type\" : \"real_time_decision\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d5f7afc-7784-435f-994f-e612397918eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.576841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "action_a_real_time_decision",
          "schema" : {
            "description" : "Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you're interested in trying them out!",
            "example" : {
              "card_authorization" : {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "card_id" : "card_oubs0hwk5rn6knuecxg2",
                "decision" : "approve",
                "merchant_acceptor_id" : "5665270011000168",
                "merchant_category_code" : "5734",
                "merchant_city" : "New York",
                "merchant_country" : "US",
                "merchant_descriptor" : "AMAZON.COM",
                "network" : "visa",
                "network_details" : {
                  "visa" : {
                    "electronic_commerce_indicator" : "secure_electronic_commerce",
                    "point_of_service_entry_mode" : "manual"
                  }
                },
                "presentment_amount" : 100,
                "presentment_currency" : "USD",
                "settlement_amount" : 100,
                "settlement_currency" : "USD"
              },
              "category" : "card_authorization_requested",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "real_time_decision_j76n2e810ezcg3zh5qtn",
              "status" : "pending",
              "timeout_at" : "2020-01-31T23:59:59Z",
              "type" : "real_time_decision"
            },
            "properties" : {
              "card_authorization" : {
                "description" : "Fields related to a card authorization.",
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier of the Account the authorization will debit.",
                    "type" : "string"
                  },
                  "card_id" : {
                    "description" : "The identifier of the Card that is being authorized.",
                    "type" : "string"
                  },
                  "decision" : {
                    "description" : "Whether or not the authorization was approved.",
                    "enum" : [ "approve", "decline" ],
                    "nullable" : true,
                    "type" : "string",
                    "x-enum-descriptions" : [ "Approve the authorization.", "Decline the authorization." ]
                  },
                  "merchant_acceptor_id" : {
                    "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                    "type" : "string"
                  },
                  "merchant_category_code" : {
                    "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "merchant_city" : {
                    "description" : "The city the merchant resides in.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "merchant_country" : {
                    "description" : "The country the merchant resides in.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "merchant_descriptor" : {
                    "description" : "The merchant descriptor of the merchant the card is transacting with.",
                    "type" : "string"
                  },
                  "network" : {
                    "description" : "The payment network used to process this card authorization",
                    "enum" : [ "visa" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Visa" ]
                  },
                  "network_details" : {
                    "description" : "Fields specific to the `network`",
                    "properties" : {
                      "visa" : {
                        "description" : "Fields specific to the `visa` network",
                        "properties" : {
                          "electronic_commerce_indicator" : {
                            "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                            "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                            "nullable" : true,
                            "type" : "string",
                            "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                          },
                          "point_of_service_entry_mode" : {
                            "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                            "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                            "nullable" : true,
                            "type" : "string",
                            "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                          }
                        },
                        "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                        "title" : "Visa",
                        "type" : "object",
                        "x-title-plural" : "Visas"
                      }
                    },
                    "required" : [ "visa" ],
                    "title" : "Network Details",
                    "type" : "object",
                    "x-title-plural" : "Network Detailss"
                  },
                  "presentment_amount" : {
                    "description" : "The amount of the attempted authorization in the currency the card user sees at the time of purchase, in the minor unit of that currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "presentment_currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the user sees at the time of purchase.",
                    "type" : "string"
                  },
                  "settlement_amount" : {
                    "description" : "The amount of the attempted authorization in the currency it will be settled in. This currency is the same as that of the Account the card belongs to.",
                    "type" : "integer"
                  },
                  "settlement_currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the transaction will be settled in.",
                    "type" : "string"
                  }
                },
                "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "decision", "card_id", "account_id", "presentment_amount", "presentment_currency", "settlement_amount", "settlement_currency" ],
                "title" : "Card Authorization",
                "type" : "object",
                "x-title-plural" : "Card Authorizations"
              },
              "category" : {
                "description" : "The category of the Real-Time Decision.",
                "enum" : [ "card_authorization_requested", "digital_wallet_token_requested", "digital_wallet_authentication_requested" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A card is being authorized.", "A card is being loaded into a digital wallet.", "A card is being loaded into a digital wallet and requires cardholder authentication." ]
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Real-Time Decision was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "digital_wallet_authentication" : {
                "description" : "Fields related to a digital wallet authentication attempt.",
                "nullable" : true,
                "properties" : {
                  "card_id" : {
                    "description" : "The identifier of the Card that is being tokenized.",
                    "type" : "string"
                  },
                  "channel" : {
                    "description" : "The channel to send the card user their one-time passcode.",
                    "enum" : [ "sms", "email" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Send one-time passcodes over SMS.", "Send one-time passcodes over email." ]
                  },
                  "digital_wallet" : {
                    "description" : "The digital wallet app being used.",
                    "enum" : [ "apple_pay", "google_pay" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Apple Pay", "Google Pay" ]
                  },
                  "email" : {
                    "description" : "The email to send the one-time passcode to if `channel` is equal to `email`.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "one_time_passcode" : {
                    "description" : "The one-time passcode to send the card user.",
                    "type" : "string"
                  },
                  "phone" : {
                    "description" : "The phone number to send the one-time passcode to if `channel` is equal to `sms`.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "result" : {
                    "description" : "Whether your application successfully delivered the one-time passcode.",
                    "enum" : [ "success", "failure" ],
                    "nullable" : true,
                    "type" : "string",
                    "x-enum-descriptions" : [ "Your application successfully delivered the one-time passcode to the cardholder.", "Your application failed to deliver the one-time passcode to the cardholder." ]
                  }
                },
                "required" : [ "result", "card_id", "digital_wallet", "channel", "one_time_passcode", "phone", "email" ],
                "title" : "Digital Wallet Authentication",
                "type" : "object",
                "x-title-plural" : "Digital Wallet Authentications"
              },
              "digital_wallet_token" : {
                "description" : "Fields related to a digital wallet token provisioning attempt.",
                "nullable" : true,
                "properties" : {
                  "card_id" : {
                    "description" : "The identifier of the Card that is being tokenized.",
                    "type" : "string"
                  },
                  "card_profile_id" : {
                    "description" : "The identifier of the Card Profile that was set via the real time decision. This will be null until the real time decision is responded to or if the real time decision did not set a card profile.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "decision" : {
                    "description" : "Whether or not the provisioning request was approved. This will be null until the real time decision is responded to.",
                    "enum" : [ "approve", "decline" ],
                    "nullable" : true,
                    "type" : "string",
                    "x-enum-descriptions" : [ "Approve the provisioning request.", "Decline the provisioning request." ]
                  },
                  "digital_wallet" : {
                    "description" : "The digital wallet app being used.",
                    "enum" : [ "apple_pay", "google_pay" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Apple Pay", "Google Pay" ]
                  }
                },
                "required" : [ "decision", "card_id", "digital_wallet", "card_profile_id" ],
                "title" : "Digital Wallet Token",
                "type" : "object",
                "x-title-plural" : "Digital Wallet Tokens"
              },
              "id" : {
                "description" : "The Real-Time Decision identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Real-Time Decision.",
                "enum" : [ "pending", "responded", "timed_out" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The decision is pending action via real-time webhook.", "Your webhook actioned the real-time decision.", "Your webhook failed to respond to the authorization in time." ]
              },
              "timeout_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which your application can no longer respond to the Real-Time Decision.",
                "format" : "date-time",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `real_time_decision`.",
                "enum" : [ "real_time_decision" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "timeout_at", "status", "category", "card_authorization", "digital_wallet_token", "digital_wallet_authentication", "type" ],
            "title" : "Real-Time Decision",
            "type" : "object",
            "x-tag" : "Real-Time Decisions",
            "x-title-plural" : "Real-Time Decisions"
          }
        }
      }
    }
  }, {
    "id" : "e4b9cf90-f8aa-4421-a271-cda496889804",
    "name" : "Retrieve a Real-Time Decision",
    "request" : {
      "urlPath" : "/real_time_decisions/z7tt",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"card_authorization\" : {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"card_id\" : \"card_oubs0hwk5rn6knuecxg2\",\n    \"decision\" : \"approve\",\n    \"merchant_acceptor_id\" : \"5665270011000168\",\n    \"merchant_category_code\" : \"5734\",\n    \"merchant_city\" : \"New York\",\n    \"merchant_country\" : \"US\",\n    \"merchant_descriptor\" : \"AMAZON.COM\",\n    \"network\" : \"visa\",\n    \"network_details\" : {\n      \"visa\" : {\n        \"electronic_commerce_indicator\" : \"secure_electronic_commerce\",\n        \"point_of_service_entry_mode\" : \"manual\"\n      }\n    },\n    \"presentment_amount\" : 100,\n    \"presentment_currency\" : \"USD\",\n    \"settlement_amount\" : 100,\n    \"settlement_currency\" : \"USD\"\n  },\n  \"category\" : \"card_authorization_requested\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"digital_wallet_authentication\" : null,\n  \"digital_wallet_token\" : null,\n  \"id\" : \"real_time_decision_j76n2e810ezcg3zh5qtn\",\n  \"status\" : \"pending\",\n  \"timeout_at\" : \"2020-01-31T23:59:59Z\",\n  \"type\" : \"real_time_decision\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4b9cf90-f8aa-4421-a271-cda496889804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.576469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_real_time_decision",
          "schema" : {
            "description" : "Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you're interested in trying them out!",
            "example" : {
              "card_authorization" : {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "card_id" : "card_oubs0hwk5rn6knuecxg2",
                "decision" : "approve",
                "merchant_acceptor_id" : "5665270011000168",
                "merchant_category_code" : "5734",
                "merchant_city" : "New York",
                "merchant_country" : "US",
                "merchant_descriptor" : "AMAZON.COM",
                "network" : "visa",
                "network_details" : {
                  "visa" : {
                    "electronic_commerce_indicator" : "secure_electronic_commerce",
                    "point_of_service_entry_mode" : "manual"
                  }
                },
                "presentment_amount" : 100,
                "presentment_currency" : "USD",
                "settlement_amount" : 100,
                "settlement_currency" : "USD"
              },
              "category" : "card_authorization_requested",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "real_time_decision_j76n2e810ezcg3zh5qtn",
              "status" : "pending",
              "timeout_at" : "2020-01-31T23:59:59Z",
              "type" : "real_time_decision"
            },
            "properties" : {
              "card_authorization" : {
                "description" : "Fields related to a card authorization.",
                "nullable" : true,
                "properties" : {
                  "account_id" : {
                    "description" : "The identifier of the Account the authorization will debit.",
                    "type" : "string"
                  },
                  "card_id" : {
                    "description" : "The identifier of the Card that is being authorized.",
                    "type" : "string"
                  },
                  "decision" : {
                    "description" : "Whether or not the authorization was approved.",
                    "enum" : [ "approve", "decline" ],
                    "nullable" : true,
                    "type" : "string",
                    "x-enum-descriptions" : [ "Approve the authorization.", "Decline the authorization." ]
                  },
                  "merchant_acceptor_id" : {
                    "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                    "type" : "string"
                  },
                  "merchant_category_code" : {
                    "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "merchant_city" : {
                    "description" : "The city the merchant resides in.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "merchant_country" : {
                    "description" : "The country the merchant resides in.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "merchant_descriptor" : {
                    "description" : "The merchant descriptor of the merchant the card is transacting with.",
                    "type" : "string"
                  },
                  "network" : {
                    "description" : "The payment network used to process this card authorization",
                    "enum" : [ "visa" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Visa" ]
                  },
                  "network_details" : {
                    "description" : "Fields specific to the `network`",
                    "properties" : {
                      "visa" : {
                        "description" : "Fields specific to the `visa` network",
                        "properties" : {
                          "electronic_commerce_indicator" : {
                            "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                            "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                            "nullable" : true,
                            "type" : "string",
                            "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                          },
                          "point_of_service_entry_mode" : {
                            "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                            "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                            "nullable" : true,
                            "type" : "string",
                            "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                          }
                        },
                        "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                        "title" : "Visa",
                        "type" : "object",
                        "x-title-plural" : "Visas"
                      }
                    },
                    "required" : [ "visa" ],
                    "title" : "Network Details",
                    "type" : "object",
                    "x-title-plural" : "Network Detailss"
                  },
                  "presentment_amount" : {
                    "description" : "The amount of the attempted authorization in the currency the card user sees at the time of purchase, in the minor unit of that currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "presentment_currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the user sees at the time of purchase.",
                    "type" : "string"
                  },
                  "settlement_amount" : {
                    "description" : "The amount of the attempted authorization in the currency it will be settled in. This currency is the same as that of the Account the card belongs to.",
                    "type" : "integer"
                  },
                  "settlement_currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the transaction will be settled in.",
                    "type" : "string"
                  }
                },
                "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "decision", "card_id", "account_id", "presentment_amount", "presentment_currency", "settlement_amount", "settlement_currency" ],
                "title" : "Card Authorization",
                "type" : "object",
                "x-title-plural" : "Card Authorizations"
              },
              "category" : {
                "description" : "The category of the Real-Time Decision.",
                "enum" : [ "card_authorization_requested", "digital_wallet_token_requested", "digital_wallet_authentication_requested" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A card is being authorized.", "A card is being loaded into a digital wallet.", "A card is being loaded into a digital wallet and requires cardholder authentication." ]
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Real-Time Decision was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "digital_wallet_authentication" : {
                "description" : "Fields related to a digital wallet authentication attempt.",
                "nullable" : true,
                "properties" : {
                  "card_id" : {
                    "description" : "The identifier of the Card that is being tokenized.",
                    "type" : "string"
                  },
                  "channel" : {
                    "description" : "The channel to send the card user their one-time passcode.",
                    "enum" : [ "sms", "email" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Send one-time passcodes over SMS.", "Send one-time passcodes over email." ]
                  },
                  "digital_wallet" : {
                    "description" : "The digital wallet app being used.",
                    "enum" : [ "apple_pay", "google_pay" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Apple Pay", "Google Pay" ]
                  },
                  "email" : {
                    "description" : "The email to send the one-time passcode to if `channel` is equal to `email`.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "one_time_passcode" : {
                    "description" : "The one-time passcode to send the card user.",
                    "type" : "string"
                  },
                  "phone" : {
                    "description" : "The phone number to send the one-time passcode to if `channel` is equal to `sms`.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "result" : {
                    "description" : "Whether your application successfully delivered the one-time passcode.",
                    "enum" : [ "success", "failure" ],
                    "nullable" : true,
                    "type" : "string",
                    "x-enum-descriptions" : [ "Your application successfully delivered the one-time passcode to the cardholder.", "Your application failed to deliver the one-time passcode to the cardholder." ]
                  }
                },
                "required" : [ "result", "card_id", "digital_wallet", "channel", "one_time_passcode", "phone", "email" ],
                "title" : "Digital Wallet Authentication",
                "type" : "object",
                "x-title-plural" : "Digital Wallet Authentications"
              },
              "digital_wallet_token" : {
                "description" : "Fields related to a digital wallet token provisioning attempt.",
                "nullable" : true,
                "properties" : {
                  "card_id" : {
                    "description" : "The identifier of the Card that is being tokenized.",
                    "type" : "string"
                  },
                  "card_profile_id" : {
                    "description" : "The identifier of the Card Profile that was set via the real time decision. This will be null until the real time decision is responded to or if the real time decision did not set a card profile.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "decision" : {
                    "description" : "Whether or not the provisioning request was approved. This will be null until the real time decision is responded to.",
                    "enum" : [ "approve", "decline" ],
                    "nullable" : true,
                    "type" : "string",
                    "x-enum-descriptions" : [ "Approve the provisioning request.", "Decline the provisioning request." ]
                  },
                  "digital_wallet" : {
                    "description" : "The digital wallet app being used.",
                    "enum" : [ "apple_pay", "google_pay" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Apple Pay", "Google Pay" ]
                  }
                },
                "required" : [ "decision", "card_id", "digital_wallet", "card_profile_id" ],
                "title" : "Digital Wallet Token",
                "type" : "object",
                "x-title-plural" : "Digital Wallet Tokens"
              },
              "id" : {
                "description" : "The Real-Time Decision identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Real-Time Decision.",
                "enum" : [ "pending", "responded", "timed_out" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The decision is pending action via real-time webhook.", "Your webhook actioned the real-time decision.", "Your webhook failed to respond to the authorization in time." ]
              },
              "timeout_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which your application can no longer respond to the Real-Time Decision.",
                "format" : "date-time",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `real_time_decision`.",
                "enum" : [ "real_time_decision" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "timeout_at", "status", "category", "card_authorization", "digital_wallet_token", "digital_wallet_authentication", "type" ],
            "title" : "Real-Time Decision",
            "type" : "object",
            "x-tag" : "Real-Time Decisions",
            "x-title-plural" : "Real-Time Decisions"
          }
        }
      }
    }
  }, {
    "id" : "e7adf104-45d9-47b1-84b6-551ebf658125",
    "name" : "Retrieve a Pending Transaction",
    "request" : {
      "urlPath" : "/pending_transactions/r40p",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Frederick S. Holmes\",\n  \"id\" : \"pending_transaction_k1sfetcau2qbvjbzgju4\",\n  \"route_id\" : \"card_route_jk5pd79u6ydmbf9qzu6i\",\n  \"route_type\" : \"transfer_instruction\",\n  \"source\" : {\n    \"ach_transfer_instruction\" : {\n      \"amount\" : 100,\n      \"transfer_id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\"\n    },\n    \"category\" : \"ach_transfer_instruction\"\n  },\n  \"status\" : \"pending\",\n  \"type\" : \"pending_transaction\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7adf104-45d9-47b1-84b6-551ebf658125",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.575926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_pending_transaction",
          "schema" : {
            "description" : "Pending Transactions are potential future additions and removals of money from your bank account.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Frederick S. Holmes",
              "id" : "pending_transaction_k1sfetcau2qbvjbzgju4",
              "route_id" : "card_route_jk5pd79u6ydmbf9qzu6i",
              "route_type" : "transfer_instruction",
              "source" : {
                "ach_transfer_instruction" : {
                  "amount" : 100,
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "category" : "ach_transfer_instruction"
              },
              "status" : "pending",
              "type" : "pending_transaction"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this Pending Transaction belongs to.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The Pending Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction occured.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Pending Transaction's currency. This will match the currency on the Pending Transcation's Account.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "For a Pending Transaction related to a transfer, this is the description you provide. For a Pending Transaction related to a payment, this is the description the vendor provides.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Pending Transaction identifier.",
                "type" : "string"
              },
              "route_id" : {
                "description" : "The identifier for the route this Pending Transaction came through. Routes are things like cards and ACH details.",
                "nullable" : true,
                "type" : "string"
              },
              "route_type" : {
                "description" : "The type of the route this Pending Transaction came through.",
                "nullable" : true,
                "type" : "string"
              },
              "source" : {
                "description" : "This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.",
                "example" : {
                  "ach_transfer_instruction" : {
                    "amount" : 100,
                    "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                  },
                  "category" : "ach_transfer_instruction"
                },
                "properties" : {
                  "account_transfer_instruction" : {
                    "description" : "A Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "transfer_id" : "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Account Transfer that led to this Pending Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "transfer_id" ],
                    "title" : "Account Transfer Instruction",
                    "type" : "object",
                    "x-title-plural" : "Account Transfer Instructions"
                  },
                  "ach_transfer_instruction" : {
                    "description" : "A ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.",
                    "example" : {
                      "amount" : 100,
                      "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the ACH Transfer that led to this Pending Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "transfer_id" ],
                    "title" : "ACH Transfer Instruction",
                    "type" : "object",
                    "x-title-plural" : "ACH Transfer Instructions"
                  },
                  "card_authorization" : {
                    "description" : "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "5665270011000168",
                      "merchant_category_code" : "5734",
                      "merchant_city" : "New York",
                      "merchant_country" : "US",
                      "merchant_descriptor" : "AMAZON.COM",
                      "network" : "visa",
                      "network_details" : {
                        "visa" : {
                          "electronic_commerce_indicator" : "secure_electronic_commerce",
                          "point_of_service_entry_mode" : "manual"
                        }
                      }
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "digital_wallet_token_id" : {
                        "description" : "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_acceptor_id" : {
                        "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "The city the merchant resides in.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "The country the merchant resides in.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "The merchant descriptor of the merchant the card is transacting with.",
                        "type" : "string"
                      },
                      "network" : {
                        "description" : "The payment network used to process this card authorization",
                        "enum" : [ "visa" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Visa" ]
                      },
                      "network_details" : {
                        "description" : "Fields specific to the `network`",
                        "properties" : {
                          "visa" : {
                            "description" : "Fields specific to the `visa` network",
                            "properties" : {
                              "electronic_commerce_indicator" : {
                                "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                                "nullable" : true,
                                "type" : "string",
                                "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                              },
                              "point_of_service_entry_mode" : {
                                "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                                "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                                "nullable" : true,
                                "type" : "string",
                                "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                              }
                            },
                            "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                            "title" : "Visa",
                            "type" : "object",
                            "x-title-plural" : "Visas"
                          }
                        },
                        "required" : [ "visa" ],
                        "title" : "Network Details",
                        "type" : "object",
                        "x-title-plural" : "Network Detailss"
                      },
                      "real_time_decision_id" : {
                        "description" : "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "amount", "currency", "real_time_decision_id", "digital_wallet_token_id" ],
                    "title" : "Card Authorization",
                    "type" : "object",
                    "x-title-plural" : "Card Authorizations"
                  },
                  "card_route_authorization" : {
                    "description" : "A Deprecated Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_route_authorization`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "6631945550173363",
                      "merchant_category_code" : "5734",
                      "merchant_city" : "New York",
                      "merchant_country" : "US",
                      "merchant_descriptor" : "THUMP COFFEE",
                      "merchant_state" : "NY"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_category_code", "merchant_state" ],
                    "title" : "Deprecated Card Authorization",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Authorizations"
                  },
                  "category" : {
                    "description" : "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "enum" : [ "account_transfer_instruction", "ach_transfer_instruction", "card_authorization", "check_deposit_instruction", "check_transfer_instruction", "inbound_funds_hold", "card_route_authorization", "real_time_payments_transfer_instruction", "wire_drawdown_payment_instruction", "wire_transfer_instruction", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The Pending Transaction was created by a Account Transfer Instruction object. Details will be under the `account_transfer_instruction` object.", "The Pending Transaction was created by a ACH Transfer Instruction object. Details will be under the `ach_transfer_instruction` object.", "The Pending Transaction was created by a Card Authorization object. Details will be under the `card_authorization` object.", "The Pending Transaction was created by a Check Deposit Instruction object. Details will be under the `check_deposit_instruction` object.", "The Pending Transaction was created by a Check Transfer Instruction object. Details will be under the `check_transfer_instruction` object.", "The Pending Transaction was created by a Inbound Funds Hold object. Details will be under the `inbound_funds_hold` object.", "The Pending Transaction was created by a Deprecated Card Authorization object. Details will be under the `card_route_authorization` object.", "The Pending Transaction was created by a Real Time Payments Transfer Instruction object. Details will be under the `real_time_payments_transfer_instruction` object.", "The Pending Transaction was created by a Wire Drawdown Payment Instruction object. Details will be under the `wire_drawdown_payment_instruction` object.", "The Pending Transaction was created by a Wire Transfer Instruction object. Details will be under the `wire_transfer_instruction` object.", "The Pending Transaction was made for an undocumented or deprecated reason." ]
                  },
                  "check_deposit_instruction" : {
                    "description" : "A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.",
                    "example" : {
                      "amount" : 100,
                      "back_image_file_id" : "file_26khfk98mzfz90a11oqx",
                      "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "currency" : "USD",
                      "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "back_image_file_id" : {
                        "description" : "The identifier of the File containing the image of the back of the check that was deposited.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "check_deposit_id" : {
                        "description" : "The identifier of the Check Deposit.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "front_image_file_id" : {
                        "description" : "The identifier of the File containing the image of the front of the check that was deposited.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "front_image_file_id", "back_image_file_id", "check_deposit_id" ],
                    "title" : "Check Deposit Instruction",
                    "type" : "object",
                    "x-title-plural" : "Check Deposit Instructions"
                  },
                  "check_transfer_instruction" : {
                    "description" : "A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.",
                    "example" : {
                      "amount" : 100,
                      "currency" : "USD",
                      "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "transfer_id" : {
                        "description" : "The identifier of the Check Transfer that led to this Pending Transaction.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "transfer_id" ],
                    "title" : "Check Transfer Instruction",
                    "type" : "object",
                    "x-title-plural" : "Check Transfer Instructions"
                  },
                  "inbound_funds_hold" : {
                    "description" : "A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.",
                    "example" : {
                      "amount" : 100,
                      "automatically_releases_at" : "2020-01-31T23:59:59Z",
                      "currency" : "USD",
                      "held_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                      "status" : "held"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "automatically_releases_at" : {
                        "description" : "When the hold will be released automatically. Certain conditions may cause it to be released before this time.",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "held_transaction_id" : {
                        "description" : "The ID of the Transaction for which funds were held.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "released_at" : {
                        "description" : "When the hold was released (if it has been released).",
                        "format" : "date-time",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "status" : {
                        "description" : "The status of the hold.",
                        "enum" : [ "held", "complete" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Funds are still being held.", "Funds have been released." ]
                      }
                    },
                    "required" : [ "amount", "currency", "automatically_releases_at", "released_at", "status", "held_transaction_id" ],
                    "title" : "Inbound Funds Hold",
                    "type" : "object",
                    "x-title-plural" : "Inbound Funds Holds"
                  },
                  "wire_drawdown_payment_instruction" : {
                    "description" : "A Wire Drawdown Payment Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_instruction`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient" ],
                    "title" : "Wire Drawdown Payment Instruction",
                    "type" : "object",
                    "x-title-plural" : "Wire Drawdown Payment Instructions"
                  },
                  "wire_transfer_instruction" : {
                    "description" : "A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.",
                    "example" : {
                      "account_number" : "987654321",
                      "amount" : 100,
                      "message_to_recipient" : "HELLO",
                      "routing_number" : "101050001",
                      "transfer_id" : "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "nullable" : true,
                    "properties" : {
                      "account_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "amount" : {
                        "description" : "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "message_to_recipient" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "routing_number" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "transfer_id" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "account_number", "routing_number", "message_to_recipient", "transfer_id" ],
                    "title" : "Wire Transfer Instruction",
                    "type" : "object",
                    "x-title-plural" : "Wire Transfer Instructions"
                  }
                },
                "required" : [ "category", "account_transfer_instruction", "ach_transfer_instruction", "card_authorization", "check_deposit_instruction", "check_transfer_instruction", "inbound_funds_hold", "card_route_authorization", "wire_drawdown_payment_instruction", "wire_transfer_instruction" ],
                "title" : "Pending Transaction Source",
                "type" : "object",
                "x-title-plural" : "Pending Transaction Sources"
              },
              "status" : {
                "description" : "Whether the Pending Transaction has been confirmed and has an associated Transaction.",
                "enum" : [ "pending", "complete" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Pending Transaction is still awaiting confirmation.", "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `pending_transaction`.",
                "enum" : [ "pending_transaction" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "status", "type" ],
            "title" : "Pending Transaction",
            "type" : "object",
            "x-tag" : "Pending Transactions",
            "x-title-plural" : "Pending Transactions"
          }
        }
      }
    }
  }, {
    "id" : "9f39b094-6cd1-46ab-a9fb-b71978feeba4",
    "name" : "List Pending Transactions",
    "request" : {
      "urlPath" : "/pending_transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"pending_transaction_k1sfetcau2qbvjbzgju4\",\n    \"route_id\" : \"card_route_jk5pd79u6ydmbf9qzu6i\",\n    \"route_type\" : \"transfer_instruction\",\n    \"source\" : {\n      \"ach_transfer_instruction\" : {\n        \"amount\" : 100,\n        \"transfer_id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\"\n      },\n      \"category\" : \"ach_transfer_instruction\"\n    },\n    \"status\" : \"pending\",\n    \"type\" : \"pending_transaction\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f39b094-6cd1-46ab-a9fb-b71978feeba4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.575258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_pending_transactions",
          "schema" : {
            "description" : "A list of Pending Transaction objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "pending_transaction_k1sfetcau2qbvjbzgju4",
                "route_id" : "card_route_jk5pd79u6ydmbf9qzu6i",
                "route_type" : "transfer_instruction",
                "source" : {
                  "ach_transfer_instruction" : {
                    "amount" : 100,
                    "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                  },
                  "category" : "ach_transfer_instruction"
                },
                "status" : "pending",
                "type" : "pending_transaction"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/pending_transaction"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Pending Transaction List",
            "type" : "object",
            "x-title-plural" : "Pending Transaction Lists"
          }
        }
      }
    }
  }, {
    "id" : "56a1a58e-abed-42aa-bd41-4b776efd7b81",
    "name" : "Retrieve an OAuth Connection",
    "request" : {
      "urlPath" : "/oauth_connections/252u",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"group_id\" : \"group_1g4mhziu6kvrs3vz35um\",\n  \"id\" : \"connection_dauknoksyr4wilz4e6my\",\n  \"status\" : \"active\",\n  \"type\" : \"oauth_connection\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56a1a58e-abed-42aa-bd41-4b776efd7b81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.575193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_oauth_connection",
          "schema" : {
            "description" : "When a user authorizes your OAuth application, an OAuth Connection object is created.",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "group_id" : "group_1g4mhziu6kvrs3vz35um",
              "id" : "connection_dauknoksyr4wilz4e6my",
              "status" : "active",
              "type" : "oauth_connection"
            },
            "properties" : {
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp when the OAuth Connection was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "group_id" : {
                "description" : "The identifier of the Group that has authorized your OAuth application.",
                "type" : "string"
              },
              "id" : {
                "description" : "The OAuth Connection's identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "Whether the connection is active.",
                "enum" : [ "active", "inactive" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The OAuth connection is active.", "The OAuth connection is permanently deactivated." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `oauth_connection`.",
                "enum" : [ "oauth_connection" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "group_id", "status", "type" ],
            "title" : "OAuth Connection",
            "type" : "object",
            "x-tag" : "OAuth Connections",
            "x-title-plural" : "OAuth Connections"
          }
        }
      }
    }
  }, {
    "id" : "9c9f6c31-115b-45a1-86f9-7b91dea50b84",
    "name" : "List OAuth Connections",
    "request" : {
      "urlPath" : "/oauth_connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"group_id\" : \"group_1g4mhziu6kvrs3vz35um\",\n    \"id\" : \"connection_dauknoksyr4wilz4e6my\",\n    \"status\" : \"active\",\n    \"type\" : \"oauth_connection\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c9f6c31-115b-45a1-86f9-7b91dea50b84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.575061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_oauth_connections",
          "schema" : {
            "description" : "A list of OAuth Connection objects",
            "example" : {
              "data" : [ {
                "created_at" : "2020-01-31T23:59:59Z",
                "group_id" : "group_1g4mhziu6kvrs3vz35um",
                "id" : "connection_dauknoksyr4wilz4e6my",
                "status" : "active",
                "type" : "oauth_connection"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/oauth_connection"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "OAuth Connection List",
            "type" : "object",
            "x-title-plural" : "OAuth Connection Lists"
          }
        }
      }
    }
  }, {
    "id" : "2741963c-2df0-4f14-b9cf-ffaaea5742f6",
    "name" : "Update a Limit",
    "request" : {
      "urlPath" : "/limits/j77j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"limit_fku42k0qtc8ulsuas38q\",\n  \"interval\" : \"month\",\n  \"metric\" : \"volume\",\n  \"model_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"model_type\" : \"account_number\",\n  \"status\" : \"active\",\n  \"type\" : \"limit\",\n  \"value\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2741963c-2df0-4f14-b9cf-ffaaea5742f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.575005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update_a_limit",
          "schema" : {
            "description" : "You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits.",
            "example" : {
              "id" : "limit_fku42k0qtc8ulsuas38q",
              "interval" : "month",
              "metric" : "volume",
              "model_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "model_type" : "account_number",
              "status" : "active",
              "type" : "limit",
              "value" : 0
            },
            "properties" : {
              "id" : {
                "description" : "The Limit identifier.",
                "type" : "string"
              },
              "interval" : {
                "description" : "The interval for the metric. This is required if `metric` is `count` or `volume`.",
                "enum" : [ "transaction", "day", "week", "month", "year", "all_time" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "Enforce the Limit per-transaction.", "Enforce the Limit based on the trailing 24 hour period.", "Enforce the Limit based on the trailing seven days.", "Enforce the Limit based on the trailing month, going back to the current day in the previous month, or as close as possible given month length differences.", "Enforce the Limit based on the trailing 365 days.", "Enforce the Limit for all time." ]
              },
              "metric" : {
                "description" : "The metric for the Limit.",
                "enum" : [ "count", "volume" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The maximum number of debits allowed.", "The maximum volume of debits allowed in the minor unit of the model's currency." ]
              },
              "model_id" : {
                "description" : "The identifier of the Account Number, Account, or Card the Limit applies to.",
                "type" : "string"
              },
              "model_type" : {
                "description" : "The type of the model you wish to associate the Limit with.",
                "enum" : [ "account", "account_number", "card" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Enforce the Limit for the entire account.", "Enforce the Limit for this specific route.", "Enforce the Limit for this specific card." ]
              },
              "status" : {
                "description" : "The current status of the Limit.",
                "enum" : [ "active", "inactive" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Limit is active.", "The Limit is temporarily disabled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `limit`.",
                "enum" : [ "limit" ],
                "type" : "string"
              },
              "value" : {
                "description" : "The value to evaluate the Limit against.",
                "type" : "integer"
              }
            },
            "required" : [ "id", "interval", "metric", "model_id", "model_type", "status", "type", "value" ],
            "title" : "Limit",
            "type" : "object",
            "x-tag" : "Limits",
            "x-title-plural" : "Limits"
          }
        }
      }
    }
  }, {
    "id" : "39ea5373-1d18-4c70-9e9d-2976ea889b3a",
    "name" : "Retrieve a Limit",
    "request" : {
      "urlPath" : "/limits/2sk7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"limit_fku42k0qtc8ulsuas38q\",\n  \"interval\" : \"month\",\n  \"metric\" : \"volume\",\n  \"model_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"model_type\" : \"account_number\",\n  \"status\" : \"active\",\n  \"type\" : \"limit\",\n  \"value\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39ea5373-1d18-4c70-9e9d-2976ea889b3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_limit",
          "schema" : {
            "description" : "You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits.",
            "example" : {
              "id" : "limit_fku42k0qtc8ulsuas38q",
              "interval" : "month",
              "metric" : "volume",
              "model_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "model_type" : "account_number",
              "status" : "active",
              "type" : "limit",
              "value" : 0
            },
            "properties" : {
              "id" : {
                "description" : "The Limit identifier.",
                "type" : "string"
              },
              "interval" : {
                "description" : "The interval for the metric. This is required if `metric` is `count` or `volume`.",
                "enum" : [ "transaction", "day", "week", "month", "year", "all_time" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "Enforce the Limit per-transaction.", "Enforce the Limit based on the trailing 24 hour period.", "Enforce the Limit based on the trailing seven days.", "Enforce the Limit based on the trailing month, going back to the current day in the previous month, or as close as possible given month length differences.", "Enforce the Limit based on the trailing 365 days.", "Enforce the Limit for all time." ]
              },
              "metric" : {
                "description" : "The metric for the Limit.",
                "enum" : [ "count", "volume" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The maximum number of debits allowed.", "The maximum volume of debits allowed in the minor unit of the model's currency." ]
              },
              "model_id" : {
                "description" : "The identifier of the Account Number, Account, or Card the Limit applies to.",
                "type" : "string"
              },
              "model_type" : {
                "description" : "The type of the model you wish to associate the Limit with.",
                "enum" : [ "account", "account_number", "card" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Enforce the Limit for the entire account.", "Enforce the Limit for this specific route.", "Enforce the Limit for this specific card." ]
              },
              "status" : {
                "description" : "The current status of the Limit.",
                "enum" : [ "active", "inactive" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Limit is active.", "The Limit is temporarily disabled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `limit`.",
                "enum" : [ "limit" ],
                "type" : "string"
              },
              "value" : {
                "description" : "The value to evaluate the Limit against.",
                "type" : "integer"
              }
            },
            "required" : [ "id", "interval", "metric", "model_id", "model_type", "status", "type", "value" ],
            "title" : "Limit",
            "type" : "object",
            "x-tag" : "Limits",
            "x-title-plural" : "Limits"
          }
        }
      }
    }
  }, {
    "id" : "4108f945-48ad-48e5-af23-e4bfc80a11e4",
    "name" : "Create a Limit",
    "request" : {
      "urlPath" : "/limits",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"limit_fku42k0qtc8ulsuas38q\",\n  \"interval\" : \"month\",\n  \"metric\" : \"volume\",\n  \"model_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"model_type\" : \"account_number\",\n  \"status\" : \"active\",\n  \"type\" : \"limit\",\n  \"value\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4108f945-48ad-48e5-af23-e4bfc80a11e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_limit",
          "schema" : {
            "description" : "You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits.",
            "example" : {
              "id" : "limit_fku42k0qtc8ulsuas38q",
              "interval" : "month",
              "metric" : "volume",
              "model_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "model_type" : "account_number",
              "status" : "active",
              "type" : "limit",
              "value" : 0
            },
            "properties" : {
              "id" : {
                "description" : "The Limit identifier.",
                "type" : "string"
              },
              "interval" : {
                "description" : "The interval for the metric. This is required if `metric` is `count` or `volume`.",
                "enum" : [ "transaction", "day", "week", "month", "year", "all_time" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "Enforce the Limit per-transaction.", "Enforce the Limit based on the trailing 24 hour period.", "Enforce the Limit based on the trailing seven days.", "Enforce the Limit based on the trailing month, going back to the current day in the previous month, or as close as possible given month length differences.", "Enforce the Limit based on the trailing 365 days.", "Enforce the Limit for all time." ]
              },
              "metric" : {
                "description" : "The metric for the Limit.",
                "enum" : [ "count", "volume" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The maximum number of debits allowed.", "The maximum volume of debits allowed in the minor unit of the model's currency." ]
              },
              "model_id" : {
                "description" : "The identifier of the Account Number, Account, or Card the Limit applies to.",
                "type" : "string"
              },
              "model_type" : {
                "description" : "The type of the model you wish to associate the Limit with.",
                "enum" : [ "account", "account_number", "card" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Enforce the Limit for the entire account.", "Enforce the Limit for this specific route.", "Enforce the Limit for this specific card." ]
              },
              "status" : {
                "description" : "The current status of the Limit.",
                "enum" : [ "active", "inactive" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Limit is active.", "The Limit is temporarily disabled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `limit`.",
                "enum" : [ "limit" ],
                "type" : "string"
              },
              "value" : {
                "description" : "The value to evaluate the Limit against.",
                "type" : "integer"
              }
            },
            "required" : [ "id", "interval", "metric", "model_id", "model_type", "status", "type", "value" ],
            "title" : "Limit",
            "type" : "object",
            "x-tag" : "Limits",
            "x-title-plural" : "Limits"
          }
        }
      }
    }
  }, {
    "id" : "a6d03dbb-3d6d-47e2-bad2-71dc8fb8dab5",
    "name" : "List Limits",
    "request" : {
      "urlPath" : "/limits",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"id\" : \"limit_fku42k0qtc8ulsuas38q\",\n    \"interval\" : \"month\",\n    \"metric\" : \"volume\",\n    \"model_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"model_type\" : \"account_number\",\n    \"status\" : \"active\",\n    \"type\" : \"limit\",\n    \"value\" : 0\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6d03dbb-3d6d-47e2-bad2-71dc8fb8dab5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_limits",
          "schema" : {
            "description" : "A list of Limit objects",
            "example" : {
              "data" : [ {
                "id" : "limit_fku42k0qtc8ulsuas38q",
                "interval" : "month",
                "metric" : "volume",
                "model_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "model_type" : "account_number",
                "status" : "active",
                "type" : "limit",
                "value" : 0
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/limit"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Limit List",
            "type" : "object",
            "x-title-plural" : "Limit Lists"
          }
        }
      }
    }
  }, {
    "id" : "428e8b1c-c452-4263-91cf-7594fb1564da",
    "name" : "Retrieve an Inbound Wire Drawdown Request",
    "request" : {
      "urlPath" : "/inbound_wire_drawdown_requests/r797",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 10000,\n  \"beneficiary_account_number\" : \"987654321\",\n  \"beneficiary_address_line1\" : \"33 Liberty Street\",\n  \"beneficiary_address_line2\" : \"New York, NY, 10045\",\n  \"beneficiary_address_line3\" : null,\n  \"beneficiary_name\" : \"Ian Crease\",\n  \"beneficiary_routing_number\" : \"101050001\",\n  \"currency\" : \"USD\",\n  \"id\" : \"inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e\",\n  \"message_to_recipient\" : \"Invoice 29582\",\n  \"originator_account_number\" : \"987654321\",\n  \"originator_address_line1\" : \"33 Liberty Street\",\n  \"originator_address_line2\" : \"New York, NY, 10045\",\n  \"originator_address_line3\" : null,\n  \"originator_name\" : \"Ian Crease\",\n  \"originator_routing_number\" : \"101050001\",\n  \"originator_to_beneficiary_information_line1\" : null,\n  \"originator_to_beneficiary_information_line2\" : null,\n  \"originator_to_beneficiary_information_line3\" : null,\n  \"originator_to_beneficiary_information_line4\" : null,\n  \"recipient_account_number_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"type\" : \"inbound_wire_drawdown_request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "428e8b1c-c452-4263-91cf-7594fb1564da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_inbound_wire_drawdown_request",
          "schema" : {
            "description" : "Inbound wire drawdown requests are requests from someone else to send them a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
            "example" : {
              "amount" : 10000,
              "beneficiary_account_number" : "987654321",
              "beneficiary_address_line1" : "33 Liberty Street",
              "beneficiary_address_line2" : "New York, NY, 10045",
              "beneficiary_name" : "Ian Crease",
              "beneficiary_routing_number" : "101050001",
              "currency" : "USD",
              "id" : "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
              "message_to_recipient" : "Invoice 29582",
              "originator_account_number" : "987654321",
              "originator_address_line1" : "33 Liberty Street",
              "originator_address_line2" : "New York, NY, 10045",
              "originator_name" : "Ian Crease",
              "originator_routing_number" : "101050001",
              "recipient_account_number_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "type" : "inbound_wire_drawdown_request"
            },
            "properties" : {
              "amount" : {
                "description" : "The amount being requested in cents.",
                "type" : "integer"
              },
              "beneficiary_account_number" : {
                "description" : "The drawdown request's beneficiary's account number.",
                "type" : "string"
              },
              "beneficiary_address_line1" : {
                "description" : "Line 1 of the drawdown request's beneficiary's address.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line2" : {
                "description" : "Line 2 of the drawdown request's beneficiary's address.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_address_line3" : {
                "description" : "Line 3 of the drawdown request's beneficiary's address.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_name" : {
                "description" : "The drawdown request's beneficiary's name.",
                "nullable" : true,
                "type" : "string"
              },
              "beneficiary_routing_number" : {
                "description" : "The drawdown request's beneficiary's routing number.",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\".",
                "type" : "string"
              },
              "id" : {
                "description" : "The Wire drawdown request identifier.",
                "type" : "string"
              },
              "message_to_recipient" : {
                "description" : "A message from the drawdown request's originator.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_account_number" : {
                "description" : "The drawdown request's originator's account number.",
                "type" : "string"
              },
              "originator_address_line1" : {
                "description" : "Line 1 of the drawdown request's originator's address.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_address_line2" : {
                "description" : "Line 2 of the drawdown request's originator's address.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_address_line3" : {
                "description" : "Line 3 of the drawdown request's originator's address.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_name" : {
                "description" : "The drawdown request's originator's name.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_routing_number" : {
                "description" : "The drawdown request's originator's routing number.",
                "type" : "string"
              },
              "originator_to_beneficiary_information_line1" : {
                "description" : "Line 1 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_to_beneficiary_information_line2" : {
                "description" : "Line 2 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_to_beneficiary_information_line3" : {
                "description" : "Line 3 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "originator_to_beneficiary_information_line4" : {
                "description" : "Line 4 of the information conveyed from the originator of the message to the beneficiary.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_account_number_id" : {
                "description" : "The Account Number from which the recipient of this request is being requested to send funds.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_wire_drawdown_request`.",
                "enum" : [ "inbound_wire_drawdown_request" ],
                "type" : "string"
              }
            },
            "required" : [ "type", "id", "recipient_account_number_id", "originator_account_number", "originator_routing_number", "beneficiary_account_number", "beneficiary_routing_number", "amount", "currency", "message_to_recipient", "originator_to_beneficiary_information_line1", "originator_to_beneficiary_information_line2", "originator_to_beneficiary_information_line3", "originator_to_beneficiary_information_line4", "originator_name", "originator_address_line1", "originator_address_line2", "originator_address_line3", "beneficiary_name", "beneficiary_address_line1", "beneficiary_address_line2", "beneficiary_address_line3" ],
            "title" : "Inbound Wire Drawdown Request",
            "type" : "object",
            "x-tag" : "Inbound Wire Drawdown Requests",
            "x-title-plural" : "Inbound Wire Drawdown Requests"
          }
        }
      }
    }
  }, {
    "id" : "98b37b10-3754-4f66-bee9-7301d5cd556a",
    "name" : "List Inbound Wire Drawdown Requests",
    "request" : {
      "urlPath" : "/inbound_wire_drawdown_requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"amount\" : 10000,\n    \"beneficiary_account_number\" : \"987654321\",\n    \"beneficiary_address_line1\" : \"33 Liberty Street\",\n    \"beneficiary_address_line2\" : \"New York, NY, 10045\",\n    \"beneficiary_address_line3\" : null,\n    \"beneficiary_name\" : \"Ian Crease\",\n    \"beneficiary_routing_number\" : \"101050001\",\n    \"currency\" : \"USD\",\n    \"id\" : \"inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e\",\n    \"message_to_recipient\" : \"Invoice 29582\",\n    \"originator_account_number\" : \"987654321\",\n    \"originator_address_line1\" : \"33 Liberty Street\",\n    \"originator_address_line2\" : \"New York, NY, 10045\",\n    \"originator_address_line3\" : null,\n    \"originator_name\" : \"Ian Crease\",\n    \"originator_routing_number\" : \"101050001\",\n    \"originator_to_beneficiary_information_line1\" : null,\n    \"originator_to_beneficiary_information_line2\" : null,\n    \"originator_to_beneficiary_information_line3\" : null,\n    \"originator_to_beneficiary_information_line4\" : null,\n    \"recipient_account_number_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"type\" : \"inbound_wire_drawdown_request\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98b37b10-3754-4f66-bee9-7301d5cd556a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_inbound_wire_drawdown_requests",
          "schema" : {
            "description" : "A list of Inbound Wire Drawdown Request objects",
            "example" : {
              "data" : [ {
                "amount" : 10000,
                "beneficiary_account_number" : "987654321",
                "beneficiary_address_line1" : "33 Liberty Street",
                "beneficiary_address_line2" : "New York, NY, 10045",
                "beneficiary_name" : "Ian Crease",
                "beneficiary_routing_number" : "101050001",
                "currency" : "USD",
                "id" : "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
                "message_to_recipient" : "Invoice 29582",
                "originator_account_number" : "987654321",
                "originator_address_line1" : "33 Liberty Street",
                "originator_address_line2" : "New York, NY, 10045",
                "originator_name" : "Ian Crease",
                "originator_routing_number" : "101050001",
                "recipient_account_number_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "type" : "inbound_wire_drawdown_request"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/inbound_wire_drawdown_request"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Inbound Wire Drawdown Request List",
            "type" : "object",
            "x-title-plural" : "Inbound Wire Drawdown Request Lists"
          }
        }
      }
    }
  }, {
    "id" : "9f10f7f8-99c7-44aa-8540-7cf43d47d2e9",
    "name" : "Retrieve an Inbound ACH Transfer Return",
    "request" : {
      "urlPath" : "/inbound_ach_transfer_returns/0wit",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"class_name\" : \"inbound_ach_transfer_return\",\n  \"id\" : \"inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk\",\n  \"inbound_ach_transfer_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"reason\" : \"payment_stopped\",\n  \"status\" : \"submitted\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"transaction_id\" : null,\n  \"type\" : \"inbound_ach_transfer_return\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f10f7f8-99c7-44aa-8540-7cf43d47d2e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_inbound_ach_transfer_return",
          "schema" : {
            "description" : "If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we'll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer.",
            "example" : {
              "class_name" : "inbound_ach_transfer_return",
              "id" : "inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk",
              "inbound_ach_transfer_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "reason" : "payment_stopped",
              "status" : "submitted",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "type" : "inbound_ach_transfer_return"
            },
            "properties" : {
              "id" : {
                "description" : "The ID of the Inbound ACH Transfer Return.",
                "type" : "string"
              },
              "inbound_ach_transfer_transaction_id" : {
                "description" : "The ID for the Transaction that is being returned.",
                "type" : "string"
              },
              "reason" : {
                "description" : "The reason why this transfer will be returned. This is sent to the initiating bank.",
                "enum" : [ "authorization_revoked_by_customer", "payment_stopped", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "representative_payee_deceased_or_unable_to_continue_in_that_capacity", "beneficiary_or_account_holder_deceased", "credit_entry_refused_by_receiver", "duplicate_entry", "corporate_customer_advised_not_authorized" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The customer no longer authorizes this transaction. The Nacha return code is R07.", "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.", "The customer advises that the debit was unauthorized. The Nacha return code is R10.", "The payee is deceased. The Nacha return code is R14.", "The account holder is deceased. The Nacha return code is R15.", "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.", "The account holder identified this transaction as a duplicate. The Nacha return code is R24.", "The corporate customer no longer authorizes this transaction. The Nacha return code is R29." ]
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submitting", "submitted" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer return is pending submission to the Federal Reserve.", "The transfer has been submitted to the Federal Reserve." ]
              },
              "submission" : {
                "description" : "After the return is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer return was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "Inbound ACH Transfer Return Submission",
                "type" : "object",
                "x-title-plural" : "Inbound ACH Transfer Return Submissions"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction refunding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.",
                "enum" : [ "inbound_ach_transfer_return" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "inbound_ach_transfer_transaction_id", "transaction_id", "status", "reason", "submission", "type" ],
            "title" : "Inbound ACH Transfer Return",
            "type" : "object",
            "x-tag" : "Inbound ACH Transfer Returns",
            "x-title-plural" : "Inbound ACH Transfer Returns"
          }
        }
      }
    }
  }, {
    "id" : "2b792dbf-1876-4f50-9725-e1ffff9f5738",
    "name" : "Create an ACH Return",
    "request" : {
      "urlPath" : "/inbound_ach_transfer_returns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"class_name\" : \"inbound_ach_transfer_return\",\n  \"id\" : \"inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk\",\n  \"inbound_ach_transfer_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"reason\" : \"payment_stopped\",\n  \"status\" : \"submitted\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"transaction_id\" : null,\n  \"type\" : \"inbound_ach_transfer_return\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b792dbf-1876-4f50-9725-e1ffff9f5738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.574067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_ach_return",
          "schema" : {
            "description" : "If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we'll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer.",
            "example" : {
              "class_name" : "inbound_ach_transfer_return",
              "id" : "inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk",
              "inbound_ach_transfer_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "reason" : "payment_stopped",
              "status" : "submitted",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "type" : "inbound_ach_transfer_return"
            },
            "properties" : {
              "id" : {
                "description" : "The ID of the Inbound ACH Transfer Return.",
                "type" : "string"
              },
              "inbound_ach_transfer_transaction_id" : {
                "description" : "The ID for the Transaction that is being returned.",
                "type" : "string"
              },
              "reason" : {
                "description" : "The reason why this transfer will be returned. This is sent to the initiating bank.",
                "enum" : [ "authorization_revoked_by_customer", "payment_stopped", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "representative_payee_deceased_or_unable_to_continue_in_that_capacity", "beneficiary_or_account_holder_deceased", "credit_entry_refused_by_receiver", "duplicate_entry", "corporate_customer_advised_not_authorized" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The customer no longer authorizes this transaction. The Nacha return code is R07.", "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.", "The customer advises that the debit was unauthorized. The Nacha return code is R10.", "The payee is deceased. The Nacha return code is R14.", "The account holder is deceased. The Nacha return code is R15.", "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.", "The account holder identified this transaction as a duplicate. The Nacha return code is R24.", "The corporate customer no longer authorizes this transaction. The Nacha return code is R29." ]
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submitting", "submitted" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer return is pending submission to the Federal Reserve.", "The transfer has been submitted to the Federal Reserve." ]
              },
              "submission" : {
                "description" : "After the return is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer return was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "Inbound ACH Transfer Return Submission",
                "type" : "object",
                "x-title-plural" : "Inbound ACH Transfer Return Submissions"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction refunding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.",
                "enum" : [ "inbound_ach_transfer_return" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "inbound_ach_transfer_transaction_id", "transaction_id", "status", "reason", "submission", "type" ],
            "title" : "Inbound ACH Transfer Return",
            "type" : "object",
            "x-tag" : "Inbound ACH Transfer Returns",
            "x-title-plural" : "Inbound ACH Transfer Returns"
          }
        }
      }
    }
  }, {
    "id" : "a099af01-18c9-489e-b40c-68f552cf1be8",
    "name" : "List Inbound ACH Transfer Returns",
    "request" : {
      "urlPath" : "/inbound_ach_transfer_returns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"class_name\" : \"inbound_ach_transfer_return\",\n    \"id\" : \"inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk\",\n    \"inbound_ach_transfer_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"reason\" : \"payment_stopped\",\n    \"status\" : \"submitted\",\n    \"submission\" : {\n      \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n      \"trace_number\" : \"058349238292834\"\n    },\n    \"transaction_id\" : null,\n    \"type\" : \"inbound_ach_transfer_return\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a099af01-18c9-489e-b40c-68f552cf1be8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_inbound_ach_transfer_returns",
          "schema" : {
            "description" : "A list of Inbound ACH Transfer Return objects",
            "example" : {
              "data" : [ {
                "class_name" : "inbound_ach_transfer_return",
                "id" : "inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk",
                "inbound_ach_transfer_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "reason" : "payment_stopped",
                "status" : "submitted",
                "submission" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "type" : "inbound_ach_transfer_return"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/inbound_ach_transfer_return"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Inbound ACH Transfer Return List",
            "type" : "object",
            "x-title-plural" : "Inbound ACH Transfer Return Lists"
          }
        }
      }
    }
  }, {
    "id" : "61610512-8d05-47bc-9f75-efc3d5a145f9",
    "name" : "Retrieve Group details",
    "request" : {
      "urlPath" : "/groups/current",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ach_debit_status\" : \"disabled\",\n  \"activation_status\" : \"activated\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"group_1g4mhziu6kvrs3vz35um\",\n  \"type\" : \"group\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61610512-8d05-47bc-9f75-efc3d5a145f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_group_details",
          "schema" : {
            "description" : "Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access.",
            "example" : {
              "ach_debit_status" : "disabled",
              "activation_status" : "activated",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "group_1g4mhziu6kvrs3vz35um",
              "type" : "group"
            },
            "properties" : {
              "ach_debit_status" : {
                "description" : "If the Group is allowed to create ACH debits.",
                "enum" : [ "disabled", "enabled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Group cannot make ACH debits.", "The Group can make ACH debits." ]
              },
              "activation_status" : {
                "description" : "If the Group is activated or not.",
                "enum" : [ "unactivated", "activated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Group is not activated.", "The Group is activated." ]
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Group was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The Group identifier.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `group`.",
                "enum" : [ "group" ],
                "type" : "string"
              }
            },
            "required" : [ "activation_status", "ach_debit_status", "created_at", "id", "type" ],
            "title" : "Group",
            "type" : "object",
            "x-tag" : "Groups",
            "x-title-plural" : "Groups"
          }
        }
      }
    }
  }, {
    "id" : "c6e9428e-2406-4b2b-a909-9b269bcbfb7d",
    "name" : "Retrieve a File",
    "request" : {
      "urlPath" : "/files/v6b3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"2022-05 statement for checking account\",\n  \"direction\" : \"from_increase\",\n  \"download_url\" : \"https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download\",\n  \"filename\" : \"statement.pdf\",\n  \"id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"purpose\" : \"increase_statement\",\n  \"type\" : \"file\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6e9428e-2406-4b2b-a909-9b269bcbfb7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_file",
          "schema" : {
            "description" : "Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF).",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "2022-05 statement for checking account",
              "direction" : "from_increase",
              "download_url" : "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
              "filename" : "statement.pdf",
              "id" : "file_makxrc67oh9l6sg7w9yc",
              "purpose" : "increase_statement",
              "type" : "file"
            },
            "properties" : {
              "created_at" : {
                "description" : "The time the File was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "A description of the File.",
                "nullable" : true,
                "type" : "string"
              },
              "direction" : {
                "description" : "Whether the File was generated by Increase or by you and sent to Increase.",
                "enum" : [ "to_increase", "from_increase" ],
                "type" : "string",
                "x-enum-descriptions" : [ "This File was sent by you to Increase.", "This File was generated by Increase." ]
              },
              "download_url" : {
                "description" : "A URL from where the File can be downloaded at this point in time. The location of this URL may change over time.",
                "nullable" : true,
                "type" : "string"
              },
              "filename" : {
                "description" : "The filename that was provided upon upload or generated by Increase.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The File's identifier.",
                "type" : "string"
              },
              "purpose" : {
                "description" : "What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "enum" : [ "check_image_front", "check_image_back", "form_1099_int", "form_ss_4", "identity_document", "increase_statement", "other", "trust_formation_document", "digital_wallet_artwork", "digital_wallet_app_icon", "entity_supplemental_document" ],
                "type" : "string",
                "x-enum-descriptions" : [ "An image of the front of a check, used for check deposits.", "An image of the back of a check, used for check deposits.", "IRS Form 1099-INT.", "IRS Form SS-4.", "An image of a government-issued ID.", "A statement generated by Increase.", "A file purpose not covered by any of the other cases.", "A legal document forming a trust.", "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.", "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.", "A supplemental document associated an an Entity." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `file`.",
                "enum" : [ "file" ],
                "type" : "string"
              }
            },
            "required" : [ "created_at", "id", "purpose", "description", "direction", "filename", "download_url", "type" ],
            "title" : "File",
            "type" : "object",
            "x-tag" : "Files",
            "x-title-plural" : "Files"
          }
        }
      }
    }
  }, {
    "id" : "49ef3dc7-d0c7-4208-ae8d-8ee09f4581d8",
    "name" : "Create a File",
    "request" : {
      "urlPath" : "/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"2022-05 statement for checking account\",\n  \"direction\" : \"from_increase\",\n  \"download_url\" : \"https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download\",\n  \"filename\" : \"statement.pdf\",\n  \"id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"purpose\" : \"increase_statement\",\n  \"type\" : \"file\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49ef3dc7-d0c7-4208-ae8d-8ee09f4581d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_file",
          "schema" : {
            "description" : "Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF).",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "2022-05 statement for checking account",
              "direction" : "from_increase",
              "download_url" : "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
              "filename" : "statement.pdf",
              "id" : "file_makxrc67oh9l6sg7w9yc",
              "purpose" : "increase_statement",
              "type" : "file"
            },
            "properties" : {
              "created_at" : {
                "description" : "The time the File was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "A description of the File.",
                "nullable" : true,
                "type" : "string"
              },
              "direction" : {
                "description" : "Whether the File was generated by Increase or by you and sent to Increase.",
                "enum" : [ "to_increase", "from_increase" ],
                "type" : "string",
                "x-enum-descriptions" : [ "This File was sent by you to Increase.", "This File was generated by Increase." ]
              },
              "download_url" : {
                "description" : "A URL from where the File can be downloaded at this point in time. The location of this URL may change over time.",
                "nullable" : true,
                "type" : "string"
              },
              "filename" : {
                "description" : "The filename that was provided upon upload or generated by Increase.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The File's identifier.",
                "type" : "string"
              },
              "purpose" : {
                "description" : "What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "enum" : [ "check_image_front", "check_image_back", "form_1099_int", "form_ss_4", "identity_document", "increase_statement", "other", "trust_formation_document", "digital_wallet_artwork", "digital_wallet_app_icon", "entity_supplemental_document" ],
                "type" : "string",
                "x-enum-descriptions" : [ "An image of the front of a check, used for check deposits.", "An image of the back of a check, used for check deposits.", "IRS Form 1099-INT.", "IRS Form SS-4.", "An image of a government-issued ID.", "A statement generated by Increase.", "A file purpose not covered by any of the other cases.", "A legal document forming a trust.", "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.", "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.", "A supplemental document associated an an Entity." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `file`.",
                "enum" : [ "file" ],
                "type" : "string"
              }
            },
            "required" : [ "created_at", "id", "purpose", "description", "direction", "filename", "download_url", "type" ],
            "title" : "File",
            "type" : "object",
            "x-tag" : "Files",
            "x-title-plural" : "Files"
          }
        }
      }
    }
  }, {
    "id" : "010c1639-0e89-41eb-8854-75cb0d743076",
    "name" : "List Files",
    "request" : {
      "urlPath" : "/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"description\" : \"2022-05 statement for checking account\",\n    \"direction\" : \"from_increase\",\n    \"download_url\" : \"https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download\",\n    \"filename\" : \"statement.pdf\",\n    \"id\" : \"file_makxrc67oh9l6sg7w9yc\",\n    \"purpose\" : \"increase_statement\",\n    \"type\" : \"file\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "010c1639-0e89-41eb-8854-75cb0d743076",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_files",
          "schema" : {
            "description" : "A list of File objects",
            "example" : {
              "data" : [ {
                "created_at" : "2020-01-31T23:59:59Z",
                "description" : "2022-05 statement for checking account",
                "direction" : "from_increase",
                "download_url" : "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
                "filename" : "statement.pdf",
                "id" : "file_makxrc67oh9l6sg7w9yc",
                "purpose" : "increase_statement",
                "type" : "file"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/file"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "File List",
            "type" : "object",
            "x-title-plural" : "File Lists"
          }
        }
      }
    }
  }, {
    "id" : "aa429169-a523-4d1d-9d5c-3f48116eb361",
    "name" : "Update an External Account",
    "request" : {
      "urlPath" : "/external_accounts/y6v5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number\" : \"987654321\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"Landlord\",\n  \"funding\" : \"checking\",\n  \"id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"active\",\n  \"type\" : \"external_account\",\n  \"verification_status\" : \"verified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa429169-a523-4d1d-9d5c-3f48116eb361",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update_an_external_account",
          "schema" : {
            "description" : "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse.",
            "example" : {
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "Landlord",
              "funding" : "checking",
              "id" : "external_account_ukk55lr923a3ac0pp7iv",
              "routing_number" : "101050001",
              "status" : "active",
              "type" : "external_account",
              "verification_status" : "verified"
            },
            "properties" : {
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the External Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The External Account's description for display purposes.",
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings", "other" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account.", "A different type of account." ]
              },
              "id" : {
                "description" : "The External Account's identifier.",
                "type" : "string"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The External Account's status.",
                "enum" : [ "active", "archived" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The External Acccount is active.", "The External Account is archived and won't appear in the dashboard." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `external_account`.",
                "enum" : [ "external_account" ],
                "type" : "string"
              },
              "verification_status" : {
                "description" : "If you have verified ownership of the External Account.",
                "enum" : [ "unverified", "pending", "verified" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The External Account has not been verified.", "The External Account is in the process of being verified.", "The External Account is verified." ]
              }
            },
            "required" : [ "id", "created_at", "description", "status", "routing_number", "account_number", "funding", "verification_status", "type" ],
            "title" : "External Account",
            "type" : "object",
            "x-tag" : "External Accounts",
            "x-title-plural" : "External Accounts"
          }
        }
      }
    }
  }, {
    "id" : "2d32919a-7529-400f-ab61-5d94c4647cb9",
    "name" : "Retrieve an External Account",
    "request" : {
      "urlPath" : "/external_accounts/75s0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number\" : \"987654321\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"Landlord\",\n  \"funding\" : \"checking\",\n  \"id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"active\",\n  \"type\" : \"external_account\",\n  \"verification_status\" : \"verified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d32919a-7529-400f-ab61-5d94c4647cb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_external_account",
          "schema" : {
            "description" : "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse.",
            "example" : {
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "Landlord",
              "funding" : "checking",
              "id" : "external_account_ukk55lr923a3ac0pp7iv",
              "routing_number" : "101050001",
              "status" : "active",
              "type" : "external_account",
              "verification_status" : "verified"
            },
            "properties" : {
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the External Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The External Account's description for display purposes.",
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings", "other" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account.", "A different type of account." ]
              },
              "id" : {
                "description" : "The External Account's identifier.",
                "type" : "string"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The External Account's status.",
                "enum" : [ "active", "archived" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The External Acccount is active.", "The External Account is archived and won't appear in the dashboard." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `external_account`.",
                "enum" : [ "external_account" ],
                "type" : "string"
              },
              "verification_status" : {
                "description" : "If you have verified ownership of the External Account.",
                "enum" : [ "unverified", "pending", "verified" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The External Account has not been verified.", "The External Account is in the process of being verified.", "The External Account is verified." ]
              }
            },
            "required" : [ "id", "created_at", "description", "status", "routing_number", "account_number", "funding", "verification_status", "type" ],
            "title" : "External Account",
            "type" : "object",
            "x-tag" : "External Accounts",
            "x-title-plural" : "External Accounts"
          }
        }
      }
    }
  }, {
    "id" : "3af9771b-00bd-4260-9069-dc0f39ad4d34",
    "name" : "Create an External Account",
    "request" : {
      "urlPath" : "/external_accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number\" : \"987654321\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"Landlord\",\n  \"funding\" : \"checking\",\n  \"id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"active\",\n  \"type\" : \"external_account\",\n  \"verification_status\" : \"verified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3af9771b-00bd-4260-9069-dc0f39ad4d34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_external_account",
          "schema" : {
            "description" : "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse.",
            "example" : {
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "Landlord",
              "funding" : "checking",
              "id" : "external_account_ukk55lr923a3ac0pp7iv",
              "routing_number" : "101050001",
              "status" : "active",
              "type" : "external_account",
              "verification_status" : "verified"
            },
            "properties" : {
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the External Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The External Account's description for display purposes.",
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings", "other" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account.", "A different type of account." ]
              },
              "id" : {
                "description" : "The External Account's identifier.",
                "type" : "string"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The External Account's status.",
                "enum" : [ "active", "archived" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The External Acccount is active.", "The External Account is archived and won't appear in the dashboard." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `external_account`.",
                "enum" : [ "external_account" ],
                "type" : "string"
              },
              "verification_status" : {
                "description" : "If you have verified ownership of the External Account.",
                "enum" : [ "unverified", "pending", "verified" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The External Account has not been verified.", "The External Account is in the process of being verified.", "The External Account is verified." ]
              }
            },
            "required" : [ "id", "created_at", "description", "status", "routing_number", "account_number", "funding", "verification_status", "type" ],
            "title" : "External Account",
            "type" : "object",
            "x-tag" : "External Accounts",
            "x-title-plural" : "External Accounts"
          }
        }
      }
    }
  }, {
    "id" : "be0aaaf0-7eac-42ab-b65f-a0928784146f",
    "name" : "List External Accounts",
    "request" : {
      "urlPath" : "/external_accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_number\" : \"987654321\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"description\" : \"Landlord\",\n    \"funding\" : \"checking\",\n    \"id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n    \"routing_number\" : \"101050001\",\n    \"status\" : \"active\",\n    \"type\" : \"external_account\",\n    \"verification_status\" : \"verified\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be0aaaf0-7eac-42ab-b65f-a0928784146f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_external_accounts",
          "schema" : {
            "description" : "A list of External Account objects",
            "example" : {
              "data" : [ {
                "account_number" : "987654321",
                "created_at" : "2020-01-31T23:59:59Z",
                "description" : "Landlord",
                "funding" : "checking",
                "id" : "external_account_ukk55lr923a3ac0pp7iv",
                "routing_number" : "101050001",
                "status" : "active",
                "type" : "external_account",
                "verification_status" : "verified"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/external_account"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "External Account List",
            "type" : "object",
            "x-title-plural" : "External Account Lists"
          }
        }
      }
    }
  }, {
    "id" : "e3500b0b-2d7e-4bd1-b626-42e09477f871",
    "name" : "Retrieve an Event",
    "request" : {
      "urlPath" : "/events/6qu6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"associated_object_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"associated_object_type\" : \"account\",\n  \"category\" : \"account.created\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"event_001dzz0r20rzr4zrhrr1364hy80\",\n  \"type\" : \"event\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3500b0b-2d7e-4bd1-b626-42e09477f871",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.573034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_event",
          "schema" : {
            "description" : "Events are records of things that happened to objects in the API. They also result in webhooks being generated.",
            "example" : {
              "associated_object_id" : "account_in71c4amph0vgo2qllky",
              "associated_object_type" : "account",
              "category" : "account.created",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "event_001dzz0r20rzr4zrhrr1364hy80",
              "type" : "event"
            },
            "properties" : {
              "associated_object_id" : {
                "description" : "The identifier of the object that generated this Event.",
                "type" : "string"
              },
              "associated_object_type" : {
                "description" : "The type of the object that generated this Event.",
                "type" : "string"
              },
              "category" : {
                "description" : "The category of the Event. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "enum" : [ "account.created", "account.updated", "account_number.created", "account_number.updated", "account_statement.created", "account_transfer.created", "account_transfer.updated", "ach_prenotification.created", "ach_prenotification.updated", "ach_transfer.created", "ach_transfer.updated", "card.created", "card.updated", "card_dispute.created", "card_dispute.updated", "check_deposit.created", "check_deposit.updated", "check_transfer.created", "check_transfer.updated", "declined_transaction.created", "digital_wallet_token.created", "digital_wallet_token.updated", "document.created", "entity.created", "entity.updated", "external_account.created", "file.created", "group.updated", "group.heartbeat", "inbound_ach_transfer_return.created", "inbound_ach_transfer_return.updated", "inbound_wire_drawdown_request.created", "oauth_connection.created", "oauth_connection.deactivated", "pending_transaction.created", "pending_transaction.updated", "real_time_decision.card_authorization_requested", "real_time_decision.digital_wallet_token_requested", "real_time_decision.digital_wallet_authentication_requested", "real_time_payments_transfer.created", "real_time_payments_transfer.updated", "real_time_payments_request_for_payment.created", "real_time_payments_request_for_payment.updated", "transaction.created", "wire_drawdown_request.created", "wire_drawdown_request.updated", "wire_transfer.created", "wire_transfer.updated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Occurs whenever an Account is created.", "Occurs whenever an Account is updated.", "Occurs whenever an Account Number is created.", "Occurs whenever an Account Number is updated.", "Occurs whenever an Account Statement is created.", "Occurs whenever an Account Transfer is created.", "Occurs whenever an Account Transfer is updated.", "Occurs whenever an ACH Prenotification is created.", "Occurs whenever an ACH Prenotification is updated.", "Occurs whenever an ACH Transfer is created.", "Occurs whenever an ACH Transfer is updated.", "Occurs whenever a Card is created.", "Occurs whenever a Card is updated.", "Occurs whenever a Card Dispute is created.", "Occurs whenever a Card Dispute is updated.", "Occurs whenever a Check Deposit is created.", "Occurs whenever a Check Deposit is updated.", "Occurs whenever a Check Transfer is created.", "Occurs whenever a Check Transfer is updated.", "Occurs whenever a Declined Transaction is created.", "Occurs whenever a Digital Wallet Token is created.", "Occurs whenever a Digital Wallet Token is updated.", "Occurs whenever a Document is created.", "Occurs whenever an Entity is created.", "Occurs whenever an Entity is updated.", "Occurs whenever an External Account is created.", "Occurs whenever a File is created.", "Occurs whenever a Group is updated.", "Increase may send webhooks with this category to see if a webhook endpoint is working properly.", "Occurs whenever an Inbound ACH Transfer Return is created.", "Occurs whenever an Inbound ACH Transfer Return is updated.", "Occurs whenever an Inbound Wire Drawdown Request is created.", "Occurs whenever an OAuth Connection is created.", "Occurs whenever an OAuth Connection is deactivated.", "Occurs whenever a Pending Transaction is created.", "Occurs whenever a Pending Transaction is updated.", "Occurs whenever a Real-Time Decision is created in response to a card authorization.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.", "Occurs whenever a Real Time Payments Transfer is created.", "Occurs whenever a Real Time Payments Transfer is updated.", "Occurs whenever a Real Time Payments Request for Payment is created.", "Occurs whenever a Real Time Payments Request for Payment is updated.", "Occurs whenever a Transaction is updated.", "Occurs whenever a Wire Drawdown Request is created.", "Occurs whenever a Wire Drawdown Request is updated.", "Occurs whenever a Wire Transfer is created.", "Occurs whenever a Wire Transfer is updated." ]
              },
              "created_at" : {
                "description" : "The time the Event was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The Event identifier.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `event`.",
                "enum" : [ "event" ],
                "type" : "string"
              }
            },
            "required" : [ "associated_object_id", "associated_object_type", "category", "created_at", "id", "type" ],
            "title" : "Event",
            "type" : "object",
            "x-tag" : "Events",
            "x-title-plural" : "Events"
          }
        }
      }
    }
  }, {
    "id" : "a762766a-1f6f-4818-8b1a-6d519d78235c",
    "name" : "List Events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"associated_object_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"associated_object_type\" : \"account\",\n    \"category\" : \"account.created\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"id\" : \"event_001dzz0r20rzr4zrhrr1364hy80\",\n    \"type\" : \"event\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a762766a-1f6f-4818-8b1a-6d519d78235c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.572861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_events",
          "schema" : {
            "description" : "A list of Event objects",
            "example" : {
              "data" : [ {
                "associated_object_id" : "account_in71c4amph0vgo2qllky",
                "associated_object_type" : "account",
                "category" : "account.created",
                "created_at" : "2020-01-31T23:59:59Z",
                "id" : "event_001dzz0r20rzr4zrhrr1364hy80",
                "type" : "event"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/event"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Event List",
            "type" : "object",
            "x-title-plural" : "Event Lists"
          }
        }
      }
    }
  }, {
    "id" : "8eb9c5d1-05fc-4704-9289-449dbd511d48",
    "name" : "Update an Event Subscription",
    "request" : {
      "urlPath" : "/event_subscriptions/ze0u",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"event_subscription_001dzz0r20rcdxgb013zqb8m04g\",\n  \"selected_event_category\" : null,\n  \"shared_secret\" : \"b88l20\",\n  \"status\" : \"active\",\n  \"type\" : \"event_subscription\",\n  \"url\" : \"https://website.com/webhooks\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8eb9c5d1-05fc-4704-9289-449dbd511d48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.572803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update_an_event_subscription",
          "schema" : {
            "description" : "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "event_subscription_001dzz0r20rcdxgb013zqb8m04g",
              "shared_secret" : "b88l20",
              "status" : "active",
              "type" : "event_subscription",
              "url" : "https://website.com/webhooks"
            },
            "properties" : {
              "created_at" : {
                "description" : "The time the event subscription was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The event subscription identifier.",
                "type" : "string"
              },
              "selected_event_category" : {
                "description" : "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
                "enum" : [ "account.created", "account.updated", "account_number.created", "account_number.updated", "account_statement.created", "account_transfer.created", "account_transfer.updated", "ach_prenotification.created", "ach_prenotification.updated", "ach_transfer.created", "ach_transfer.updated", "card.created", "card.updated", "card_dispute.created", "card_dispute.updated", "check_deposit.created", "check_deposit.updated", "check_transfer.created", "check_transfer.updated", "declined_transaction.created", "digital_wallet_token.created", "digital_wallet_token.updated", "document.created", "entity.created", "entity.updated", "external_account.created", "file.created", "group.updated", "group.heartbeat", "inbound_ach_transfer_return.created", "inbound_ach_transfer_return.updated", "inbound_wire_drawdown_request.created", "oauth_connection.created", "oauth_connection.deactivated", "pending_transaction.created", "pending_transaction.updated", "real_time_decision.card_authorization_requested", "real_time_decision.digital_wallet_token_requested", "real_time_decision.digital_wallet_authentication_requested", "real_time_payments_transfer.created", "real_time_payments_transfer.updated", "real_time_payments_request_for_payment.created", "real_time_payments_request_for_payment.updated", "transaction.created", "wire_drawdown_request.created", "wire_drawdown_request.updated", "wire_transfer.created", "wire_transfer.updated" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "Occurs whenever an Account is created.", "Occurs whenever an Account is updated.", "Occurs whenever an Account Number is created.", "Occurs whenever an Account Number is updated.", "Occurs whenever an Account Statement is created.", "Occurs whenever an Account Transfer is created.", "Occurs whenever an Account Transfer is updated.", "Occurs whenever an ACH Prenotification is created.", "Occurs whenever an ACH Prenotification is updated.", "Occurs whenever an ACH Transfer is created.", "Occurs whenever an ACH Transfer is updated.", "Occurs whenever a Card is created.", "Occurs whenever a Card is updated.", "Occurs whenever a Card Dispute is created.", "Occurs whenever a Card Dispute is updated.", "Occurs whenever a Check Deposit is created.", "Occurs whenever a Check Deposit is updated.", "Occurs whenever a Check Transfer is created.", "Occurs whenever a Check Transfer is updated.", "Occurs whenever a Declined Transaction is created.", "Occurs whenever a Digital Wallet Token is created.", "Occurs whenever a Digital Wallet Token is updated.", "Occurs whenever a Document is created.", "Occurs whenever an Entity is created.", "Occurs whenever an Entity is updated.", "Occurs whenever an External Account is created.", "Occurs whenever a File is created.", "Occurs whenever a Group is updated.", "Increase may send webhooks with this category to see if a webhook endpoint is working properly.", "Occurs whenever an Inbound ACH Transfer Return is created.", "Occurs whenever an Inbound ACH Transfer Return is updated.", "Occurs whenever an Inbound Wire Drawdown Request is created.", "Occurs whenever an OAuth Connection is created.", "Occurs whenever an OAuth Connection is deactivated.", "Occurs whenever a Pending Transaction is created.", "Occurs whenever a Pending Transaction is updated.", "Occurs whenever a Real-Time Decision is created in response to a card authorization.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.", "Occurs whenever a Real Time Payments Transfer is created.", "Occurs whenever a Real Time Payments Transfer is updated.", "Occurs whenever a Real Time Payments Request for Payment is created.", "Occurs whenever a Real Time Payments Request for Payment is updated.", "Occurs whenever a Transaction is updated.", "Occurs whenever a Wire Drawdown Request is created.", "Occurs whenever a Wire Drawdown Request is updated.", "Occurs whenever a Wire Transfer is created.", "Occurs whenever a Wire Transfer is updated." ]
              },
              "shared_secret" : {
                "description" : "The key that will be used to sign webhooks.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if we'll send notifications to this subscription.",
                "enum" : [ "active", "disabled", "deleted", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The subscription is active and Events will be delivered normally.", "The subscription is temporarily disabled and Events will not be delivered.", "The subscription is permanently disabled and Events will not be delivered.", "The subscription is temporarily disabled due to delivery errors and Events will not be delivered." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `event_subscription`.",
                "enum" : [ "event_subscription" ],
                "type" : "string"
              },
              "url" : {
                "description" : "The webhook url where we'll send notifications.",
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "status", "selected_event_category", "url", "shared_secret", "type" ],
            "title" : "Event Subscription",
            "type" : "object",
            "x-tag" : "Event Subscriptions",
            "x-title-plural" : "Event Subscriptions"
          }
        }
      }
    }
  }, {
    "id" : "eed4f502-a83e-4361-9249-041fc0243611",
    "name" : "Retrieve an Event Subscription",
    "request" : {
      "urlPath" : "/event_subscriptions/17iq",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"event_subscription_001dzz0r20rcdxgb013zqb8m04g\",\n  \"selected_event_category\" : null,\n  \"shared_secret\" : \"b88l20\",\n  \"status\" : \"active\",\n  \"type\" : \"event_subscription\",\n  \"url\" : \"https://website.com/webhooks\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eed4f502-a83e-4361-9249-041fc0243611",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.572629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_event_subscription",
          "schema" : {
            "description" : "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "event_subscription_001dzz0r20rcdxgb013zqb8m04g",
              "shared_secret" : "b88l20",
              "status" : "active",
              "type" : "event_subscription",
              "url" : "https://website.com/webhooks"
            },
            "properties" : {
              "created_at" : {
                "description" : "The time the event subscription was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The event subscription identifier.",
                "type" : "string"
              },
              "selected_event_category" : {
                "description" : "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
                "enum" : [ "account.created", "account.updated", "account_number.created", "account_number.updated", "account_statement.created", "account_transfer.created", "account_transfer.updated", "ach_prenotification.created", "ach_prenotification.updated", "ach_transfer.created", "ach_transfer.updated", "card.created", "card.updated", "card_dispute.created", "card_dispute.updated", "check_deposit.created", "check_deposit.updated", "check_transfer.created", "check_transfer.updated", "declined_transaction.created", "digital_wallet_token.created", "digital_wallet_token.updated", "document.created", "entity.created", "entity.updated", "external_account.created", "file.created", "group.updated", "group.heartbeat", "inbound_ach_transfer_return.created", "inbound_ach_transfer_return.updated", "inbound_wire_drawdown_request.created", "oauth_connection.created", "oauth_connection.deactivated", "pending_transaction.created", "pending_transaction.updated", "real_time_decision.card_authorization_requested", "real_time_decision.digital_wallet_token_requested", "real_time_decision.digital_wallet_authentication_requested", "real_time_payments_transfer.created", "real_time_payments_transfer.updated", "real_time_payments_request_for_payment.created", "real_time_payments_request_for_payment.updated", "transaction.created", "wire_drawdown_request.created", "wire_drawdown_request.updated", "wire_transfer.created", "wire_transfer.updated" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "Occurs whenever an Account is created.", "Occurs whenever an Account is updated.", "Occurs whenever an Account Number is created.", "Occurs whenever an Account Number is updated.", "Occurs whenever an Account Statement is created.", "Occurs whenever an Account Transfer is created.", "Occurs whenever an Account Transfer is updated.", "Occurs whenever an ACH Prenotification is created.", "Occurs whenever an ACH Prenotification is updated.", "Occurs whenever an ACH Transfer is created.", "Occurs whenever an ACH Transfer is updated.", "Occurs whenever a Card is created.", "Occurs whenever a Card is updated.", "Occurs whenever a Card Dispute is created.", "Occurs whenever a Card Dispute is updated.", "Occurs whenever a Check Deposit is created.", "Occurs whenever a Check Deposit is updated.", "Occurs whenever a Check Transfer is created.", "Occurs whenever a Check Transfer is updated.", "Occurs whenever a Declined Transaction is created.", "Occurs whenever a Digital Wallet Token is created.", "Occurs whenever a Digital Wallet Token is updated.", "Occurs whenever a Document is created.", "Occurs whenever an Entity is created.", "Occurs whenever an Entity is updated.", "Occurs whenever an External Account is created.", "Occurs whenever a File is created.", "Occurs whenever a Group is updated.", "Increase may send webhooks with this category to see if a webhook endpoint is working properly.", "Occurs whenever an Inbound ACH Transfer Return is created.", "Occurs whenever an Inbound ACH Transfer Return is updated.", "Occurs whenever an Inbound Wire Drawdown Request is created.", "Occurs whenever an OAuth Connection is created.", "Occurs whenever an OAuth Connection is deactivated.", "Occurs whenever a Pending Transaction is created.", "Occurs whenever a Pending Transaction is updated.", "Occurs whenever a Real-Time Decision is created in response to a card authorization.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.", "Occurs whenever a Real Time Payments Transfer is created.", "Occurs whenever a Real Time Payments Transfer is updated.", "Occurs whenever a Real Time Payments Request for Payment is created.", "Occurs whenever a Real Time Payments Request for Payment is updated.", "Occurs whenever a Transaction is updated.", "Occurs whenever a Wire Drawdown Request is created.", "Occurs whenever a Wire Drawdown Request is updated.", "Occurs whenever a Wire Transfer is created.", "Occurs whenever a Wire Transfer is updated." ]
              },
              "shared_secret" : {
                "description" : "The key that will be used to sign webhooks.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if we'll send notifications to this subscription.",
                "enum" : [ "active", "disabled", "deleted", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The subscription is active and Events will be delivered normally.", "The subscription is temporarily disabled and Events will not be delivered.", "The subscription is permanently disabled and Events will not be delivered.", "The subscription is temporarily disabled due to delivery errors and Events will not be delivered." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `event_subscription`.",
                "enum" : [ "event_subscription" ],
                "type" : "string"
              },
              "url" : {
                "description" : "The webhook url where we'll send notifications.",
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "status", "selected_event_category", "url", "shared_secret", "type" ],
            "title" : "Event Subscription",
            "type" : "object",
            "x-tag" : "Event Subscriptions",
            "x-title-plural" : "Event Subscriptions"
          }
        }
      }
    }
  }, {
    "id" : "6c0f5779-5e75-4c78-8a7a-08b918823819",
    "name" : "Create an Event Subscription",
    "request" : {
      "urlPath" : "/event_subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"event_subscription_001dzz0r20rcdxgb013zqb8m04g\",\n  \"selected_event_category\" : null,\n  \"shared_secret\" : \"b88l20\",\n  \"status\" : \"active\",\n  \"type\" : \"event_subscription\",\n  \"url\" : \"https://website.com/webhooks\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c0f5779-5e75-4c78-8a7a-08b918823819",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.572444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_event_subscription",
          "schema" : {
            "description" : "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "event_subscription_001dzz0r20rcdxgb013zqb8m04g",
              "shared_secret" : "b88l20",
              "status" : "active",
              "type" : "event_subscription",
              "url" : "https://website.com/webhooks"
            },
            "properties" : {
              "created_at" : {
                "description" : "The time the event subscription was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The event subscription identifier.",
                "type" : "string"
              },
              "selected_event_category" : {
                "description" : "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
                "enum" : [ "account.created", "account.updated", "account_number.created", "account_number.updated", "account_statement.created", "account_transfer.created", "account_transfer.updated", "ach_prenotification.created", "ach_prenotification.updated", "ach_transfer.created", "ach_transfer.updated", "card.created", "card.updated", "card_dispute.created", "card_dispute.updated", "check_deposit.created", "check_deposit.updated", "check_transfer.created", "check_transfer.updated", "declined_transaction.created", "digital_wallet_token.created", "digital_wallet_token.updated", "document.created", "entity.created", "entity.updated", "external_account.created", "file.created", "group.updated", "group.heartbeat", "inbound_ach_transfer_return.created", "inbound_ach_transfer_return.updated", "inbound_wire_drawdown_request.created", "oauth_connection.created", "oauth_connection.deactivated", "pending_transaction.created", "pending_transaction.updated", "real_time_decision.card_authorization_requested", "real_time_decision.digital_wallet_token_requested", "real_time_decision.digital_wallet_authentication_requested", "real_time_payments_transfer.created", "real_time_payments_transfer.updated", "real_time_payments_request_for_payment.created", "real_time_payments_request_for_payment.updated", "transaction.created", "wire_drawdown_request.created", "wire_drawdown_request.updated", "wire_transfer.created", "wire_transfer.updated" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "Occurs whenever an Account is created.", "Occurs whenever an Account is updated.", "Occurs whenever an Account Number is created.", "Occurs whenever an Account Number is updated.", "Occurs whenever an Account Statement is created.", "Occurs whenever an Account Transfer is created.", "Occurs whenever an Account Transfer is updated.", "Occurs whenever an ACH Prenotification is created.", "Occurs whenever an ACH Prenotification is updated.", "Occurs whenever an ACH Transfer is created.", "Occurs whenever an ACH Transfer is updated.", "Occurs whenever a Card is created.", "Occurs whenever a Card is updated.", "Occurs whenever a Card Dispute is created.", "Occurs whenever a Card Dispute is updated.", "Occurs whenever a Check Deposit is created.", "Occurs whenever a Check Deposit is updated.", "Occurs whenever a Check Transfer is created.", "Occurs whenever a Check Transfer is updated.", "Occurs whenever a Declined Transaction is created.", "Occurs whenever a Digital Wallet Token is created.", "Occurs whenever a Digital Wallet Token is updated.", "Occurs whenever a Document is created.", "Occurs whenever an Entity is created.", "Occurs whenever an Entity is updated.", "Occurs whenever an External Account is created.", "Occurs whenever a File is created.", "Occurs whenever a Group is updated.", "Increase may send webhooks with this category to see if a webhook endpoint is working properly.", "Occurs whenever an Inbound ACH Transfer Return is created.", "Occurs whenever an Inbound ACH Transfer Return is updated.", "Occurs whenever an Inbound Wire Drawdown Request is created.", "Occurs whenever an OAuth Connection is created.", "Occurs whenever an OAuth Connection is deactivated.", "Occurs whenever a Pending Transaction is created.", "Occurs whenever a Pending Transaction is updated.", "Occurs whenever a Real-Time Decision is created in response to a card authorization.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.", "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.", "Occurs whenever a Real Time Payments Transfer is created.", "Occurs whenever a Real Time Payments Transfer is updated.", "Occurs whenever a Real Time Payments Request for Payment is created.", "Occurs whenever a Real Time Payments Request for Payment is updated.", "Occurs whenever a Transaction is updated.", "Occurs whenever a Wire Drawdown Request is created.", "Occurs whenever a Wire Drawdown Request is updated.", "Occurs whenever a Wire Transfer is created.", "Occurs whenever a Wire Transfer is updated." ]
              },
              "shared_secret" : {
                "description" : "The key that will be used to sign webhooks.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if we'll send notifications to this subscription.",
                "enum" : [ "active", "disabled", "deleted", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The subscription is active and Events will be delivered normally.", "The subscription is temporarily disabled and Events will not be delivered.", "The subscription is permanently disabled and Events will not be delivered.", "The subscription is temporarily disabled due to delivery errors and Events will not be delivered." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `event_subscription`.",
                "enum" : [ "event_subscription" ],
                "type" : "string"
              },
              "url" : {
                "description" : "The webhook url where we'll send notifications.",
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "status", "selected_event_category", "url", "shared_secret", "type" ],
            "title" : "Event Subscription",
            "type" : "object",
            "x-tag" : "Event Subscriptions",
            "x-title-plural" : "Event Subscriptions"
          }
        }
      }
    }
  }, {
    "id" : "b8ec8e29-85f3-4715-93e1-4245b74bb2a8",
    "name" : "List Event Subscriptions",
    "request" : {
      "urlPath" : "/event_subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"id\" : \"event_subscription_001dzz0r20rcdxgb013zqb8m04g\",\n    \"selected_event_category\" : null,\n    \"shared_secret\" : \"b88l20\",\n    \"status\" : \"active\",\n    \"type\" : \"event_subscription\",\n    \"url\" : \"https://website.com/webhooks\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8ec8e29-85f3-4715-93e1-4245b74bb2a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.572319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_event_subscriptions",
          "schema" : {
            "description" : "A list of Event Subscription objects",
            "example" : {
              "data" : [ {
                "created_at" : "2020-01-31T23:59:59Z",
                "id" : "event_subscription_001dzz0r20rcdxgb013zqb8m04g",
                "shared_secret" : "b88l20",
                "status" : "active",
                "type" : "event_subscription",
                "url" : "https://website.com/webhooks"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/event_subscription"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Event Subscription List",
            "type" : "object",
            "x-title-plural" : "Event Subscription Lists"
          }
        }
      }
    }
  }, {
    "id" : "b2a88e4a-a6a4-4a75-81c1-2f6d7f0278a5",
    "name" : "Create a supplemental document for an Entity",
    "request" : {
      "urlPath" : "/entities/gm4h/supplemental_documents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corporation\" : {\n    \"address\" : {\n      \"city\" : \"New York\",\n      \"line1\" : \"33 Liberty Street\",\n      \"line2\" : null,\n      \"state\" : \"NY\",\n      \"zip\" : \"10045\"\n    },\n    \"beneficial_owners\" : [ {\n      \"company_title\" : \"CEO\",\n      \"individual\" : {\n        \"address\" : {\n          \"city\" : \"New York\",\n          \"line1\" : \"33 Liberty Street\",\n          \"line2\" : null,\n          \"state\" : \"NY\",\n          \"zip\" : \"10045\"\n        },\n        \"date_of_birth\" : \"1970-01-31\",\n        \"identification\" : {\n          \"country\" : \"US\",\n          \"method\" : \"social_security_number\",\n          \"number_last4\" : \"1120\"\n        },\n        \"name\" : \"Ian Crease\"\n      },\n      \"prong\" : \"control\"\n    } ],\n    \"incorporation_state\" : \"NY\",\n    \"name\" : \"National Phonograph Company\",\n    \"tax_identifier\" : \"602214076\",\n    \"website\" : \"https://example.com\"\n  },\n  \"description\" : null,\n  \"id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"joint\" : null,\n  \"natural_person\" : null,\n  \"relationship\" : \"informational\",\n  \"structure\" : \"corporation\",\n  \"supplemental_documents\" : [ {\n    \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\"\n  } ],\n  \"trust\" : null,\n  \"type\" : \"entity\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2a88e4a-a6a4-4a75-81c1-2f6d7f0278a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.572224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_supplemental_document_for_an_entity",
          "schema" : {
            "description" : "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts.",
            "example" : {
              "corporation" : {
                "address" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "state" : "NY",
                  "zip" : "10045"
                },
                "beneficial_owners" : [ {
                  "company_title" : "CEO",
                  "individual" : {
                    "address" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "date_of_birth" : "1970-01-31",
                    "identification" : {
                      "country" : "US",
                      "method" : "social_security_number",
                      "number_last4" : "1120"
                    },
                    "name" : "Ian Crease"
                  },
                  "prong" : "control"
                } ],
                "incorporation_state" : "NY",
                "name" : "National Phonograph Company",
                "tax_identifier" : "602214076",
                "website" : "https://example.com"
              },
              "id" : "entity_n8y8tnk2p9339ti393yi",
              "relationship" : "informational",
              "structure" : "corporation",
              "supplemental_documents" : [ {
                "file_id" : "file_makxrc67oh9l6sg7w9yc"
              } ],
              "type" : "entity"
            },
            "properties" : {
              "corporation" : {
                "description" : "Details of the corporation entity. Will be present if `structure` is equal to `corporation`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The corporation's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "beneficial_owners" : {
                    "description" : "The identifying details of anyone controlling or owning 25% or more of the corporation.",
                    "items" : {
                      "properties" : {
                        "company_title" : {
                          "description" : "This person's role or title within the entity.",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "individual" : {
                          "description" : "Personal details for the beneficial owner.",
                          "properties" : {
                            "address" : {
                              "description" : "The person's address.",
                              "example" : {
                                "city" : "New York",
                                "line1" : "33 Liberty Street",
                                "state" : "NY",
                                "zip" : "10045"
                              },
                              "properties" : {
                                "city" : {
                                  "description" : "The city of the address.",
                                  "type" : "string"
                                },
                                "line1" : {
                                  "description" : "The first line of the address.",
                                  "type" : "string"
                                },
                                "line2" : {
                                  "description" : "The second line of the address.",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "state" : {
                                  "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                                  "type" : "string"
                                },
                                "zip" : {
                                  "description" : "The ZIP code of the address.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "line1", "line2", "city", "state", "zip" ],
                              "title" : "Address",
                              "type" : "object",
                              "x-title-plural" : "Addresss"
                            },
                            "date_of_birth" : {
                              "description" : "The person's date of birth in YYYY-MM-DD format.",
                              "format" : "date",
                              "type" : "string"
                            },
                            "identification" : {
                              "description" : "A means of verifying the person's identity.",
                              "properties" : {
                                "method" : {
                                  "description" : "A method that can be used to verify the individual's identity.",
                                  "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                                  "type" : "string",
                                  "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                                },
                                "number_last4" : {
                                  "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "method", "number_last4" ],
                              "title" : "Identification",
                              "type" : "object",
                              "x-title-plural" : "Identifications"
                            },
                            "name" : {
                              "description" : "The person's legal name.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "name", "date_of_birth", "address", "identification" ],
                          "title" : "Individual",
                          "type" : "object",
                          "x-title-plural" : "Individuals"
                        },
                        "prong" : {
                          "description" : "Why this person is considered a beneficial owner of the entity.",
                          "enum" : [ "ownership", "control" ],
                          "type" : "string",
                          "x-enum-descriptions" : [ "A person with 25% or greater direct or indirect ownership of the entity.", "A person who manages, directs, or has significant control of the entity." ]
                        }
                      },
                      "required" : [ "individual", "company_title", "prong" ],
                      "title" : "Beneficial Owners Element",
                      "type" : "object",
                      "x-title-plural" : "Beneficial Owners Elements"
                    },
                    "type" : "array"
                  },
                  "incorporation_state" : {
                    "description" : "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The legal name of the corporation.",
                    "type" : "string"
                  },
                  "tax_identifier" : {
                    "description" : "The Employer Identification Number (EIN) for the corporation.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "website" : {
                    "description" : "The website of the corporation.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "website", "tax_identifier", "incorporation_state", "address", "beneficial_owners" ],
                "title" : "Corporation",
                "type" : "object",
                "x-title-plural" : "Corporations"
              },
              "description" : {
                "description" : "The entity's description for display purposes.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The entity's identifier.",
                "type" : "string"
              },
              "joint" : {
                "description" : "Details of the joint entity. Will be present if `structure` is equal to `joint`.",
                "nullable" : true,
                "properties" : {
                  "individuals" : {
                    "description" : "The two individuals that share control of the entity.",
                    "items" : {
                      "properties" : {
                        "address" : {
                          "description" : "The person's address.",
                          "example" : {
                            "city" : "New York",
                            "line1" : "33 Liberty Street",
                            "state" : "NY",
                            "zip" : "10045"
                          },
                          "properties" : {
                            "city" : {
                              "description" : "The city of the address.",
                              "type" : "string"
                            },
                            "line1" : {
                              "description" : "The first line of the address.",
                              "type" : "string"
                            },
                            "line2" : {
                              "description" : "The second line of the address.",
                              "nullable" : true,
                              "type" : "string"
                            },
                            "state" : {
                              "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                              "type" : "string"
                            },
                            "zip" : {
                              "description" : "The ZIP code of the address.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "line1", "line2", "city", "state", "zip" ],
                          "title" : "Address",
                          "type" : "object",
                          "x-title-plural" : "Addresss"
                        },
                        "date_of_birth" : {
                          "description" : "The person's date of birth in YYYY-MM-DD format.",
                          "format" : "date",
                          "type" : "string"
                        },
                        "identification" : {
                          "description" : "A means of verifying the person's identity.",
                          "properties" : {
                            "method" : {
                              "description" : "A method that can be used to verify the individual's identity.",
                              "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                              "type" : "string",
                              "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                            },
                            "number_last4" : {
                              "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "method", "number_last4" ],
                          "title" : "Identification",
                          "type" : "object",
                          "x-title-plural" : "Identifications"
                        },
                        "name" : {
                          "description" : "The person's legal name.",
                          "type" : "string"
                        }
                      },
                      "required" : [ "name", "date_of_birth", "address", "identification" ],
                      "title" : "Individual",
                      "type" : "object",
                      "x-title-plural" : "Individuals"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "The entity's name.",
                    "type" : "string"
                  }
                },
                "required" : [ "name", "individuals" ],
                "title" : "Joint",
                "type" : "object",
                "x-title-plural" : "Joints"
              },
              "natural_person" : {
                "description" : "Details of the natural person entity. Will be present if `structure` is equal to `natural_person`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The person's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "date_of_birth" : {
                    "description" : "The person's date of birth in YYYY-MM-DD format.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "identification" : {
                    "description" : "A means of verifying the person's identity.",
                    "properties" : {
                      "method" : {
                        "description" : "A method that can be used to verify the individual's identity.",
                        "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                      },
                      "number_last4" : {
                        "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "method", "number_last4" ],
                    "title" : "Identification",
                    "type" : "object",
                    "x-title-plural" : "Identifications"
                  },
                  "name" : {
                    "description" : "The person's legal name.",
                    "type" : "string"
                  }
                },
                "required" : [ "name", "date_of_birth", "address", "identification" ],
                "title" : "Individual",
                "type" : "object",
                "x-title-plural" : "Individuals"
              },
              "relationship" : {
                "description" : "The relationship between your group and the entity.",
                "enum" : [ "affiliated", "informational", "unaffiliated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The entity is controlled by your group.", "The entity is for informational purposes only.", "The entity is not controlled by your group, but can still directly open accounts." ]
              },
              "structure" : {
                "description" : "The entity's legal structure.",
                "enum" : [ "corporation", "natural_person", "joint", "trust" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A corporation.", "An individual person.", "Multiple individual people.", "A trust." ]
              },
              "supplemental_documents" : {
                "description" : "Additional documentation associated with the entity.",
                "items" : {
                  "properties" : {
                    "file_id" : {
                      "description" : "The File containing the document.",
                      "type" : "string"
                    }
                  },
                  "required" : [ "file_id" ],
                  "title" : "Supplemental Documents Element",
                  "type" : "object",
                  "x-title-plural" : "Supplemental Documents Elements"
                },
                "type" : "array"
              },
              "trust" : {
                "description" : "Details of the trust entity. Will be present if `structure` is equal to `trust`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The trust's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "category" : {
                    "description" : "Whether the trust is `revocable` or `irrevocable`.",
                    "enum" : [ "revocable", "irrevocable" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The trust is revocable by the grantor.", "The trust cannot be revoked." ]
                  },
                  "formation_document_file_id" : {
                    "description" : "The ID for the File containing the formation document of the trust.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "formation_state" : {
                    "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "grantor" : {
                    "description" : "The grantor of the trust. Will be present if the `category` is `revocable`.",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "description" : "The person's address.",
                        "example" : {
                          "city" : "New York",
                          "line1" : "33 Liberty Street",
                          "state" : "NY",
                          "zip" : "10045"
                        },
                        "properties" : {
                          "city" : {
                            "description" : "The city of the address.",
                            "type" : "string"
                          },
                          "line1" : {
                            "description" : "The first line of the address.",
                            "type" : "string"
                          },
                          "line2" : {
                            "description" : "The second line of the address.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "state" : {
                            "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                            "type" : "string"
                          },
                          "zip" : {
                            "description" : "The ZIP code of the address.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "line1", "line2", "city", "state", "zip" ],
                        "title" : "Address",
                        "type" : "object",
                        "x-title-plural" : "Addresss"
                      },
                      "date_of_birth" : {
                        "description" : "The person's date of birth in YYYY-MM-DD format.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "identification" : {
                        "description" : "A means of verifying the person's identity.",
                        "properties" : {
                          "method" : {
                            "description" : "A method that can be used to verify the individual's identity.",
                            "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                          },
                          "number_last4" : {
                            "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "method", "number_last4" ],
                        "title" : "Identification",
                        "type" : "object",
                        "x-title-plural" : "Identifications"
                      },
                      "name" : {
                        "description" : "The person's legal name.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "date_of_birth", "address", "identification" ],
                    "title" : "Individual",
                    "type" : "object",
                    "x-title-plural" : "Individuals"
                  },
                  "name" : {
                    "description" : "The trust's name",
                    "type" : "string"
                  },
                  "tax_identifier" : {
                    "description" : "The Employer Identification Number (EIN) of the trust itself.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "trustees" : {
                    "description" : "The trustees of the trust.",
                    "items" : {
                      "properties" : {
                        "individual" : {
                          "description" : "The individual trustee of the trust. Will be present if the trustee's `structure` is equal to `individual`.",
                          "nullable" : true,
                          "properties" : {
                            "address" : {
                              "description" : "The person's address.",
                              "example" : {
                                "city" : "New York",
                                "line1" : "33 Liberty Street",
                                "state" : "NY",
                                "zip" : "10045"
                              },
                              "properties" : {
                                "city" : {
                                  "description" : "The city of the address.",
                                  "type" : "string"
                                },
                                "line1" : {
                                  "description" : "The first line of the address.",
                                  "type" : "string"
                                },
                                "line2" : {
                                  "description" : "The second line of the address.",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "state" : {
                                  "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                                  "type" : "string"
                                },
                                "zip" : {
                                  "description" : "The ZIP code of the address.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "line1", "line2", "city", "state", "zip" ],
                              "title" : "Address",
                              "type" : "object",
                              "x-title-plural" : "Addresss"
                            },
                            "date_of_birth" : {
                              "description" : "The person's date of birth in YYYY-MM-DD format.",
                              "format" : "date",
                              "type" : "string"
                            },
                            "identification" : {
                              "description" : "A means of verifying the person's identity.",
                              "properties" : {
                                "method" : {
                                  "description" : "A method that can be used to verify the individual's identity.",
                                  "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                                  "type" : "string",
                                  "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                                },
                                "number_last4" : {
                                  "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "method", "number_last4" ],
                              "title" : "Identification",
                              "type" : "object",
                              "x-title-plural" : "Identifications"
                            },
                            "name" : {
                              "description" : "The person's legal name.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "name", "date_of_birth", "address", "identification" ],
                          "title" : "Individual",
                          "type" : "object",
                          "x-title-plural" : "Individuals"
                        },
                        "structure" : {
                          "description" : "The structure of the trustee. Will always be equal to `individual`.",
                          "enum" : [ "individual" ],
                          "type" : "string",
                          "x-enum-descriptions" : [ "The trustee is an individual." ]
                        }
                      },
                      "required" : [ "structure", "individual" ],
                      "title" : "Trustees Element",
                      "type" : "object",
                      "x-title-plural" : "Trustees Elements"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "name", "category", "address", "formation_state", "tax_identifier", "trustees", "grantor", "formation_document_file_id" ],
                "title" : "Trust",
                "type" : "object",
                "x-title-plural" : "Trusts"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `entity`.",
                "enum" : [ "entity" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "structure", "corporation", "natural_person", "joint", "trust", "type", "description", "relationship", "supplemental_documents" ],
            "title" : "Entity",
            "type" : "object",
            "x-tag" : "Entities",
            "x-title-plural" : "Entities"
          }
        }
      }
    }
  }, {
    "id" : "34ad85f7-3331-4024-8714-cfc21b93bf0a",
    "name" : "Retrieve an Entity",
    "request" : {
      "urlPath" : "/entities/m20e",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corporation\" : {\n    \"address\" : {\n      \"city\" : \"New York\",\n      \"line1\" : \"33 Liberty Street\",\n      \"line2\" : null,\n      \"state\" : \"NY\",\n      \"zip\" : \"10045\"\n    },\n    \"beneficial_owners\" : [ {\n      \"company_title\" : \"CEO\",\n      \"individual\" : {\n        \"address\" : {\n          \"city\" : \"New York\",\n          \"line1\" : \"33 Liberty Street\",\n          \"line2\" : null,\n          \"state\" : \"NY\",\n          \"zip\" : \"10045\"\n        },\n        \"date_of_birth\" : \"1970-01-31\",\n        \"identification\" : {\n          \"country\" : \"US\",\n          \"method\" : \"social_security_number\",\n          \"number_last4\" : \"1120\"\n        },\n        \"name\" : \"Ian Crease\"\n      },\n      \"prong\" : \"control\"\n    } ],\n    \"incorporation_state\" : \"NY\",\n    \"name\" : \"National Phonograph Company\",\n    \"tax_identifier\" : \"602214076\",\n    \"website\" : \"https://example.com\"\n  },\n  \"description\" : null,\n  \"id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"joint\" : null,\n  \"natural_person\" : null,\n  \"relationship\" : \"informational\",\n  \"structure\" : \"corporation\",\n  \"supplemental_documents\" : [ {\n    \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\"\n  } ],\n  \"trust\" : null,\n  \"type\" : \"entity\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34ad85f7-3331-4024-8714-cfc21b93bf0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.571506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_entity",
          "schema" : {
            "description" : "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts.",
            "example" : {
              "corporation" : {
                "address" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "state" : "NY",
                  "zip" : "10045"
                },
                "beneficial_owners" : [ {
                  "company_title" : "CEO",
                  "individual" : {
                    "address" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "date_of_birth" : "1970-01-31",
                    "identification" : {
                      "country" : "US",
                      "method" : "social_security_number",
                      "number_last4" : "1120"
                    },
                    "name" : "Ian Crease"
                  },
                  "prong" : "control"
                } ],
                "incorporation_state" : "NY",
                "name" : "National Phonograph Company",
                "tax_identifier" : "602214076",
                "website" : "https://example.com"
              },
              "id" : "entity_n8y8tnk2p9339ti393yi",
              "relationship" : "informational",
              "structure" : "corporation",
              "supplemental_documents" : [ {
                "file_id" : "file_makxrc67oh9l6sg7w9yc"
              } ],
              "type" : "entity"
            },
            "properties" : {
              "corporation" : {
                "description" : "Details of the corporation entity. Will be present if `structure` is equal to `corporation`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The corporation's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "beneficial_owners" : {
                    "description" : "The identifying details of anyone controlling or owning 25% or more of the corporation.",
                    "items" : {
                      "properties" : {
                        "company_title" : {
                          "description" : "This person's role or title within the entity.",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "individual" : {
                          "description" : "Personal details for the beneficial owner.",
                          "properties" : {
                            "address" : {
                              "description" : "The person's address.",
                              "example" : {
                                "city" : "New York",
                                "line1" : "33 Liberty Street",
                                "state" : "NY",
                                "zip" : "10045"
                              },
                              "properties" : {
                                "city" : {
                                  "description" : "The city of the address.",
                                  "type" : "string"
                                },
                                "line1" : {
                                  "description" : "The first line of the address.",
                                  "type" : "string"
                                },
                                "line2" : {
                                  "description" : "The second line of the address.",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "state" : {
                                  "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                                  "type" : "string"
                                },
                                "zip" : {
                                  "description" : "The ZIP code of the address.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "line1", "line2", "city", "state", "zip" ],
                              "title" : "Address",
                              "type" : "object",
                              "x-title-plural" : "Addresss"
                            },
                            "date_of_birth" : {
                              "description" : "The person's date of birth in YYYY-MM-DD format.",
                              "format" : "date",
                              "type" : "string"
                            },
                            "identification" : {
                              "description" : "A means of verifying the person's identity.",
                              "properties" : {
                                "method" : {
                                  "description" : "A method that can be used to verify the individual's identity.",
                                  "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                                  "type" : "string",
                                  "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                                },
                                "number_last4" : {
                                  "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "method", "number_last4" ],
                              "title" : "Identification",
                              "type" : "object",
                              "x-title-plural" : "Identifications"
                            },
                            "name" : {
                              "description" : "The person's legal name.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "name", "date_of_birth", "address", "identification" ],
                          "title" : "Individual",
                          "type" : "object",
                          "x-title-plural" : "Individuals"
                        },
                        "prong" : {
                          "description" : "Why this person is considered a beneficial owner of the entity.",
                          "enum" : [ "ownership", "control" ],
                          "type" : "string",
                          "x-enum-descriptions" : [ "A person with 25% or greater direct or indirect ownership of the entity.", "A person who manages, directs, or has significant control of the entity." ]
                        }
                      },
                      "required" : [ "individual", "company_title", "prong" ],
                      "title" : "Beneficial Owners Element",
                      "type" : "object",
                      "x-title-plural" : "Beneficial Owners Elements"
                    },
                    "type" : "array"
                  },
                  "incorporation_state" : {
                    "description" : "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The legal name of the corporation.",
                    "type" : "string"
                  },
                  "tax_identifier" : {
                    "description" : "The Employer Identification Number (EIN) for the corporation.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "website" : {
                    "description" : "The website of the corporation.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "website", "tax_identifier", "incorporation_state", "address", "beneficial_owners" ],
                "title" : "Corporation",
                "type" : "object",
                "x-title-plural" : "Corporations"
              },
              "description" : {
                "description" : "The entity's description for display purposes.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The entity's identifier.",
                "type" : "string"
              },
              "joint" : {
                "description" : "Details of the joint entity. Will be present if `structure` is equal to `joint`.",
                "nullable" : true,
                "properties" : {
                  "individuals" : {
                    "description" : "The two individuals that share control of the entity.",
                    "items" : {
                      "properties" : {
                        "address" : {
                          "description" : "The person's address.",
                          "example" : {
                            "city" : "New York",
                            "line1" : "33 Liberty Street",
                            "state" : "NY",
                            "zip" : "10045"
                          },
                          "properties" : {
                            "city" : {
                              "description" : "The city of the address.",
                              "type" : "string"
                            },
                            "line1" : {
                              "description" : "The first line of the address.",
                              "type" : "string"
                            },
                            "line2" : {
                              "description" : "The second line of the address.",
                              "nullable" : true,
                              "type" : "string"
                            },
                            "state" : {
                              "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                              "type" : "string"
                            },
                            "zip" : {
                              "description" : "The ZIP code of the address.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "line1", "line2", "city", "state", "zip" ],
                          "title" : "Address",
                          "type" : "object",
                          "x-title-plural" : "Addresss"
                        },
                        "date_of_birth" : {
                          "description" : "The person's date of birth in YYYY-MM-DD format.",
                          "format" : "date",
                          "type" : "string"
                        },
                        "identification" : {
                          "description" : "A means of verifying the person's identity.",
                          "properties" : {
                            "method" : {
                              "description" : "A method that can be used to verify the individual's identity.",
                              "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                              "type" : "string",
                              "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                            },
                            "number_last4" : {
                              "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "method", "number_last4" ],
                          "title" : "Identification",
                          "type" : "object",
                          "x-title-plural" : "Identifications"
                        },
                        "name" : {
                          "description" : "The person's legal name.",
                          "type" : "string"
                        }
                      },
                      "required" : [ "name", "date_of_birth", "address", "identification" ],
                      "title" : "Individual",
                      "type" : "object",
                      "x-title-plural" : "Individuals"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "The entity's name.",
                    "type" : "string"
                  }
                },
                "required" : [ "name", "individuals" ],
                "title" : "Joint",
                "type" : "object",
                "x-title-plural" : "Joints"
              },
              "natural_person" : {
                "description" : "Details of the natural person entity. Will be present if `structure` is equal to `natural_person`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The person's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "date_of_birth" : {
                    "description" : "The person's date of birth in YYYY-MM-DD format.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "identification" : {
                    "description" : "A means of verifying the person's identity.",
                    "properties" : {
                      "method" : {
                        "description" : "A method that can be used to verify the individual's identity.",
                        "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                      },
                      "number_last4" : {
                        "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "method", "number_last4" ],
                    "title" : "Identification",
                    "type" : "object",
                    "x-title-plural" : "Identifications"
                  },
                  "name" : {
                    "description" : "The person's legal name.",
                    "type" : "string"
                  }
                },
                "required" : [ "name", "date_of_birth", "address", "identification" ],
                "title" : "Individual",
                "type" : "object",
                "x-title-plural" : "Individuals"
              },
              "relationship" : {
                "description" : "The relationship between your group and the entity.",
                "enum" : [ "affiliated", "informational", "unaffiliated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The entity is controlled by your group.", "The entity is for informational purposes only.", "The entity is not controlled by your group, but can still directly open accounts." ]
              },
              "structure" : {
                "description" : "The entity's legal structure.",
                "enum" : [ "corporation", "natural_person", "joint", "trust" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A corporation.", "An individual person.", "Multiple individual people.", "A trust." ]
              },
              "supplemental_documents" : {
                "description" : "Additional documentation associated with the entity.",
                "items" : {
                  "properties" : {
                    "file_id" : {
                      "description" : "The File containing the document.",
                      "type" : "string"
                    }
                  },
                  "required" : [ "file_id" ],
                  "title" : "Supplemental Documents Element",
                  "type" : "object",
                  "x-title-plural" : "Supplemental Documents Elements"
                },
                "type" : "array"
              },
              "trust" : {
                "description" : "Details of the trust entity. Will be present if `structure` is equal to `trust`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The trust's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "category" : {
                    "description" : "Whether the trust is `revocable` or `irrevocable`.",
                    "enum" : [ "revocable", "irrevocable" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The trust is revocable by the grantor.", "The trust cannot be revoked." ]
                  },
                  "formation_document_file_id" : {
                    "description" : "The ID for the File containing the formation document of the trust.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "formation_state" : {
                    "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "grantor" : {
                    "description" : "The grantor of the trust. Will be present if the `category` is `revocable`.",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "description" : "The person's address.",
                        "example" : {
                          "city" : "New York",
                          "line1" : "33 Liberty Street",
                          "state" : "NY",
                          "zip" : "10045"
                        },
                        "properties" : {
                          "city" : {
                            "description" : "The city of the address.",
                            "type" : "string"
                          },
                          "line1" : {
                            "description" : "The first line of the address.",
                            "type" : "string"
                          },
                          "line2" : {
                            "description" : "The second line of the address.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "state" : {
                            "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                            "type" : "string"
                          },
                          "zip" : {
                            "description" : "The ZIP code of the address.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "line1", "line2", "city", "state", "zip" ],
                        "title" : "Address",
                        "type" : "object",
                        "x-title-plural" : "Addresss"
                      },
                      "date_of_birth" : {
                        "description" : "The person's date of birth in YYYY-MM-DD format.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "identification" : {
                        "description" : "A means of verifying the person's identity.",
                        "properties" : {
                          "method" : {
                            "description" : "A method that can be used to verify the individual's identity.",
                            "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                          },
                          "number_last4" : {
                            "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "method", "number_last4" ],
                        "title" : "Identification",
                        "type" : "object",
                        "x-title-plural" : "Identifications"
                      },
                      "name" : {
                        "description" : "The person's legal name.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "date_of_birth", "address", "identification" ],
                    "title" : "Individual",
                    "type" : "object",
                    "x-title-plural" : "Individuals"
                  },
                  "name" : {
                    "description" : "The trust's name",
                    "type" : "string"
                  },
                  "tax_identifier" : {
                    "description" : "The Employer Identification Number (EIN) of the trust itself.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "trustees" : {
                    "description" : "The trustees of the trust.",
                    "items" : {
                      "properties" : {
                        "individual" : {
                          "description" : "The individual trustee of the trust. Will be present if the trustee's `structure` is equal to `individual`.",
                          "nullable" : true,
                          "properties" : {
                            "address" : {
                              "description" : "The person's address.",
                              "example" : {
                                "city" : "New York",
                                "line1" : "33 Liberty Street",
                                "state" : "NY",
                                "zip" : "10045"
                              },
                              "properties" : {
                                "city" : {
                                  "description" : "The city of the address.",
                                  "type" : "string"
                                },
                                "line1" : {
                                  "description" : "The first line of the address.",
                                  "type" : "string"
                                },
                                "line2" : {
                                  "description" : "The second line of the address.",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "state" : {
                                  "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                                  "type" : "string"
                                },
                                "zip" : {
                                  "description" : "The ZIP code of the address.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "line1", "line2", "city", "state", "zip" ],
                              "title" : "Address",
                              "type" : "object",
                              "x-title-plural" : "Addresss"
                            },
                            "date_of_birth" : {
                              "description" : "The person's date of birth in YYYY-MM-DD format.",
                              "format" : "date",
                              "type" : "string"
                            },
                            "identification" : {
                              "description" : "A means of verifying the person's identity.",
                              "properties" : {
                                "method" : {
                                  "description" : "A method that can be used to verify the individual's identity.",
                                  "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                                  "type" : "string",
                                  "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                                },
                                "number_last4" : {
                                  "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "method", "number_last4" ],
                              "title" : "Identification",
                              "type" : "object",
                              "x-title-plural" : "Identifications"
                            },
                            "name" : {
                              "description" : "The person's legal name.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "name", "date_of_birth", "address", "identification" ],
                          "title" : "Individual",
                          "type" : "object",
                          "x-title-plural" : "Individuals"
                        },
                        "structure" : {
                          "description" : "The structure of the trustee. Will always be equal to `individual`.",
                          "enum" : [ "individual" ],
                          "type" : "string",
                          "x-enum-descriptions" : [ "The trustee is an individual." ]
                        }
                      },
                      "required" : [ "structure", "individual" ],
                      "title" : "Trustees Element",
                      "type" : "object",
                      "x-title-plural" : "Trustees Elements"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "name", "category", "address", "formation_state", "tax_identifier", "trustees", "grantor", "formation_document_file_id" ],
                "title" : "Trust",
                "type" : "object",
                "x-title-plural" : "Trusts"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `entity`.",
                "enum" : [ "entity" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "structure", "corporation", "natural_person", "joint", "trust", "type", "description", "relationship", "supplemental_documents" ],
            "title" : "Entity",
            "type" : "object",
            "x-tag" : "Entities",
            "x-title-plural" : "Entities"
          }
        }
      }
    }
  }, {
    "id" : "4d5e42fc-b29a-40c4-8f49-34ed4357ac4d",
    "name" : "Create an Entity",
    "request" : {
      "urlPath" : "/entities",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corporation\" : {\n    \"address\" : {\n      \"city\" : \"New York\",\n      \"line1\" : \"33 Liberty Street\",\n      \"line2\" : null,\n      \"state\" : \"NY\",\n      \"zip\" : \"10045\"\n    },\n    \"beneficial_owners\" : [ {\n      \"company_title\" : \"CEO\",\n      \"individual\" : {\n        \"address\" : {\n          \"city\" : \"New York\",\n          \"line1\" : \"33 Liberty Street\",\n          \"line2\" : null,\n          \"state\" : \"NY\",\n          \"zip\" : \"10045\"\n        },\n        \"date_of_birth\" : \"1970-01-31\",\n        \"identification\" : {\n          \"country\" : \"US\",\n          \"method\" : \"social_security_number\",\n          \"number_last4\" : \"1120\"\n        },\n        \"name\" : \"Ian Crease\"\n      },\n      \"prong\" : \"control\"\n    } ],\n    \"incorporation_state\" : \"NY\",\n    \"name\" : \"National Phonograph Company\",\n    \"tax_identifier\" : \"602214076\",\n    \"website\" : \"https://example.com\"\n  },\n  \"description\" : null,\n  \"id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"joint\" : null,\n  \"natural_person\" : null,\n  \"relationship\" : \"informational\",\n  \"structure\" : \"corporation\",\n  \"supplemental_documents\" : [ {\n    \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\"\n  } ],\n  \"trust\" : null,\n  \"type\" : \"entity\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d5e42fc-b29a-40c4-8f49-34ed4357ac4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.570657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_entity",
          "schema" : {
            "description" : "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts.",
            "example" : {
              "corporation" : {
                "address" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "state" : "NY",
                  "zip" : "10045"
                },
                "beneficial_owners" : [ {
                  "company_title" : "CEO",
                  "individual" : {
                    "address" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "date_of_birth" : "1970-01-31",
                    "identification" : {
                      "country" : "US",
                      "method" : "social_security_number",
                      "number_last4" : "1120"
                    },
                    "name" : "Ian Crease"
                  },
                  "prong" : "control"
                } ],
                "incorporation_state" : "NY",
                "name" : "National Phonograph Company",
                "tax_identifier" : "602214076",
                "website" : "https://example.com"
              },
              "id" : "entity_n8y8tnk2p9339ti393yi",
              "relationship" : "informational",
              "structure" : "corporation",
              "supplemental_documents" : [ {
                "file_id" : "file_makxrc67oh9l6sg7w9yc"
              } ],
              "type" : "entity"
            },
            "properties" : {
              "corporation" : {
                "description" : "Details of the corporation entity. Will be present if `structure` is equal to `corporation`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The corporation's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "beneficial_owners" : {
                    "description" : "The identifying details of anyone controlling or owning 25% or more of the corporation.",
                    "items" : {
                      "properties" : {
                        "company_title" : {
                          "description" : "This person's role or title within the entity.",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "individual" : {
                          "description" : "Personal details for the beneficial owner.",
                          "properties" : {
                            "address" : {
                              "description" : "The person's address.",
                              "example" : {
                                "city" : "New York",
                                "line1" : "33 Liberty Street",
                                "state" : "NY",
                                "zip" : "10045"
                              },
                              "properties" : {
                                "city" : {
                                  "description" : "The city of the address.",
                                  "type" : "string"
                                },
                                "line1" : {
                                  "description" : "The first line of the address.",
                                  "type" : "string"
                                },
                                "line2" : {
                                  "description" : "The second line of the address.",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "state" : {
                                  "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                                  "type" : "string"
                                },
                                "zip" : {
                                  "description" : "The ZIP code of the address.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "line1", "line2", "city", "state", "zip" ],
                              "title" : "Address",
                              "type" : "object",
                              "x-title-plural" : "Addresss"
                            },
                            "date_of_birth" : {
                              "description" : "The person's date of birth in YYYY-MM-DD format.",
                              "format" : "date",
                              "type" : "string"
                            },
                            "identification" : {
                              "description" : "A means of verifying the person's identity.",
                              "properties" : {
                                "method" : {
                                  "description" : "A method that can be used to verify the individual's identity.",
                                  "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                                  "type" : "string",
                                  "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                                },
                                "number_last4" : {
                                  "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "method", "number_last4" ],
                              "title" : "Identification",
                              "type" : "object",
                              "x-title-plural" : "Identifications"
                            },
                            "name" : {
                              "description" : "The person's legal name.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "name", "date_of_birth", "address", "identification" ],
                          "title" : "Individual",
                          "type" : "object",
                          "x-title-plural" : "Individuals"
                        },
                        "prong" : {
                          "description" : "Why this person is considered a beneficial owner of the entity.",
                          "enum" : [ "ownership", "control" ],
                          "type" : "string",
                          "x-enum-descriptions" : [ "A person with 25% or greater direct or indirect ownership of the entity.", "A person who manages, directs, or has significant control of the entity." ]
                        }
                      },
                      "required" : [ "individual", "company_title", "prong" ],
                      "title" : "Beneficial Owners Element",
                      "type" : "object",
                      "x-title-plural" : "Beneficial Owners Elements"
                    },
                    "type" : "array"
                  },
                  "incorporation_state" : {
                    "description" : "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The legal name of the corporation.",
                    "type" : "string"
                  },
                  "tax_identifier" : {
                    "description" : "The Employer Identification Number (EIN) for the corporation.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "website" : {
                    "description" : "The website of the corporation.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "website", "tax_identifier", "incorporation_state", "address", "beneficial_owners" ],
                "title" : "Corporation",
                "type" : "object",
                "x-title-plural" : "Corporations"
              },
              "description" : {
                "description" : "The entity's description for display purposes.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The entity's identifier.",
                "type" : "string"
              },
              "joint" : {
                "description" : "Details of the joint entity. Will be present if `structure` is equal to `joint`.",
                "nullable" : true,
                "properties" : {
                  "individuals" : {
                    "description" : "The two individuals that share control of the entity.",
                    "items" : {
                      "properties" : {
                        "address" : {
                          "description" : "The person's address.",
                          "example" : {
                            "city" : "New York",
                            "line1" : "33 Liberty Street",
                            "state" : "NY",
                            "zip" : "10045"
                          },
                          "properties" : {
                            "city" : {
                              "description" : "The city of the address.",
                              "type" : "string"
                            },
                            "line1" : {
                              "description" : "The first line of the address.",
                              "type" : "string"
                            },
                            "line2" : {
                              "description" : "The second line of the address.",
                              "nullable" : true,
                              "type" : "string"
                            },
                            "state" : {
                              "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                              "type" : "string"
                            },
                            "zip" : {
                              "description" : "The ZIP code of the address.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "line1", "line2", "city", "state", "zip" ],
                          "title" : "Address",
                          "type" : "object",
                          "x-title-plural" : "Addresss"
                        },
                        "date_of_birth" : {
                          "description" : "The person's date of birth in YYYY-MM-DD format.",
                          "format" : "date",
                          "type" : "string"
                        },
                        "identification" : {
                          "description" : "A means of verifying the person's identity.",
                          "properties" : {
                            "method" : {
                              "description" : "A method that can be used to verify the individual's identity.",
                              "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                              "type" : "string",
                              "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                            },
                            "number_last4" : {
                              "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "method", "number_last4" ],
                          "title" : "Identification",
                          "type" : "object",
                          "x-title-plural" : "Identifications"
                        },
                        "name" : {
                          "description" : "The person's legal name.",
                          "type" : "string"
                        }
                      },
                      "required" : [ "name", "date_of_birth", "address", "identification" ],
                      "title" : "Individual",
                      "type" : "object",
                      "x-title-plural" : "Individuals"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "The entity's name.",
                    "type" : "string"
                  }
                },
                "required" : [ "name", "individuals" ],
                "title" : "Joint",
                "type" : "object",
                "x-title-plural" : "Joints"
              },
              "natural_person" : {
                "description" : "Details of the natural person entity. Will be present if `structure` is equal to `natural_person`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The person's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "date_of_birth" : {
                    "description" : "The person's date of birth in YYYY-MM-DD format.",
                    "format" : "date",
                    "type" : "string"
                  },
                  "identification" : {
                    "description" : "A means of verifying the person's identity.",
                    "properties" : {
                      "method" : {
                        "description" : "A method that can be used to verify the individual's identity.",
                        "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                      },
                      "number_last4" : {
                        "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "method", "number_last4" ],
                    "title" : "Identification",
                    "type" : "object",
                    "x-title-plural" : "Identifications"
                  },
                  "name" : {
                    "description" : "The person's legal name.",
                    "type" : "string"
                  }
                },
                "required" : [ "name", "date_of_birth", "address", "identification" ],
                "title" : "Individual",
                "type" : "object",
                "x-title-plural" : "Individuals"
              },
              "relationship" : {
                "description" : "The relationship between your group and the entity.",
                "enum" : [ "affiliated", "informational", "unaffiliated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The entity is controlled by your group.", "The entity is for informational purposes only.", "The entity is not controlled by your group, but can still directly open accounts." ]
              },
              "structure" : {
                "description" : "The entity's legal structure.",
                "enum" : [ "corporation", "natural_person", "joint", "trust" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A corporation.", "An individual person.", "Multiple individual people.", "A trust." ]
              },
              "supplemental_documents" : {
                "description" : "Additional documentation associated with the entity.",
                "items" : {
                  "properties" : {
                    "file_id" : {
                      "description" : "The File containing the document.",
                      "type" : "string"
                    }
                  },
                  "required" : [ "file_id" ],
                  "title" : "Supplemental Documents Element",
                  "type" : "object",
                  "x-title-plural" : "Supplemental Documents Elements"
                },
                "type" : "array"
              },
              "trust" : {
                "description" : "Details of the trust entity. Will be present if `structure` is equal to `trust`.",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "description" : "The trust's address.",
                    "example" : {
                      "city" : "New York",
                      "line1" : "33 Liberty Street",
                      "state" : "NY",
                      "zip" : "10045"
                    },
                    "properties" : {
                      "city" : {
                        "description" : "The city of the address.",
                        "type" : "string"
                      },
                      "line1" : {
                        "description" : "The first line of the address.",
                        "type" : "string"
                      },
                      "line2" : {
                        "description" : "The second line of the address.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "state" : {
                        "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                        "type" : "string"
                      },
                      "zip" : {
                        "description" : "The ZIP code of the address.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "line1", "line2", "city", "state", "zip" ],
                    "title" : "Address",
                    "type" : "object",
                    "x-title-plural" : "Addresss"
                  },
                  "category" : {
                    "description" : "Whether the trust is `revocable` or `irrevocable`.",
                    "enum" : [ "revocable", "irrevocable" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The trust is revocable by the grantor.", "The trust cannot be revoked." ]
                  },
                  "formation_document_file_id" : {
                    "description" : "The ID for the File containing the formation document of the trust.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "formation_state" : {
                    "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "grantor" : {
                    "description" : "The grantor of the trust. Will be present if the `category` is `revocable`.",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "description" : "The person's address.",
                        "example" : {
                          "city" : "New York",
                          "line1" : "33 Liberty Street",
                          "state" : "NY",
                          "zip" : "10045"
                        },
                        "properties" : {
                          "city" : {
                            "description" : "The city of the address.",
                            "type" : "string"
                          },
                          "line1" : {
                            "description" : "The first line of the address.",
                            "type" : "string"
                          },
                          "line2" : {
                            "description" : "The second line of the address.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "state" : {
                            "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                            "type" : "string"
                          },
                          "zip" : {
                            "description" : "The ZIP code of the address.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "line1", "line2", "city", "state", "zip" ],
                        "title" : "Address",
                        "type" : "object",
                        "x-title-plural" : "Addresss"
                      },
                      "date_of_birth" : {
                        "description" : "The person's date of birth in YYYY-MM-DD format.",
                        "format" : "date",
                        "type" : "string"
                      },
                      "identification" : {
                        "description" : "A means of verifying the person's identity.",
                        "properties" : {
                          "method" : {
                            "description" : "A method that can be used to verify the individual's identity.",
                            "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                            "type" : "string",
                            "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                          },
                          "number_last4" : {
                            "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                            "type" : "string"
                          }
                        },
                        "required" : [ "method", "number_last4" ],
                        "title" : "Identification",
                        "type" : "object",
                        "x-title-plural" : "Identifications"
                      },
                      "name" : {
                        "description" : "The person's legal name.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "date_of_birth", "address", "identification" ],
                    "title" : "Individual",
                    "type" : "object",
                    "x-title-plural" : "Individuals"
                  },
                  "name" : {
                    "description" : "The trust's name",
                    "type" : "string"
                  },
                  "tax_identifier" : {
                    "description" : "The Employer Identification Number (EIN) of the trust itself.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "trustees" : {
                    "description" : "The trustees of the trust.",
                    "items" : {
                      "properties" : {
                        "individual" : {
                          "description" : "The individual trustee of the trust. Will be present if the trustee's `structure` is equal to `individual`.",
                          "nullable" : true,
                          "properties" : {
                            "address" : {
                              "description" : "The person's address.",
                              "example" : {
                                "city" : "New York",
                                "line1" : "33 Liberty Street",
                                "state" : "NY",
                                "zip" : "10045"
                              },
                              "properties" : {
                                "city" : {
                                  "description" : "The city of the address.",
                                  "type" : "string"
                                },
                                "line1" : {
                                  "description" : "The first line of the address.",
                                  "type" : "string"
                                },
                                "line2" : {
                                  "description" : "The second line of the address.",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "state" : {
                                  "description" : "The two-letter United States Postal Service (USPS) abbreviation for the state of the address.",
                                  "type" : "string"
                                },
                                "zip" : {
                                  "description" : "The ZIP code of the address.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "line1", "line2", "city", "state", "zip" ],
                              "title" : "Address",
                              "type" : "object",
                              "x-title-plural" : "Addresss"
                            },
                            "date_of_birth" : {
                              "description" : "The person's date of birth in YYYY-MM-DD format.",
                              "format" : "date",
                              "type" : "string"
                            },
                            "identification" : {
                              "description" : "A means of verifying the person's identity.",
                              "properties" : {
                                "method" : {
                                  "description" : "A method that can be used to verify the individual's identity.",
                                  "enum" : [ "social_security_number", "individual_taxpayer_identification_number", "passport", "drivers_license", "other" ],
                                  "type" : "string",
                                  "x-enum-descriptions" : [ "A social security number.", "An individual taxpayer identification number (ITIN).", "A passport number.", "A driver's license number.", "Another identifying document." ]
                                },
                                "number_last4" : {
                                  "description" : "The last 4 digits of the identification number that can be used to verify the individual's identity.",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "method", "number_last4" ],
                              "title" : "Identification",
                              "type" : "object",
                              "x-title-plural" : "Identifications"
                            },
                            "name" : {
                              "description" : "The person's legal name.",
                              "type" : "string"
                            }
                          },
                          "required" : [ "name", "date_of_birth", "address", "identification" ],
                          "title" : "Individual",
                          "type" : "object",
                          "x-title-plural" : "Individuals"
                        },
                        "structure" : {
                          "description" : "The structure of the trustee. Will always be equal to `individual`.",
                          "enum" : [ "individual" ],
                          "type" : "string",
                          "x-enum-descriptions" : [ "The trustee is an individual." ]
                        }
                      },
                      "required" : [ "structure", "individual" ],
                      "title" : "Trustees Element",
                      "type" : "object",
                      "x-title-plural" : "Trustees Elements"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "name", "category", "address", "formation_state", "tax_identifier", "trustees", "grantor", "formation_document_file_id" ],
                "title" : "Trust",
                "type" : "object",
                "x-title-plural" : "Trusts"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `entity`.",
                "enum" : [ "entity" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "structure", "corporation", "natural_person", "joint", "trust", "type", "description", "relationship", "supplemental_documents" ],
            "title" : "Entity",
            "type" : "object",
            "x-tag" : "Entities",
            "x-title-plural" : "Entities"
          }
        }
      }
    }
  }, {
    "id" : "0b5038a4-39cc-49b0-a849-8bd0998c4603",
    "name" : "List Entities",
    "request" : {
      "urlPath" : "/entities",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"corporation\" : {\n      \"address\" : {\n        \"city\" : \"New York\",\n        \"line1\" : \"33 Liberty Street\",\n        \"line2\" : null,\n        \"state\" : \"NY\",\n        \"zip\" : \"10045\"\n      },\n      \"beneficial_owners\" : [ {\n        \"company_title\" : \"CEO\",\n        \"individual\" : {\n          \"address\" : {\n            \"city\" : \"New York\",\n            \"line1\" : \"33 Liberty Street\",\n            \"line2\" : null,\n            \"state\" : \"NY\",\n            \"zip\" : \"10045\"\n          },\n          \"date_of_birth\" : \"1970-01-31\",\n          \"identification\" : {\n            \"country\" : \"US\",\n            \"method\" : \"social_security_number\",\n            \"number_last4\" : \"1120\"\n          },\n          \"name\" : \"Ian Crease\"\n        },\n        \"prong\" : \"control\"\n      } ],\n      \"incorporation_state\" : \"NY\",\n      \"name\" : \"National Phonograph Company\",\n      \"tax_identifier\" : \"602214076\",\n      \"website\" : \"https://example.com\"\n    },\n    \"description\" : null,\n    \"id\" : \"entity_n8y8tnk2p9339ti393yi\",\n    \"joint\" : null,\n    \"natural_person\" : null,\n    \"relationship\" : \"informational\",\n    \"structure\" : \"corporation\",\n    \"supplemental_documents\" : [ {\n      \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\"\n    } ],\n    \"trust\" : null,\n    \"type\" : \"entity\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b5038a4-39cc-49b0-a849-8bd0998c4603",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.569775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_entities",
          "schema" : {
            "description" : "A list of Entity objects",
            "example" : {
              "data" : [ {
                "corporation" : {
                  "address" : {
                    "city" : "New York",
                    "line1" : "33 Liberty Street",
                    "state" : "NY",
                    "zip" : "10045"
                  },
                  "beneficial_owners" : [ {
                    "company_title" : "CEO",
                    "individual" : {
                      "address" : {
                        "city" : "New York",
                        "line1" : "33 Liberty Street",
                        "state" : "NY",
                        "zip" : "10045"
                      },
                      "date_of_birth" : "1970-01-31",
                      "identification" : {
                        "country" : "US",
                        "method" : "social_security_number",
                        "number_last4" : "1120"
                      },
                      "name" : "Ian Crease"
                    },
                    "prong" : "control"
                  } ],
                  "incorporation_state" : "NY",
                  "name" : "National Phonograph Company",
                  "tax_identifier" : "602214076",
                  "website" : "https://example.com"
                },
                "id" : "entity_n8y8tnk2p9339ti393yi",
                "relationship" : "informational",
                "structure" : "corporation",
                "supplemental_documents" : [ {
                  "file_id" : "file_makxrc67oh9l6sg7w9yc"
                } ],
                "type" : "entity"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/entity"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Entity List",
            "type" : "object",
            "x-title-plural" : "Entity Lists"
          }
        }
      }
    }
  }, {
    "id" : "2853af97-dcb8-4298-b908-22212f69a9d3",
    "name" : "Retrieve a Document",
    "request" : {
      "urlPath" : "/documents/tu2z",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"category\" : \"form_1099_int\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"document_qjtqc6s4c14ve2q89izm\",\n  \"type\" : \"document\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2853af97-dcb8-4298-b908-22212f69a9d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.569677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_document",
          "schema" : {
            "description" : "Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT.",
            "example" : {
              "category" : "form_1099_int",
              "created_at" : "2020-01-31T23:59:59Z",
              "entity_id" : "entity_n8y8tnk2p9339ti393yi",
              "file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "document_qjtqc6s4c14ve2q89izm",
              "type" : "document"
            },
            "properties" : {
              "category" : {
                "description" : "The type of document.",
                "enum" : [ "form_1099_int" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Internal Revenue Service Form 1099-INT." ]
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Document was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "entity_id" : {
                "description" : "The identifier of the Entity the document was generated for.",
                "nullable" : true,
                "type" : "string"
              },
              "file_id" : {
                "description" : "The identifier of the File containing the Document's contents.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Document identifier.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `document`.",
                "enum" : [ "document" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "category", "created_at", "entity_id", "file_id", "type" ],
            "title" : "Document",
            "type" : "object",
            "x-tag" : "Documents",
            "x-title-plural" : "Documents"
          }
        }
      }
    }
  }, {
    "id" : "432527fe-e09a-4b23-8183-bbc94891267a",
    "name" : "List Documents",
    "request" : {
      "urlPath" : "/documents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"category\" : \"form_1099_int\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n    \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n    \"id\" : \"document_qjtqc6s4c14ve2q89izm\",\n    \"type\" : \"document\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "432527fe-e09a-4b23-8183-bbc94891267a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.569527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_documents",
          "schema" : {
            "description" : "A list of Document objects",
            "example" : {
              "data" : [ {
                "category" : "form_1099_int",
                "created_at" : "2020-01-31T23:59:59Z",
                "entity_id" : "entity_n8y8tnk2p9339ti393yi",
                "file_id" : "file_makxrc67oh9l6sg7w9yc",
                "id" : "document_qjtqc6s4c14ve2q89izm",
                "type" : "document"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/document"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Document List",
            "type" : "object",
            "x-title-plural" : "Document Lists"
          }
        }
      }
    }
  }, {
    "id" : "74ec6c6e-f56b-40e0-b6aa-56884ae7fe08",
    "name" : "Retrieve a Digital Wallet Token",
    "request" : {
      "urlPath" : "/digital_wallet_tokens/smql",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"card_id\" : \"card_oubs0hwk5rn6knuecxg2\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"digital_wallet_token_izi62go3h51p369jrie0\",\n  \"status\" : \"active\",\n  \"token_requestor\" : \"apple_pay\",\n  \"type\" : \"digital_wallet_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74ec6c6e-f56b-40e0-b6aa-56884ae7fe08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.569446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_digital_wallet_token",
          "schema" : {
            "description" : "A Digital Wallet Token is created when a user adds a Card to their Apple Pay or Google Pay app. The Digital Wallet Token can be used for purchases just like a Card.",
            "example" : {
              "card_id" : "card_oubs0hwk5rn6knuecxg2",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "digital_wallet_token_izi62go3h51p369jrie0",
              "status" : "active",
              "token_requestor" : "apple_pay",
              "type" : "digital_wallet_token"
            },
            "properties" : {
              "card_id" : {
                "description" : "The identifier for the Card this Digital Wallet Token belongs to.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The Digital Wallet Token identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made with the Digital Wallet Token.",
                "enum" : [ "active", "inactive", "suspended", "deactivated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The digital wallet token is active.", "The digital wallet token has been created but not successfully activated via two-factor authentication yet.", "The digital wallet token has been temporarily paused.", "The digital wallet token has been permanently cancelled." ]
              },
              "token_requestor" : {
                "description" : "The digital wallet app being used.",
                "enum" : [ "apple_pay", "google_pay" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Apple Pay", "Google Pay" ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `digital_wallet_token`.",
                "enum" : [ "digital_wallet_token" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "card_id", "created_at", "status", "token_requestor", "type" ],
            "title" : "Digital Wallet Token",
            "type" : "object",
            "x-tag" : "Digital Wallet Tokens",
            "x-title-plural" : "Digital Wallet Tokens"
          }
        }
      }
    }
  }, {
    "id" : "47ea30e0-791d-45df-aab7-c7b43b49b046",
    "name" : "List Digital Wallet Tokens",
    "request" : {
      "urlPath" : "/digital_wallet_tokens",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"card_id\" : \"card_oubs0hwk5rn6knuecxg2\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"id\" : \"digital_wallet_token_izi62go3h51p369jrie0\",\n    \"status\" : \"active\",\n    \"token_requestor\" : \"apple_pay\",\n    \"type\" : \"digital_wallet_token\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47ea30e0-791d-45df-aab7-c7b43b49b046",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.569203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_digital_wallet_tokens",
          "schema" : {
            "description" : "A list of Digital Wallet Token objects",
            "example" : {
              "data" : [ {
                "card_id" : "card_oubs0hwk5rn6knuecxg2",
                "created_at" : "2020-01-31T23:59:59Z",
                "id" : "digital_wallet_token_izi62go3h51p369jrie0",
                "status" : "active",
                "token_requestor" : "apple_pay",
                "type" : "digital_wallet_token"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/digital_wallet_token"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Digital Wallet Token List",
            "type" : "object",
            "x-title-plural" : "Digital Wallet Token Lists"
          }
        }
      }
    }
  }, {
    "id" : "c292e987-5d15-4f50-b4b0-064900c15e12",
    "name" : "Retrieve a Declined Transaction",
    "request" : {
      "urlPath" : "/declined_transactions/hat8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 1750,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Frederick S. Holmes\",\n  \"id\" : \"declined_transaction_17jbn0yyhvkt4v4ooym8\",\n  \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"route_type\" : \"account_number\",\n  \"source\" : {\n    \"ach_decline\" : {\n      \"amount\" : 1750,\n      \"originator_company_descriptive_date\" : null,\n      \"originator_company_discretionary_data\" : null,\n      \"originator_company_id\" : \"0987654321\",\n      \"originator_company_name\" : \"BIG BANK\",\n      \"reason\" : \"insufficient_funds\",\n      \"receiver_id_number\" : \"12345678900\",\n      \"receiver_name\" : \"IAN CREASE\",\n      \"trace_number\" : \"021000038461022\"\n    },\n    \"category\" : \"ach_decline\"\n  },\n  \"type\" : \"declined_transaction\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c292e987-5d15-4f50-b4b0-064900c15e12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.569078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_declined_transaction",
          "schema" : {
            "description" : "Declined Transactions are refused additions and removals of money from your bank account. For example, Declined Transactions are caused when your Account has an insufficient balance or your Limits are triggered.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 1750,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Frederick S. Holmes",
              "id" : "declined_transaction_17jbn0yyhvkt4v4ooym8",
              "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
              "route_type" : "account_number",
              "source" : {
                "ach_decline" : {
                  "amount" : 1750,
                  "originator_company_id" : "0987654321",
                  "originator_company_name" : "BIG BANK",
                  "reason" : "insufficient_funds",
                  "receiver_id_number" : "12345678900",
                  "receiver_name" : "IAN CREASE",
                  "trace_number" : "021000038461022"
                },
                "category" : "ach_decline"
              },
              "type" : "declined_transaction"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the Account the Declined Transaction belongs to.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "This is the description the vendor provides.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Declined Transaction identifier.",
                "type" : "string"
              },
              "route_id" : {
                "description" : "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable" : true,
                "type" : "string"
              },
              "route_type" : {
                "description" : "The type of the route this Declined Transaction came through.",
                "nullable" : true,
                "type" : "string"
              },
              "source" : {
                "description" : "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example" : {
                  "ach_decline" : {
                    "amount" : 1750,
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "reason" : "insufficient_funds",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  },
                  "category" : "ach_decline"
                },
                "properties" : {
                  "ach_decline" : {
                    "description" : "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example" : {
                      "amount" : 1750,
                      "originator_company_id" : "0987654321",
                      "originator_company_name" : "BIG BANK",
                      "reason" : "insufficient_funds",
                      "receiver_id_number" : "12345678900",
                      "receiver_name" : "IAN CREASE",
                      "trace_number" : "021000038461022"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "originator_company_descriptive_date" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_discretionary_data" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_company_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "reason" : {
                        "description" : "Why the ACH transfer was declined.",
                        "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "credit_entry_refused_by_receiver", "duplicate_return", "entity_not_active", "transaction_not_allowed", "group_locked", "insufficient_funds", "no_ach_route", "originator_request" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "A credit was refused.", "Other.", "The account's entity is not active.", "The transaction is not allowed per Increase's terms", "Your account is inactive.", "Your account contains insufficient funds.", "The account number that was debited does not exist.", "Other." ]
                      },
                      "receiver_id_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_name" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "originator_company_name", "originator_company_descriptive_date", "originator_company_discretionary_data", "originator_company_id", "reason", "receiver_id_number", "receiver_name", "trace_number" ],
                    "title" : "ACH Decline",
                    "type" : "object",
                    "x-title-plural" : "ACH Declines"
                  },
                  "card_decline" : {
                    "description" : "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example" : {
                      "amount" : -1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA",
                      "network" : "visa",
                      "network_details" : {
                        "visa" : {
                          "electronic_commerce_indicator" : "secure_electronic_commerce",
                          "point_of_service_entry_mode" : "manual"
                        }
                      },
                      "reason" : "insufficient_funds"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "digital_wallet_token_id" : {
                        "description" : "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_acceptor_id" : {
                        "description" : "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "The city the merchant resides in.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "The country the merchant resides in.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "The merchant descriptor of the merchant the card is transacting with.",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "The state the merchant resides in.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "network" : {
                        "description" : "The payment network used to process this card authorization",
                        "enum" : [ "visa" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Visa" ]
                      },
                      "network_details" : {
                        "description" : "Fields specific to the `network`",
                        "properties" : {
                          "visa" : {
                            "description" : "Fields specific to the `visa` network",
                            "properties" : {
                              "electronic_commerce_indicator" : {
                                "description" : "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "enum" : [ "mail_phone_order", "recurring", "installment", "unknown_mail_phone_order", "secure_electronic_commerce", "non_authenticated_security_transaction_at_3ds_capable_merchant", "non_authenticated_security_transaction", "non_secure_transaction" ],
                                "nullable" : true,
                                "type" : "string",
                                "x-enum-descriptions" : [ "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.", "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.", "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.", "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.", "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure", "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.", "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.", "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection." ]
                              },
                              "point_of_service_entry_mode" : {
                                "description" : "The method used to enter the cardholder's primary account number and card expiration date",
                                "enum" : [ "manual", "magnetic_stripe_no_cvv", "optical_code", "integrated_circuit_card", "contactless", "credential_on_file", "magnetic_stripe", "contactless_magnetic_stripe", "integrated_circuit_card_no_cvv" ],
                                "nullable" : true,
                                "type" : "string",
                                "x-enum-descriptions" : [ "Manual key entry", "Magnetic stripe read, without card verification value", "Optical code", "Contact chip card", "Contactless read of chip card", "Transaction iniated using a credential that has previously been stored on file", "Magnetic stripe read", "Contactless read of magnetic stripe data", "Contact chip card, without card verification value" ]
                              }
                            },
                            "required" : [ "electronic_commerce_indicator", "point_of_service_entry_mode" ],
                            "title" : "Visa",
                            "type" : "object",
                            "x-title-plural" : "Visas"
                          }
                        },
                        "required" : [ "visa" ],
                        "title" : "Network Details",
                        "type" : "object",
                        "x-title-plural" : "Network Detailss"
                      },
                      "real_time_decision_id" : {
                        "description" : "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "reason" : {
                        "description" : "Why the transaction was declined.",
                        "enum" : [ "card_not_active", "entity_not_active", "group_locked", "insufficient_funds", "cvv2_mismatch", "transaction_not_allowed", "breaches_limit", "webhook_declined", "webhook_timed_out", "declined_by_stand_in_processing" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The Card was not active.", "The account's entity was not active.", "The account was inactive.", "The Card's Account did not have a sufficient available balance.", "The given CVV2 did not match the card's value.", "The attempted card transaction is not allowed per Increase's terms.", "The transaction was blocked by a Limit.", "Your application declined the transaction via webhook.", "Your application webhook did not respond without the required timeout.", "Declined by stand-in processing" ]
                      }
                    },
                    "required" : [ "merchant_acceptor_id", "merchant_descriptor", "merchant_category_code", "merchant_city", "merchant_country", "network", "network_details", "amount", "currency", "reason", "merchant_state", "real_time_decision_id", "digital_wallet_token_id" ],
                    "title" : "Card Decline",
                    "type" : "object",
                    "x-title-plural" : "Card Declines"
                  },
                  "card_route_decline" : {
                    "description" : "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                    "example" : {
                      "amount" : -1000,
                      "currency" : "USD",
                      "merchant_acceptor_id" : "372909060886",
                      "merchant_category_code" : "5998",
                      "merchant_city" : "5364086000",
                      "merchant_country" : "USA",
                      "merchant_descriptor" : "TENTS R US",
                      "merchant_state" : "CA"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "merchant_acceptor_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_category_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_city" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "merchant_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_descriptor" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "merchant_state" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "merchant_acceptor_id", "merchant_city", "merchant_country", "merchant_descriptor", "merchant_state", "merchant_category_code" ],
                    "title" : "Deprecated Card Decline",
                    "type" : "object",
                    "x-title-plural" : "Deprecated Card Declines"
                  },
                  "category" : {
                    "description" : "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "enum" : [ "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.", "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.", "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.", "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.", "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.", "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.", "The Declined Transaction was made for an undocumented or deprecated reason." ]
                  },
                  "check_decline" : {
                    "description" : "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example" : {
                      "amount" : -1000,
                      "auxiliary_on_us" : "99999",
                      "reason" : "insufficient_funds"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "auxiliary_on_us" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "reason" : {
                        "description" : "Why the check was declined.",
                        "enum" : [ "ach_route_canceled", "ach_route_disabled", "breaches_limit", "entity_not_active", "group_locked", "insufficient_funds", "unable_to_locate_account", "unable_to_process", "refer_to_image", "stop_payment_requested", "returned" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "The transaction would cause a limit to be exceeded.", "The account's entity is not active.", "Your account is inactive.", "Your account contains insufficient funds.", "Unable to locate account.", "Unable to process.", "Refer to image.", "Stop payment requested for this check.", "Check was returned to sender." ]
                      }
                    },
                    "required" : [ "amount", "auxiliary_on_us", "reason" ],
                    "title" : "Check Decline",
                    "type" : "object",
                    "x-title-plural" : "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline" : {
                    "description" : "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example" : {
                      "amount" : 100,
                      "creditor_name" : "Ian Crease",
                      "currency" : "USD",
                      "debtor_account_number" : "987654321",
                      "debtor_name" : "National Phonograph Company",
                      "debtor_routing_number" : "101050001",
                      "reason" : "account_number_disabled",
                      "remittance_information" : "Invoice 29582",
                      "transaction_identification" : "20220501234567891T1BSLZO01745013025"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "creditor_name" : {
                        "description" : "The name the sender of the transfer specified as the recipient of the transfer.",
                        "type" : "string"
                      },
                      "currency" : {
                        "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                      },
                      "debtor_account_number" : {
                        "description" : "The account number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "debtor_name" : {
                        "description" : "The name provided by the sender of the transfer.",
                        "type" : "string"
                      },
                      "debtor_routing_number" : {
                        "description" : "The routing number of the account that sent the transfer.",
                        "type" : "string"
                      },
                      "reason" : {
                        "description" : "Why the transfer was declined.",
                        "enum" : [ "account_number_canceled", "account_number_disabled", "group_locked", "entity_not_active", "real_time_payments_not_enabled" ],
                        "type" : "string",
                        "x-enum-descriptions" : [ "The account number is canceled.", "The account number is disabled.", "Your account is inactive.", "The account's entity is not active.", "Your account is not enabled to receive Real Time Payments transfers." ]
                      },
                      "remittance_information" : {
                        "description" : "Additional information included with the transfer.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "transaction_identification" : {
                        "description" : "The Real Time Payments network identification of the declined transfer.",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "currency", "reason", "creditor_name", "debtor_name", "debtor_account_number", "debtor_routing_number", "transaction_identification", "remittance_information" ],
                    "title" : "Inbound Real Time Payments Transfer Decline",
                    "type" : "object",
                    "x-title-plural" : "Inbound Real Time Payments Transfer Declines"
                  },
                  "international_ach_decline" : {
                    "description" : "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example" : {
                      "amount" : -1000,
                      "destination_country_code" : "US",
                      "destination_currency_code" : "USD",
                      "foreign_exchange_indicator" : "fixed_to_fixed",
                      "foreign_exchange_reference_indicator" : "blank",
                      "foreign_payment_amount" : 199,
                      "international_transaction_type_code" : "internet_initiated",
                      "originating_currency_code" : "USD",
                      "originating_depository_financial_institution_branch_country" : "US",
                      "originating_depository_financial_institution_id" : "091000019",
                      "originating_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "originating_depository_financial_institution_name" : "WELLS FARGO BANK",
                      "originator_city" : "BERLIN",
                      "originator_company_entry_description" : "RETRY PYMT",
                      "originator_country" : "DE",
                      "originator_identification" : "770510487A",
                      "originator_name" : "BERGHAIN",
                      "originator_postal_code" : "50825",
                      "originator_street_address" : "Ruedersdorferstr. 7",
                      "receiver_city" : "BEVERLY HILLS",
                      "receiver_country" : "US",
                      "receiver_identification_number" : "1018790279274",
                      "receiver_postal_code" : "90210",
                      "receiver_state_or_province" : "CA",
                      "receiver_street_address" : "123 FAKE ST",
                      "receiving_company_or_individual_name" : "IAN CREASE",
                      "receiving_depository_financial_institution_country" : "US",
                      "receiving_depository_financial_institution_id" : "101050001",
                      "receiving_depository_financial_institution_id_qualifier" : "national_clearing_system_number",
                      "receiving_depository_financial_institution_name" : "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "trace_number" : "010202909100090"
                    },
                    "nullable" : true,
                    "properties" : {
                      "amount" : {
                        "description" : "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                        "type" : "integer"
                      },
                      "destination_country_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "destination_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_exchange_reference" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "foreign_exchange_reference_indicator" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "foreign_payment_amount" : {
                        "description" : "",
                        "type" : "integer"
                      },
                      "foreign_trace_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "international_transaction_type_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_currency_code" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_branch_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originating_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_company_entry_description" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_identification" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "originator_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "originator_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "payment_related_information" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "payment_related_information2" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_city" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiver_identification_number" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_postal_code" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_state_or_province" : {
                        "description" : "",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "receiver_street_address" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_company_or_individual_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_country" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_id_qualifier" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "receiving_depository_financial_institution_name" : {
                        "description" : "",
                        "type" : "string"
                      },
                      "trace_number" : {
                        "description" : "",
                        "type" : "string"
                      }
                    },
                    "required" : [ "amount", "foreign_exchange_indicator", "foreign_exchange_reference_indicator", "foreign_exchange_reference", "destination_country_code", "destination_currency_code", "foreign_payment_amount", "foreign_trace_number", "international_transaction_type_code", "originating_currency_code", "originating_depository_financial_institution_name", "originating_depository_financial_institution_id_qualifier", "originating_depository_financial_institution_id", "originating_depository_financial_institution_branch_country", "originator_city", "originator_company_entry_description", "originator_country", "originator_identification", "originator_name", "originator_postal_code", "originator_street_address", "originator_state_or_province", "payment_related_information", "payment_related_information2", "receiver_identification_number", "receiver_street_address", "receiver_city", "receiver_state_or_province", "receiver_country", "receiver_postal_code", "receiving_company_or_individual_name", "receiving_depository_financial_institution_name", "receiving_depository_financial_institution_id_qualifier", "receiving_depository_financial_institution_id", "receiving_depository_financial_institution_country", "trace_number" ],
                    "title" : "International ACH Decline",
                    "type" : "object",
                    "x-title-plural" : "International ACH Declines"
                  }
                },
                "required" : [ "category", "ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline" ],
                "title" : "Declined Transaction Source",
                "type" : "object",
                "x-title-plural" : "Declined Transaction Sources"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `declined_transaction`.",
                "enum" : [ "declined_transaction" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "amount", "currency", "created_at", "description", "id", "route_id", "route_type", "source", "type" ],
            "title" : "Declined Transaction",
            "type" : "object",
            "x-tag" : "Declined Transactions",
            "x-title-plural" : "Declined Transactions"
          }
        }
      }
    }
  }, {
    "id" : "86d806c8-80db-4257-b3e8-f011ea60b32e",
    "name" : "List Declined Transactions",
    "request" : {
      "urlPath" : "/declined_transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 1750,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Frederick S. Holmes\",\n    \"id\" : \"declined_transaction_17jbn0yyhvkt4v4ooym8\",\n    \"route_id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"route_type\" : \"account_number\",\n    \"source\" : {\n      \"ach_decline\" : {\n        \"amount\" : 1750,\n        \"originator_company_descriptive_date\" : null,\n        \"originator_company_discretionary_data\" : null,\n        \"originator_company_id\" : \"0987654321\",\n        \"originator_company_name\" : \"BIG BANK\",\n        \"reason\" : \"insufficient_funds\",\n        \"receiver_id_number\" : \"12345678900\",\n        \"receiver_name\" : \"IAN CREASE\",\n        \"trace_number\" : \"021000038461022\"\n      },\n      \"category\" : \"ach_decline\"\n    },\n    \"type\" : \"declined_transaction\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86d806c8-80db-4257-b3e8-f011ea60b32e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.568164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_declined_transactions",
          "schema" : {
            "description" : "A list of Declined Transaction objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 1750,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Frederick S. Holmes",
                "id" : "declined_transaction_17jbn0yyhvkt4v4ooym8",
                "route_id" : "account_number_v18nkfqm6afpsrvy82b2",
                "route_type" : "account_number",
                "source" : {
                  "ach_decline" : {
                    "amount" : 1750,
                    "originator_company_id" : "0987654321",
                    "originator_company_name" : "BIG BANK",
                    "reason" : "insufficient_funds",
                    "receiver_id_number" : "12345678900",
                    "receiver_name" : "IAN CREASE",
                    "trace_number" : "021000038461022"
                  },
                  "category" : "ach_decline"
                },
                "type" : "declined_transaction"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/declined_transaction"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Declined Transaction List",
            "type" : "object",
            "x-title-plural" : "Declined Transaction Lists"
          }
        }
      }
    }
  }, {
    "id" : "39773e3a-b279-4c95-b20d-0e806dfde048",
    "name" : "Request a stop payment on a Check Transfer",
    "request" : {
      "urlPath" : "/check_transfers/7nr5/stop_payment",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39773e3a-b279-4c95-b20d-0e806dfde048",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.568062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "request_a_stop_payment_on_a_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "9abdaada-7807-4ff7-b54e-ccdfd1bc489a",
    "name" : "Cancel a pending Check Transfer",
    "request" : {
      "urlPath" : "/check_transfers/5a7w/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9abdaada-7807-4ff7-b54e-ccdfd1bc489a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.567712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancel_a_pending_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "80f7c993-410d-4c5b-8946-a0ccf0b95c6d",
    "name" : "Approve a Check Transfer",
    "request" : {
      "urlPath" : "/check_transfers/k06i/approve",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80f7c993-410d-4c5b-8946-a0ccf0b95c6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.567339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "approve_a_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "057a7987-a0da-4377-886c-765a3a69f6e3",
    "name" : "Retrieve a Check Transfer",
    "request" : {
      "urlPath" : "/check_transfers/3dl5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "057a7987-a0da-4377-886c-765a3a69f6e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.567015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "619dc133-875c-42f8-b974-a6b549299fe3",
    "name" : "Create a Check Transfer",
    "request" : {
      "urlPath" : "/check_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"address_city\" : \"New York\",\n  \"address_line1\" : \"33 Liberty Street\",\n  \"address_line2\" : null,\n  \"address_state\" : \"NY\",\n  \"address_zip\" : \"10045\",\n  \"amount\" : 1000,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit\" : null,\n  \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n  \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n  \"message\" : \"Invoice 29582\",\n  \"note\" : null,\n  \"recipient_name\" : \"Ian Crease\",\n  \"return_address\" : null,\n  \"status\" : \"mailed\",\n  \"stop_payment_request\" : null,\n  \"submission\" : {\n    \"check_number\" : \"130670\"\n  },\n  \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n  \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "619dc133-875c-42f8-b974-a6b549299fe3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.566696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_check_transfer",
          "schema" : {
            "description" : "Check Transfers move funds from your Increase account by mailing a physical check.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "address_city" : "New York",
              "address_line1" : "33 Liberty Street",
              "address_state" : "NY",
              "address_zip" : "10045",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "id" : "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at" : "2020-01-31T23:59:59Z",
              "message" : "Invoice 29582",
              "recipient_name" : "Ian Crease",
              "status" : "mailed",
              "submission" : {
                "check_number" : "130670"
              },
              "submitted_at" : "2020-01-31T23:59:59Z",
              "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier of the Account from which funds will be transferred.",
                "type" : "string"
              },
              "address_city" : {
                "description" : "The city of the check's destination.",
                "type" : "string"
              },
              "address_line1" : {
                "description" : "The street address of the check's destination.",
                "type" : "string"
              },
              "address_line2" : {
                "description" : "The second line of the address of the check's destination.",
                "nullable" : true,
                "type" : "string"
              },
              "address_state" : {
                "description" : "The state of the check's destination.",
                "type" : "string"
              },
              "address_zip" : {
                "description" : "The postal code of the check's destination.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents.",
                "type" : "integer"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit" : {
                "description" : "After a check transfer is deposited, this will contain supplemental details.",
                "example" : {
                  "back_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                  "type" : "check_transfer_deposit"
                },
                "nullable" : true,
                "properties" : {
                  "back_image_file_id" : {
                    "description" : "The ID for the File containing the image of the rear of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "front_image_file_id" : {
                    "description" : "The ID for the File containing the image of the front of the check.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.",
                    "enum" : [ "check_transfer_deposit" ],
                    "type" : "string"
                  }
                },
                "required" : [ "front_image_file_id", "back_image_file_id", "type" ],
                "title" : "Check Transfer Deposit",
                "type" : "object",
                "x-title-plural" : "Check Transfer Deposits"
              },
              "id" : {
                "description" : "The Check transfer's identifier.",
                "type" : "string"
              },
              "mailed_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "The descriptor that will be printed on the memo field on the check.",
                "type" : "string"
              },
              "note" : {
                "description" : "The descriptor that will be printed on the letter included with the check.",
                "nullable" : true,
                "type" : "string"
              },
              "recipient_name" : {
                "description" : "The name that will be printed on the check.",
                "type" : "string"
              },
              "return_address" : {
                "description" : "The return address to be printed on the check.",
                "nullable" : true,
                "properties" : {
                  "city" : {
                    "description" : "The city of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "zip" : {
                    "description" : "The postal code of the address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "name", "line1", "line2", "city", "state", "zip" ],
                "title" : "Return Address",
                "type" : "object",
                "x-title-plural" : "Return Addresss"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "pending_submission", "submitting", "submitted", "pending_mailing", "mailed", "canceled", "deposited", "stopped", "returned", "rejected", "requires_attention" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is awaiting approval.", "The transfer is pending submission.", "The transfer is being submitted.", "The transfer is complete.", "The check is queued for mailing.", "The check has been mailed.", "The transfer has been canceled.", "The check has been deposited.", "A stop-payment was requested for this check.", "The transfer has been returned.", "The transfer has been rejected.", "The transfer requires your attention." ]
              },
              "stop_payment_request" : {
                "description" : "After a stop-payment is requested on the check, this will contain supplemental details.",
                "example" : {
                  "requested_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "check_transfer_30b43acfu9vw8fyc4f5",
                  "type" : "check_transfer_stop_payment_request"
                },
                "nullable" : true,
                "properties" : {
                  "requested_at" : {
                    "description" : "The time the stop-payment was requested.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The transaction ID of the corresponding credit transaction.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The ID of the check transfer that was stopped.",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.",
                    "enum" : [ "check_transfer_stop_payment_request" ],
                    "type" : "string"
                  }
                },
                "required" : [ "transfer_id", "transaction_id", "requested_at", "type" ],
                "title" : "Check Transfer Stop Payment Request",
                "type" : "object",
                "x-title-plural" : "Check Transfer Stop Payment Requests"
              },
              "submission" : {
                "description" : "After the transfer is submitted, this will contain supplemental details.",
                "example" : {
                  "check_number" : "130670"
                },
                "nullable" : true,
                "properties" : {
                  "check_number" : {
                    "description" : "The identitying number of the check.",
                    "type" : "string"
                  }
                },
                "required" : [ "check_number" ],
                "title" : "Check Transfer Submission",
                "type" : "object",
                "x-title-plural" : "Check Transfer Submissions"
              },
              "submitted_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction caused by the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_transfer`.",
                "enum" : [ "check_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "address_line1", "address_line2", "address_city", "address_state", "address_zip", "return_address", "amount", "created_at", "currency", "id", "mailed_at", "message", "note", "recipient_name", "status", "submitted_at", "submission", "template_id", "transaction_id", "stop_payment_request", "deposit", "type" ],
            "title" : "Check Transfer",
            "type" : "object",
            "x-tag" : "Check Transfers",
            "x-title-plural" : "Check Transfers"
          }
        }
      }
    }
  }, {
    "id" : "8518e958-db8d-4b18-97ae-01ef20fe38c6",
    "name" : "List Check Transfers",
    "request" : {
      "urlPath" : "/check_transfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"address_city\" : \"New York\",\n    \"address_line1\" : \"33 Liberty Street\",\n    \"address_line2\" : null,\n    \"address_state\" : \"NY\",\n    \"address_zip\" : \"10045\",\n    \"amount\" : 1000,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"deposit\" : null,\n    \"id\" : \"check_transfer_30b43acfu9vw8fyc4f5\",\n    \"mailed_at\" : \"2020-01-31T23:59:59Z\",\n    \"message\" : \"Invoice 29582\",\n    \"note\" : null,\n    \"recipient_name\" : \"Ian Crease\",\n    \"return_address\" : null,\n    \"status\" : \"mailed\",\n    \"stop_payment_request\" : null,\n    \"submission\" : {\n      \"check_number\" : \"130670\"\n    },\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"template_id\" : \"check_transfer_template_tr96ajellz6awlki022o\",\n    \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"type\" : \"check_transfer\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8518e958-db8d-4b18-97ae-01ef20fe38c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.566407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_check_transfers",
          "schema" : {
            "description" : "A list of Check Transfer objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "address_city" : "New York",
                "address_line1" : "33 Liberty Street",
                "address_state" : "NY",
                "address_zip" : "10045",
                "amount" : 1000,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "id" : "check_transfer_30b43acfu9vw8fyc4f5",
                "mailed_at" : "2020-01-31T23:59:59Z",
                "message" : "Invoice 29582",
                "recipient_name" : "Ian Crease",
                "status" : "mailed",
                "submission" : {
                  "check_number" : "130670"
                },
                "submitted_at" : "2020-01-31T23:59:59Z",
                "template_id" : "check_transfer_template_tr96ajellz6awlki022o",
                "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "type" : "check_transfer"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/check_transfer"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Check Transfer List",
            "type" : "object",
            "x-title-plural" : "Check Transfer Lists"
          }
        }
      }
    }
  }, {
    "id" : "7658f5e4-181a-44f1-bda0-ccaf9c64b1ec",
    "name" : "Retrieve a Check Deposit",
    "request" : {
      "urlPath" : "/check_deposits/7446",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 1000,\n  \"back_image_file_id\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit_acceptance\" : null,\n  \"deposit_rejection\" : null,\n  \"deposit_return\" : null,\n  \"front_image_file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"check_deposit_f06n9gpg7sxn8t19lfc1\",\n  \"status\" : \"submitted\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_deposit\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7658f5e4-181a-44f1-bda0-ccaf9c64b1ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.566318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_check_deposit",
          "schema" : {
            "description" : "Check Deposits allow you to deposit images of paper checks into your account.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
              "status" : "submitted",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_deposit"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account the check was deposited into.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "back_image_file_id" : {
                "description" : "The ID for the File containing the image of the back of the check.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit_acceptance" : {
                "description" : "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
                "example" : {
                  "account_number" : "987654321",
                  "amount" : 100,
                  "auxiliary_on_us" : "101",
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "routing_number" : "101050001"
                },
                "nullable" : true,
                "properties" : {
                  "account_number" : {
                    "description" : "The account number printed on the check.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "auxiliary_on_us" : {
                    "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "check_deposit_id" : {
                    "description" : "The ID of the Check Deposit that was accepted.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "routing_number" : {
                    "description" : "The routing number printed on the check.",
                    "type" : "string"
                  },
                  "serial_number" : {
                    "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                "title" : "Check Deposit Acceptance",
                "type" : "object",
                "x-title-plural" : "Check Deposit Acceptances"
              },
              "deposit_rejection" : {
                "description" : "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
                "example" : {
                  "amount" : 1750,
                  "currency" : "USD",
                  "reason" : "incomplete_image",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "reason" : {
                    "description" : "Why the check deposit was rejected.",
                    "enum" : [ "incomplete_image", "duplicate", "poor_image_quality", "incorrect_amount", "incorrect_recipient", "not_eligible_for_mobile_deposit", "unknown" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check's image is incomplete.", "This is a duplicate check submission.", "This check has poor image quality.", "The check was deposited with the incorrect amount.", "The check is made out to someone other than the account holder.", "This check was not eligible for mobile deposit.", "The check was rejected for an unknown reason." ]
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "reason", "rejected_at" ],
                "title" : "Check Deposit Rejection",
                "type" : "object",
                "x-title-plural" : "Check Deposit Rejections"
              },
              "deposit_return" : {
                "description" : "If your deposit is returned, this will contain details as to why it was returned.",
                "example" : {
                  "amount" : 100,
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "return_reason" : "insufficient_funds",
                  "returned_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "check_deposit_id" : {
                    "description" : "The identifier of the Check Deposit that was returned.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "return_reason" : {
                    "description" : "",
                    "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                  },
                  "returned_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                "title" : "Check Deposit Return",
                "type" : "object",
                "x-title-plural" : "Check Deposit Returns"
              },
              "front_image_file_id" : {
                "description" : "The ID for the File containing the image of the front of the check.",
                "type" : "string"
              },
              "id" : {
                "description" : "The deposit's identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Check Deposit.",
                "enum" : [ "pending", "submitted", "rejected", "returned" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Check Deposit is pending review.", "The Check Deposit has been deposited.", "The Check Deposit has been rejected.", "The Check Deposit has been returned." ]
              },
              "transaction_id" : {
                "description" : "The ID for the Transaction created by the deposit.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_deposit`.",
                "enum" : [ "check_deposit" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "created_at", "currency", "status", "account_id", "front_image_file_id", "back_image_file_id", "transaction_id", "deposit_acceptance", "deposit_rejection", "deposit_return", "type" ],
            "title" : "Check Deposit",
            "type" : "object",
            "x-tag" : "Check Deposits",
            "x-title-plural" : "Check Deposits"
          }
        }
      }
    }
  }, {
    "id" : "42649003-2d58-46f8-9b47-caae168ec66d",
    "name" : "Create a Check Deposit",
    "request" : {
      "urlPath" : "/check_deposits",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 1000,\n  \"back_image_file_id\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"deposit_acceptance\" : null,\n  \"deposit_rejection\" : null,\n  \"deposit_return\" : null,\n  \"front_image_file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"check_deposit_f06n9gpg7sxn8t19lfc1\",\n  \"status\" : \"submitted\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"check_deposit\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42649003-2d58-46f8-9b47-caae168ec66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.566012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_check_deposit",
          "schema" : {
            "description" : "Check Deposits allow you to deposit images of paper checks into your account.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 1000,
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
              "status" : "submitted",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "check_deposit"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account the check was deposited into.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "back_image_file_id" : {
                "description" : "The ID for the File containing the image of the back of the check.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "deposit_acceptance" : {
                "description" : "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
                "example" : {
                  "account_number" : "987654321",
                  "amount" : 100,
                  "auxiliary_on_us" : "101",
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "routing_number" : "101050001"
                },
                "nullable" : true,
                "properties" : {
                  "account_number" : {
                    "description" : "The account number printed on the check.",
                    "type" : "string"
                  },
                  "amount" : {
                    "description" : "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "auxiliary_on_us" : {
                    "description" : "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "check_deposit_id" : {
                    "description" : "The ID of the Check Deposit that was accepted.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "routing_number" : {
                    "description" : "The routing number printed on the check.",
                    "type" : "string"
                  },
                  "serial_number" : {
                    "description" : "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "account_number", "routing_number", "auxiliary_on_us", "serial_number", "check_deposit_id" ],
                "title" : "Check Deposit Acceptance",
                "type" : "object",
                "x-title-plural" : "Check Deposit Acceptances"
              },
              "deposit_rejection" : {
                "description" : "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
                "example" : {
                  "amount" : 1750,
                  "currency" : "USD",
                  "reason" : "incomplete_image",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "reason" : {
                    "description" : "Why the check deposit was rejected.",
                    "enum" : [ "incomplete_image", "duplicate", "poor_image_quality", "incorrect_amount", "incorrect_recipient", "not_eligible_for_mobile_deposit", "unknown" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check's image is incomplete.", "This is a duplicate check submission.", "This check has poor image quality.", "The check was deposited with the incorrect amount.", "The check is made out to someone other than the account holder.", "This check was not eligible for mobile deposit.", "The check was rejected for an unknown reason." ]
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "currency", "reason", "rejected_at" ],
                "title" : "Check Deposit Rejection",
                "type" : "object",
                "x-title-plural" : "Check Deposit Rejections"
              },
              "deposit_return" : {
                "description" : "If your deposit is returned, this will contain details as to why it was returned.",
                "example" : {
                  "amount" : 100,
                  "check_deposit_id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "currency" : "USD",
                  "return_reason" : "insufficient_funds",
                  "returned_at" : "2020-01-31T23:59:59Z",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "amount" : {
                    "description" : "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.",
                    "type" : "integer"
                  },
                  "check_deposit_id" : {
                    "description" : "The identifier of the Check Deposit that was returned.",
                    "type" : "string"
                  },
                  "currency" : {
                    "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
                  },
                  "return_reason" : {
                    "description" : "",
                    "enum" : [ "ach_conversion_not_supported", "closed_account", "duplicate_submission", "insufficient_funds", "no_account", "not_authorized", "stale_dated", "stop_payment", "unknown_reason", "unmatched_details", "unreadable_image" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "The check doesn't allow ACH conversion.", "The account is closed.", "The check has already been deposited.", "Insufficient funds", "No account was found matching the check details.", "The check was not authorized.", "The check is too old.", "The payment has been stopped by the account holder.", "The reason for the return is unknown.", "The image doesn't match the details submitted.", "The image could not be read." ]
                  },
                  "returned_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the transaction that reversed the original check deposit transaction.",
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "returned_at", "currency", "check_deposit_id", "transaction_id", "return_reason" ],
                "title" : "Check Deposit Return",
                "type" : "object",
                "x-title-plural" : "Check Deposit Returns"
              },
              "front_image_file_id" : {
                "description" : "The ID for the File containing the image of the front of the check.",
                "type" : "string"
              },
              "id" : {
                "description" : "The deposit's identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Check Deposit.",
                "enum" : [ "pending", "submitted", "rejected", "returned" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Check Deposit is pending review.", "The Check Deposit has been deposited.", "The Check Deposit has been rejected.", "The Check Deposit has been returned." ]
              },
              "transaction_id" : {
                "description" : "The ID for the Transaction created by the deposit.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `check_deposit`.",
                "enum" : [ "check_deposit" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "created_at", "currency", "status", "account_id", "front_image_file_id", "back_image_file_id", "transaction_id", "deposit_acceptance", "deposit_rejection", "deposit_return", "type" ],
            "title" : "Check Deposit",
            "type" : "object",
            "x-tag" : "Check Deposits",
            "x-title-plural" : "Check Deposits"
          }
        }
      }
    }
  }, {
    "id" : "b3e6351a-d296-43ac-8dbe-5a111010115f",
    "name" : "List Check Deposits",
    "request" : {
      "urlPath" : "/check_deposits",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 1000,\n    \"back_image_file_id\" : null,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"deposit_acceptance\" : null,\n    \"deposit_rejection\" : null,\n    \"deposit_return\" : null,\n    \"front_image_file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n    \"id\" : \"check_deposit_f06n9gpg7sxn8t19lfc1\",\n    \"status\" : \"submitted\",\n    \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"type\" : \"check_deposit\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3e6351a-d296-43ac-8dbe-5a111010115f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.565732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_check_deposits",
          "schema" : {
            "description" : "A list of Check Deposit objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 1000,
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "front_image_file_id" : "file_makxrc67oh9l6sg7w9yc",
                "id" : "check_deposit_f06n9gpg7sxn8t19lfc1",
                "status" : "submitted",
                "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "type" : "check_deposit"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/check_deposit"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Check Deposit List",
            "type" : "object",
            "x-title-plural" : "Check Deposit Lists"
          }
        }
      }
    }
  }, {
    "id" : "930d26bd-59d8-412b-adfc-37f7db41c32d",
    "name" : "Retrieve sensitive details for a Card",
    "request" : {
      "urlPath" : "/cards/dq40/details",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"card_id\" : \"card_oubs0hwk5rn6knuecxg2\",\n  \"expiration_month\" : 7,\n  \"expiration_year\" : 2025,\n  \"primary_account_number\" : \"4242424242424242\",\n  \"type\" : \"card_details\",\n  \"verification_code\" : \"123\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "930d26bd-59d8-412b-adfc-37f7db41c32d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.565668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_sensitive_details_for_a_card",
          "schema" : {
            "description" : "An object containing the sensitive details (card number, cvc, etc) for a Card.",
            "example" : {
              "card_id" : "card_oubs0hwk5rn6knuecxg2",
              "expiration_month" : 7,
              "expiration_year" : 2025,
              "primary_account_number" : "4242424242424242",
              "type" : "card_details",
              "verification_code" : "123"
            },
            "properties" : {
              "card_id" : {
                "description" : "The identifier for the Card for which sensitive details have been returned.",
                "type" : "string"
              },
              "expiration_month" : {
                "description" : "The month the card expires in M format (e.g., August is 8).",
                "type" : "integer"
              },
              "expiration_year" : {
                "description" : "The year the card expires in YYYY format (e.g., 2025).",
                "type" : "integer"
              },
              "primary_account_number" : {
                "description" : "The card number.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card_details`.",
                "enum" : [ "card_details" ],
                "type" : "string"
              },
              "verification_code" : {
                "description" : "The three-digit verification code for the card. It's also known as the Card Verification Code (CVC), the Card Verification Value (CVV), or the Card Identification (CID).",
                "type" : "string"
              }
            },
            "required" : [ "card_id", "primary_account_number", "expiration_month", "expiration_year", "verification_code", "type" ],
            "title" : "Card Details",
            "type" : "object",
            "x-title-plural" : "Card Detailss"
          }
        }
      }
    }
  }, {
    "id" : "67739d40-655b-4e39-8745-a2bf67bfe15e",
    "name" : "Update a Card",
    "request" : {
      "urlPath" : "/cards/577w",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"billing_address\" : {\n    \"city\" : \"New York\",\n    \"line1\" : \"33 Liberty Street\",\n    \"line2\" : null,\n    \"postal_code\" : \"10045\",\n    \"state\" : \"NY\"\n  },\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"Office Expenses\",\n  \"digital_wallet\" : {\n    \"card_profile_id\" : \"card_profile_cox5y73lob2eqly18piy\",\n    \"email\" : \"user@example.com\",\n    \"phone\" : \"+15551234567\"\n  },\n  \"expiration_month\" : 11,\n  \"expiration_year\" : 2028,\n  \"id\" : \"card_oubs0hwk5rn6knuecxg2\",\n  \"last4\" : \"4242\",\n  \"replacement\" : {\n    \"replaced_by_card_id\" : null,\n    \"replaced_card_id\" : null\n  },\n  \"status\" : \"active\",\n  \"type\" : \"card\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67739d40-655b-4e39-8745-a2bf67bfe15e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.565523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update_a_card",
          "schema" : {
            "description" : "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "billing_address" : {
                "city" : "New York",
                "line1" : "33 Liberty Street",
                "postal_code" : "10045",
                "state" : "NY"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "Office Expenses",
              "digital_wallet" : {
                "card_profile_id" : "card_profile_cox5y73lob2eqly18piy",
                "email" : "user@example.com",
                "phone" : "+15551234567"
              },
              "expiration_month" : 11,
              "expiration_year" : 2028,
              "id" : "card_oubs0hwk5rn6knuecxg2",
              "last4" : "4242",
              "replacement" : { },
              "status" : "active",
              "type" : "card"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this card belongs to.",
                "type" : "string"
              },
              "billing_address" : {
                "description" : "The Card's billing address.",
                "example" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "postal_code" : "10045",
                  "state" : "NY"
                },
                "properties" : {
                  "city" : {
                    "description" : "The city of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "postal_code" : {
                    "description" : "The postal code of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "line1", "line2", "city", "state", "postal_code" ],
                "title" : "Billing Address",
                "type" : "object",
                "x-title-plural" : "Billing Addresss"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The card's description for display purposes.",
                "nullable" : true,
                "type" : "string"
              },
              "digital_wallet" : {
                "description" : "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
                "nullable" : true,
                "properties" : {
                  "card_profile_id" : {
                    "description" : "The card profile assigned to this digital card. Card profiles may also be assigned at the program level.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "email" : {
                    "description" : "An email address that can be used to verify the cardholder via one-time passcode over email.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "phone" : {
                    "description" : "A phone number that can be used to verify the cardholder via one-time passcode over SMS.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "email", "phone", "card_profile_id" ],
                "title" : "Digital Wallet",
                "type" : "object",
                "x-title-plural" : "Digital Wallets"
              },
              "expiration_month" : {
                "description" : "The month the card expires in M format (e.g., August is 8).",
                "type" : "integer"
              },
              "expiration_year" : {
                "description" : "The year the card expires in YYYY format (e.g., 2025).",
                "type" : "integer"
              },
              "id" : {
                "description" : "The card identifier.",
                "type" : "string"
              },
              "last4" : {
                "description" : "The last 4 digits of the Card's Primary Account Number.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made with the card.",
                "enum" : [ "active", "disabled", "canceled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The card is active.", "The card is temporarily disabled.", "The card is temporarily canceled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card`.",
                "enum" : [ "card" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_id", "created_at", "description", "last4", "expiration_month", "expiration_year", "status", "billing_address", "digital_wallet", "type" ],
            "title" : "Card",
            "type" : "object",
            "x-tag" : "Cards",
            "x-title-plural" : "Cards"
          }
        }
      }
    }
  }, {
    "id" : "582071ae-115a-46b8-a9db-5f92140fa1d8",
    "name" : "Retrieve a Card",
    "request" : {
      "urlPath" : "/cards/6ogg",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"billing_address\" : {\n    \"city\" : \"New York\",\n    \"line1\" : \"33 Liberty Street\",\n    \"line2\" : null,\n    \"postal_code\" : \"10045\",\n    \"state\" : \"NY\"\n  },\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"Office Expenses\",\n  \"digital_wallet\" : {\n    \"card_profile_id\" : \"card_profile_cox5y73lob2eqly18piy\",\n    \"email\" : \"user@example.com\",\n    \"phone\" : \"+15551234567\"\n  },\n  \"expiration_month\" : 11,\n  \"expiration_year\" : 2028,\n  \"id\" : \"card_oubs0hwk5rn6knuecxg2\",\n  \"last4\" : \"4242\",\n  \"replacement\" : {\n    \"replaced_by_card_id\" : null,\n    \"replaced_card_id\" : null\n  },\n  \"status\" : \"active\",\n  \"type\" : \"card\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "582071ae-115a-46b8-a9db-5f92140fa1d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.56531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_card",
          "schema" : {
            "description" : "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "billing_address" : {
                "city" : "New York",
                "line1" : "33 Liberty Street",
                "postal_code" : "10045",
                "state" : "NY"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "Office Expenses",
              "digital_wallet" : {
                "card_profile_id" : "card_profile_cox5y73lob2eqly18piy",
                "email" : "user@example.com",
                "phone" : "+15551234567"
              },
              "expiration_month" : 11,
              "expiration_year" : 2028,
              "id" : "card_oubs0hwk5rn6knuecxg2",
              "last4" : "4242",
              "replacement" : { },
              "status" : "active",
              "type" : "card"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this card belongs to.",
                "type" : "string"
              },
              "billing_address" : {
                "description" : "The Card's billing address.",
                "example" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "postal_code" : "10045",
                  "state" : "NY"
                },
                "properties" : {
                  "city" : {
                    "description" : "The city of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "postal_code" : {
                    "description" : "The postal code of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "line1", "line2", "city", "state", "postal_code" ],
                "title" : "Billing Address",
                "type" : "object",
                "x-title-plural" : "Billing Addresss"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The card's description for display purposes.",
                "nullable" : true,
                "type" : "string"
              },
              "digital_wallet" : {
                "description" : "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
                "nullable" : true,
                "properties" : {
                  "card_profile_id" : {
                    "description" : "The card profile assigned to this digital card. Card profiles may also be assigned at the program level.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "email" : {
                    "description" : "An email address that can be used to verify the cardholder via one-time passcode over email.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "phone" : {
                    "description" : "A phone number that can be used to verify the cardholder via one-time passcode over SMS.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "email", "phone", "card_profile_id" ],
                "title" : "Digital Wallet",
                "type" : "object",
                "x-title-plural" : "Digital Wallets"
              },
              "expiration_month" : {
                "description" : "The month the card expires in M format (e.g., August is 8).",
                "type" : "integer"
              },
              "expiration_year" : {
                "description" : "The year the card expires in YYYY format (e.g., 2025).",
                "type" : "integer"
              },
              "id" : {
                "description" : "The card identifier.",
                "type" : "string"
              },
              "last4" : {
                "description" : "The last 4 digits of the Card's Primary Account Number.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made with the card.",
                "enum" : [ "active", "disabled", "canceled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The card is active.", "The card is temporarily disabled.", "The card is temporarily canceled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card`.",
                "enum" : [ "card" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_id", "created_at", "description", "last4", "expiration_month", "expiration_year", "status", "billing_address", "digital_wallet", "type" ],
            "title" : "Card",
            "type" : "object",
            "x-tag" : "Cards",
            "x-title-plural" : "Cards"
          }
        }
      }
    }
  }, {
    "id" : "df1572b1-1984-492a-a307-943060c489a4",
    "name" : "Create a Card",
    "request" : {
      "urlPath" : "/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"billing_address\" : {\n    \"city\" : \"New York\",\n    \"line1\" : \"33 Liberty Street\",\n    \"line2\" : null,\n    \"postal_code\" : \"10045\",\n    \"state\" : \"NY\"\n  },\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"Office Expenses\",\n  \"digital_wallet\" : {\n    \"card_profile_id\" : \"card_profile_cox5y73lob2eqly18piy\",\n    \"email\" : \"user@example.com\",\n    \"phone\" : \"+15551234567\"\n  },\n  \"expiration_month\" : 11,\n  \"expiration_year\" : 2028,\n  \"id\" : \"card_oubs0hwk5rn6knuecxg2\",\n  \"last4\" : \"4242\",\n  \"replacement\" : {\n    \"replaced_by_card_id\" : null,\n    \"replaced_card_id\" : null\n  },\n  \"status\" : \"active\",\n  \"type\" : \"card\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df1572b1-1984-492a-a307-943060c489a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.565089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_card",
          "schema" : {
            "description" : "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "billing_address" : {
                "city" : "New York",
                "line1" : "33 Liberty Street",
                "postal_code" : "10045",
                "state" : "NY"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "Office Expenses",
              "digital_wallet" : {
                "card_profile_id" : "card_profile_cox5y73lob2eqly18piy",
                "email" : "user@example.com",
                "phone" : "+15551234567"
              },
              "expiration_month" : 11,
              "expiration_year" : 2028,
              "id" : "card_oubs0hwk5rn6knuecxg2",
              "last4" : "4242",
              "replacement" : { },
              "status" : "active",
              "type" : "card"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this card belongs to.",
                "type" : "string"
              },
              "billing_address" : {
                "description" : "The Card's billing address.",
                "example" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "postal_code" : "10045",
                  "state" : "NY"
                },
                "properties" : {
                  "city" : {
                    "description" : "The city of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line1" : {
                    "description" : "The first line of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "line2" : {
                    "description" : "The second line of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "postal_code" : {
                    "description" : "The postal code of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "state" : {
                    "description" : "The US state of the billing address.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "line1", "line2", "city", "state", "postal_code" ],
                "title" : "Billing Address",
                "type" : "object",
                "x-title-plural" : "Billing Addresss"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The card's description for display purposes.",
                "nullable" : true,
                "type" : "string"
              },
              "digital_wallet" : {
                "description" : "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
                "nullable" : true,
                "properties" : {
                  "card_profile_id" : {
                    "description" : "The card profile assigned to this digital card. Card profiles may also be assigned at the program level.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "email" : {
                    "description" : "An email address that can be used to verify the cardholder via one-time passcode over email.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "phone" : {
                    "description" : "A phone number that can be used to verify the cardholder via one-time passcode over SMS.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "email", "phone", "card_profile_id" ],
                "title" : "Digital Wallet",
                "type" : "object",
                "x-title-plural" : "Digital Wallets"
              },
              "expiration_month" : {
                "description" : "The month the card expires in M format (e.g., August is 8).",
                "type" : "integer"
              },
              "expiration_year" : {
                "description" : "The year the card expires in YYYY format (e.g., 2025).",
                "type" : "integer"
              },
              "id" : {
                "description" : "The card identifier.",
                "type" : "string"
              },
              "last4" : {
                "description" : "The last 4 digits of the Card's Primary Account Number.",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made with the card.",
                "enum" : [ "active", "disabled", "canceled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The card is active.", "The card is temporarily disabled.", "The card is temporarily canceled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card`.",
                "enum" : [ "card" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_id", "created_at", "description", "last4", "expiration_month", "expiration_year", "status", "billing_address", "digital_wallet", "type" ],
            "title" : "Card",
            "type" : "object",
            "x-tag" : "Cards",
            "x-title-plural" : "Cards"
          }
        }
      }
    }
  }, {
    "id" : "3e7bd3d3-9dfc-48ae-81e6-3f0efa6b84d8",
    "name" : "List Cards",
    "request" : {
      "urlPath" : "/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"billing_address\" : {\n      \"city\" : \"New York\",\n      \"line1\" : \"33 Liberty Street\",\n      \"line2\" : null,\n      \"postal_code\" : \"10045\",\n      \"state\" : \"NY\"\n    },\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"description\" : \"Office Expenses\",\n    \"digital_wallet\" : {\n      \"card_profile_id\" : \"card_profile_cox5y73lob2eqly18piy\",\n      \"email\" : \"user@example.com\",\n      \"phone\" : \"+15551234567\"\n    },\n    \"expiration_month\" : 11,\n    \"expiration_year\" : 2028,\n    \"id\" : \"card_oubs0hwk5rn6knuecxg2\",\n    \"last4\" : \"4242\",\n    \"replacement\" : {\n      \"replaced_by_card_id\" : null,\n      \"replaced_card_id\" : null\n    },\n    \"status\" : \"active\",\n    \"type\" : \"card\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e7bd3d3-9dfc-48ae-81e6-3f0efa6b84d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.564926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_cards",
          "schema" : {
            "description" : "A list of Card objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "billing_address" : {
                  "city" : "New York",
                  "line1" : "33 Liberty Street",
                  "postal_code" : "10045",
                  "state" : "NY"
                },
                "created_at" : "2020-01-31T23:59:59Z",
                "description" : "Office Expenses",
                "digital_wallet" : {
                  "card_profile_id" : "card_profile_cox5y73lob2eqly18piy",
                  "email" : "user@example.com",
                  "phone" : "+15551234567"
                },
                "expiration_month" : 11,
                "expiration_year" : 2028,
                "id" : "card_oubs0hwk5rn6knuecxg2",
                "last4" : "4242",
                "replacement" : { },
                "status" : "active",
                "type" : "card"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/card"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Card List",
            "type" : "object",
            "x-title-plural" : "Card Lists"
          }
        }
      }
    }
  }, {
    "id" : "a3a78c5a-8801-4a12-9067-24dc16177473",
    "name" : "Retrieve a Card Profile",
    "request" : {
      "urlPath" : "/card_profiles/o9a6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"My Card Profile\",\n  \"digital_wallets\" : {\n    \"app_icon_file_id\" : \"file_8zxqkwlh43wo144u8yec\",\n    \"background_image_file_id\" : \"file_1ai913suu1zfn1pdetru\",\n    \"card_description\" : \"MyBank Signature Card\",\n    \"contact_email\" : \"user@example.com\",\n    \"contact_phone\" : \"+18885551212\",\n    \"contact_website\" : \"https://example.com\",\n    \"issuer_name\" : \"MyBank\",\n    \"text_color\" : {\n      \"blue\" : 59,\n      \"green\" : 43,\n      \"red\" : 26\n    }\n  },\n  \"id\" : \"card_profile_cox5y73lob2eqly18piy\",\n  \"status\" : \"active\",\n  \"type\" : \"card_profile\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3a78c5a-8801-4a12-9067-24dc16177473",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.564839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_card_profile",
          "schema" : {
            "description" : "This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "My Card Profile",
              "digital_wallets" : {
                "app_icon_file_id" : "file_8zxqkwlh43wo144u8yec",
                "background_image_file_id" : "file_1ai913suu1zfn1pdetru",
                "card_description" : "MyBank Signature Card",
                "contact_email" : "user@example.com",
                "contact_phone" : "+18885551212",
                "contact_website" : "https://example.com",
                "issuer_name" : "MyBank",
                "text_color" : {
                  "blue" : 59,
                  "green" : 43,
                  "red" : 26
                }
              },
              "id" : "card_profile_cox5y73lob2eqly18piy",
              "status" : "active",
              "type" : "card_profile"
            },
            "properties" : {
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "A description you can use to identify the Card Profile.",
                "type" : "string"
              },
              "digital_wallets" : {
                "description" : "How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.",
                "properties" : {
                  "app_icon_file_id" : {
                    "description" : "The identifier of the File containing the card's icon image.",
                    "type" : "string"
                  },
                  "background_image_file_id" : {
                    "description" : "The identifier of the File containing the card's front image.",
                    "type" : "string"
                  },
                  "card_description" : {
                    "description" : "A user-facing description for the card itself.",
                    "type" : "string"
                  },
                  "contact_email" : {
                    "description" : "An email address the user can contact to receive support for their card.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "contact_phone" : {
                    "description" : "A phone number the user can contact to receive support for their card.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "contact_website" : {
                    "description" : "A website the user can visit to view and receive support for their card.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "issuer_name" : {
                    "description" : "A user-facing description for whoever is issuing the card.",
                    "type" : "string"
                  },
                  "text_color" : {
                    "description" : "The Card's text color, specified as an RGB triple.",
                    "properties" : {
                      "blue" : {
                        "description" : "The value of the blue channel in the RGB color.",
                        "type" : "integer"
                      },
                      "green" : {
                        "description" : "The value of the green channel in the RGB color.",
                        "type" : "integer"
                      },
                      "red" : {
                        "description" : "The value of the red channel in the RGB color.",
                        "type" : "integer"
                      }
                    },
                    "required" : [ "red", "green", "blue" ],
                    "title" : "Text Color",
                    "type" : "object",
                    "x-title-plural" : "Text Colors"
                  }
                },
                "required" : [ "text_color", "issuer_name", "card_description", "contact_website", "contact_email", "contact_phone", "background_image_file_id", "app_icon_file_id" ],
                "title" : "Digital Wallets",
                "type" : "object",
                "x-title-plural" : "Digital Walletss"
              },
              "id" : {
                "description" : "The Card Profile identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Card Profile.",
                "enum" : [ "pending", "rejected", "active", "archived" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Card Profile is awaiting review from Increase and/or processing by card networks.", "There is an issue with the Card Profile preventing it from use.", "The Card Profile can be assigned to Cards.", "The Card Profile is no longer in use." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card_profile`.",
                "enum" : [ "card_profile" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "status", "description", "digital_wallets", "type" ],
            "title" : "Card Profile",
            "type" : "object",
            "x-tag" : "Card Profiles",
            "x-title-plural" : "Card Profiles"
          }
        }
      }
    }
  }, {
    "id" : "6db63122-9fc1-4745-9c50-7fbb8b8d6edd",
    "name" : "Create a Card Profile",
    "request" : {
      "urlPath" : "/card_profiles",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"description\" : \"My Card Profile\",\n  \"digital_wallets\" : {\n    \"app_icon_file_id\" : \"file_8zxqkwlh43wo144u8yec\",\n    \"background_image_file_id\" : \"file_1ai913suu1zfn1pdetru\",\n    \"card_description\" : \"MyBank Signature Card\",\n    \"contact_email\" : \"user@example.com\",\n    \"contact_phone\" : \"+18885551212\",\n    \"contact_website\" : \"https://example.com\",\n    \"issuer_name\" : \"MyBank\",\n    \"text_color\" : {\n      \"blue\" : 59,\n      \"green\" : 43,\n      \"red\" : 26\n    }\n  },\n  \"id\" : \"card_profile_cox5y73lob2eqly18piy\",\n  \"status\" : \"active\",\n  \"type\" : \"card_profile\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6db63122-9fc1-4745-9c50-7fbb8b8d6edd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.56463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_card_profile",
          "schema" : {
            "description" : "This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "description" : "My Card Profile",
              "digital_wallets" : {
                "app_icon_file_id" : "file_8zxqkwlh43wo144u8yec",
                "background_image_file_id" : "file_1ai913suu1zfn1pdetru",
                "card_description" : "MyBank Signature Card",
                "contact_email" : "user@example.com",
                "contact_phone" : "+18885551212",
                "contact_website" : "https://example.com",
                "issuer_name" : "MyBank",
                "text_color" : {
                  "blue" : 59,
                  "green" : 43,
                  "red" : 26
                }
              },
              "id" : "card_profile_cox5y73lob2eqly18piy",
              "status" : "active",
              "type" : "card_profile"
            },
            "properties" : {
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "A description you can use to identify the Card Profile.",
                "type" : "string"
              },
              "digital_wallets" : {
                "description" : "How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.",
                "properties" : {
                  "app_icon_file_id" : {
                    "description" : "The identifier of the File containing the card's icon image.",
                    "type" : "string"
                  },
                  "background_image_file_id" : {
                    "description" : "The identifier of the File containing the card's front image.",
                    "type" : "string"
                  },
                  "card_description" : {
                    "description" : "A user-facing description for the card itself.",
                    "type" : "string"
                  },
                  "contact_email" : {
                    "description" : "An email address the user can contact to receive support for their card.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "contact_phone" : {
                    "description" : "A phone number the user can contact to receive support for their card.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "contact_website" : {
                    "description" : "A website the user can visit to view and receive support for their card.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "issuer_name" : {
                    "description" : "A user-facing description for whoever is issuing the card.",
                    "type" : "string"
                  },
                  "text_color" : {
                    "description" : "The Card's text color, specified as an RGB triple.",
                    "properties" : {
                      "blue" : {
                        "description" : "The value of the blue channel in the RGB color.",
                        "type" : "integer"
                      },
                      "green" : {
                        "description" : "The value of the green channel in the RGB color.",
                        "type" : "integer"
                      },
                      "red" : {
                        "description" : "The value of the red channel in the RGB color.",
                        "type" : "integer"
                      }
                    },
                    "required" : [ "red", "green", "blue" ],
                    "title" : "Text Color",
                    "type" : "object",
                    "x-title-plural" : "Text Colors"
                  }
                },
                "required" : [ "text_color", "issuer_name", "card_description", "contact_website", "contact_email", "contact_phone", "background_image_file_id", "app_icon_file_id" ],
                "title" : "Digital Wallets",
                "type" : "object",
                "x-title-plural" : "Digital Walletss"
              },
              "id" : {
                "description" : "The Card Profile identifier.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Card Profile.",
                "enum" : [ "pending", "rejected", "active", "archived" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Card Profile is awaiting review from Increase and/or processing by card networks.", "There is an issue with the Card Profile preventing it from use.", "The Card Profile can be assigned to Cards.", "The Card Profile is no longer in use." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card_profile`.",
                "enum" : [ "card_profile" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "created_at", "status", "description", "digital_wallets", "type" ],
            "title" : "Card Profile",
            "type" : "object",
            "x-tag" : "Card Profiles",
            "x-title-plural" : "Card Profiles"
          }
        }
      }
    }
  }, {
    "id" : "32a64cd9-1829-4548-8af1-9eaef3687f89",
    "name" : "List Card Profiles",
    "request" : {
      "urlPath" : "/card_profiles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"description\" : \"My Card Profile\",\n    \"digital_wallets\" : {\n      \"app_icon_file_id\" : \"file_8zxqkwlh43wo144u8yec\",\n      \"background_image_file_id\" : \"file_1ai913suu1zfn1pdetru\",\n      \"card_description\" : \"MyBank Signature Card\",\n      \"contact_email\" : \"user@example.com\",\n      \"contact_phone\" : \"+18885551212\",\n      \"contact_website\" : \"https://example.com\",\n      \"issuer_name\" : \"MyBank\",\n      \"text_color\" : {\n        \"blue\" : 59,\n        \"green\" : 43,\n        \"red\" : 26\n      }\n    },\n    \"id\" : \"card_profile_cox5y73lob2eqly18piy\",\n    \"status\" : \"active\",\n    \"type\" : \"card_profile\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32a64cd9-1829-4548-8af1-9eaef3687f89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.564473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_card_profiles",
          "schema" : {
            "description" : "A list of Card Profile objects",
            "example" : {
              "data" : [ {
                "created_at" : "2020-01-31T23:59:59Z",
                "description" : "My Card Profile",
                "digital_wallets" : {
                  "app_icon_file_id" : "file_8zxqkwlh43wo144u8yec",
                  "background_image_file_id" : "file_1ai913suu1zfn1pdetru",
                  "card_description" : "MyBank Signature Card",
                  "contact_email" : "user@example.com",
                  "contact_phone" : "+18885551212",
                  "contact_website" : "https://example.com",
                  "issuer_name" : "MyBank",
                  "text_color" : {
                    "blue" : 59,
                    "green" : 43,
                    "red" : 26
                  }
                },
                "id" : "card_profile_cox5y73lob2eqly18piy",
                "status" : "active",
                "type" : "card_profile"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/card_profile"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Card Profile List",
            "type" : "object",
            "x-title-plural" : "Card Profile Lists"
          }
        }
      }
    }
  }, {
    "id" : "41b2682c-d8f7-4715-82d0-e1857b281939",
    "name" : "Retrieve a Card Dispute",
    "request" : {
      "urlPath" : "/card_disputes/s08b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"acceptance\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"disputed_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"explanation\" : \"Unauthorized recurring purchase\",\n  \"id\" : \"card_dispute_h9sc95nbl1cgltpp7men\",\n  \"rejection\" : null,\n  \"status\" : \"pending_reviewing\",\n  \"type\" : \"card_dispute\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41b2682c-d8f7-4715-82d0-e1857b281939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.564389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_a_card_dispute",
          "schema" : {
            "description" : "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "explanation" : "Unauthorized recurring purchase",
              "id" : "card_dispute_h9sc95nbl1cgltpp7men",
              "status" : "pending_reviewing",
              "type" : "card_dispute"
            },
            "properties" : {
              "acceptance" : {
                "description" : "If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.",
                "example" : {
                  "accepted_at" : "2020-01-31T23:59:59Z",
                  "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "accepted_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "card_dispute_id" : {
                    "description" : "The identifier of the Card Dispute that was accepted.",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                "title" : "Card Dispute Acceptance",
                "type" : "object",
                "x-title-plural" : "Card Dispute Acceptances"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "disputed_transaction_id" : {
                "description" : "The identifier of the Transaction that was disputed.",
                "type" : "string"
              },
              "explanation" : {
                "description" : "Why you disputed the Transaction in question.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Card Dispute identifier.",
                "type" : "string"
              },
              "rejection" : {
                "description" : "If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.",
                "example" : {
                  "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                  "explanation" : "Acquirer provided evidence that the transaction was authorized.",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "card_dispute_id" : {
                    "description" : "The identifier of the Card Dispute that was rejected.",
                    "type" : "string"
                  },
                  "explanation" : {
                    "description" : "Why the Card Dispute was rejected.",
                    "type" : "string"
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "explanation", "rejected_at", "card_dispute_id" ],
                "title" : "Card Dispute Rejection",
                "type" : "object",
                "x-title-plural" : "Card Dispute Rejections"
              },
              "status" : {
                "description" : "The results of the Dispute investigation.",
                "enum" : [ "pending_reviewing", "accepted", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Card Dispute is pending review.", "The Card Dispute has been accepted and your funds have been returned.", "The Card Dispute has been rejected." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card_dispute`.",
                "enum" : [ "card_dispute" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "explanation", "status", "created_at", "disputed_transaction_id", "acceptance", "rejection", "type" ],
            "title" : "Card Dispute",
            "type" : "object",
            "x-tag" : "Card Disputes",
            "x-title-plural" : "Card Disputes"
          }
        }
      }
    }
  }, {
    "id" : "41b99238-30df-4e2b-af8f-51dd6873f6e1",
    "name" : "Create a Card Dispute",
    "request" : {
      "urlPath" : "/card_disputes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"acceptance\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"disputed_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"explanation\" : \"Unauthorized recurring purchase\",\n  \"id\" : \"card_dispute_h9sc95nbl1cgltpp7men\",\n  \"rejection\" : null,\n  \"status\" : \"pending_reviewing\",\n  \"type\" : \"card_dispute\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41b99238-30df-4e2b-af8f-51dd6873f6e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.564185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_a_card_dispute",
          "schema" : {
            "description" : "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.",
            "example" : {
              "created_at" : "2020-01-31T23:59:59Z",
              "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "explanation" : "Unauthorized recurring purchase",
              "id" : "card_dispute_h9sc95nbl1cgltpp7men",
              "status" : "pending_reviewing",
              "type" : "card_dispute"
            },
            "properties" : {
              "acceptance" : {
                "description" : "If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.",
                "example" : {
                  "accepted_at" : "2020-01-31T23:59:59Z",
                  "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi"
                },
                "nullable" : true,
                "properties" : {
                  "accepted_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "card_dispute_id" : {
                    "description" : "The identifier of the Card Dispute that was accepted.",
                    "type" : "string"
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Transaction that was created to return the disputed funds to your account.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "accepted_at", "card_dispute_id", "transaction_id" ],
                "title" : "Card Dispute Acceptance",
                "type" : "object",
                "x-title-plural" : "Card Dispute Acceptances"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "disputed_transaction_id" : {
                "description" : "The identifier of the Transaction that was disputed.",
                "type" : "string"
              },
              "explanation" : {
                "description" : "Why you disputed the Transaction in question.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Card Dispute identifier.",
                "type" : "string"
              },
              "rejection" : {
                "description" : "If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.",
                "example" : {
                  "card_dispute_id" : "card_dispute_h9sc95nbl1cgltpp7men",
                  "explanation" : "Acquirer provided evidence that the transaction was authorized.",
                  "rejected_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "card_dispute_id" : {
                    "description" : "The identifier of the Card Dispute that was rejected.",
                    "type" : "string"
                  },
                  "explanation" : {
                    "description" : "Why the Card Dispute was rejected.",
                    "type" : "string"
                  },
                  "rejected_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "explanation", "rejected_at", "card_dispute_id" ],
                "title" : "Card Dispute Rejection",
                "type" : "object",
                "x-title-plural" : "Card Dispute Rejections"
              },
              "status" : {
                "description" : "The results of the Dispute investigation.",
                "enum" : [ "pending_reviewing", "accepted", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Card Dispute is pending review.", "The Card Dispute has been accepted and your funds have been returned.", "The Card Dispute has been rejected." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `card_dispute`.",
                "enum" : [ "card_dispute" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "explanation", "status", "created_at", "disputed_transaction_id", "acceptance", "rejection", "type" ],
            "title" : "Card Dispute",
            "type" : "object",
            "x-tag" : "Card Disputes",
            "x-title-plural" : "Card Disputes"
          }
        }
      }
    }
  }, {
    "id" : "50c6f322-e507-4850-b3e0-e82bc5ad1fce",
    "name" : "List Card Disputes",
    "request" : {
      "urlPath" : "/card_disputes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"acceptance\" : null,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"disputed_transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"explanation\" : \"Unauthorized recurring purchase\",\n    \"id\" : \"card_dispute_h9sc95nbl1cgltpp7men\",\n    \"rejection\" : null,\n    \"status\" : \"pending_reviewing\",\n    \"type\" : \"card_dispute\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50c6f322-e507-4850-b3e0-e82bc5ad1fce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.564029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_card_disputes",
          "schema" : {
            "description" : "A list of Card Dispute objects",
            "example" : {
              "data" : [ {
                "created_at" : "2020-01-31T23:59:59Z",
                "disputed_transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "explanation" : "Unauthorized recurring purchase",
                "id" : "card_dispute_h9sc95nbl1cgltpp7men",
                "status" : "pending_reviewing",
                "type" : "card_dispute"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/card_dispute"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Card Dispute List",
            "type" : "object",
            "x-title-plural" : "Card Dispute Lists"
          }
        }
      }
    }
  }, {
    "id" : "563e78f8-e0d5-40b6-a23a-64a3e1e720c8",
    "name" : "Cancel a pending ACH Transfer",
    "request" : {
      "urlPath" : "/ach_transfers/8mg5/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : \"National Phonograph Company\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"funding\" : \"checking\",\n  \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n  \"individual_id\" : null,\n  \"individual_name\" : \"Ian Crease\",\n  \"network\" : \"ach\",\n  \"notification_of_change\" : null,\n  \"return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n  \"statement_descriptor\" : \"Statement descriptor\",\n  \"status\" : \"returned\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"ach_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "563e78f8-e0d5-40b6-a23a-64a3e1e720c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.563915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancel_a_pending_ach_transfer",
          "schema" : {
            "description" : "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "company_name" : "National Phonograph Company",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "funding" : "checking",
              "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "individual_name" : "Ian Crease",
              "network" : "ach",
              "routing_number" : "101050001",
              "standard_entry_class_code" : "corporate_credit_or_debit",
              "statement_descriptor" : "Statement descriptor",
              "status" : "returned",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "ach_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information that will be sent to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "The data you chose to associate with the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the transfer you set to be shown to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which the recipient knows you.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account." ]
              },
              "id" : {
                "description" : "The ACH transfer's identifier.",
                "type" : "string"
              },
              "individual_id" : {
                "description" : "Your identifer for the transfer recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "individual_name" : {
                "description" : "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "ach" ],
                "type" : "string"
              },
              "notification_of_change" : {
                "description" : "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
                "example" : {
                  "change_code" : "incorrect_transaction_code",
                  "corrected_data" : "32",
                  "created_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "change_code" : {
                    "description" : "The type of change that occurred.",
                    "type" : "string"
                  },
                  "corrected_data" : {
                    "description" : "The corrected data.",
                    "type" : "string"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "change_code", "corrected_data" ],
                "title" : "ACH Notification of Change",
                "type" : "object",
                "x-title-plural" : "ACH Notification of Changes"
              },
              "return" : {
                "description" : "If your transfer is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "insufficient_fund",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the ACH Transfer was returned.",
                    "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Tranasaction associated with this return.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The identifier of the ACH Transfer associated with this return.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                "title" : "ACH Transfer Return",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "standard_entry_class_code" : {
                "description" : "The Standard Entry Class (SEC) code to use for the transfer.",
                "enum" : [ "corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Corporate Credit and Debit (CCD).", "Prearranged Payments and Deposits (PPD).", "Internet Initiated (WEB)." ]
              },
              "statement_descriptor" : {
                "description" : "The descriptor that will show on the recipient's bank statement.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "canceled", "pending_submission", "submitted", "returned", "requires_attention", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending approval.", "The transfer has been canceled.", "The transfer is pending submission.", "The transfer is complete.", "The transfer has been returned.", "The transfer requires your attention.", "The transfer has been rejected." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "ACH Transfer Submission",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_transfer`.",
                "enum" : [ "ach_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "addendum", "amount", "currency", "approval", "cancellation", "created_at", "external_account_id", "id", "network", "notification_of_change", "return", "routing_number", "statement_descriptor", "status", "submission", "template_id", "transaction_id", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "funding", "individual_id", "individual_name", "standard_entry_class_code", "type" ],
            "title" : "ACH Transfer",
            "type" : "object",
            "x-tag" : "ACH Transfers",
            "x-title-plural" : "ACH Transfers"
          }
        }
      }
    }
  }, {
    "id" : "0ddb57a3-0f36-4884-b108-cbaa09c95b8c",
    "name" : "Approve an ACH Transfer",
    "request" : {
      "urlPath" : "/ach_transfers/8070/approve",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : \"National Phonograph Company\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"funding\" : \"checking\",\n  \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n  \"individual_id\" : null,\n  \"individual_name\" : \"Ian Crease\",\n  \"network\" : \"ach\",\n  \"notification_of_change\" : null,\n  \"return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n  \"statement_descriptor\" : \"Statement descriptor\",\n  \"status\" : \"returned\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"ach_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ddb57a3-0f36-4884-b108-cbaa09c95b8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.563525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "approve_an_ach_transfer",
          "schema" : {
            "description" : "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "company_name" : "National Phonograph Company",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "funding" : "checking",
              "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "individual_name" : "Ian Crease",
              "network" : "ach",
              "routing_number" : "101050001",
              "standard_entry_class_code" : "corporate_credit_or_debit",
              "statement_descriptor" : "Statement descriptor",
              "status" : "returned",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "ach_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information that will be sent to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "The data you chose to associate with the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the transfer you set to be shown to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which the recipient knows you.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account." ]
              },
              "id" : {
                "description" : "The ACH transfer's identifier.",
                "type" : "string"
              },
              "individual_id" : {
                "description" : "Your identifer for the transfer recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "individual_name" : {
                "description" : "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "ach" ],
                "type" : "string"
              },
              "notification_of_change" : {
                "description" : "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
                "example" : {
                  "change_code" : "incorrect_transaction_code",
                  "corrected_data" : "32",
                  "created_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "change_code" : {
                    "description" : "The type of change that occurred.",
                    "type" : "string"
                  },
                  "corrected_data" : {
                    "description" : "The corrected data.",
                    "type" : "string"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "change_code", "corrected_data" ],
                "title" : "ACH Notification of Change",
                "type" : "object",
                "x-title-plural" : "ACH Notification of Changes"
              },
              "return" : {
                "description" : "If your transfer is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "insufficient_fund",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the ACH Transfer was returned.",
                    "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Tranasaction associated with this return.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The identifier of the ACH Transfer associated with this return.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                "title" : "ACH Transfer Return",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "standard_entry_class_code" : {
                "description" : "The Standard Entry Class (SEC) code to use for the transfer.",
                "enum" : [ "corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Corporate Credit and Debit (CCD).", "Prearranged Payments and Deposits (PPD).", "Internet Initiated (WEB)." ]
              },
              "statement_descriptor" : {
                "description" : "The descriptor that will show on the recipient's bank statement.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "canceled", "pending_submission", "submitted", "returned", "requires_attention", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending approval.", "The transfer has been canceled.", "The transfer is pending submission.", "The transfer is complete.", "The transfer has been returned.", "The transfer requires your attention.", "The transfer has been rejected." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "ACH Transfer Submission",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_transfer`.",
                "enum" : [ "ach_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "addendum", "amount", "currency", "approval", "cancellation", "created_at", "external_account_id", "id", "network", "notification_of_change", "return", "routing_number", "statement_descriptor", "status", "submission", "template_id", "transaction_id", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "funding", "individual_id", "individual_name", "standard_entry_class_code", "type" ],
            "title" : "ACH Transfer",
            "type" : "object",
            "x-tag" : "ACH Transfers",
            "x-title-plural" : "ACH Transfers"
          }
        }
      }
    }
  }, {
    "id" : "8e8a7e73-edf0-40e1-abdf-e3ca44634e71",
    "name" : "Retrieve an ACH Transfer",
    "request" : {
      "urlPath" : "/ach_transfers/hbrz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : \"National Phonograph Company\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"funding\" : \"checking\",\n  \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n  \"individual_id\" : null,\n  \"individual_name\" : \"Ian Crease\",\n  \"network\" : \"ach\",\n  \"notification_of_change\" : null,\n  \"return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n  \"statement_descriptor\" : \"Statement descriptor\",\n  \"status\" : \"returned\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"ach_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e8a7e73-edf0-40e1-abdf-e3ca44634e71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.563068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_ach_transfer",
          "schema" : {
            "description" : "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "company_name" : "National Phonograph Company",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "funding" : "checking",
              "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "individual_name" : "Ian Crease",
              "network" : "ach",
              "routing_number" : "101050001",
              "standard_entry_class_code" : "corporate_credit_or_debit",
              "statement_descriptor" : "Statement descriptor",
              "status" : "returned",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "ach_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information that will be sent to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "The data you chose to associate with the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the transfer you set to be shown to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which the recipient knows you.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account." ]
              },
              "id" : {
                "description" : "The ACH transfer's identifier.",
                "type" : "string"
              },
              "individual_id" : {
                "description" : "Your identifer for the transfer recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "individual_name" : {
                "description" : "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "ach" ],
                "type" : "string"
              },
              "notification_of_change" : {
                "description" : "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
                "example" : {
                  "change_code" : "incorrect_transaction_code",
                  "corrected_data" : "32",
                  "created_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "change_code" : {
                    "description" : "The type of change that occurred.",
                    "type" : "string"
                  },
                  "corrected_data" : {
                    "description" : "The corrected data.",
                    "type" : "string"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "change_code", "corrected_data" ],
                "title" : "ACH Notification of Change",
                "type" : "object",
                "x-title-plural" : "ACH Notification of Changes"
              },
              "return" : {
                "description" : "If your transfer is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "insufficient_fund",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the ACH Transfer was returned.",
                    "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Tranasaction associated with this return.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The identifier of the ACH Transfer associated with this return.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                "title" : "ACH Transfer Return",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "standard_entry_class_code" : {
                "description" : "The Standard Entry Class (SEC) code to use for the transfer.",
                "enum" : [ "corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Corporate Credit and Debit (CCD).", "Prearranged Payments and Deposits (PPD).", "Internet Initiated (WEB)." ]
              },
              "statement_descriptor" : {
                "description" : "The descriptor that will show on the recipient's bank statement.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "canceled", "pending_submission", "submitted", "returned", "requires_attention", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending approval.", "The transfer has been canceled.", "The transfer is pending submission.", "The transfer is complete.", "The transfer has been returned.", "The transfer requires your attention.", "The transfer has been rejected." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "ACH Transfer Submission",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_transfer`.",
                "enum" : [ "ach_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "addendum", "amount", "currency", "approval", "cancellation", "created_at", "external_account_id", "id", "network", "notification_of_change", "return", "routing_number", "statement_descriptor", "status", "submission", "template_id", "transaction_id", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "funding", "individual_id", "individual_name", "standard_entry_class_code", "type" ],
            "title" : "ACH Transfer",
            "type" : "object",
            "x-tag" : "ACH Transfers",
            "x-title-plural" : "ACH Transfers"
          }
        }
      }
    }
  }, {
    "id" : "7d7a65fe-e25d-4a6c-86dd-10c7cc2908ca",
    "name" : "Create an ACH Transfer",
    "request" : {
      "urlPath" : "/ach_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : \"National Phonograph Company\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n  \"funding\" : \"checking\",\n  \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n  \"individual_id\" : null,\n  \"individual_name\" : \"Ian Crease\",\n  \"network\" : \"ach\",\n  \"notification_of_change\" : null,\n  \"return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n  \"statement_descriptor\" : \"Statement descriptor\",\n  \"status\" : \"returned\",\n  \"submission\" : {\n    \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n    \"trace_number\" : \"058349238292834\"\n  },\n  \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"ach_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d7a65fe-e25d-4a6c-86dd-10c7cc2908ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.56257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_ach_transfer",
          "schema" : {
            "description" : "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "company_name" : "National Phonograph Company",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
              "funding" : "checking",
              "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "individual_name" : "Ian Crease",
              "network" : "ach",
              "routing_number" : "101050001",
              "standard_entry_class_code" : "corporate_credit_or_debit",
              "statement_descriptor" : "Statement descriptor",
              "status" : "returned",
              "submission" : {
                "submitted_at" : "2020-01-31T23:59:59Z",
                "trace_number" : "058349238292834"
              },
              "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "ach_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information that will be sent to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "The data you chose to associate with the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the transfer you set to be shown to the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which the recipient knows you.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "external_account_id" : {
                "description" : "The identifier of the External Account the transfer was made to, if any.",
                "nullable" : true,
                "type" : "string"
              },
              "funding" : {
                "description" : "The type of the account to which the transfer will be sent.",
                "enum" : [ "checking", "savings" ],
                "type" : "string",
                "x-enum-descriptions" : [ "A checking account.", "A savings account." ]
              },
              "id" : {
                "description" : "The ACH transfer's identifier.",
                "type" : "string"
              },
              "individual_id" : {
                "description" : "Your identifer for the transfer recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "individual_name" : {
                "description" : "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
                "nullable" : true,
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "ach" ],
                "type" : "string"
              },
              "notification_of_change" : {
                "description" : "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
                "example" : {
                  "change_code" : "incorrect_transaction_code",
                  "corrected_data" : "32",
                  "created_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "change_code" : {
                    "description" : "The type of change that occurred.",
                    "type" : "string"
                  },
                  "corrected_data" : {
                    "description" : "The corrected data.",
                    "type" : "string"
                  },
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "change_code", "corrected_data" ],
                "title" : "ACH Notification of Change",
                "type" : "object",
                "x-title-plural" : "ACH Notification of Changes"
              },
              "return" : {
                "description" : "If your transfer is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "insufficient_fund",
                  "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                  "transfer_id" : "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the ACH Transfer was returned.",
                    "enum" : [ "insufficient_fund", "no_account", "account_closed", "invalid_account_number_structure", "account_frozen_entry_returned_per_ofac_instruction", "credit_entry_refused_by_receiver", "unauthorized_debit_to_consumer_account_using_corporate_sec_code", "corporate_customer_advised_not_authorized", "payment_stopped", "non_transaction_account", "uncollected_funds", "routing_number_check_digit_error", "customer_advised_unauthorized_improper_ineligible_or_incomplete", "amount_field_error", "authorization_revoked_by_customer", "invalid_ach_routing_number", "file_record_edit_criteria", "enr_invalid_individual_name", "returned_per_odfi_request", "addenda_error", "limited_participation_dfi", "incorrectly_coded_outbound_international_payment", "other" ],
                    "type" : "string",
                    "x-enum-descriptions" : [ "Insufficient funds in the source account.", "The account does not exist or the receiving bank was unable to locate it.", "The account is closed.", "The account number is invalid at the receiving bank.", "The account was frozen per the Office of Foreign Assets Control.", "The receiving bank account refused a credit transfer.", "The receiving bank rejected because of an incorrect Standard Entry Class code.", "The corporate customer reversed the transfer.", "The receiving bank stopped payment on this transfer.", "The receiving bank account does not perform transfers.", "The receiving bank account does not have enough available balance for the transfer.", "The routing number is incorrect.", "The customer reversed the transfer.", "The amount field is incorrect or too large.", "The customer who initiated the transfer revoked authorization.", "The routing number is invalid.", "The receiving bank is unable to process a field in the transfer.", "The individual name field was invalid.", "The originating financial institution reversed the transfer.", "The addenda record is incorrect or missing.", "The receiving bank's regulatory supervisor has limited their participation.", "The outbound international ACH transfer was incorrect.", "Any other ACH return reason." ]
                  },
                  "transaction_id" : {
                    "description" : "The identifier of the Tranasaction associated with this return.",
                    "type" : "string"
                  },
                  "transfer_id" : {
                    "description" : "The identifier of the ACH Transfer associated with this return.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code", "transfer_id", "transaction_id" ],
                "title" : "ACH Transfer Return",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "standard_entry_class_code" : {
                "description" : "The Standard Entry Class (SEC) code to use for the transfer.",
                "enum" : [ "corporate_credit_or_debit", "prearranged_payments_and_deposit", "internet_initiated" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Corporate Credit and Debit (CCD).", "Prearranged Payments and Deposits (PPD).", "Internet Initiated (WEB)." ]
              },
              "statement_descriptor" : {
                "description" : "The descriptor that will show on the recipient's bank statement.",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_approval", "canceled", "pending_submission", "submitted", "returned", "requires_attention", "rejected" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending approval.", "The transfer has been canceled.", "The transfer is pending submission.", "The transfer is complete.", "The transfer has been returned.", "The transfer requires your attention.", "The transfer has been rejected." ]
              },
              "submission" : {
                "description" : "After the transfer is submitted to FedACH, this will contain supplemental details.",
                "example" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "nullable" : true,
                "properties" : {
                  "submitted_at" : {
                    "description" : "When the ACH transfer was sent to FedACH.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "trace_number" : {
                    "description" : "The trace number for the submission.",
                    "type" : "string"
                  }
                },
                "required" : [ "trace_number", "submitted_at" ],
                "title" : "ACH Transfer Submission",
                "type" : "object",
                "x-title-plural" : "ACH Transfer Submissions"
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_transfer`.",
                "enum" : [ "ach_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "addendum", "amount", "currency", "approval", "cancellation", "created_at", "external_account_id", "id", "network", "notification_of_change", "return", "routing_number", "statement_descriptor", "status", "submission", "template_id", "transaction_id", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "funding", "individual_id", "individual_name", "standard_entry_class_code", "type" ],
            "title" : "ACH Transfer",
            "type" : "object",
            "x-tag" : "ACH Transfers",
            "x-title-plural" : "ACH Transfers"
          }
        }
      }
    }
  }, {
    "id" : "ce64c893-4235-4178-a89a-7355623cac43",
    "name" : "List ACH Transfers",
    "request" : {
      "urlPath" : "/ach_transfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"account_number\" : \"987654321\",\n    \"addendum\" : null,\n    \"amount\" : 100,\n    \"approval\" : {\n      \"approved_at\" : \"2020-01-31T23:59:59Z\"\n    },\n    \"cancellation\" : null,\n    \"company_descriptive_date\" : null,\n    \"company_discretionary_data\" : null,\n    \"company_entry_description\" : null,\n    \"company_name\" : \"National Phonograph Company\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"external_account_id\" : \"external_account_ukk55lr923a3ac0pp7iv\",\n    \"funding\" : \"checking\",\n    \"id\" : \"ach_transfer_uoxatyh3lt5evrsdvo7q\",\n    \"individual_id\" : null,\n    \"individual_name\" : \"Ian Crease\",\n    \"network\" : \"ach\",\n    \"notification_of_change\" : null,\n    \"return\" : null,\n    \"routing_number\" : \"101050001\",\n    \"standard_entry_class_code\" : \"corporate_credit_or_debit\",\n    \"statement_descriptor\" : \"Statement descriptor\",\n    \"status\" : \"returned\",\n    \"submission\" : {\n      \"submitted_at\" : \"2020-01-31T23:59:59Z\",\n      \"trace_number\" : \"058349238292834\"\n    },\n    \"template_id\" : \"ach_transfer_template_wofoi8uhkjzi5rubh3kt\",\n    \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"type\" : \"ach_transfer\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce64c893-4235-4178-a89a-7355623cac43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.562154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_ach_transfers",
          "schema" : {
            "description" : "A list of ACH Transfer objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "account_number" : "987654321",
                "amount" : 100,
                "approval" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "company_name" : "National Phonograph Company",
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "external_account_id" : "external_account_ukk55lr923a3ac0pp7iv",
                "funding" : "checking",
                "id" : "ach_transfer_uoxatyh3lt5evrsdvo7q",
                "individual_name" : "Ian Crease",
                "network" : "ach",
                "routing_number" : "101050001",
                "standard_entry_class_code" : "corporate_credit_or_debit",
                "statement_descriptor" : "Statement descriptor",
                "status" : "returned",
                "submission" : {
                  "submitted_at" : "2020-01-31T23:59:59Z",
                  "trace_number" : "058349238292834"
                },
                "template_id" : "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
                "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "type" : "ach_transfer"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/ach_transfer"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "ACH Transfer List",
            "type" : "object",
            "x-title-plural" : "ACH Transfer Lists"
          }
        }
      }
    }
  }, {
    "id" : "b41f25e1-9751-4a6f-8eee-9cd96a1d8ac5",
    "name" : "Retrieve an ACH Prenotification",
    "request" : {
      "urlPath" : "/ach_prenotifications/3o34",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"credit_debit_indicator\" : null,\n  \"effective_date\" : null,\n  \"id\" : \"ach_prenotification_ubjf9qqsxl3obbcn1u34\",\n  \"prenotification_return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"submitted\",\n  \"type\" : \"ach_prenotification\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b41f25e1-9751-4a6f-8eee-9cd96a1d8ac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.56202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_ach_prenotification",
          "schema" : {
            "description" : "ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH).",
            "example" : {
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "ach_prenotification_ubjf9qqsxl3obbcn1u34",
              "routing_number" : "101050001",
              "status" : "submitted",
              "type" : "ach_prenotification"
            },
            "properties" : {
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information for the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the notification.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "Optional data associated with the notification.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the notification.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which you know the company.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the prenotification was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "credit_debit_indicator" : {
                "description" : "If the notification is for a future credit or debit.",
                "enum" : [ "credit", "debit" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "The Prenotification is for an anticipated credit.", "The Prenotification is for an anticipated debit." ]
              },
              "effective_date" : {
                "description" : "The effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The ACH Prenotification's identifier.",
                "type" : "string"
              },
              "prenotification_return" : {
                "description" : "If your prenotification is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "corporate_customer_advised_not_authorized"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Prenotification was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the Prenotification was returned.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code" ],
                "title" : "ACH Prenotification Return",
                "type" : "object",
                "x-title-plural" : "ACH Prenotification Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the ACH Prenotification.",
                "enum" : [ "pending_submitting", "requires_attention", "returned", "submitted" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Prenotification is pending submission.", "The Prenotification requires attention.", "The Prenotification has been returned.", "The Prentification is complete." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_prenotification`.",
                "enum" : [ "ach_prenotification" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_number", "addendum", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "credit_debit_indicator", "effective_date", "routing_number", "prenotification_return", "created_at", "status", "type" ],
            "title" : "ACH Prenotification",
            "type" : "object",
            "x-tag" : "ACH Prenotifications",
            "x-title-plural" : "ACH Prenotifications"
          }
        }
      }
    }
  }, {
    "id" : "330e5717-0ed4-4b43-839c-50032192c1c5",
    "name" : "Create an ACH Prenotification",
    "request" : {
      "urlPath" : "/ach_prenotifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_number\" : \"987654321\",\n  \"addendum\" : null,\n  \"company_descriptive_date\" : null,\n  \"company_discretionary_data\" : null,\n  \"company_entry_description\" : null,\n  \"company_name\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"credit_debit_indicator\" : null,\n  \"effective_date\" : null,\n  \"id\" : \"ach_prenotification_ubjf9qqsxl3obbcn1u34\",\n  \"prenotification_return\" : null,\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"submitted\",\n  \"type\" : \"ach_prenotification\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "330e5717-0ed4-4b43-839c-50032192c1c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.561566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_ach_prenotification",
          "schema" : {
            "description" : "ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH).",
            "example" : {
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "ach_prenotification_ubjf9qqsxl3obbcn1u34",
              "routing_number" : "101050001",
              "status" : "submitted",
              "type" : "ach_prenotification"
            },
            "properties" : {
              "account_number" : {
                "description" : "The destination account number.",
                "type" : "string"
              },
              "addendum" : {
                "description" : "Additional information for the recipient.",
                "nullable" : true,
                "type" : "string"
              },
              "company_descriptive_date" : {
                "description" : "The description of the date of the notification.",
                "nullable" : true,
                "type" : "string"
              },
              "company_discretionary_data" : {
                "description" : "Optional data associated with the notification.",
                "nullable" : true,
                "type" : "string"
              },
              "company_entry_description" : {
                "description" : "The description of the notification.",
                "nullable" : true,
                "type" : "string"
              },
              "company_name" : {
                "description" : "The name by which you know the company.",
                "nullable" : true,
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the prenotification was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "credit_debit_indicator" : {
                "description" : "If the notification is for a future credit or debit.",
                "enum" : [ "credit", "debit" ],
                "nullable" : true,
                "type" : "string",
                "x-enum-descriptions" : [ "The Prenotification is for an anticipated credit.", "The Prenotification is for an anticipated debit." ]
              },
              "effective_date" : {
                "description" : "The effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The ACH Prenotification's identifier.",
                "type" : "string"
              },
              "prenotification_return" : {
                "description" : "If your prenotification is returned, this will contain details of the return.",
                "example" : {
                  "created_at" : "2020-01-31T23:59:59Z",
                  "return_reason_code" : "corporate_customer_advised_not_authorized"
                },
                "nullable" : true,
                "properties" : {
                  "created_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Prenotification was returned.",
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "return_reason_code" : {
                    "description" : "Why the Prenotification was returned.",
                    "type" : "string"
                  }
                },
                "required" : [ "created_at", "return_reason_code" ],
                "title" : "ACH Prenotification Return",
                "type" : "object",
                "x-title-plural" : "ACH Prenotification Returns"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the ACH Prenotification.",
                "enum" : [ "pending_submitting", "requires_attention", "returned", "submitted" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The Prenotification is pending submission.", "The Prenotification requires attention.", "The Prenotification has been returned.", "The Prentification is complete." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `ach_prenotification`.",
                "enum" : [ "ach_prenotification" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_number", "addendum", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "credit_debit_indicator", "effective_date", "routing_number", "prenotification_return", "created_at", "status", "type" ],
            "title" : "ACH Prenotification",
            "type" : "object",
            "x-tag" : "ACH Prenotifications",
            "x-title-plural" : "ACH Prenotifications"
          }
        }
      }
    }
  }, {
    "id" : "2e8166e0-994c-4622-8310-c99ed5749ad0",
    "name" : "List ACH Prenotifications",
    "request" : {
      "urlPath" : "/ach_prenotifications",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_number\" : \"987654321\",\n    \"addendum\" : null,\n    \"company_descriptive_date\" : null,\n    \"company_discretionary_data\" : null,\n    \"company_entry_description\" : null,\n    \"company_name\" : null,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"credit_debit_indicator\" : null,\n    \"effective_date\" : null,\n    \"id\" : \"ach_prenotification_ubjf9qqsxl3obbcn1u34\",\n    \"prenotification_return\" : null,\n    \"routing_number\" : \"101050001\",\n    \"status\" : \"submitted\",\n    \"type\" : \"ach_prenotification\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e8166e0-994c-4622-8310-c99ed5749ad0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.561348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_ach_prenotifications",
          "schema" : {
            "description" : "A list of ACH Prenotification objects",
            "example" : {
              "data" : [ {
                "account_number" : "987654321",
                "created_at" : "2020-01-31T23:59:59Z",
                "id" : "ach_prenotification_ubjf9qqsxl3obbcn1u34",
                "routing_number" : "101050001",
                "status" : "submitted",
                "type" : "ach_prenotification"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/ach_prenotification"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "ACH Prenotification List",
            "type" : "object",
            "x-title-plural" : "ACH Prenotification Lists"
          }
        }
      }
    }
  }, {
    "id" : "f013d336-69ef-4e31-8f77-d1f87d09f254",
    "name" : "Close an Account",
    "request" : {
      "urlPath" : "/accounts/zk7l/close",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balances\" : {\n    \"available_balance\" : 100,\n    \"current_balance\" : 100\n  },\n  \"bank\" : \"first_internet_bank\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"id\" : \"account_in71c4amph0vgo2qllky\",\n  \"informational_entity_id\" : null,\n  \"interest_accrued\" : \"0.01\",\n  \"interest_accrued_at\" : \"2020-01-31\",\n  \"name\" : \"My first account!\",\n  \"replacement\" : {\n    \"replaced_account_id\" : null,\n    \"replaced_by_account_id\" : null\n  },\n  \"status\" : \"open\",\n  \"type\" : \"account\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f013d336-69ef-4e31-8f77-d1f87d09f254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.561206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "close_an_account",
          "schema" : {
            "description" : "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.",
            "example" : {
              "balances" : {
                "available_balance" : 100,
                "current_balance" : 100
              },
              "bank" : "first_internet_bank",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "entity_id" : "entity_n8y8tnk2p9339ti393yi",
              "id" : "account_in71c4amph0vgo2qllky",
              "interest_accrued" : "0.01",
              "interest_accrued_at" : "2020-01-31",
              "name" : "My first account!",
              "replacement" : { },
              "status" : "open",
              "type" : "account"
            },
            "properties" : {
              "balances" : {
                "description" : "The Account's balances in the minor unit of its currency. For dollars, for example, these values will represent cents.",
                "properties" : {
                  "available_balance" : {
                    "description" : "The Account's available balance, representing the current balance less any open Pending Transactions on the Account.",
                    "type" : "integer"
                  },
                  "current_balance" : {
                    "description" : "The Account's current balance, representing the sum of all posted Transactions on the Account.",
                    "type" : "integer"
                  }
                },
                "required" : [ "current_balance", "available_balance" ],
                "title" : "Balances",
                "type" : "object",
                "x-title-plural" : "Balancess"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "entity_id" : {
                "description" : "The identifier for the Entity the Account belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The Account identifier.",
                "type" : "string"
              },
              "informational_entity_id" : {
                "description" : "The identifier of an Entity that, while not owning the Account, is associated with its activity.",
                "nullable" : true,
                "type" : "string"
              },
              "interest_accrued" : {
                "description" : "The interest accrued but not yet paid, expressed as a string containing a floating-point value.",
                "type" : "string"
              },
              "interest_accrued_at" : {
                "description" : "The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.",
                "format" : "date",
                "nullable" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Account.",
                "enum" : [ "open", "closed" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Open Accounts that are ready to use.", "Closed Accounts on which no new activity can occur." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account`.",
                "enum" : [ "account" ],
                "type" : "string"
              }
            },
            "required" : [ "balances", "created_at", "currency", "entity_id", "informational_entity_id", "id", "interest_accrued", "interest_accrued_at", "name", "status", "type" ],
            "title" : "Account",
            "type" : "object",
            "x-tag" : "Accounts",
            "x-title-plural" : "Accounts"
          }
        }
      }
    }
  }, {
    "id" : "216e5760-5f91-41fa-b75e-0ec348ff0101",
    "name" : "Update an Account",
    "request" : {
      "urlPath" : "/accounts/23i4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balances\" : {\n    \"available_balance\" : 100,\n    \"current_balance\" : 100\n  },\n  \"bank\" : \"first_internet_bank\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"id\" : \"account_in71c4amph0vgo2qllky\",\n  \"informational_entity_id\" : null,\n  \"interest_accrued\" : \"0.01\",\n  \"interest_accrued_at\" : \"2020-01-31\",\n  \"name\" : \"My first account!\",\n  \"replacement\" : {\n    \"replaced_account_id\" : null,\n    \"replaced_by_account_id\" : null\n  },\n  \"status\" : \"open\",\n  \"type\" : \"account\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "216e5760-5f91-41fa-b75e-0ec348ff0101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.560994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update_an_account",
          "schema" : {
            "description" : "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.",
            "example" : {
              "balances" : {
                "available_balance" : 100,
                "current_balance" : 100
              },
              "bank" : "first_internet_bank",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "entity_id" : "entity_n8y8tnk2p9339ti393yi",
              "id" : "account_in71c4amph0vgo2qllky",
              "interest_accrued" : "0.01",
              "interest_accrued_at" : "2020-01-31",
              "name" : "My first account!",
              "replacement" : { },
              "status" : "open",
              "type" : "account"
            },
            "properties" : {
              "balances" : {
                "description" : "The Account's balances in the minor unit of its currency. For dollars, for example, these values will represent cents.",
                "properties" : {
                  "available_balance" : {
                    "description" : "The Account's available balance, representing the current balance less any open Pending Transactions on the Account.",
                    "type" : "integer"
                  },
                  "current_balance" : {
                    "description" : "The Account's current balance, representing the sum of all posted Transactions on the Account.",
                    "type" : "integer"
                  }
                },
                "required" : [ "current_balance", "available_balance" ],
                "title" : "Balances",
                "type" : "object",
                "x-title-plural" : "Balancess"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "entity_id" : {
                "description" : "The identifier for the Entity the Account belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The Account identifier.",
                "type" : "string"
              },
              "informational_entity_id" : {
                "description" : "The identifier of an Entity that, while not owning the Account, is associated with its activity.",
                "nullable" : true,
                "type" : "string"
              },
              "interest_accrued" : {
                "description" : "The interest accrued but not yet paid, expressed as a string containing a floating-point value.",
                "type" : "string"
              },
              "interest_accrued_at" : {
                "description" : "The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.",
                "format" : "date",
                "nullable" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Account.",
                "enum" : [ "open", "closed" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Open Accounts that are ready to use.", "Closed Accounts on which no new activity can occur." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account`.",
                "enum" : [ "account" ],
                "type" : "string"
              }
            },
            "required" : [ "balances", "created_at", "currency", "entity_id", "informational_entity_id", "id", "interest_accrued", "interest_accrued_at", "name", "status", "type" ],
            "title" : "Account",
            "type" : "object",
            "x-tag" : "Accounts",
            "x-title-plural" : "Accounts"
          }
        }
      }
    }
  }, {
    "id" : "96710116-3372-4968-9e2a-c74ae408e240",
    "name" : "Retrieve an Account",
    "request" : {
      "urlPath" : "/accounts/q82y",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balances\" : {\n    \"available_balance\" : 100,\n    \"current_balance\" : 100\n  },\n  \"bank\" : \"first_internet_bank\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"id\" : \"account_in71c4amph0vgo2qllky\",\n  \"informational_entity_id\" : null,\n  \"interest_accrued\" : \"0.01\",\n  \"interest_accrued_at\" : \"2020-01-31\",\n  \"name\" : \"My first account!\",\n  \"replacement\" : {\n    \"replaced_account_id\" : null,\n    \"replaced_by_account_id\" : null\n  },\n  \"status\" : \"open\",\n  \"type\" : \"account\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96710116-3372-4968-9e2a-c74ae408e240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.560779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_account",
          "schema" : {
            "description" : "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.",
            "example" : {
              "balances" : {
                "available_balance" : 100,
                "current_balance" : 100
              },
              "bank" : "first_internet_bank",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "entity_id" : "entity_n8y8tnk2p9339ti393yi",
              "id" : "account_in71c4amph0vgo2qllky",
              "interest_accrued" : "0.01",
              "interest_accrued_at" : "2020-01-31",
              "name" : "My first account!",
              "replacement" : { },
              "status" : "open",
              "type" : "account"
            },
            "properties" : {
              "balances" : {
                "description" : "The Account's balances in the minor unit of its currency. For dollars, for example, these values will represent cents.",
                "properties" : {
                  "available_balance" : {
                    "description" : "The Account's available balance, representing the current balance less any open Pending Transactions on the Account.",
                    "type" : "integer"
                  },
                  "current_balance" : {
                    "description" : "The Account's current balance, representing the sum of all posted Transactions on the Account.",
                    "type" : "integer"
                  }
                },
                "required" : [ "current_balance", "available_balance" ],
                "title" : "Balances",
                "type" : "object",
                "x-title-plural" : "Balancess"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "entity_id" : {
                "description" : "The identifier for the Entity the Account belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The Account identifier.",
                "type" : "string"
              },
              "informational_entity_id" : {
                "description" : "The identifier of an Entity that, while not owning the Account, is associated with its activity.",
                "nullable" : true,
                "type" : "string"
              },
              "interest_accrued" : {
                "description" : "The interest accrued but not yet paid, expressed as a string containing a floating-point value.",
                "type" : "string"
              },
              "interest_accrued_at" : {
                "description" : "The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.",
                "format" : "date",
                "nullable" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Account.",
                "enum" : [ "open", "closed" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Open Accounts that are ready to use.", "Closed Accounts on which no new activity can occur." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account`.",
                "enum" : [ "account" ],
                "type" : "string"
              }
            },
            "required" : [ "balances", "created_at", "currency", "entity_id", "informational_entity_id", "id", "interest_accrued", "interest_accrued_at", "name", "status", "type" ],
            "title" : "Account",
            "type" : "object",
            "x-tag" : "Accounts",
            "x-title-plural" : "Accounts"
          }
        }
      }
    }
  }, {
    "id" : "ad16c335-eb9c-4f87-ab81-959e3e9a1872",
    "name" : "Create an Account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"balances\" : {\n    \"available_balance\" : 100,\n    \"current_balance\" : 100\n  },\n  \"bank\" : \"first_internet_bank\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n  \"id\" : \"account_in71c4amph0vgo2qllky\",\n  \"informational_entity_id\" : null,\n  \"interest_accrued\" : \"0.01\",\n  \"interest_accrued_at\" : \"2020-01-31\",\n  \"name\" : \"My first account!\",\n  \"replacement\" : {\n    \"replaced_account_id\" : null,\n    \"replaced_by_account_id\" : null\n  },\n  \"status\" : \"open\",\n  \"type\" : \"account\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad16c335-eb9c-4f87-ab81-959e3e9a1872",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.560592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_account",
          "schema" : {
            "description" : "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.",
            "example" : {
              "balances" : {
                "available_balance" : 100,
                "current_balance" : 100
              },
              "bank" : "first_internet_bank",
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "entity_id" : "entity_n8y8tnk2p9339ti393yi",
              "id" : "account_in71c4amph0vgo2qllky",
              "interest_accrued" : "0.01",
              "interest_accrued_at" : "2020-01-31",
              "name" : "My first account!",
              "replacement" : { },
              "status" : "open",
              "type" : "account"
            },
            "properties" : {
              "balances" : {
                "description" : "The Account's balances in the minor unit of its currency. For dollars, for example, these values will represent cents.",
                "properties" : {
                  "available_balance" : {
                    "description" : "The Account's available balance, representing the current balance less any open Pending Transactions on the Account.",
                    "type" : "integer"
                  },
                  "current_balance" : {
                    "description" : "The Account's current balance, representing the sum of all posted Transactions on the Account.",
                    "type" : "integer"
                  }
                },
                "required" : [ "current_balance", "available_balance" ],
                "title" : "Balances",
                "type" : "object",
                "x-title-plural" : "Balancess"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "entity_id" : {
                "description" : "The identifier for the Entity the Account belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The Account identifier.",
                "type" : "string"
              },
              "informational_entity_id" : {
                "description" : "The identifier of an Entity that, while not owning the Account, is associated with its activity.",
                "nullable" : true,
                "type" : "string"
              },
              "interest_accrued" : {
                "description" : "The interest accrued but not yet paid, expressed as a string containing a floating-point value.",
                "type" : "string"
              },
              "interest_accrued_at" : {
                "description" : "The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.",
                "format" : "date",
                "nullable" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the Account.",
                "enum" : [ "open", "closed" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Open Accounts that are ready to use.", "Closed Accounts on which no new activity can occur." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account`.",
                "enum" : [ "account" ],
                "type" : "string"
              }
            },
            "required" : [ "balances", "created_at", "currency", "entity_id", "informational_entity_id", "id", "interest_accrued", "interest_accrued_at", "name", "status", "type" ],
            "title" : "Account",
            "type" : "object",
            "x-tag" : "Accounts",
            "x-title-plural" : "Accounts"
          }
        }
      }
    }
  }, {
    "id" : "e1f3803d-fa84-4bb9-8f82-ab29cf638b4c",
    "name" : "List Accounts",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"balances\" : {\n      \"available_balance\" : 100,\n      \"current_balance\" : 100\n    },\n    \"bank\" : \"first_internet_bank\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"entity_id\" : \"entity_n8y8tnk2p9339ti393yi\",\n    \"id\" : \"account_in71c4amph0vgo2qllky\",\n    \"informational_entity_id\" : null,\n    \"interest_accrued\" : \"0.01\",\n    \"interest_accrued_at\" : \"2020-01-31\",\n    \"name\" : \"My first account!\",\n    \"replacement\" : {\n      \"replaced_account_id\" : null,\n      \"replaced_by_account_id\" : null\n    },\n    \"status\" : \"open\",\n    \"type\" : \"account\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1f3803d-fa84-4bb9-8f82-ab29cf638b4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.560463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_accounts",
          "schema" : {
            "description" : "A list of Account objects",
            "example" : {
              "data" : [ {
                "balances" : {
                  "available_balance" : 100,
                  "current_balance" : 100
                },
                "bank" : "first_internet_bank",
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "entity_id" : "entity_n8y8tnk2p9339ti393yi",
                "id" : "account_in71c4amph0vgo2qllky",
                "interest_accrued" : "0.01",
                "interest_accrued_at" : "2020-01-31",
                "name" : "My first account!",
                "replacement" : { },
                "status" : "open",
                "type" : "account"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/account"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Account List",
            "type" : "object",
            "x-title-plural" : "Account Lists"
          }
        }
      }
    }
  }, {
    "id" : "1de01c47-68c2-4a56-83a6-8dfb091dd6c2",
    "name" : "Cancel an Account Transfer",
    "request" : {
      "urlPath" : "/account_transfers/l896/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Move money into savings\",\n  \"destination_account_id\" : \"account_uf16sut2ct5bevmq3eh\",\n  \"destination_transaction_id\" : \"transaction_j3itv8dtk5o8pw3p1xj4\",\n  \"id\" : \"account_transfer_7k9qe1ysdgqztnt63l7n\",\n  \"network\" : \"account\",\n  \"status\" : \"complete\",\n  \"template_id\" : \"account_transfer_template_5nloco84eijzw0wcfhnn\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"account_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1de01c47-68c2-4a56-83a6-8dfb091dd6c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.560373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancel_an_account_transfer",
          "schema" : {
            "description" : "Account transfers move funds between your own accounts at Increase.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Move money into savings",
              "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id" : "transaction_j3itv8dtk5o8pw3p1xj4",
              "id" : "account_transfer_7k9qe1ysdgqztnt63l7n",
              "network" : "account",
              "status" : "complete",
              "template_id" : "account_transfer_template_5nloco84eijzw0wcfhnn",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "account_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "The description that will show on the transactions.",
                "type" : "string"
              },
              "destination_account_id" : {
                "description" : "The destination account's identifier.",
                "type" : "string"
              },
              "destination_transaction_id" : {
                "description" : "The ID for the transaction receiving the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The account transfer's identifier.",
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "account" ],
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submission", "pending_approval", "canceled", "requires_attention", "flagged_by_operator", "complete" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending submission.", "The transfer is pending approval.", "The transfer has been canceled.", "The transfer requires your attention.", "The transfer requires your attention.", "The transfer is complete." ]
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_transfer`.",
                "enum" : [ "account_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "account_id", "currency", "destination_account_id", "destination_transaction_id", "created_at", "description", "network", "status", "template_id", "transaction_id", "approval", "cancellation", "type" ],
            "title" : "Account Transfer",
            "type" : "object",
            "x-tag" : "Account Transfers",
            "x-title-plural" : "Account Transfers"
          }
        }
      }
    }
  }, {
    "id" : "f5293659-00f9-43e6-b9dc-9273742dcb1c",
    "name" : "Approve an Account Transfer",
    "request" : {
      "urlPath" : "/account_transfers/6el2/approve",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Move money into savings\",\n  \"destination_account_id\" : \"account_uf16sut2ct5bevmq3eh\",\n  \"destination_transaction_id\" : \"transaction_j3itv8dtk5o8pw3p1xj4\",\n  \"id\" : \"account_transfer_7k9qe1ysdgqztnt63l7n\",\n  \"network\" : \"account\",\n  \"status\" : \"complete\",\n  \"template_id\" : \"account_transfer_template_5nloco84eijzw0wcfhnn\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"account_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5293659-00f9-43e6-b9dc-9273742dcb1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.560144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "approve_an_account_transfer",
          "schema" : {
            "description" : "Account transfers move funds between your own accounts at Increase.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Move money into savings",
              "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id" : "transaction_j3itv8dtk5o8pw3p1xj4",
              "id" : "account_transfer_7k9qe1ysdgqztnt63l7n",
              "network" : "account",
              "status" : "complete",
              "template_id" : "account_transfer_template_5nloco84eijzw0wcfhnn",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "account_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "The description that will show on the transactions.",
                "type" : "string"
              },
              "destination_account_id" : {
                "description" : "The destination account's identifier.",
                "type" : "string"
              },
              "destination_transaction_id" : {
                "description" : "The ID for the transaction receiving the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The account transfer's identifier.",
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "account" ],
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submission", "pending_approval", "canceled", "requires_attention", "flagged_by_operator", "complete" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending submission.", "The transfer is pending approval.", "The transfer has been canceled.", "The transfer requires your attention.", "The transfer requires your attention.", "The transfer is complete." ]
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_transfer`.",
                "enum" : [ "account_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "account_id", "currency", "destination_account_id", "destination_transaction_id", "created_at", "description", "network", "status", "template_id", "transaction_id", "approval", "cancellation", "type" ],
            "title" : "Account Transfer",
            "type" : "object",
            "x-tag" : "Account Transfers",
            "x-title-plural" : "Account Transfers"
          }
        }
      }
    }
  }, {
    "id" : "e180c077-79ec-4227-9c31-93000cc879a5",
    "name" : "Retrieve an Account Transfer",
    "request" : {
      "urlPath" : "/account_transfers/410m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Move money into savings\",\n  \"destination_account_id\" : \"account_uf16sut2ct5bevmq3eh\",\n  \"destination_transaction_id\" : \"transaction_j3itv8dtk5o8pw3p1xj4\",\n  \"id\" : \"account_transfer_7k9qe1ysdgqztnt63l7n\",\n  \"network\" : \"account\",\n  \"status\" : \"complete\",\n  \"template_id\" : \"account_transfer_template_5nloco84eijzw0wcfhnn\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"account_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e180c077-79ec-4227-9c31-93000cc879a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.559924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_account_transfer",
          "schema" : {
            "description" : "Account transfers move funds between your own accounts at Increase.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Move money into savings",
              "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id" : "transaction_j3itv8dtk5o8pw3p1xj4",
              "id" : "account_transfer_7k9qe1ysdgqztnt63l7n",
              "network" : "account",
              "status" : "complete",
              "template_id" : "account_transfer_template_5nloco84eijzw0wcfhnn",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "account_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "The description that will show on the transactions.",
                "type" : "string"
              },
              "destination_account_id" : {
                "description" : "The destination account's identifier.",
                "type" : "string"
              },
              "destination_transaction_id" : {
                "description" : "The ID for the transaction receiving the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The account transfer's identifier.",
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "account" ],
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submission", "pending_approval", "canceled", "requires_attention", "flagged_by_operator", "complete" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending submission.", "The transfer is pending approval.", "The transfer has been canceled.", "The transfer requires your attention.", "The transfer requires your attention.", "The transfer is complete." ]
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_transfer`.",
                "enum" : [ "account_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "account_id", "currency", "destination_account_id", "destination_transaction_id", "created_at", "description", "network", "status", "template_id", "transaction_id", "approval", "cancellation", "type" ],
            "title" : "Account Transfer",
            "type" : "object",
            "x-tag" : "Account Transfers",
            "x-title-plural" : "Account Transfers"
          }
        }
      }
    }
  }, {
    "id" : "90126109-71f9-4144-906d-ae401e2a8f00",
    "name" : "Create an Account Transfer",
    "request" : {
      "urlPath" : "/account_transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"amount\" : 100,\n  \"approval\" : {\n    \"approved_at\" : \"2020-01-31T23:59:59Z\"\n  },\n  \"cancellation\" : null,\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"currency\" : \"USD\",\n  \"description\" : \"Move money into savings\",\n  \"destination_account_id\" : \"account_uf16sut2ct5bevmq3eh\",\n  \"destination_transaction_id\" : \"transaction_j3itv8dtk5o8pw3p1xj4\",\n  \"id\" : \"account_transfer_7k9qe1ysdgqztnt63l7n\",\n  \"network\" : \"account\",\n  \"status\" : \"complete\",\n  \"template_id\" : \"account_transfer_template_5nloco84eijzw0wcfhnn\",\n  \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n  \"type\" : \"account_transfer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90126109-71f9-4144-906d-ae401e2a8f00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.55965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_account_transfer",
          "schema" : {
            "description" : "Account transfers move funds between your own accounts at Increase.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "amount" : 100,
              "approval" : {
                "approved_at" : "2020-01-31T23:59:59Z"
              },
              "created_at" : "2020-01-31T23:59:59Z",
              "currency" : "USD",
              "description" : "Move money into savings",
              "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id" : "transaction_j3itv8dtk5o8pw3p1xj4",
              "id" : "account_transfer_7k9qe1ysdgqztnt63l7n",
              "network" : "account",
              "status" : "complete",
              "template_id" : "account_transfer_template_5nloco84eijzw0wcfhnn",
              "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
              "type" : "account_transfer"
            },
            "properties" : {
              "account_id" : {
                "description" : "The Account to which the transfer belongs.",
                "type" : "string"
              },
              "amount" : {
                "description" : "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.",
                "type" : "integer"
              },
              "approval" : {
                "description" : "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
                "example" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "approved_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "approved_at" ],
                "title" : "Transfer Approval",
                "type" : "object",
                "x-title-plural" : "Transfer Approvals"
              },
              "cancellation" : {
                "description" : "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
                "example" : {
                  "canceled_at" : "2020-01-31T23:59:59Z"
                },
                "nullable" : true,
                "properties" : {
                  "canceled_at" : {
                    "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.",
                    "format" : "date-time",
                    "type" : "string"
                  }
                },
                "required" : [ "canceled_at" ],
                "title" : "Transfer Cancellation",
                "type" : "object",
                "x-title-plural" : "Transfer Cancellations"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "currency" : {
                "description" : "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                "enum" : [ "CAD", "CHF", "EUR", "GBP", "JPY", "USD" ],
                "type" : "string",
                "x-enum-descriptions" : [ "Canadian Dollar (CAD)", "Swiss Franc (CHF)", "Euro (EUR)", "British Pound (GBP)", "Japanese Yen (JPY)", "US Dollar (USD)" ]
              },
              "description" : {
                "description" : "The description that will show on the transactions.",
                "type" : "string"
              },
              "destination_account_id" : {
                "description" : "The destination account's identifier.",
                "type" : "string"
              },
              "destination_transaction_id" : {
                "description" : "The ID for the transaction receiving the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "id" : {
                "description" : "The account transfer's identifier.",
                "type" : "string"
              },
              "network" : {
                "description" : "The transfer's network.",
                "enum" : [ "account" ],
                "type" : "string"
              },
              "status" : {
                "description" : "The lifecycle status of the transfer.",
                "enum" : [ "pending_submission", "pending_approval", "canceled", "requires_attention", "flagged_by_operator", "complete" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The transfer is pending submission.", "The transfer is pending approval.", "The transfer has been canceled.", "The transfer requires your attention.", "The transfer requires your attention.", "The transfer is complete." ]
              },
              "template_id" : {
                "description" : "If the transfer was created from a template, this will be the template's ID.",
                "nullable" : true,
                "type" : "string"
              },
              "transaction_id" : {
                "description" : "The ID for the transaction funding the transfer.",
                "nullable" : true,
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_transfer`.",
                "enum" : [ "account_transfer" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "amount", "account_id", "currency", "destination_account_id", "destination_transaction_id", "created_at", "description", "network", "status", "template_id", "transaction_id", "approval", "cancellation", "type" ],
            "title" : "Account Transfer",
            "type" : "object",
            "x-tag" : "Account Transfers",
            "x-title-plural" : "Account Transfers"
          }
        }
      }
    }
  }, {
    "id" : "fc7675fa-5337-4a39-be42-4377f3dc6335",
    "name" : "List Account Transfers",
    "request" : {
      "urlPath" : "/account_transfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"amount\" : 100,\n    \"approval\" : {\n      \"approved_at\" : \"2020-01-31T23:59:59Z\"\n    },\n    \"cancellation\" : null,\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"currency\" : \"USD\",\n    \"description\" : \"Move money into savings\",\n    \"destination_account_id\" : \"account_uf16sut2ct5bevmq3eh\",\n    \"destination_transaction_id\" : \"transaction_j3itv8dtk5o8pw3p1xj4\",\n    \"id\" : \"account_transfer_7k9qe1ysdgqztnt63l7n\",\n    \"network\" : \"account\",\n    \"status\" : \"complete\",\n    \"template_id\" : \"account_transfer_template_5nloco84eijzw0wcfhnn\",\n    \"transaction_id\" : \"transaction_uyrp7fld2ium70oa7oi\",\n    \"type\" : \"account_transfer\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc7675fa-5337-4a39-be42-4377f3dc6335",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.559389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_account_transfers",
          "schema" : {
            "description" : "A list of Account Transfer objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "amount" : 100,
                "approval" : {
                  "approved_at" : "2020-01-31T23:59:59Z"
                },
                "created_at" : "2020-01-31T23:59:59Z",
                "currency" : "USD",
                "description" : "Move money into savings",
                "destination_account_id" : "account_uf16sut2ct5bevmq3eh",
                "destination_transaction_id" : "transaction_j3itv8dtk5o8pw3p1xj4",
                "id" : "account_transfer_7k9qe1ysdgqztnt63l7n",
                "network" : "account",
                "status" : "complete",
                "template_id" : "account_transfer_template_5nloco84eijzw0wcfhnn",
                "transaction_id" : "transaction_uyrp7fld2ium70oa7oi",
                "type" : "account_transfer"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/account_transfer"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Account Transfer List",
            "type" : "object",
            "x-title-plural" : "Account Transfer Lists"
          }
        }
      }
    }
  }, {
    "id" : "6070001b-efae-4bbd-b9e0-115e20e9b4e7",
    "name" : "Retrieve an Account Statement",
    "request" : {
      "urlPath" : "/account_statements/tz35",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"ending_balance\" : 100,\n  \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n  \"id\" : \"account_statement_lkc03a4skm2k7f38vj15\",\n  \"starting_balance\" : 0,\n  \"statement_period_end\" : \"2020-01-31T23:59:59Z\",\n  \"statement_period_start\" : \"2020-01-31T23:59:59Z\",\n  \"type\" : \"account_statement\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6070001b-efae-4bbd-b9e0-115e20e9b4e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.559276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_account_statement",
          "schema" : {
            "description" : "Account Statements are generated monthly for every active Account. You can access the statement's data via the API or retrieve a PDF with its details via its associated File.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "created_at" : "2020-01-31T23:59:59Z",
              "ending_balance" : 100,
              "file_id" : "file_makxrc67oh9l6sg7w9yc",
              "id" : "account_statement_lkc03a4skm2k7f38vj15",
              "starting_balance" : 0,
              "statement_period_end" : "2020-01-31T23:59:59Z",
              "statement_period_start" : "2020-01-31T23:59:59Z",
              "type" : "account_statement"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the Account this Account Statement belongs to.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Statement was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "ending_balance" : {
                "description" : "The Account's balance at the start of its statement period.",
                "type" : "integer"
              },
              "file_id" : {
                "description" : "The identifier of the File containing a PDF of the statement.",
                "type" : "string"
              },
              "id" : {
                "description" : "The Account Statement identifier.",
                "type" : "string"
              },
              "starting_balance" : {
                "description" : "The Account's balance at the start of its statement period.",
                "type" : "integer"
              },
              "statement_period_end" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the end of the period the Account Statement covers.",
                "format" : "date-time",
                "type" : "string"
              },
              "statement_period_start" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the start of the period the Account Statement covers.",
                "format" : "date-time",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_statement`.",
                "enum" : [ "account_statement" ],
                "type" : "string"
              }
            },
            "required" : [ "id", "account_id", "created_at", "file_id", "statement_period_start", "statement_period_end", "starting_balance", "ending_balance", "type" ],
            "title" : "Account Statement",
            "type" : "object",
            "x-tag" : "Account Statements",
            "x-title-plural" : "Account Statements"
          }
        }
      }
    }
  }, {
    "id" : "f9da91e5-45ff-42c2-9cfa-4b900bdad8b6",
    "name" : "List Account Statements",
    "request" : {
      "urlPath" : "/account_statements",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"ending_balance\" : 100,\n    \"file_id\" : \"file_makxrc67oh9l6sg7w9yc\",\n    \"id\" : \"account_statement_lkc03a4skm2k7f38vj15\",\n    \"starting_balance\" : 0,\n    \"statement_period_end\" : \"2020-01-31T23:59:59Z\",\n    \"statement_period_start\" : \"2020-01-31T23:59:59Z\",\n    \"type\" : \"account_statement\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9da91e5-45ff-42c2-9cfa-4b900bdad8b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.559105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_account_statements",
          "schema" : {
            "description" : "A list of Account Statement objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "created_at" : "2020-01-31T23:59:59Z",
                "ending_balance" : 100,
                "file_id" : "file_makxrc67oh9l6sg7w9yc",
                "id" : "account_statement_lkc03a4skm2k7f38vj15",
                "starting_balance" : 0,
                "statement_period_end" : "2020-01-31T23:59:59Z",
                "statement_period_start" : "2020-01-31T23:59:59Z",
                "type" : "account_statement"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/account_statement"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Account Statement List",
            "type" : "object",
            "x-title-plural" : "Account Statement Lists"
          }
        }
      }
    }
  }, {
    "id" : "7ed1bb6e-ad73-4c5d-b361-accce38c95ae",
    "name" : "Update an Account Number",
    "request" : {
      "urlPath" : "/account_numbers/y5wt",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"name\" : \"ACH\",\n  \"replacement\" : {\n    \"replaced_account_number_id\" : null,\n    \"replaced_by_account_number_id\" : null\n  },\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"active\",\n  \"type\" : \"account_number\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ed1bb6e-ad73-4c5d-b361-accce38c95ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.559034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update_an_account_number",
          "schema" : {
            "description" : "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "account_number_v18nkfqm6afpsrvy82b2",
              "name" : "ACH",
              "replacement" : { },
              "routing_number" : "101050001",
              "status" : "active",
              "type" : "account_number"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this Account Number belongs to.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The account number.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Number was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The Account Number identifier.",
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account Number.",
                "type" : "string"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made to the Account Number.",
                "enum" : [ "active", "disabled", "canceled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The account number is active.", "The account number is temporarily disabled.", "The account number is permanently disabled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_number`.",
                "enum" : [ "account_number" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "id", "created_at", "name", "routing_number", "status", "type" ],
            "title" : "Account Number",
            "type" : "object",
            "x-tag" : "Account Numbers",
            "x-title-plural" : "Account Numbers"
          }
        }
      }
    }
  }, {
    "id" : "8020252d-1ea0-492f-9dd7-5b02674744a9",
    "name" : "Retrieve an Account Number",
    "request" : {
      "urlPath" : "/account_numbers/vj96",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"name\" : \"ACH\",\n  \"replacement\" : {\n    \"replaced_account_number_id\" : null,\n    \"replaced_by_account_number_id\" : null\n  },\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"active\",\n  \"type\" : \"account_number\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8020252d-1ea0-492f-9dd7-5b02674744a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.558875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "retrieve_an_account_number",
          "schema" : {
            "description" : "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "account_number_v18nkfqm6afpsrvy82b2",
              "name" : "ACH",
              "replacement" : { },
              "routing_number" : "101050001",
              "status" : "active",
              "type" : "account_number"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this Account Number belongs to.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The account number.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Number was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The Account Number identifier.",
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account Number.",
                "type" : "string"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made to the Account Number.",
                "enum" : [ "active", "disabled", "canceled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The account number is active.", "The account number is temporarily disabled.", "The account number is permanently disabled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_number`.",
                "enum" : [ "account_number" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "id", "created_at", "name", "routing_number", "status", "type" ],
            "title" : "Account Number",
            "type" : "object",
            "x-tag" : "Account Numbers",
            "x-title-plural" : "Account Numbers"
          }
        }
      }
    }
  }, {
    "id" : "8c056216-1fc8-470c-8573-aa32801ebb87",
    "name" : "Create an Account Number",
    "request" : {
      "urlPath" : "/account_numbers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n  \"account_number\" : \"987654321\",\n  \"created_at\" : \"2020-01-31T23:59:59Z\",\n  \"id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n  \"name\" : \"ACH\",\n  \"replacement\" : {\n    \"replaced_account_number_id\" : null,\n    \"replaced_by_account_number_id\" : null\n  },\n  \"routing_number\" : \"101050001\",\n  \"status\" : \"active\",\n  \"type\" : \"account_number\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c056216-1fc8-470c-8573-aa32801ebb87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.558692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "create_an_account_number",
          "schema" : {
            "description" : "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment.",
            "example" : {
              "account_id" : "account_in71c4amph0vgo2qllky",
              "account_number" : "987654321",
              "created_at" : "2020-01-31T23:59:59Z",
              "id" : "account_number_v18nkfqm6afpsrvy82b2",
              "name" : "ACH",
              "replacement" : { },
              "routing_number" : "101050001",
              "status" : "active",
              "type" : "account_number"
            },
            "properties" : {
              "account_id" : {
                "description" : "The identifier for the account this Account Number belongs to.",
                "type" : "string"
              },
              "account_number" : {
                "description" : "The account number.",
                "type" : "string"
              },
              "created_at" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Number was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The Account Number identifier.",
                "type" : "string"
              },
              "name" : {
                "description" : "The name you choose for the Account Number.",
                "type" : "string"
              },
              "routing_number" : {
                "description" : "The American Bankers' Association (ABA) Routing Transit Number (RTN).",
                "type" : "string"
              },
              "status" : {
                "description" : "This indicates if payments can be made to the Account Number.",
                "enum" : [ "active", "disabled", "canceled" ],
                "type" : "string",
                "x-enum-descriptions" : [ "The account number is active.", "The account number is temporarily disabled.", "The account number is permanently disabled." ]
              },
              "type" : {
                "description" : "A constant representing the object's type. For this resource it will always be `account_number`.",
                "enum" : [ "account_number" ],
                "type" : "string"
              }
            },
            "required" : [ "account_id", "account_number", "id", "created_at", "name", "routing_number", "status", "type" ],
            "title" : "Account Number",
            "type" : "object",
            "x-tag" : "Account Numbers",
            "x-title-plural" : "Account Numbers"
          }
        }
      }
    }
  }, {
    "id" : "a47a62a3-4a0c-455f-a37e-0c40d0ab344f",
    "name" : "List Account Numbers",
    "request" : {
      "urlPath" : "/account_numbers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"account_id\" : \"account_in71c4amph0vgo2qllky\",\n    \"account_number\" : \"987654321\",\n    \"created_at\" : \"2020-01-31T23:59:59Z\",\n    \"id\" : \"account_number_v18nkfqm6afpsrvy82b2\",\n    \"name\" : \"ACH\",\n    \"replacement\" : {\n      \"replaced_account_number_id\" : null,\n      \"replaced_by_account_number_id\" : null\n    },\n    \"routing_number\" : \"101050001\",\n    \"status\" : \"active\",\n    \"type\" : \"account_number\"\n  } ],\n  \"next_cursor\" : \"v57w5d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a47a62a3-4a0c-455f-a37e-0c40d0ab344f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:04.558582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "list_account_numbers",
          "schema" : {
            "description" : "A list of Account Number objects",
            "example" : {
              "data" : [ {
                "account_id" : "account_in71c4amph0vgo2qllky",
                "account_number" : "987654321",
                "created_at" : "2020-01-31T23:59:59Z",
                "id" : "account_number_v18nkfqm6afpsrvy82b2",
                "name" : "ACH",
                "replacement" : { },
                "routing_number" : "101050001",
                "status" : "active",
                "type" : "account_number"
              } ],
              "next_cursor" : "v57w5d"
            },
            "properties" : {
              "data" : {
                "description" : "The contents of the list.",
                "items" : {
                  "$ref" : "#/components/schemas/account_number"
                },
                "type" : "array"
              },
              "next_cursor" : {
                "description" : "A pointer to a place in the list.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "required" : [ "data", "next_cursor" ],
            "title" : "Account Number List",
            "type" : "object",
            "x-title-plural" : "Account Number Lists"
          }
        }
      }
    }
  } ]
}