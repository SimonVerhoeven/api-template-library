{
  "mappings" : [ {
    "id" : "d5bfee92-80aa-30e0-a2ef-40216ca153e2",
    "name" : "API endpoint to search songs from the database given a query",
    "request" : {
      "urlPath" : "/song/search",
      "method" : "GET",
      "queryParameters" : {
        "query" : {
          "equalTo" : "u4sn7oaaiwochibjpmdymihmue6tp5fw98tb2adlr2e2blqqb4d2tinhda05ote2uryhmwneaagjpumr0pjz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"results\" : [ {\n      \"name\" : \"Andreas Hills DVM\",\n      \"id\" : 3951716950746409961\n    }, {\n      \"name\" : \"Royal Skiles\",\n      \"id\" : 7542169953666949608\n    }, {\n      \"name\" : \"Denita Hirthe\",\n      \"id\" : 6845206354573733042\n    } ]\n  },\n  \"error\" : false,\n  \"message\" : \"Qui voluptas ullam dicta reiciendis molestiae ullam sit. Dicta eum autem officiis excepturi ut. Quam dolor modi temporibus. Quis optio eligendi illum facilis et maiores ad. Consectetur laborum ducimus\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5bfee92-80aa-30e0-a2ef-40216ca153e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.song.search",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "results" : {
                    "description" : "Contains all the songs.",
                    "items" : {
                      "description" : "Song item.",
                      "properties" : {
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "name" : {
                          "description" : "Song and Artist name.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "7bcbd98f-3835-3f7d-ab78-db06e10aba1a",
    "name" : "API endpoint to search similarity using a song identifier",
    "request" : {
      "urlPath" : "/similarity/by_song",
      "method" : "GET",
      "queryParameters" : {
        "song_id" : {
          "equalTo" : "1195546789622753725"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Desmond Kessler MD\",\n      \"artist_url\" : \"https://web.example.mocklab.io/822775\",\n      \"percentage\" : 2.963456685126724E38,\n      \"song_name\" : \"Ashly Kuphal\",\n      \"id\" : 8597196816279653193,\n      \"index_id\" : 8512575476050832268,\n      \"lyrics\" : \"448y0ooaltxogzruhgzjf3zj8melkrx4pyxenl88mlnztdijn9wrt4bsmb8342sbcyu79ekqa2mkhemp9sqaw6tf\",\n      \"song_url\" : \"https://web.example.mocklab.io/899990\"\n    } ]\n  },\n  \"error\" : true,\n  \"message\" : \"Id quas quia voluptas vel blanditiis ea et. Sapiente quis eos iusto sunt totam saepe. Ut est excepturi. Ex eos unde.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bcbd98f-3835-3f7d-ab78-db06e10aba1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_song",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6d856b7e-d9cc-3691-ad1b-669d9596922f",
    "name" : "API endpoint to search similarity using content",
    "request" : {
      "urlPath" : "/similarity/by_content",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Dr. Terry Rath\",\n      \"artist_url\" : \"https://web.example.mocklab.io/601351\",\n      \"percentage\" : 1.1490247116579165E38,\n      \"song_name\" : \"Gianna Abernathy III\",\n      \"id\" : 2357669084844912064,\n      \"index_id\" : 3004404858607170016,\n      \"lyrics\" : \"sd12l1vr4zp2guwy288pljmslpenfhwq1mr7npllp2n6v1wc0182ri01ip4bskyphpuwafza6kq31j\",\n      \"song_url\" : \"https://web.example.mocklab.io/159514\"\n    }, {\n      \"artist_name\" : \"Don Howe\",\n      \"artist_url\" : \"https://web.example.mocklab.io/380659\",\n      \"percentage\" : 1.0808240732968623E38,\n      \"song_name\" : \"Dr. Mirtha Heathcote\",\n      \"id\" : 6530134382000484651,\n      \"index_id\" : 4319090152409405130,\n      \"lyrics\" : \"xvc62q1oql35wgmhuor13wb\",\n      \"song_url\" : \"https://web.example.mocklab.io/162758\"\n    }, {\n      \"artist_name\" : \"Curtis Kohler\",\n      \"artist_url\" : \"https://web.example.mocklab.io/657782\",\n      \"percentage\" : 2.1949105493917444E38,\n      \"song_name\" : \"Shala Wintheiser\",\n      \"id\" : 2507454232324077489,\n      \"index_id\" : 6165867537371160910,\n      \"lyrics\" : \"gvqlyhbtcuauph8d9x87ene3xrvhhy0clhxhrj7i5qaedkdqi0bsx26rqtwcj0u0j6ispvlqcz59reh0mqvkg279wjinytierr9n10iqhrfyc2dcdnnot85w5dtz9o7ji1j8uwxm450ti6hwrjajavzey3d\",\n      \"song_url\" : \"https://web.example.mocklab.io/061741\"\n    } ]\n  },\n  \"error\" : true,\n  \"message\" : \"Velit nulla tempora recusandae. Qui nulla dolorem et est ducimus et rerum. Sequi adipisci nam. Veritatis voluptatem iste. Vel fugit eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d856b7e-d9cc-3691-ad1b-669d9596922f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_content",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}