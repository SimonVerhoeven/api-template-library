{
  "mappings" : [ {
    "id" : "5403e88a-0ce9-425e-9a46-6b9d8aa7db81",
    "name" : "API endpoint to search songs from the database given a query",
    "request" : {
      "urlPath" : "/song/search",
      "method" : "GET",
      "queryParameters" : {
        "query" : {
          "equalTo" : "umjvr0dom9yx6ommzape0hm40aljt2fti6g2hv0dexvtjli1qqsmswttwb7h8zegg6euho140gq64j6u6495xf1hjscnkh4k1c0qkztjaw6s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"results\" : [ {\n      \"name\" : \"Felipe Watsica\",\n      \"id\" : 3965524654566773637\n    }, {\n      \"name\" : \"Lea Hagenes Jr.\",\n      \"id\" : 5385984115767976417\n    }, {\n      \"name\" : \"Arron Gerhold\",\n      \"id\" : 8151319083408708606\n    }, {\n      \"name\" : \"Lamar Donnelly IV\",\n      \"id\" : 7050048056627765636\n    }, {\n      \"name\" : \"Ludivina Thiel\",\n      \"id\" : 3353246724215165903\n    } ]\n  },\n  \"error\" : false,\n  \"message\" : \"Vitae natus cupiditate delectus tempora minus. Earum eum fugit. Molestiae eos quisquam. Eveniet aut illo. Recusandae repellendus labore aut sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5403e88a-0ce9-425e-9a46-6b9d8aa7db81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.797469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.song.search",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "results" : {
                    "description" : "Contains all the songs.",
                    "items" : {
                      "description" : "Song item.",
                      "properties" : {
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "name" : {
                          "description" : "Song and Artist name.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "cc17deb4-96b9-4772-ad3c-1ce91eafa6b5",
    "name" : "API endpoint to search similarity using a song identifier",
    "request" : {
      "urlPath" : "/similarity/by_song",
      "method" : "GET",
      "queryParameters" : {
        "song_id" : {
          "equalTo" : "8116720726219716546"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Asa Berge DDS\",\n      \"artist_url\" : \"https://web.example.mocklab.io/863567\",\n      \"percentage\" : 2.857276268319488E38,\n      \"song_name\" : \"Edra Brekke\",\n      \"id\" : 1466762914147782158,\n      \"index_id\" : 7373900515938195346,\n      \"lyrics\" : \"snqiaf2jivulwi6p98ndyxh9n7\",\n      \"song_url\" : \"https://web.example.mocklab.io/477096\"\n    }, {\n      \"artist_name\" : \"Dino McClure\",\n      \"artist_url\" : \"https://web.example.mocklab.io/251715\",\n      \"percentage\" : 3.2553774292265744E37,\n      \"song_name\" : \"Violette Gerlach\",\n      \"id\" : 2650744715689365389,\n      \"index_id\" : 9194064989289538140,\n      \"lyrics\" : \"u1209lezxzr3qbwamoyzh2u868qugonhn99jr\",\n      \"song_url\" : \"https://web.example.mocklab.io/277162\"\n    }, {\n      \"artist_name\" : \"Violeta Kerluke DVM\",\n      \"artist_url\" : \"https://web.example.mocklab.io/875357\",\n      \"percentage\" : 3.0005739016653406E38,\n      \"song_name\" : \"Casey Huel PhD\",\n      \"id\" : 5129061806806022412,\n      \"index_id\" : 2847227779328670740,\n      \"lyrics\" : \"5bvm0f3ciotp8wjsb19hqda965lo9mbyep\",\n      \"song_url\" : \"https://web.example.mocklab.io/245292\"\n    }, {\n      \"artist_name\" : \"Rene Vandervort PhD\",\n      \"artist_url\" : \"https://web.example.mocklab.io/454278\",\n      \"percentage\" : 1.7031771241569104E38,\n      \"song_name\" : \"Wilbert Schimmel MD\",\n      \"id\" : 2174291608323245360,\n      \"index_id\" : 4238074245500609107,\n      \"lyrics\" : \"9f2cf\",\n      \"song_url\" : \"https://web.example.mocklab.io/583525\"\n    }, {\n      \"artist_name\" : \"Chung Baumbach\",\n      \"artist_url\" : \"https://web.example.mocklab.io/708748\",\n      \"percentage\" : 5.070698309582551E37,\n      \"song_name\" : \"Demetrius Marquardt\",\n      \"id\" : 5127211384257849068,\n      \"index_id\" : 3859425829064435749,\n      \"lyrics\" : \"0wxlayiqoeovg78fcixyndil4x6mmk2giq72j96lz4eu25ykfesu69m17lnlmtmwokc3xrk0378t7c2novlkh4mjc7bl20zehfpb9ff6enjc7t5e6fufg967s5iwusxn9t9a3j1dm863qsbi0di7e\",\n      \"song_url\" : \"https://web.example.mocklab.io/324947\"\n    } ]\n  },\n  \"error\" : true,\n  \"message\" : \"Recusandae et delectus. Optio eveniet iure ad qui quia ea omnis. Est sequi itaque et id. Cum voluptatem sit molestiae qui esse ullam voluptate.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc17deb4-96b9-4772-ad3c-1ce91eafa6b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.797081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_song",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8445dde2-b035-4c82-8c94-fe71da3b7388",
    "name" : "API endpoint to search similarity using content",
    "request" : {
      "urlPath" : "/similarity/by_content",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Jeremy Fay\",\n      \"artist_url\" : \"https://web.example.mocklab.io/589155\",\n      \"percentage\" : 1.0862657021061472E38,\n      \"song_name\" : \"Belia Heathcote\",\n      \"id\" : 2344481715425419291,\n      \"index_id\" : 5970268891118059563,\n      \"lyrics\" : \"kkd2vnsna3h2xqx3molk5zwhma8e72q3x3biemy3dws4davx35jmwq3006tma3cw4e6j9pu5ufoof0qe9zfjhy2e2chnwvf6l5xetdl43a1n67vxqfiztmagu54k1ehgzjohmt75uyzff0tnf5qjf3ypq5ygmlrvw2\",\n      \"song_url\" : \"https://web.example.mocklab.io/591635\"\n    }, {\n      \"artist_name\" : \"Charis Schmeler\",\n      \"artist_url\" : \"https://web.example.mocklab.io/807562\",\n      \"percentage\" : 9.341200228795674E37,\n      \"song_name\" : \"Francesco O'Kon\",\n      \"id\" : 3491877415180511286,\n      \"index_id\" : 6958237342349958584,\n      \"lyrics\" : \"z50shd6nugqka5dcyyqwvot4fq6lcju7nvdemutrv7qfx7nj4mam11k4wjsdzqenkpwaq79c13qtgrm15c6d4gqocvraz0ak1o6nl9ao8c61v9s9n9yigekcrjgbuqvlqvyyj095hjxwa5wt07sb93w06qfga4fcce26kfp9j70p86ew44u0je\",\n      \"song_url\" : \"https://web.example.mocklab.io/929922\"\n    }, {\n      \"artist_name\" : \"Masako Torp\",\n      \"artist_url\" : \"https://web.example.mocklab.io/563882\",\n      \"percentage\" : 2.7966532858329005E38,\n      \"song_name\" : \"Lavenia O'Reilly\",\n      \"id\" : 9141168454841391030,\n      \"index_id\" : 6337509269399544870,\n      \"lyrics\" : \"bsd6mho1cpl816nsdbyg7lqvqlq3dhxfqsnke\",\n      \"song_url\" : \"https://web.example.mocklab.io/376117\"\n    }, {\n      \"artist_name\" : \"Lorelei Dibbert\",\n      \"artist_url\" : \"https://web.example.mocklab.io/538062\",\n      \"percentage\" : 1.1849100834626197E37,\n      \"song_name\" : \"Bao Mante\",\n      \"id\" : 6585655988137531038,\n      \"index_id\" : 8754324317184470053,\n      \"lyrics\" : \"ksjhi1dk6wr3ofobvmrktqwe44vpuwthrg3rg8uk8o58ywsq0w56b5zih1jtan4n16ni9o31eioc8b7732688ms092na\",\n      \"song_url\" : \"https://web.example.mocklab.io/276803\"\n    } ]\n  },\n  \"error\" : true,\n  \"message\" : \"Est aut eum officia ex saepe sint quo. Velit vel ut. Quo aut et. Quae dolorem vitae eius rerum veritatis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8445dde2-b035-4c82-8c94-fe71da3b7388",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.795826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_content",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}