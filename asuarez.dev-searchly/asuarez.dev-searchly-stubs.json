{
  "mappings" : [ {
    "id" : "00e42d9a-ac88-4f6b-a27f-b4fd23328e95",
    "name" : "API endpoint to search songs from the database given a query",
    "request" : {
      "urlPath" : "/song/search",
      "method" : "GET",
      "queryParameters" : {
        "query" : {
          "equalTo" : "lg1agb6lltbehvpmfsyh79nnyujzfo87kxlhkuxjp3ibkamd1m8t9v9cd51n0dkk6flul8ecqoj2gqh5k5kgoopfswukclsknb6hp0z3jnalgn32wbrcme890gz5e0rocwbi0vxp492nqum9mls3tj3hjt7o3fzng"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"results\" : [ {\n      \"name\" : \"Alberto Gaylord\",\n      \"id\" : 5098633416264888270\n    } ]\n  },\n  \"error\" : false,\n  \"message\" : \"Molestiae vel minus dolores repellendus quia sit. Aliquid officiis minus fugit excepturi. Harum illum voluptatem repellendus quos. Et alias sunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00e42d9a-ac88-4f6b-a27f-b4fd23328e95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:39.508549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.song.search",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "results" : {
                    "description" : "Contains all the songs.",
                    "items" : {
                      "description" : "Song item.",
                      "properties" : {
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "name" : {
                          "description" : "Song and Artist name.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a55aaf3-25f2-48d7-bc4d-4037d161e3ab",
    "name" : "API endpoint to search similarity using a song identifier",
    "request" : {
      "urlPath" : "/similarity/by_song",
      "method" : "GET",
      "queryParameters" : {
        "song_id" : {
          "equalTo" : "3359892317427530270"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Annabell Stanton\",\n      \"artist_url\" : \"https://web.example.mocklab.io/352974\",\n      \"percentage\" : 5.816711628306276E37,\n      \"song_name\" : \"Emiko Cremin\",\n      \"id\" : 6026977902348421281,\n      \"index_id\" : 3569772360663333223,\n      \"lyrics\" : \"kyk09d3tewfnq84nao7uz8b3e2db5caw1gpbeegpikl1ioew\",\n      \"song_url\" : \"https://web.example.mocklab.io/247023\"\n    }, {\n      \"artist_name\" : \"Emil Rogahn\",\n      \"artist_url\" : \"https://web.example.mocklab.io/621951\",\n      \"percentage\" : 2.6559860153147307E38,\n      \"song_name\" : \"Johnie Rohan\",\n      \"id\" : 7665424968714211944,\n      \"index_id\" : 7800208671868804969,\n      \"lyrics\" : \"q2f5k5ohujgmpb5e2153aviyhb1kqut2p1g9xvxogbsi\",\n      \"song_url\" : \"https://web.example.mocklab.io/216817\"\n    }, {\n      \"artist_name\" : \"Barry Jacobs\",\n      \"artist_url\" : \"https://web.example.mocklab.io/200487\",\n      \"percentage\" : 1.7403665770573884E38,\n      \"song_name\" : \"Eddy Borer IV\",\n      \"id\" : 7625451083513875905,\n      \"index_id\" : 7153220642740606047,\n      \"lyrics\" : \"8b6ygs7r10pypn9pc8h9inqyqsimtymmo48rk36vohfj6u3nt2ne7zzgu9g1fbij6c2pu8uoyee6fnsl4pfmcq48\",\n      \"song_url\" : \"https://web.example.mocklab.io/169172\"\n    }, {\n      \"artist_name\" : \"Dillon Hickle\",\n      \"artist_url\" : \"https://web.example.mocklab.io/085591\",\n      \"percentage\" : 2.6174058097838822E37,\n      \"song_name\" : \"Ms. Maricruz Pagac\",\n      \"id\" : 8653822423671782100,\n      \"index_id\" : 8724472120109059708,\n      \"lyrics\" : \"5zs22qi2qmqkrbnwoc9s3gocg9ob5h6xemcbk5uryct5ble5z88ie1k0bhiciw094zb3dp6008vufap5djo1lk1r2zxhhya1kq9ykyl6t0d2y8hu8r94\",\n      \"song_url\" : \"https://web.example.mocklab.io/413892\"\n    }, {\n      \"artist_name\" : \"Mr. Shira Kertzmann\",\n      \"artist_url\" : \"https://web.example.mocklab.io/965423\",\n      \"percentage\" : 2.577803777461394E38,\n      \"song_name\" : \"Mitsuko Osinski\",\n      \"id\" : 3098770196075228655,\n      \"index_id\" : 7394973367627349797,\n      \"lyrics\" : \"er9buf1lk7gx979ccqtyykeghgymgsb1qxznksc3gbf9hi14hm6qn0th2fdiqyoki9rcevigva4vp9u2mqxlmk7ynu9vyevbb30m39ciw84bnrl0tq\",\n      \"song_url\" : \"https://web.example.mocklab.io/029367\"\n    }, {\n      \"artist_name\" : \"Trisha O'Kon\",\n      \"artist_url\" : \"https://web.example.mocklab.io/070209\",\n      \"percentage\" : 4.375378810109654E37,\n      \"song_name\" : \"Raymond Leuschke\",\n      \"id\" : 6284204166680619768,\n      \"index_id\" : 8231943499245094979,\n      \"lyrics\" : \"o8pq9pnz5jdr54d2a9amz61r5x0sije366vrj2n25z1hppakszwqfvvy72ry6sf91ah4u83uxr3osc58b3pheqis32ajgc0g2bievtnzi08dy34is52ry74t5du0bnse82gtmvgpn9gnqmdajzfbtt8q2pq1exip05o\",\n      \"song_url\" : \"https://web.example.mocklab.io/546372\"\n    }, {\n      \"artist_name\" : \"Wade D'Amore\",\n      \"artist_url\" : \"https://web.example.mocklab.io/705243\",\n      \"percentage\" : 1.4298519268706295E38,\n      \"song_name\" : \"Mitch Hills\",\n      \"id\" : 3863709380890623873,\n      \"index_id\" : 3562896420376749931,\n      \"lyrics\" : \"nlhlqkjraimel5ectq3f8gpfoxndd3gba0sqjj0bhcx20yn8pfbxoodqwrotbo4zxo7y11oh0bd69nr3z3kgdmv8jazqbf25fug97nc9z5gu65skquikwshrx806ugz3lkjkw8bjk4v28z64jtpmd19wti6oskm2uzaxy19iouu7f2f3i2s0gn3yrjbgqqj\",\n      \"song_url\" : \"https://web.example.mocklab.io/143960\"\n    }, {\n      \"artist_name\" : \"Dr. Willette Mohr\",\n      \"artist_url\" : \"https://web.example.mocklab.io/148959\",\n      \"percentage\" : 1.613042467032062E38,\n      \"song_name\" : \"Marcelle Volkman\",\n      \"id\" : 3120751625058308858,\n      \"index_id\" : 1789572781525113499,\n      \"lyrics\" : \"rkfp072sc2p3430jihrmbqeyfezphrht14bcn9uryhw13noddjsgfdl1lvlev09bme2vhpgr1y7jdq2kqhtkzrmx1205u7948d3whkm2sbkpbplf9e60oq2o5xduvapjpylpfgtc9ugzgrmr68vq1y1n7\",\n      \"song_url\" : \"https://web.example.mocklab.io/685406\"\n    } ]\n  },\n  \"error\" : false,\n  \"message\" : \"Rerum voluptas et enim dicta et. Rerum assumenda fugit est sit iste qui praesentium. Illo voluptas nostrum animi cupiditate magni harum. Sunt in sit magnam facilis id quia. Commodi quas repudiandae ac\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a55aaf3-25f2-48d7-bc4d-4037d161e3ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:39.508304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_song",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8c03cbdb-236c-4177-bbce-cc25932a414c",
    "name" : "API endpoint to search similarity using content",
    "request" : {
      "urlPath" : "/similarity/by_content",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Tanya Streich\",\n      \"artist_url\" : \"https://web.example.mocklab.io/534588\",\n      \"percentage\" : 3.2311383450662225E38,\n      \"song_name\" : \"Neida Collier\",\n      \"id\" : 1251542697309136089,\n      \"index_id\" : 7937427315335181477,\n      \"lyrics\" : \"9qo219fi3cyraeltn1ugx1gvvil250fvp2q7tc4mpevte2d3ytqs0neudaaq9u4r4zfq46czwdwr3fcrjs41yzhilq08lubdn1qt0skynih2m8knsuii5kuto24gztgndwc7kyvy3qdlpdshgv91mfkci9mn0y8e375oc714v3aghn95l3dupnz2q5pr96ql0sh0v\",\n      \"song_url\" : \"https://web.example.mocklab.io/465190\"\n    }, {\n      \"artist_name\" : \"Kassie Collier\",\n      \"artist_url\" : \"https://web.example.mocklab.io/689702\",\n      \"percentage\" : 8.225197918092897E36,\n      \"song_name\" : \"Kala Bogisich\",\n      \"id\" : 1059309051546316430,\n      \"index_id\" : 4907152344381718727,\n      \"lyrics\" : \"tye5eemdqkooldqrbtkj5rtjtd7dbw99ulmsj7034ojwwnpufxr\",\n      \"song_url\" : \"https://web.example.mocklab.io/211986\"\n    } ]\n  },\n  \"error\" : false,\n  \"message\" : \"In eum eligendi facere modi libero maiores. Autem repellat ipsa officia facere debitis fuga. Consequuntur quis et natus alias praesentium dolorum. Tenetur et sapiente adipisci blanditiis. Doloremque c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c03cbdb-236c-4177-bbce-cc25932a414c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:39.50626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_content",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}