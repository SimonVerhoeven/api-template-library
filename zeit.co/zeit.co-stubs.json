{
  "mappings" : [ {
    "id" : "1d6e5a89-d92c-4555-8777-08897b8fd0f2",
    "name" : "Get a domain for the authenticated user by name",
    "request" : {
      "urlPath" : "/v4/domains/Temple+Grimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error\" : {\n    \"code\" : \"not_found\",\n    \"message\" : \"The domain with name zeit.rocks could not be found\",\n    \"name\" : \"zeit.rocks\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d6e5a89-d92c-4555-8777-08897b8fd0f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.115309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "example" : {
              "error" : {
                "code" : "not_found",
                "message" : "The domain with name zeit.rocks could not be found",
                "name" : "zeit.rocks"
              }
            },
            "properties" : {
              "error" : {
                "properties" : {
                  "code" : {
                    "enum" : [ "not_found" ],
                    "type" : "string"
                  },
                  "message" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "code", "message", "name" ],
                "type" : "object"
              }
            },
            "required" : [ "error" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "23e3653d-a4cb-42fc-97b2-35a94ec98194",
    "name" : "Get a domain for the authenticated user by name",
    "request" : {
      "urlPath" : "/v4/domains/Ingeborg+Klocko",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"domain\" : {\n    \"aliases\" : [ ],\n    \"boughtAt\" : null,\n    \"cdnEnabled\" : false,\n    \"certs\" : [ ],\n    \"createdAt\" : 1544658552174,\n    \"creator\" : {\n      \"customerId\" : \"cus_COxSxT1ysva5Xa\",\n      \"email\" : \"demo@zeit.co\",\n      \"id\" : \"ZspSRT4ljIEEmMHgoDwKWDei\",\n      \"username\" : \"zeit_user\"\n    },\n    \"expiresAt\" : null,\n    \"id\" : \"EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1\",\n    \"intendedNameservers\" : [ \"a.zeit-world.co.uk\", \"c.zeit-world.org\", \"d.zeit-world.com\", \"f.zeit-world.net\" ],\n    \"name\" : \"my-zeit-domain.website\",\n    \"nameservers\" : [ \"ns1.nameserver.net\", \"ns2.nameserver.net\" ],\n    \"nsVerifiedAt\" : null,\n    \"serviceType\" : \"external\",\n    \"suffix\" : false,\n    \"txtVerifiedAt\" : null,\n    \"verificationRecord\" : \"YMc9dEJKbAncYtTqSH8dp1j5NXycfEzyjkzBJ3m3UGwR43\",\n    \"verified\" : false\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23e3653d-a4cb-42fc-97b2-35a94ec98194",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.115169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "example" : {
              "domain" : {
                "aliases" : [ ],
                "cdnEnabled" : false,
                "certs" : [ ],
                "createdAt" : 1544658552174,
                "creator" : {
                  "customerId" : "cus_COxSxT1ysva5Xa",
                  "email" : "demo@zeit.co",
                  "id" : "ZspSRT4ljIEEmMHgoDwKWDei",
                  "username" : "zeit_user"
                },
                "id" : "EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1",
                "intendedNameservers" : [ "a.zeit-world.co.uk", "c.zeit-world.org", "d.zeit-world.com", "f.zeit-world.net" ],
                "name" : "my-zeit-domain.website",
                "nameservers" : [ "ns1.nameserver.net", "ns2.nameserver.net" ],
                "serviceType" : "external",
                "suffix" : false,
                "verificationRecord" : "YMc9dEJKbAncYtTqSH8dp1j5NXycfEzyjkzBJ3m3UGwR43",
                "verified" : false
              }
            },
            "properties" : {
              "domain" : {
                "description" : "The domain information",
                "properties" : {
                  "aliases" : {
                    "description" : "Collection of aliases where the domain is used.",
                    "items" : {
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "created" : {
                          "type" : "integer"
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "alias", "created" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "boughtAt" : {
                    "description" : "A timestamp to tell when the domain was purchase if it was purchased with ZEIT",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "cdnEnabled" : {
                    "description" : "Wether the Cloudfare CDN is enabled for the domain or not",
                    "type" : "boolean"
                  },
                  "certs" : {
                    "description" : "Collection of certs for the domain",
                    "items" : {
                      "properties" : {
                        "cns" : {
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "created" : {
                          "type" : "integer"
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "cns", "created" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "createdAt" : {
                    "description" : "A timestamp that shows when the domain was created",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "creator" : {
                    "description" : "Information about who added the domain",
                    "properties" : {
                      "customerId" : {
                        "type" : "string"
                      },
                      "email" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "isDomainReseller" : {
                        "type" : "boolean"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "email", "username" ],
                    "type" : "object"
                  },
                  "expiresAt" : {
                    "description" : "The expiration date for the domain in case it's in ZEIT",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "id" : {
                    "description" : "The unique identifier of the domain.",
                    "type" : "string"
                  },
                  "intendedNameservers" : {
                    "description" : "The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers",
                    "items" : {
                      "description" : "An intended nameserver for the domain",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "The domain name including the TLD",
                    "type" : "string"
                  },
                  "nameservers" : {
                    "description" : "The current nameservers we have detected for the domain",
                    "items" : {
                      "description" : "A nameserver the domain has set",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "nsVerifiedAt" : {
                    "description" : "The timestamp of the last time the domain was verified using Nameservers",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "orderedAt" : {
                    "description" : "A timestamp indicating when the domain was ordered if it was purchased with ZEIT",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "serviceType" : {
                    "description" : "Indicates the current DNS service the domain is using",
                    "enum" : [ "zeit.world", "external", "na" ],
                    "type" : "string"
                  },
                  "suffix" : {
                    "description" : "Tells if the domain is being used as a custom suffix for the user or team",
                    "type" : "boolean"
                  },
                  "transferredAt" : {
                    "description" : "If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "txtVerifiedAt" : {
                    "description" : "The timestamp of the last time the domain was verified using a TXT record",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "verificationRecord" : {
                    "description" : "Indicates the verification record that should be used to verify the domain using a TXT record",
                    "type" : "string"
                  },
                  "verified" : {
                    "description" : "Indicates if the domain ownership was already verified",
                    "type" : "boolean"
                  }
                },
                "required" : [ "boughtAt", "cdnEnabled", "createdAt", "expiresAt", "id", "intendedNameservers", "name", "nameservers", "nsVerifiedAt", "serviceType", "txtVerifiedAt", "verificationRecord", "verified", "suffix", "aliases", "certs", "creator" ],
                "type" : "object"
              }
            },
            "required" : [ "domain" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0a467628-b852-44a0-a981-01e471b2f723",
    "name" : "Gets a list of domains registered for the authenticating user.",
    "request" : {
      "urlPath" : "/v4/domains",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"domains\" : [ {\n    \"boughtAt\" : 1549492066000,\n    \"cdnEnabled\" : false,\n    \"createdAt\" : 1549492062697,\n    \"expiresAt\" : 1581033599000,\n    \"id\" : \"Qmf2RSrNz5sqt6nznp4JpAyXgT6pY65qwJJn8gESt2iKoi\",\n    \"intendedNameservers\" : [ \"b.zeit-world.co.uk\", \"c.zeit-world.org\", \"e.zeit-world.com\", \"f.zeit-world.net\" ],\n    \"name\" : \"zeit.rocks\",\n    \"nameservers\" : [ \"f.zeit-world.net\", \"e.zeit-world.com\", \"b.zeit-world.co.uk\", \"c.zeit-world.org\" ],\n    \"nsVerifiedAt\" : 1549492417256,\n    \"orderedAt\" : 1549492057859,\n    \"serviceType\" : \"zeit.world\",\n    \"txtVerifiedAt\" : null,\n    \"verificationRecord\" : \"QmReErtvkKUkogSYEAFJCQVPboxRcrCygaFG8xUKinurD4\",\n    \"verified\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a467628-b852-44a0-a981-01e471b2f723",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.11468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomains",
          "schema" : {
            "example" : {
              "domains" : [ {
                "boughtAt" : 1549492066000,
                "cdnEnabled" : false,
                "createdAt" : 1549492062697,
                "expiresAt" : 1581033599000,
                "id" : "Qmf2RSrNz5sqt6nznp4JpAyXgT6pY65qwJJn8gESt2iKoi",
                "intendedNameservers" : [ "b.zeit-world.co.uk", "c.zeit-world.org", "e.zeit-world.com", "f.zeit-world.net" ],
                "name" : "zeit.rocks",
                "nameservers" : [ "f.zeit-world.net", "e.zeit-world.com", "b.zeit-world.co.uk", "c.zeit-world.org" ],
                "nsVerifiedAt" : 1549492417256,
                "orderedAt" : 1549492057859,
                "serviceType" : "zeit.world",
                "verificationRecord" : "QmReErtvkKUkogSYEAFJCQVPboxRcrCygaFG8xUKinurD4",
                "verified" : true
              } ]
            },
            "properties" : {
              "domains" : {
                "description" : "An Array of domains for the given account",
                "items" : {
                  "properties" : {
                    "boughtAt" : {
                      "description" : "A timestamp to tell when the domain was purchase if it was purchased with ZEIT",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "cdnEnabled" : {
                      "description" : "Wether the Cloudfare CDN is enabled for the domain or not",
                      "type" : "boolean"
                    },
                    "createdAt" : {
                      "description" : "A timestamp that shows when the domain was created",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "expiresAt" : {
                      "description" : "The expiration date for the domain in case it's in ZEIT",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "id" : {
                      "description" : "The unique identifier of the domain.",
                      "type" : "string"
                    },
                    "intendedNameservers" : {
                      "description" : "The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers",
                      "items" : {
                        "description" : "An intended nameserver for the domain",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "name" : {
                      "description" : "The domain name including the TLD",
                      "type" : "string"
                    },
                    "nameservers" : {
                      "description" : "The current nameservers we have detected for the domain",
                      "items" : {
                        "description" : "A nameserver the domain has set",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "nsVerifiedAt" : {
                      "description" : "The timestamp of the last time the domain was verified using Nameservers",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "orderedAt" : {
                      "description" : "A timestamp indicating when the domain was ordered if it was purchased with ZEIT",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "serviceType" : {
                      "description" : "Indicates the current DNS service the domain is using",
                      "enum" : [ "zeit.world", "external", "na" ],
                      "type" : "string"
                    },
                    "transferredAt" : {
                      "description" : "If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "txtVerifiedAt" : {
                      "description" : "The timestamp of the last time the domain was verified using a TXT record",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "verificationRecord" : {
                      "description" : "Indicates the verification record that should be used to verify the domain using a TXT record",
                      "type" : "string"
                    },
                    "verified" : {
                      "description" : "Indicates if the domain ownership was already verified",
                      "type" : "boolean"
                    }
                  },
                  "required" : [ "boughtAt", "cdnEnabled", "createdAt", "expiresAt", "id", "intendedNameservers", "name", "nameservers", "nsVerifiedAt", "serviceType", "txtVerifiedAt", "verificationRecord", "verified" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "domains" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52f9bff0-7e83-4bdd-8e98-8eaf4ca33139",
    "name" : "Remove a webhook by id - 204",
    "request" : {
      "urlPath" : "/v1/integrations/webhooks/:id",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "52f9bff0-7e83-4bdd-8e98-8eaf4ca33139",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.114412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteWebhooks"
        }
      }
    }
  }, {
    "id" : "b28f8c36-62d2-4ed0-8199-6679357d2541",
    "name" : "Create a new webhook",
    "request" : {
      "urlPath" : "/v1/integrations/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"createdAt\" : 1049538253205351352,\n  \"name\" : \"Linwood Anderson Sr.\",\n  \"configurationId\" : \"7607\",\n  \"id\" : \"m6hx\",\n  \"ownerId\" : \"93k2\",\n  \"events\" : [ \"llx7e0puw4i3kzhdsqcu63b9s0oxrnw5pgg8jsqvloba16e4jkof69wgtmr7d6oke312o9qpfh88dv3kx05smz991fceu63qqdyi6lar62y4dvdh9hjkz15t0xblzbxzq3bk1mqdezzfj6rnnwy03376yno5rd5z74q\", \"wo201ssi438767urg8qnzxt0h5f9abbwqy9w8hg0w4n7pbr3174ofk2n4f2x0hknjoojf8a9nzsnmne30p9sqchkyv2wx4exwmkwq6ptoijus30jcxhand8x6z6vpi105xhkijxolvpmjal7z3p2yjn3ap510kch630d1ifycpcvgusy77vkg\", \"b3m\", \"v6or\", \"g4t43rp3onhyx5o0y0cx993qntqvyctyez5xmj6ea98mx3m3056kltsj6densztxo7eja8w3bttuxz46q9nb2pnufe20ymz81ogcbr5r8rdlbuf0mwg61o38qe26d1kuoa8fijpiy7zjzbnu6676kuh4iq6lvhvxyosze9unzgr4hyzz\", \"et0sibef24u574fjhahjxg906bi9bfqm4v0g8e0r85y7q9j8lxo49pt2728wk6vy7g0icpj5emawd26g7oi4y25oka0wp2qzd31iii1xt6nwb714qou0ax6fa0fg496a2l9zyfikx6ae8o7yv5jon172ob5uct76cdhr9al8y21cw1ts22no8dhi0sykq7u3l090516z\" ],\n  \"url\" : \"https://web.example.mocklab.io/789476\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b28f8c36-62d2-4ed0-8199-6679357d2541",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.114354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createWebhook",
          "schema" : {
            "description" : "A webhook subscription with an URL where ZEIT will POST events.",
            "properties" : {
              "configurationId" : {
                "description" : "An id that corresponds to the configuration that generated the token that was used to create the webhook",
                "type" : "string"
              },
              "createdAt" : {
                "description" : "Timestamp that tells when was the webhook created",
                "type" : "integer"
              },
              "events" : {
                "description" : "An array with the event identifiers that the webhook can receive",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "description" : "Id of the webhook",
                "type" : "string"
              },
              "name" : {
                "description" : "A name for the webhook that serves as a canonical description",
                "type" : "string"
              },
              "ownerId" : {
                "description" : "Id of the owner which can be a user or a team",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL where the POST request will be sent",
                "type" : "string"
              }
            },
            "required" : [ "id", "url", "name", "events", "onwerId", "createdAt", "configurationId" ]
          }
        }
      }
    }
  }, {
    "id" : "482374ca-3acf-454c-a1a1-375ebd58b475",
    "name" : "Get a list of existent webhooks",
    "request" : {
      "urlPath" : "/v1/integrations/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"createdAt\" : 123758037889075132,\n  \"name\" : \"Ms. Kendall Romaguera\",\n  \"configurationId\" : \"auv5\",\n  \"id\" : \"9f51\",\n  \"ownerId\" : \"66p7\",\n  \"events\" : [ \"kmlugh65r8htug8py5tx87h8ad2v0xno8nedgx2ruo07mxapffyy8\", \"cs3l29aubpyromypxooq307jkwrtf73ggl50tb4eepvi3du7hcggx0o69gwvo9n91d25umos7a8kfus8wuc10vwsn4u5jekfuamz3u58e10o2hsk93slfkinvea03bwyf8k366rm5tt39h3zw6hlsd85rkjw2wtvt9dgxoiiiek4lzfl53bxtc90y\", \"znfhovwkf4x765av3o7q3zkkla72gt3nufk76cgl8cx5h18f2vq\", \"obntzavfj6o\" ],\n  \"url\" : \"https://web.example.mocklab.io/114562\"\n}, {\n  \"createdAt\" : 3760735513540362179,\n  \"name\" : \"Magan Cartwright\",\n  \"configurationId\" : \"n36s\",\n  \"id\" : \"bp14\",\n  \"ownerId\" : \"f85y\",\n  \"events\" : [ \"17ckbm5amib9r3ynkg8c1rswx3i4b2202a4\", \"n04ihawbpmtcvi2c22iuasxskcyxywelejt1w4qwgxtqmj56wwp3ir451d8bql0vgfa95ss4hyrlkka96mdfirt50y1hcfgcrniu\", \"5xghlvrudv1rq1i68380s3\", \"hxuuz3bbjrkkrtry529afdwogp2pbrsaepmfs5ivz2k6wlgmlr8e9xdn8oacqfko608j9drh15f9fiwtb86wuoz5krtae41hzl32bxqovr43wm77kqsyea16ftxttgfjtds8t23sbxgt24a27hpttkuuxcyj\", \"0oogh6erpdsqk5ctzxnkol4cppafelodm1t9ay53y8z4k4r5fhnma6zuz7r33hf76tuijpio6ej0362qoiy2jcsiqawmku441fca13v917xfnkydma0bnelkz6hk5uj52rqusze9wwxvqdmk0b42m100pgxglj4oeu\", \"vgegurbm9s5q2k9xb0\", \"jrv7bkcpz38f94538s1azsysy2m5p0f2xokae4sn3ehm6w6s33ur8dbqz9yxgfewf5xyqmwmzmmfg3zqxf8o3y3isnhpqer2tmxxyy84lqcv846kg0fp5e0wofydpzk33d95a447or2y9t1sqn7tar302ty3m93\", \"783ykqlpnkgxk1w5r9jrdylo1q6c4oxgqgnm08duf6\" ],\n  \"url\" : \"https://web.example.mocklab.io/482594\"\n}, {\n  \"createdAt\" : 5656703365145777174,\n  \"name\" : \"Elia Denesik\",\n  \"configurationId\" : \"6j03\",\n  \"id\" : \"wijp\",\n  \"ownerId\" : \"ma5f\",\n  \"events\" : [ \"mmoqxmlukq4ch51rh9xm3ef9vji3u8s9m82x4urk3ydy9yic4vs8jjhl2g\", \"pkgmguy17guzlx5wsiwh1d8nuqygckyekp2x6gh1q0593uut50l6rgtkq82ll70kh1ihlp5gg8fuj4i5zveoj5ternrvt9ucxgpd8qeyt14btyzptn39mrksttqq5l7h2aiqcr0e99xu4xmpfkdzoaa\", \"e0atg5y3lsfw75kk2y9kbee\", \"3wqb8r3owpkk75b\", \"vxnmy52bmydux1tuhznzbn5or5ohpy93yqts2pcvq9\", \"lwwen93psdtl95zp43jv8fefev36n754o3arayor86hortjftmvpey25fg6d2gytz8t08niozgucaz4ky35eus8gi\" ],\n  \"url\" : \"https://web.example.mocklab.io/200522\"\n}, {\n  \"createdAt\" : 6884607788914167452,\n  \"name\" : \"Rosalind Kovacek Sr.\",\n  \"configurationId\" : \"0l9w\",\n  \"id\" : \"oz7v\",\n  \"ownerId\" : \"3g2j\",\n  \"events\" : [ \"vej0awola7tce3d5twbh0eozz1kljikyret75xqpoloyk9ezm5dil92snycwt5yor3k8veexz31374qzxhu8daww50jcm63etj3nkbuxyf7yexfo10lx6gcfqvx4padrfkbcisnitt2dmyuqqs3fld83lrzi32ff4fgzvmyk5q7mfdwl43vgaxmemb\", \"r6s2w87zj43vg613jbc0gc5tfw39a3xor0sqhnw34wrmxrxbxdi7p3gw6vdmbk5777wyfo6yuepqbclcwxv1sr3oz03zr29r7yiikwa805gzeh7dxnvwl4tlo9hmma6ln8djmu8gfl2yvx7908hjcdfujhn5hsfxezt8w83cv6ly5x2x5er4ujctxd943v1\", \"jcj12zjvbpnvn5kxy7x950bnruc7y200umtllog15e58fmfjkm2npmurpnpgsgyctipf4lf0w26sj6mw46iiwbm7jwjs5imro6ikgjktd3hwu8fsnaa3ubeywwxiuxynjktscv3svmvsvfrlk39cvvpl0pgtzz34zk2v2vkkr6ss5eiinkkui6lzn0\", \"yvqr6fk15hm85zveyp7gdy97p247ih8j3mojgqmd9c03qfu67qpwkgnorfs3ucd61l3zc0k624jgudmhfhp2rahx04fqzbolvy2\" ],\n  \"url\" : \"https://web.example.mocklab.io/520209\"\n}, {\n  \"createdAt\" : 4342942733357029699,\n  \"name\" : \"Roman Weissnat\",\n  \"configurationId\" : \"324g\",\n  \"id\" : \"3013\",\n  \"ownerId\" : \"5mrl\",\n  \"events\" : [ \"ue3hsf2g4zsqkmoafqvtdlfti46z7xnbpgrmq1146austu\", \"9uxavnlfgact55b81drivh3plgnrpjbohlawegpp1s8spaziewjpbxjlsh293ab3kp9pswe5ad3s1d\" ],\n  \"url\" : \"https://web.example.mocklab.io/929318\"\n}, {\n  \"createdAt\" : 4312773285530762150,\n  \"name\" : \"Oda Vandervort\",\n  \"configurationId\" : \"5cav\",\n  \"id\" : \"k9s0\",\n  \"ownerId\" : \"zi16\",\n  \"events\" : [ \"kjjcqwn135hawnhgmopfbgcstj3w3i0654tejwmt1x3tmwg1fb6u0fr5qdfqgzrany20077mum9qeevxscp5zk3fkutkb7sjsfs4evbxjrl6zaig5zmywk0koa3hvz6dv42lsfd1auu7d3g9qza\", \"bbv\", \"mp441rts2h7uxswcpvxv0zupukkdqsk3hqywh7hbvx2yzj0ogt3t2puxjk3li\", \"t4ilxildiooubjxfyjxc5issqpnlxarecg\", \"82barohpc2dmtm0edpcwmbd5x8lp\", \"axegfi2iki7qweph3htpqqmh2wdsw5so47zec79onx8skaipxxgtqwjg4qhnaaqh7f1o4ruphrqlgtqkrdp5cu902s9ge704woukooil\" ],\n  \"url\" : \"https://web.example.mocklab.io/411009\"\n}, {\n  \"createdAt\" : 2508617187605463113,\n  \"name\" : \"Dedra Rolfson\",\n  \"configurationId\" : \"0761\",\n  \"id\" : \"246f\",\n  \"ownerId\" : \"u30m\",\n  \"events\" : [ \"4tbcizbp7guqo5fvuossx8htd5q8mpunmpab3r6s8c6oufxy4g7vgcqr3q4m5r8\", \"tn35x73euaj3czs09f104pnna7c73zf6fa57dpyyudzdvpougr0n9gt2rr1h4w21hieollwciyrwz\", \"zrom29gxo3fyshqhaphwln4bn2pk1wwrlujtgjly02vgfdrnrhhzelroiqfj9b\", \"plipnbv30bva9osxkv1h302o0xx621gbz6b1kprkm3xzt2pdawzuzcbhwkp7ygkyrlocl57mbq1liy0o2zfkl5by5pkndzbam416sm0qh2h47h5qybxkw0yuwsv52nyv0yxgjtxci2qa1n7va0p58cjnc68ixv0ch36xq6nkf2hir7i2\" ],\n  \"url\" : \"https://web.example.mocklab.io/112291\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "482374ca-3acf-454c-a1a1-375ebd58b475",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.113856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getWebhooks",
          "schema" : {
            "description" : "An Array of webhooks for the given account",
            "items" : {
              "$ref" : "#/components/schemas/webhook"
            },
            "type" : "array"
          }
        }
      }
    }
  } ]
}