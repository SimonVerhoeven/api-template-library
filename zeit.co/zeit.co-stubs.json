{
  "mappings" : [ {
    "id" : "0b96cd80-bd0e-4879-8aa1-df0dd666a542",
    "name" : "Get a domain for the authenticated user by name",
    "request" : {
      "urlPath" : "/v4/domains/Ms.+Nieves+Carter",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error\" : {\n    \"code\" : \"not_found\",\n    \"message\" : \"The domain with name zeit.rocks could not be found\",\n    \"name\" : \"zeit.rocks\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b96cd80-bd0e-4879-8aa1-df0dd666a542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:41.186169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "example" : {
              "error" : {
                "code" : "not_found",
                "message" : "The domain with name zeit.rocks could not be found",
                "name" : "zeit.rocks"
              }
            },
            "properties" : {
              "error" : {
                "properties" : {
                  "code" : {
                    "enum" : [ "not_found" ],
                    "type" : "string"
                  },
                  "message" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "code", "message", "name" ],
                "type" : "object"
              }
            },
            "required" : [ "error" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ef0429a3-9b3e-45c8-8514-e0f426785e3f",
    "name" : "Get a domain for the authenticated user by name",
    "request" : {
      "urlPath" : "/v4/domains/Donette+Kiehn+DVM",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"domain\" : {\n    \"aliases\" : [ ],\n    \"boughtAt\" : null,\n    \"cdnEnabled\" : false,\n    \"certs\" : [ ],\n    \"createdAt\" : 1544658552174,\n    \"creator\" : {\n      \"customerId\" : \"cus_COxSxT1ysva5Xa\",\n      \"email\" : \"demo@zeit.co\",\n      \"id\" : \"ZspSRT4ljIEEmMHgoDwKWDei\",\n      \"username\" : \"zeit_user\"\n    },\n    \"expiresAt\" : null,\n    \"id\" : \"EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1\",\n    \"intendedNameservers\" : [ \"a.zeit-world.co.uk\", \"c.zeit-world.org\", \"d.zeit-world.com\", \"f.zeit-world.net\" ],\n    \"name\" : \"my-zeit-domain.website\",\n    \"nameservers\" : [ \"ns1.nameserver.net\", \"ns2.nameserver.net\" ],\n    \"nsVerifiedAt\" : null,\n    \"serviceType\" : \"external\",\n    \"suffix\" : false,\n    \"txtVerifiedAt\" : null,\n    \"verificationRecord\" : \"YMc9dEJKbAncYtTqSH8dp1j5NXycfEzyjkzBJ3m3UGwR43\",\n    \"verified\" : false\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef0429a3-9b3e-45c8-8514-e0f426785e3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:41.186029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "example" : {
              "domain" : {
                "aliases" : [ ],
                "cdnEnabled" : false,
                "certs" : [ ],
                "createdAt" : 1544658552174,
                "creator" : {
                  "customerId" : "cus_COxSxT1ysva5Xa",
                  "email" : "demo@zeit.co",
                  "id" : "ZspSRT4ljIEEmMHgoDwKWDei",
                  "username" : "zeit_user"
                },
                "id" : "EmTbe5CEJyTk2yVAHBUWy4A3sRusca3GCwRjTC1bpeVnt1",
                "intendedNameservers" : [ "a.zeit-world.co.uk", "c.zeit-world.org", "d.zeit-world.com", "f.zeit-world.net" ],
                "name" : "my-zeit-domain.website",
                "nameservers" : [ "ns1.nameserver.net", "ns2.nameserver.net" ],
                "serviceType" : "external",
                "suffix" : false,
                "verificationRecord" : "YMc9dEJKbAncYtTqSH8dp1j5NXycfEzyjkzBJ3m3UGwR43",
                "verified" : false
              }
            },
            "properties" : {
              "domain" : {
                "description" : "The domain information",
                "properties" : {
                  "aliases" : {
                    "description" : "Collection of aliases where the domain is used.",
                    "items" : {
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "created" : {
                          "type" : "integer"
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "alias", "created" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "boughtAt" : {
                    "description" : "A timestamp to tell when the domain was purchase if it was purchased with ZEIT",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "cdnEnabled" : {
                    "description" : "Wether the Cloudfare CDN is enabled for the domain or not",
                    "type" : "boolean"
                  },
                  "certs" : {
                    "description" : "Collection of certs for the domain",
                    "items" : {
                      "properties" : {
                        "cns" : {
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "created" : {
                          "type" : "integer"
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "cns", "created" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "createdAt" : {
                    "description" : "A timestamp that shows when the domain was created",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "creator" : {
                    "description" : "Information about who added the domain",
                    "properties" : {
                      "customerId" : {
                        "type" : "string"
                      },
                      "email" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "isDomainReseller" : {
                        "type" : "boolean"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "email", "username" ],
                    "type" : "object"
                  },
                  "expiresAt" : {
                    "description" : "The expiration date for the domain in case it's in ZEIT",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "id" : {
                    "description" : "The unique identifier of the domain.",
                    "type" : "string"
                  },
                  "intendedNameservers" : {
                    "description" : "The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers",
                    "items" : {
                      "description" : "An intended nameserver for the domain",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "The domain name including the TLD",
                    "type" : "string"
                  },
                  "nameservers" : {
                    "description" : "The current nameservers we have detected for the domain",
                    "items" : {
                      "description" : "A nameserver the domain has set",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "nsVerifiedAt" : {
                    "description" : "The timestamp of the last time the domain was verified using Nameservers",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "orderedAt" : {
                    "description" : "A timestamp indicating when the domain was ordered if it was purchased with ZEIT",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "serviceType" : {
                    "description" : "Indicates the current DNS service the domain is using",
                    "enum" : [ "zeit.world", "external", "na" ],
                    "type" : "string"
                  },
                  "suffix" : {
                    "description" : "Tells if the domain is being used as a custom suffix for the user or team",
                    "type" : "boolean"
                  },
                  "transferredAt" : {
                    "description" : "If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "txtVerifiedAt" : {
                    "description" : "The timestamp of the last time the domain was verified using a TXT record",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "verificationRecord" : {
                    "description" : "Indicates the verification record that should be used to verify the domain using a TXT record",
                    "type" : "string"
                  },
                  "verified" : {
                    "description" : "Indicates if the domain ownership was already verified",
                    "type" : "boolean"
                  }
                },
                "required" : [ "boughtAt", "cdnEnabled", "createdAt", "expiresAt", "id", "intendedNameservers", "name", "nameservers", "nsVerifiedAt", "serviceType", "txtVerifiedAt", "verificationRecord", "verified", "suffix", "aliases", "certs", "creator" ],
                "type" : "object"
              }
            },
            "required" : [ "domain" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f2229609-80a0-4fb7-80a8-d453c377fa04",
    "name" : "Gets a list of domains registered for the authenticating user.",
    "request" : {
      "urlPath" : "/v4/domains",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"domains\" : [ {\n    \"boughtAt\" : 1549492066000,\n    \"cdnEnabled\" : false,\n    \"createdAt\" : 1549492062697,\n    \"expiresAt\" : 1581033599000,\n    \"id\" : \"Qmf2RSrNz5sqt6nznp4JpAyXgT6pY65qwJJn8gESt2iKoi\",\n    \"intendedNameservers\" : [ \"b.zeit-world.co.uk\", \"c.zeit-world.org\", \"e.zeit-world.com\", \"f.zeit-world.net\" ],\n    \"name\" : \"zeit.rocks\",\n    \"nameservers\" : [ \"f.zeit-world.net\", \"e.zeit-world.com\", \"b.zeit-world.co.uk\", \"c.zeit-world.org\" ],\n    \"nsVerifiedAt\" : 1549492417256,\n    \"orderedAt\" : 1549492057859,\n    \"serviceType\" : \"zeit.world\",\n    \"txtVerifiedAt\" : null,\n    \"verificationRecord\" : \"QmReErtvkKUkogSYEAFJCQVPboxRcrCygaFG8xUKinurD4\",\n    \"verified\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2229609-80a0-4fb7-80a8-d453c377fa04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:41.185644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomains",
          "schema" : {
            "example" : {
              "domains" : [ {
                "boughtAt" : 1549492066000,
                "cdnEnabled" : false,
                "createdAt" : 1549492062697,
                "expiresAt" : 1581033599000,
                "id" : "Qmf2RSrNz5sqt6nznp4JpAyXgT6pY65qwJJn8gESt2iKoi",
                "intendedNameservers" : [ "b.zeit-world.co.uk", "c.zeit-world.org", "e.zeit-world.com", "f.zeit-world.net" ],
                "name" : "zeit.rocks",
                "nameservers" : [ "f.zeit-world.net", "e.zeit-world.com", "b.zeit-world.co.uk", "c.zeit-world.org" ],
                "nsVerifiedAt" : 1549492417256,
                "orderedAt" : 1549492057859,
                "serviceType" : "zeit.world",
                "verificationRecord" : "QmReErtvkKUkogSYEAFJCQVPboxRcrCygaFG8xUKinurD4",
                "verified" : true
              } ]
            },
            "properties" : {
              "domains" : {
                "description" : "An Array of domains for the given account",
                "items" : {
                  "properties" : {
                    "boughtAt" : {
                      "description" : "A timestamp to tell when the domain was purchase if it was purchased with ZEIT",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "cdnEnabled" : {
                      "description" : "Wether the Cloudfare CDN is enabled for the domain or not",
                      "type" : "boolean"
                    },
                    "createdAt" : {
                      "description" : "A timestamp that shows when the domain was created",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "expiresAt" : {
                      "description" : "The expiration date for the domain in case it's in ZEIT",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "id" : {
                      "description" : "The unique identifier of the domain.",
                      "type" : "string"
                    },
                    "intendedNameservers" : {
                      "description" : "The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers",
                      "items" : {
                        "description" : "An intended nameserver for the domain",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "name" : {
                      "description" : "The domain name including the TLD",
                      "type" : "string"
                    },
                    "nameservers" : {
                      "description" : "The current nameservers we have detected for the domain",
                      "items" : {
                        "description" : "A nameserver the domain has set",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "nsVerifiedAt" : {
                      "description" : "The timestamp of the last time the domain was verified using Nameservers",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "orderedAt" : {
                      "description" : "A timestamp indicating when the domain was ordered if it was purchased with ZEIT",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "serviceType" : {
                      "description" : "Indicates the current DNS service the domain is using",
                      "enum" : [ "zeit.world", "external", "na" ],
                      "type" : "string"
                    },
                    "transferredAt" : {
                      "description" : "If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "txtVerifiedAt" : {
                      "description" : "The timestamp of the last time the domain was verified using a TXT record",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "verificationRecord" : {
                      "description" : "Indicates the verification record that should be used to verify the domain using a TXT record",
                      "type" : "string"
                    },
                    "verified" : {
                      "description" : "Indicates if the domain ownership was already verified",
                      "type" : "boolean"
                    }
                  },
                  "required" : [ "boughtAt", "cdnEnabled", "createdAt", "expiresAt", "id", "intendedNameservers", "name", "nameservers", "nsVerifiedAt", "serviceType", "txtVerifiedAt", "verificationRecord", "verified" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "domains" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71e2cd20-79f6-4ebd-b085-1cb47617eb21",
    "name" : "Remove a webhook by id - 204",
    "request" : {
      "urlPath" : "/v1/integrations/webhooks/:id",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "71e2cd20-79f6-4ebd-b085-1cb47617eb21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:41.185429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteWebhooks"
        }
      }
    }
  }, {
    "id" : "266b4fc2-1c94-46e3-8da0-7ec0d2138d90",
    "name" : "Create a new webhook",
    "request" : {
      "urlPath" : "/v1/integrations/webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"createdAt\" : 6951440698168529938,\n  \"name\" : \"Sharell Brown\",\n  \"configurationId\" : \"8u12\",\n  \"id\" : \"ur0w\",\n  \"ownerId\" : \"4jye\",\n  \"events\" : [ \"6idbgzuekc5qqqnoc0ecvv8aois44wwb2kr3mz7q8bz52t4e3m6i92mry46iga9uqd9t7fboxhyn2s\" ],\n  \"url\" : \"https://web.example.mocklab.io/942914\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "266b4fc2-1c94-46e3-8da0-7ec0d2138d90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:41.185371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createWebhook",
          "schema" : {
            "description" : "A webhook subscription with an URL where ZEIT will POST events.",
            "properties" : {
              "configurationId" : {
                "description" : "An id that corresponds to the configuration that generated the token that was used to create the webhook",
                "type" : "string"
              },
              "createdAt" : {
                "description" : "Timestamp that tells when was the webhook created",
                "type" : "integer"
              },
              "events" : {
                "description" : "An array with the event identifiers that the webhook can receive",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "description" : "Id of the webhook",
                "type" : "string"
              },
              "name" : {
                "description" : "A name for the webhook that serves as a canonical description",
                "type" : "string"
              },
              "ownerId" : {
                "description" : "Id of the owner which can be a user or a team",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL where the POST request will be sent",
                "type" : "string"
              }
            },
            "required" : [ "id", "url", "name", "events", "onwerId", "createdAt", "configurationId" ]
          }
        }
      }
    }
  }, {
    "id" : "4ac06e16-67dd-4e5a-b534-ef49342a56d0",
    "name" : "Get a list of existent webhooks",
    "request" : {
      "urlPath" : "/v1/integrations/webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"createdAt\" : 5998409052316069101,\n  \"name\" : \"Carlton Fritsch\",\n  \"configurationId\" : \"546u\",\n  \"id\" : \"2vmq\",\n  \"ownerId\" : \"69x4\",\n  \"events\" : [ \"4kvls6zh7lb3jd77cxv1ic6z7n55q7cxvwu55owjanz0y7n59vji6oeajbnwj0egkx856kdzca5i2zkdnrbpxohrzr6xjhcazqjcn9fmwfiknqregyf6\", \"uqjg6nwyqligkg2qayx2xe0896emdutif6jqhqkmb4d4hitdyr083t4y6qglict5j5hxrnq6cpjnewedmumamlqq40f547mc9gtnwrz7ou0icqzkff5c22rtftz3lkobds6igpmhs5wflb488xq7aj9m8qjl0\", \"hjub13ak4cae3wvhhnw4rzolyaj0xgjfmr5j8w5rv3zx4okzo69soz25e5oczahmde1dkmncuvo73advfjk8bc9s0io0owp5thpzckn6rzcmw1xval2v1c4u6v38dxr5wj9f9\", \"2qq1zgqe5ic3fxo63zq094cstbm6nau964nq63ed7xspizvsfojxtktjj6jjg07122iwxd1curju7tz3xhktx97sp4kc2gaofebkibvvv7d1jg17iki9kkxi2nbe5binhja0zczu2du2p4kcujzky9gzcqjsb4fwktyvf2y9f69iloiy1\" ],\n  \"url\" : \"https://web.example.mocklab.io/191745\"\n}, {\n  \"createdAt\" : 8480342994478595172,\n  \"name\" : \"Loren Kohler\",\n  \"configurationId\" : \"1kwo\",\n  \"id\" : \"61xz\",\n  \"ownerId\" : \"9hci\",\n  \"events\" : [ \"25e28n1kazg5bmwddeko2imc4kqcj5alytchi\", \"iws3dv5iwg2ckthsqomr9la6e1sye6knq2fr5et4o1perzfw5ptl428uv3f017csvfjg2atset19s6vbji2pnx0sbe9scgobzdqcw65gawa9fa87gf4wpzuu32mcghsodetlj\", \"y03wz65qbiwsrqxrac4bnhmis3inrnzmghfnp23j7og40k2wb4g04xjodcgnum5x82wkibdsw6p8e8jaaf7rqn6jg92wcsjjfjuluvin8hkcodp43ux21bewk7go\", \"hqedt1zx3ij73xnwhwbd7fyh92b2\" ],\n  \"url\" : \"https://web.example.mocklab.io/626161\"\n}, {\n  \"createdAt\" : 7010370342590034241,\n  \"name\" : \"Lewis Goldner II\",\n  \"configurationId\" : \"28b5\",\n  \"id\" : \"81gz\",\n  \"ownerId\" : \"5ozo\",\n  \"events\" : [ \"qa8qxbkp3gas5l9sbyt0vn6m3aa9dvbl0njzn8ol6dsaxr5ntwf7ezawb1rf23g5fec9gk2nfkcu4ygmnhznqxe3sls04yqzhqm68ltbk6fejeabh5riyliqhlek\", \"0casr9\", \"u1x\" ],\n  \"url\" : \"https://web.example.mocklab.io/758030\"\n}, {\n  \"createdAt\" : 6353640519372883347,\n  \"name\" : \"Marcellus Block\",\n  \"configurationId\" : \"xx5d\",\n  \"id\" : \"mt85\",\n  \"ownerId\" : \"us1d\",\n  \"events\" : [ \"w21yax810s1nr9w76moxb7qn985gi469yl4brgbg62r0j\", \"9tybzicfopuxyfgmmblc5pzna92i40qk67zxqdr30u3li9gfqedgnrppt6endhx5lp60avdsy8b095j98hsvtffmszvkyktl0w7ob11125y9ut1gl2vum9ms2ltm8mbso1iydvsxkcwwx2jn9nn07w2486ggmvadwbz9ld9yop96n\", \"cuf9nag85d62kxeycn0wphj153r4vll8wl1rrk63kwsbsiflxdh7obcxwr9mdt1e63ekqtr81raubyf35x6wjq2wb28uhibdllhpqf8skz0d490sgu8fmpxdz\", \"a9imnvhs20dv44mezxia8qvu2cmdlo4gobjr5ri6rbrpaoe\", \"5gu4muejzg7dbvv7v3t1t8vt5u7kmhs1mvubs47p85sxxdb3fwejrhd7s7uqhkyehblhzkf7aed5213xeqsf11s0jef2hg609qvo5ihmj863a57g8raqbygnfsce1ozfy4qzgbzcifme0\", \"7v3of78fy8xpmhw7mynlmne79q9hc8obb0iwddba9bcs7mqg2fge00n55bj4mbip5ftwt3pcfcqgw8aojw7pbk6n21l65lq5djygb90ckoi50zujz0meu5ulsnsv71ulfk8j921906kmrbsa4gk96k5zruuahpfb37rmkcc\", \"xt7rjo9tzd2y12xa7xsk5pl469y0ji6h1g7vtjfho9dk1nok7l2cv73a8i87hhgmp0zc7r6j4c3knwqgbzojs20tbjgtw036bjdqnu370h9q73q2si4lc5t21xebz52jcamto69f417hdiouigkirkdfgold5y1s4b3cug0xbb9ne3pts9\", \"qu0xkwmaevjcy0ucxcv7u1ybwehpse9kgpqgobrg06oo4f2fgwwfzlluidrjfg0utow9vsducdiq98cfyd4edgbz1xwej6u8\" ],\n  \"url\" : \"https://web.example.mocklab.io/759140\"\n}, {\n  \"createdAt\" : 4749194315999858540,\n  \"name\" : \"Otis Hartmann\",\n  \"configurationId\" : \"5vx3\",\n  \"id\" : \"48i1\",\n  \"ownerId\" : \"6bux\",\n  \"events\" : [ \"xavwfd10n518q2w6lsq5cr9hqxalaoli7rk5redd76lub6k0dpqxnxxw666878q7l9xpa3quy6xbq7b7aepdsmra2fhwfvjs7e66uwv0up4rtivzkzuw31pdj5fx\", \"4hh6f0bz7sq6rtz16qk6ew5k0jf6hsn26ia1lzgtn0cuxhsrraa98br9pvjall726ketz0zxuakmpcwzonpnluop0oa9izz2q8lmv7cj2itdjea1anpflaxshtm4bizjcxn40bthdxiuw\", \"qg8uv5y9h46y5qdaxcxi1yklrug2bksmd31kn\", \"smcqgbj186kv9zsj6gi8jo1d5t1rsm0bvwlihbv7tpc9tj7elssgybzre5jwyk1s37qkbfd277yy2kfrxj2x31d7xim9qphelrcowzj9d3qxvu96aad190pa278gedu2qu2iwvrlbircey5\" ],\n  \"url\" : \"https://web.example.mocklab.io/650384\"\n}, {\n  \"createdAt\" : 5652519162185544567,\n  \"name\" : \"Andreas Rogahn\",\n  \"configurationId\" : \"oe53\",\n  \"id\" : \"buxc\",\n  \"ownerId\" : \"4g4h\",\n  \"events\" : [ \"tbrzsgs57d8bgjo3fyibnmuon2pu7bczdrc\", \"kc2howmlomif79wiphfj\", \"alk074ew0zdl72v02ps26bxb8ccou6ssu0larwox17cpb8nbjaknyamagsewie8bno4r839dseyr12rvcujk6jca3p5cr451kp9gfm4q0a33phq8gh604hpkx7d1gwkerzo0rh5rv5rt89l2af6juxwh8c2umgsm2rxssvqkv2a6xdwdvp52gufb6dhkzmyxer8ay\", \"ovqawxpivl1k8wjb3pv6s327alqo4erz6db1nerksbcj1v8jswov2cjke6uzhf8d8hii5kk5h86cfrlfq364pr92wocew4epwk4bjar6i8sylcqw6r4z62fitgmpnonu0abtkitxy\", \"gdna0yy7zhqefiqjfccbchg2k8exiy0fg30de877kujzm170kc5k5yl7hvxgw9hnudidoyezdny2vuoowxl8yyvo6w8o14wo5igaj4sewqq31gpfws2zc0y9dk77xjst7kmkff1qylwm4s6ro5yexdyp4boj9sy\" ],\n  \"url\" : \"https://web.example.mocklab.io/051675\"\n}, {\n  \"createdAt\" : 2798477901565594217,\n  \"name\" : \"Jack Blanda\",\n  \"configurationId\" : \"s124\",\n  \"id\" : \"o91j\",\n  \"ownerId\" : \"48i4\",\n  \"events\" : [ \"b0myih9ah42za5rpi6eyn3vv516eaefnqoopsretzpg77be6eyufzl9mvfoz1li4xl6s\" ],\n  \"url\" : \"https://web.example.mocklab.io/645034\"\n}, {\n  \"createdAt\" : 4128756893228316765,\n  \"name\" : \"Charlsie Stoltenberg\",\n  \"configurationId\" : \"t777\",\n  \"id\" : \"879o\",\n  \"ownerId\" : \"34v5\",\n  \"events\" : [ \"qoj3ppqsunnhf35yrb6xesfch8dr2nqejnv29bwft5sn2f4ern7pl8ducdlen2wml5ghw2uqushtvw80uunk6z1vw42w44sm6t0b\" ],\n  \"url\" : \"https://web.example.mocklab.io/955506\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ac06e16-67dd-4e5a-b534-ef49342a56d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:41.184928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getWebhooks",
          "schema" : {
            "description" : "An Array of webhooks for the given account",
            "items" : {
              "$ref" : "#/components/schemas/webhook"
            },
            "type" : "array"
          }
        }
      }
    }
  } ]
}