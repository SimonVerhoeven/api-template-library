{
  "mappings" : [ {
    "id" : "b838157c-5511-42bd-8c08-723a84676cb6",
    "name" : "Get the program information document. - 404",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/id/ypwrziuppcjm5ielu8cb31pnkz0ntzvnz3rmtm8tcylgsd4w3mtzjouv99nqklzop27zlwan8uf6xjr3eobr0bixc1fnth7zmv643p86shrg6x8z/1r5n/2022-11-05T12%3A11%3A04.597221Z_PI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b838157c-5511-42bd-8c08-723a84676cb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.597238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ec00a49c-85b9-4d5d-a616-2f1a612b3519",
    "name" : "Get the program information document. - 403",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/id/nqbm1jnoook4to7e1dymvkvnm1b6yu7qi8hs3bz5w4sru9c99orepl5x76x0h2cfe1lxy6wwzrk2g3qonkkrp/l02q/2022-03-21T12%3A20%3A04.597105Z_PI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ec00a49c-85b9-4d5d-a616-2f1a612b3519",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.597125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "f2d0dcd5-a380-4081-86e8-8b627326c853",
    "name" : "Get the program information document. (application/xml)",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/id/vcc4yumydddif76o71a1nsovj5jmcbn3y2im7cprzwlp2loqsgx0puh6sxrzew332vmbb6q0e7q1kmiy449h8kq723xcj0v8rs21iilenl3fsd6szta4gczq8v9fuyoromlbdu98ek4lcj8jpjc9qt809oo9vyljr80pjeu/rvh9/2022-10-07T12%3A33%3A04.596971Z_PI.xml",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"kaaapin19npe8x5jpjphvfiwewsu2bmlj6i\"",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "f2d0dcd5-a380-4081-86e8-8b627326c853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.597004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "type" : "string",
            "format" : "RadioDNS Service Information (SI) as defined in ETSI TS 102 818 v3.1.1 section 7"
          }
        }
      }
    }
  }, {
    "id" : "f39f679c-2c2b-4ec2-bf1b-893cba83cb95",
    "name" : "Get the service information document.",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/SI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"k112domqtmvsiobaspw8baj6v6sa34p7zylero67yn40gb626dfd02mjxpblsizffakx0vlmtc4wsh8ucvroorm5ie5olxvwcu502nbgyy3y7\"",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "f39f679c-2c2b-4ec2-bf1b-893cba83cb95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.596833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "type" : "string",
            "format" : "RadioDNS Service Information (SI) as defined in ETSI TS 102 818 v3.1.1 section 6"
          }
        }
      }
    }
  }, {
    "id" : "7ee1bd7f-032d-4e18-8be5-12cd7c862b81",
    "name" : "Get the group information document.",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/GI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"81nnylx6eg9t53rgoq0l5fegwmnw6ij323vw68w5ht3nvlfmwpkqz53s8xsj9oje79ouraaajik744s3fekuxwdj216pmhq1bd85v8drzv8o4zily0r0jpx4jcwerg40qd8ko2weu\"",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "7ee1bd7f-032d-4e18-8be5-12cd7c862b81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.59679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "type" : "string",
            "format" : "RadioDNS Service Information (SI) as defined in ETSI TS 102 818 v3.1.1 section 8"
          }
        }
      }
    }
  }, {
    "id" : "07567adb-64a6-4d55-999b-ad4a20c2e95b",
    "name" : "Get an EPG batch operation. - 404",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch/6277424384701212748",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "07567adb-64a6-4d55-999b-ad4a20c2e95b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.596747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "675e4bee-01ad-4f8b-aee5-f0d0e1298363",
    "name" : "Get an EPG batch operation. - 403",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch/5012237728054362943",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "675e4bee-01ad-4f8b-aee5-f0d0e1298363",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.596727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "647f0ef6-009f-4bc7-a4d0-c7d9fe095bb2",
    "name" : "Get an EPG batch operation. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch/2094678628400078084",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2022-11-01T12:57:04.596364Z\",\n  \"format\" : \"radiodns\",\n  \"name\" : \"Burton Littel\",\n  \"id\" : 5997199675376725774,\n  \"program\" : {\n    \"airDate\" : \"2022-08-08T11:33:04.596443Z\",\n    \"title\" : \"Fugit eligendi voluptatum ut qui et dolorum.\"\n  },\n  \"message\" : \"Sit velit dolore aperiam quo nobis id consequatur. Ab aliquid eligendi adipisci. Assumenda cupiditate sit et ut amet qui ea.\",\n  \"uri\" : \"https://web.example.mocklab.io/385873\",\n  \"finishedDate\" : \"2022-12-04T10:59:04.596584Z\",\n  \"status\" : \"processing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "647f0ef6-009f-4bc7-a4d0-c7d9fe095bb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.596694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "required" : [ "createdDate", "format", "id", "status" ],
            "type" : "object",
            "properties" : {
              "createdDate" : {
                "type" : "string",
                "description" : "The date and time the batch was created.",
                "format" : "dateTime"
              },
              "finishedDate" : {
                "type" : "string",
                "description" : "The date and time the batch finished (either successful or failed).",
                "format" : "dateTime"
              },
              "format" : {
                "type" : "string",
                "description" : "The format of the metadata file defining the create or update actions to be performed on one or more EPG programs.",
                "enum" : [ "radiodns" ]
              },
              "id" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the batch.",
                "format" : "int64"
              },
              "message" : {
                "type" : "string",
                "description" : "The human readable success or failure message."
              },
              "name" : {
                "type" : "string",
                "description" : "The optional name of the batch for human reference."
              },
              "program" : {
                "required" : [ "airDate", "title" ],
                "type" : "object",
                "properties" : {
                  "airDate" : {
                    "type" : "string",
                    "description" : "The airDate for the program in ISO 8601 format.",
                    "format" : "dateTime"
                  },
                  "title" : {
                    "type" : "string",
                    "description" : "The title of the program."
                  }
                },
                "description" : "The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly. If this is specified, it will overrite the value specfified in the metadata file. If this is specified, the metadata file should only contain one program."
              },
              "status" : {
                "type" : "string",
                "description" : "The current processing status.",
                "enum" : [ "queued", "processing", "failed", "successful" ]
              },
              "uri" : {
                "type" : "string",
                "description" : "The URI to the metadata file defining the batch creates/updates.",
                "format" : "uri"
              }
            },
            "description" : "An electronic program guide (EPG) batch operation to create or update metadata on one or more guide programs."
          }
        }
      }
    }
  }, {
    "id" : "9dd71f1e-3942-4b63-8218-dc2fda809ed2",
    "name" : "Create a batch operation on EPG information.",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch",
      "method" : "POST"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"createdDate\" : \"2022-07-08T12:34:04.59594Z\",\n  \"format\" : \"radiodns\",\n  \"name\" : \"Kayce Christiansen\",\n  \"id\" : 3902775659283484571,\n  \"program\" : {\n    \"airDate\" : \"2022-10-14T12:12:04.596032Z\",\n    \"title\" : \"Itaque placeat quaerat.\"\n  },\n  \"message\" : \"Odio non earum veritatis eum. Vitae aut magnam accusantium reprehenderit error et possimus. Recusandae iusto architecto.\",\n  \"uri\" : \"https://web.example.mocklab.io/106766\",\n  \"finishedDate\" : \"2022-09-04T11:55:04.59618Z\",\n  \"status\" : \"queued\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dd71f1e-3942-4b63-8218-dc2fda809ed2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.596323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "required" : [ "createdDate", "format", "id", "status" ],
            "type" : "object",
            "properties" : {
              "createdDate" : {
                "type" : "string",
                "description" : "The date and time the batch was created.",
                "format" : "dateTime"
              },
              "finishedDate" : {
                "type" : "string",
                "description" : "The date and time the batch finished (either successful or failed).",
                "format" : "dateTime"
              },
              "format" : {
                "type" : "string",
                "description" : "The format of the metadata file defining the create or update actions to be performed on one or more EPG programs.",
                "enum" : [ "radiodns" ]
              },
              "id" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the batch.",
                "format" : "int64"
              },
              "message" : {
                "type" : "string",
                "description" : "The human readable success or failure message."
              },
              "name" : {
                "type" : "string",
                "description" : "The optional name of the batch for human reference."
              },
              "program" : {
                "required" : [ "airDate", "title" ],
                "type" : "object",
                "properties" : {
                  "airDate" : {
                    "type" : "string",
                    "description" : "The airDate for the program in ISO 8601 format.",
                    "format" : "dateTime"
                  },
                  "title" : {
                    "type" : "string",
                    "description" : "The title of the program."
                  }
                },
                "description" : "The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly. If this is specified, it will overrite the value specfified in the metadata file. If this is specified, the metadata file should only contain one program."
              },
              "status" : {
                "type" : "string",
                "description" : "The current processing status.",
                "enum" : [ "queued", "processing", "failed", "successful" ]
              },
              "uri" : {
                "type" : "string",
                "description" : "The URI to the metadata file defining the batch creates/updates.",
                "format" : "uri"
              }
            },
            "description" : "An electronic program guide (EPG) batch operation to create or update metadata on one or more guide programs."
          }
        }
      }
    }
  }, {
    "id" : "3d025490-df0f-40f5-bc95-46beceb1d7bc",
    "name" : "Get the items in the folder. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/5598151381899095003/items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3d025490-df0f-40f5-bc95-46beceb1d7bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "73fc9c05-fb11-4c82-850f-4f3f55a93acb",
    "name" : "Get the items in the folder. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/6931962261309834721/items",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"entries\" : [ {\n    \"name\" : \"Adolph Kohler\",\n    \"id\" : 4438642492302302289,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Mrs. Williams Adams\",\n    \"id\" : 3943312758979802150,\n    \"type\" : \"folder\"\n  }, {\n    \"name\" : \"Marylou Padberg\",\n    \"id\" : 2896458797526822919,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Valentine O'Kon\",\n    \"id\" : 7462117185305106413,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Kris Jerde\",\n    \"id\" : 383603373534921482,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Sal Langworth\",\n    \"id\" : 6881675263910415253,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Siu Koss I\",\n    \"id\" : 6870474584673209846,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Tonja Cormier\",\n    \"id\" : 5993371492570284114,\n    \"type\" : \"folder\"\n  } ],\n  \"offset\" : 349825826,\n  \"limit\" : 788825499,\n  \"totalCount\" : 1150935998\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73fc9c05-fb11-4c82-850f-4f3f55a93acb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "type" : "object",
            "properties" : {
              "entries" : {
                "type" : "array",
                "description" : "The item instances.",
                "items" : {
                  "$ref" : "#/components/schemas/CDDriveItem"
                }
              },
              "limit" : {
                "type" : "integer",
                "description" : "The maximum number of items to return.",
                "format" : "int32"
              },
              "offset" : {
                "type" : "integer",
                "description" : "The start offset into the items.",
                "format" : "int32"
              },
              "totalCount" : {
                "type" : "integer",
                "description" : "The total number of entries available.",
                "format" : "int32"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "387408a2-f582-4016-a0c8-bfeb09aab5e7",
    "name" : "Delete a folder. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/2927988109621800579",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "387408a2-f582-4016-a0c8-bfeb09aab5e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2253a896-c15c-4af8-9b39-30299c64a4e1",
    "name" : "Delete a folder. - 204",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/5443560124560389407",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2253a896-c15c-4af8-9b39-30299c64a4e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "29891d50-79f4-4b05-bbef-8e3256ab866d",
    "name" : "Get folder information. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/1870047620844779154",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "29891d50-79f4-4b05-bbef-8e3256ab866d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "24e10993-2e48-4e3a-9e1e-e2748a40cf59",
    "name" : "Get folder information. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/8989271009178554470",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2022-07-04T11:54:04.595125Z\",\n  \"lastModifiedDate\" : \"2022-06-25T13:41:04.595151Z\",\n  \"name\" : \"85VGC YoUzKHKOAWJuRwEl4Lknnhhm3IkI6nW988XhGehB\",\n  \"id\" : 1296351142452183420,\n  \"parentId\" : 5293001297067630596\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24e10993-2e48-4e3a-9e1e-e2748a40cf59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "required" : [ "createdDate", "id", "lastModifiedDate", "name", "parentId" ],
            "type" : "object",
            "properties" : {
              "createdDate" : {
                "type" : "string",
                "description" : "The date and time the folder was created.",
                "format" : "dateTime"
              },
              "id" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the folder.",
                "format" : "int64"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "description" : "The date and time the folder was last modified. This may only represent a modification to to the folder metadata itself, not to the contents of the folder.",
                "format" : "dateTime"
              },
              "name" : {
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string",
                "description" : "The name of the folder."
              },
              "parentId" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64"
              }
            },
            "description" : "A folder in the CD Drive that can contain other items such as files or folders."
          }
        }
      }
    }
  }, {
    "id" : "13ec63df-bc30-48b8-8330-d735daebde64",
    "name" : "Create a folder. - 409",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "13ec63df-bc30-48b8-8330-d735daebde64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a6cd1a0a-f057-411e-a02c-de511aaeb1c5",
    "name" : "Create a folder. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a6cd1a0a-f057-411e-a02c-de511aaeb1c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.59508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6b8ab92c-8571-4236-a32d-903f50c8f90d",
    "name" : "Create a folder. - 403",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6b8ab92c-8571-4236-a32d-903f50c8f90d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "5666a5a6-773a-41e3-9e09-678334be3fdf",
    "name" : "Create a folder. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2023-02-13T11:21:04.594905Z\",\n  \"lastModifiedDate\" : \"2023-02-15T10:30:04.594935Z\",\n  \"name\" : \"mgJP3ravFIjSzUWPlzTcfZp4E.ne7AAd.fQP6ViAvGJK01OU0CGBY3w1EEk6bnL7qMfL nN5sw7XWVEKc9E4UgWMM0\",\n  \"id\" : 7997552783009466842,\n  \"parentId\" : 5941407970836305790\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5666a5a6-773a-41e3-9e09-678334be3fdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.595036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "required" : [ "createdDate", "id", "lastModifiedDate", "name", "parentId" ],
            "type" : "object",
            "properties" : {
              "createdDate" : {
                "type" : "string",
                "description" : "The date and time the folder was created.",
                "format" : "dateTime"
              },
              "id" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the folder.",
                "format" : "int64"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "description" : "The date and time the folder was last modified. This may only represent a modification to to the folder metadata itself, not to the contents of the folder.",
                "format" : "dateTime"
              },
              "name" : {
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string",
                "description" : "The name of the folder."
              },
              "parentId" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64"
              }
            },
            "description" : "A folder in the CD Drive that can contain other items such as files or folders."
          }
        }
      }
    }
  }, {
    "id" : "78d400e9-6412-4eff-b479-94cd7f6dcf94",
    "name" : "Download a file. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/7564460422839739527/content",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "78d400e9-6412-4eff-b479-94cd7f6dcf94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "c9abe4de-7ff8-4f20-b05e-9145f27013a7",
    "name" : "Download a file. - 302",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/467384534409449009/content",
      "method" : "GET"
    },
    "response" : {
      "status" : 302
    },
    "uuid" : "c9abe4de-7ff8-4f20-b05e-9145f27013a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "22ea7069-31e8-47b5-8b71-0dcabe22cb32",
    "name" : "Download a file. - 200",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/449779993740649670/content",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "22ea7069-31e8-47b5-8b71-0dcabe22cb32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.59483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "28360901-67cb-4cb7-9a9f-3617bdaa0ce9",
    "name" : "Delete a file. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/9109076486462584681",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "28360901-67cb-4cb7-9a9f-3617bdaa0ce9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "039d9234-2168-4a3b-94e5-5bc875fe001e",
    "name" : "Delete a file. - 204",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/8644097529791474170",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "039d9234-2168-4a3b-94e5-5bc875fe001e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "92d9575c-2df4-4f99-b2c4-9bdad2ebca09",
    "name" : "Get file information. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/6656547263905665587",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "92d9575c-2df4-4f99-b2c4-9bdad2ebca09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "4cf65fd6-b778-4af9-8679-4e56c8c7158e",
    "name" : "Get file information. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/8290841946537897859",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2022-10-06T11:32:04.594595Z\",\n  \"size\" : 8678416330702778475,\n  \"lastModifiedDate\" : \"2022-10-10T14:08:04.594627Z\",\n  \"name\" : \"IpWQkyKK1exvYfiZ4PMICsFdsIbVlm4oIo8.7HAeXCN_cOjTPOcqYLCd2uBSgHwW_eJuO\",\n  \"id\" : 7750354645676639211,\n  \"parentId\" : 4986674292614775090\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cf65fd6-b778-4af9-8679-4e56c8c7158e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "required" : [ "createdDate", "id", "lastModifiedDate", "name", "parentId" ],
            "type" : "object",
            "properties" : {
              "createdDate" : {
                "type" : "string",
                "description" : "The date and time the file was created.",
                "format" : "dateTimed"
              },
              "id" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the file.",
                "format" : "int64"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "description" : "The date and time the file was last modified.",
                "format" : "dateTime"
              },
              "name" : {
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string",
                "description" : "The name of the file including the extension."
              },
              "parentId" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64"
              },
              "size" : {
                "type" : "integer",
                "description" : "The size of the file in bytes.",
                "format" : "int64"
              }
            },
            "description" : "A file in the CD Drive that contains content."
          }
        }
      }
    }
  }, {
    "id" : "7e442efa-8891-4555-95d2-58f86d07a012",
    "name" : "Upload a file. - 413",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 413
    },
    "uuid" : "7e442efa-8891-4555-95d2-58f86d07a012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "97bd28df-2081-41cf-aefa-c7042893a2bf",
    "name" : "Upload a file. - 409",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "97bd28df-2081-41cf-aefa-c7042893a2bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e5843203-c959-449e-b01a-43f27741d55e",
    "name" : "Upload a file. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e5843203-c959-449e-b01a-43f27741d55e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "35898c9d-f4bc-4b5d-8434-6f26fa965e4a",
    "name" : "Upload a file. - 403",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "35898c9d-f4bc-4b5d-8434-6f26fa965e4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a8825ca0-5707-4b0c-8d48-ef2becc985cc",
    "name" : "Upload a file. - 400",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a8825ca0-5707-4b0c-8d48-ef2becc985cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2d9d3204-4748-425c-adb1-fc8fec8b3dbf",
    "name" : "Upload a file. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"createdDate\" : \"2022-05-08T12:03:04.594215Z\",\n  \"size\" : 7525598040550837969,\n  \"lastModifiedDate\" : \"2022-05-30T13:23:04.594254Z\",\n  \"name\" : \"unnTmRUoRWB7lkiaSfNDh3HnbyqAffs5vG3Vn7fFDNlOIQL5zm9o95v32YVOtmj3eS98IufdgJzmNXcnQxoi..w1Grif\",\n  \"id\" : 2729392572868383998,\n  \"parentId\" : 1534838566845859936\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d9d3204-4748-425c-adb1-fc8fec8b3dbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:04.594441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "required" : [ "createdDate", "id", "lastModifiedDate", "name", "parentId" ],
            "type" : "object",
            "properties" : {
              "createdDate" : {
                "type" : "string",
                "description" : "The date and time the file was created.",
                "format" : "dateTimed"
              },
              "id" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the file.",
                "format" : "int64"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "description" : "The date and time the file was last modified.",
                "format" : "dateTime"
              },
              "name" : {
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string",
                "description" : "The name of the file including the extension."
              },
              "parentId" : {
                "minimum" : 0,
                "type" : "integer",
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64"
              },
              "size" : {
                "type" : "integer",
                "description" : "The size of the file in bytes.",
                "format" : "int64"
              }
            },
            "description" : "A file in the CD Drive that contains content."
          }
        }
      }
    }
  } ]
}