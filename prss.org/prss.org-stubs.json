{
  "mappings" : [ {
    "id" : "40a08d14-57d4-373a-92db-1b1676189ff2",
    "name" : "Get the program information document. - 404",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/id/t3ge54u50pmugx9jqcfs8xqksmarpt6ezngd3dd9xqw67g1rnuu04jm61q69g9mov50bqswx1i06vian8xc6b149dbqhbvblmqphei5dk61fxoitx8hwp027h290xf3/5se3/2022-12-11T14%3A51%3A57.30667Z_PI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "40a08d14-57d4-373a-92db-1b1676189ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "fd8e89e8-4715-345a-918f-c31eb66d5ebd",
    "name" : "Get the program information document. - 403",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/id/va8y6sy66zkru4ae6eamw2nt3e0zvu9nnv0e7dp6ili8hwq6v4m1kd2a52v0pupja60sgbhmb5ajhqcbp9k7bqc2909un2u21r97xst640s9xobap/5xwb/2022-07-06T14%3A27%3A57.306552Z_PI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fd8e89e8-4715-345a-918f-c31eb66d5ebd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8ea4ed99-0817-3c0c-b96b-f71c5f6bec96",
    "name" : "Get the program information document. (application/xml)",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/id/ui09897cwufer1fgb5b6t3qp2ner2f9n2kr7pblpyy8tc3uh65biq/s7tq/2022-11-28T16%3A22%3A57.306387Z_PI.xml",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"hyh\"",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "8ea4ed99-0817-3c0c-b96b-f71c5f6bec96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "RadioDNS Program Information (PI) as defined in [ETSI TS 102 818 v3.4.1](https://www.etsi.org/deliver/etsi_ts/102800_102899/102818/03.04.01_60/ts_102818v030401p.pdf) section 7",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f654448f-f4df-3ccc-9a89-4151144c9fe7",
    "name" : "Get the service information document.",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/SI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"mqrvzcluhothdcejj0rri65b8ex741y8j5selc421rk0ydv9dbqp9r261sn1otal4c2ttv5ld35i46bgqfsipwjqac4icfaj07twkgj77t40fq1n86th8ekahnxnrm3jdytgokvz9zx87\"",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "f654448f-f4df-3ccc-9a89-4151144c9fe7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "RadioDNS Service Information (SI) as defined in [ETSI TS 102 818 v3.4.1](https://www.etsi.org/deliver/etsi_ts/102800_102899/102818/03.04.01_60/ts_102818v030401p.pdf) section 6",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "df8fb743-8dcf-34e9-8b5f-23e0fd7016ca",
    "name" : "Get the group information document.",
    "request" : {
      "urlPath" : "/radiodns/spi/3.1/GI.xml",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"si5sblezkjnr58mpypkynwno9busqxno5tn9navntofygjtq78nff5hm7w9v461z1u509om02mfzgqa94bvnqy\"",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "df8fb743-8dcf-34e9-8b5f-23e0fd7016ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "RadioDNS Group Information (GI) as defined in [ETSI TS 102 818 v3.4.1](https://www.etsi.org/deliver/etsi_ts/102800_102899/102818/03.04.01_60/ts_102818v030401p.pdf) section 8",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d29134d0-ac45-398b-8011-ce73075f1cdf",
    "name" : "Returns the spot matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/spots/9068525743284214765",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"kecoukd4gytt20b5q9ssmo6li22sv0zk961d37iuvd8x8iszlpjn5awvg9hiuag3aze6jnahyy\",\n  \"title\" : \"Quaerat occaecati quos dolor.\",\n  \"status\" : 536192224\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d29134d0-ac45-398b-8011-ce73075f1cdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d9a3ae3d-227f-39d4-9c9a-9c1dd171e8bd",
    "name" : "Returns the spot matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/spots/1476498873827351705",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"qe3n4190t3\",\n  \"title\" : \"Totam ullam architecto consequuntur expedita.\",\n  \"status\" : 181495058\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9a3ae3d-227f-39d4-9c9a-9c1dd171e8bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "39f29440-2051-3057-ad1b-b0ce5426eae8",
    "name" : "Returns the spot matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/spots/3796203394387167686",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"duration\" : 1647993446,\n  \"originalFileName\" : \"Dannie Monahan\",\n  \"fileName\" : \"Gregory Davis\",\n  \"createdDate\" : \"2022-04-15T15:26:28.305Z\",\n  \"notes\" : \"q4krxs2eborruifsdglh4h1avgqm76cls12h8b2sxk9qm4unc63rkpnqash3c32k5w5hhozfh5hj99j3a1x9n4scd6jcqpb6u3xt8ipwsdnunt6ckx0pzepz8\",\n  \"fileSize\" : 1585887688273024010,\n  \"lastModifiedDate\" : \"2023-05-23T19:45:58.305Z\",\n  \"name\" : \"Sherron Brown\",\n  \"id\" : 4391667460801233936,\n  \"lastUploadedDate\" : \"2022-06-05T03:41:27.305Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39f29440-2051-3057-ad1b-b0ce5426eae8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An audio spot for insertion.",
            "properties" : {
              "createdDate" : {
                "description" : "The date the spot was created. Generated at creation.",
                "format" : "date-time",
                "type" : "string"
              },
              "duration" : {
                "description" : "The length (duration) of the spot in seconds.",
                "format" : "int32",
                "type" : "integer"
              },
              "fileName" : {
                "description" : "The name of the audio content file. Generated at creation.",
                "type" : "string"
              },
              "fileSize" : {
                "description" : "The size of the audio content file in bytes. Generated at creation.",
                "format" : "int64",
                "type" : "integer"
              },
              "id" : {
                "description" : "The unique ID of the spot. Generated at creation.",
                "format" : "int64",
                "minimum" : 1,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date the spot was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "type" : "string"
              },
              "lastUploadedDate" : {
                "description" : "The date the spot audio file was uploaded. Automatically updated on upload.",
                "format" : "date-time",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the spot",
                "minimum" : 1,
                "type" : "string"
              },
              "notes" : {
                "description" : "Miscellaneous notes about the spot",
                "minimum" : 1,
                "type" : "string"
              },
              "originalFileName" : {
                "description" : "The original name of the audio content file.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5f0c8720-fd81-35ec-a046-d641d89e96a9",
    "name" : "Deletes the spot with the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/spots/38246040875251042",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"ut4clq3a3fy97udrk1tn2xyxzbspqtrba0av2jn2ej9xqbwfubqvliscw9j0vbtb42n5cwozi49l7f1owslzjkot9yhh5z2fq6dhnwuqoab8e87ok3ig1usddnnz7lizip3ggagx1utvo8zy0seq\",\n  \"title\" : \"Assumenda aliquam quidem error et hic occaecati ad.\",\n  \"status\" : 2008418489\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f0c8720-fd81-35ec-a046-d641d89e96a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "7b4b4359-2876-3f28-b422-584ca74982c4",
    "name" : "Deletes the spot with the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/spots/9073157238207369866",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"v9n5zmro8zmpqa0vpbg4m9c3mvg2ejv6pny9isv02b5rqoerma7j0zwi0vsgqzwjaccr1jj3wb\",\n  \"title\" : \"Atque itaque dignissimos est nihil.\",\n  \"status\" : 1135064841\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b4b4359-2876-3f28-b422-584ca74982c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3eefd339-f6fc-34b2-b916-34d279e24178",
    "name" : "Deletes the spot with the given ID. - 200",
    "request" : {
      "urlPath" : "/api/v2/spots/1684628430115758158",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3eefd339-f6fc-34b2-b916-34d279e24178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3dcdbaf3-25be-3070-8bc3-66f197515154",
    "name" : "Creates a new spot.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"a5b1m9ucwktnuv5slo5ui0e\",\n  \"title\" : \"Voluptatum sequi occaecati sit ut.\",\n  \"status\" : 541800430\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dcdbaf3-25be-3070-8bc3-66f197515154",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c09e49a6-121f-305c-ba45-b561657408d1",
    "name" : "Creates a new spot.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"an1pu65agr3\",\n  \"title\" : \"Aut et doloremque voluptas quas maxime assumenda fugit.\",\n  \"status\" : 1178291690\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c09e49a6-121f-305c-ba45-b561657408d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "8e02233b-e603-3a50-8b5b-0c21482bd578",
    "name" : "Creates a new spot.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"o496otnc8fveth68l03uqs3r98ym5ardz7s5lr7w329mpo62g6w86uhxt8efo38cnpmuke358o4cx8yqb1p5af0mpy4pdgwm5t8h6y\",\n  \"title\" : \"Iste qui nihil mollitia repellat amet vel.\",\n  \"status\" : 2007762258\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e02233b-e603-3a50-8b5b-0c21482bd578",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f52fd487-1ff6-3e0e-a9cb-b14596f1ff5b",
    "name" : "Creates a new spot.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"duration\" : 1854446521,\n  \"originalFileName\" : \"Mr. Caterina Skiles\",\n  \"fileName\" : \"Frederica Toy PhD\",\n  \"createdDate\" : \"2022-03-14T18:42:48.304Z\",\n  \"notes\" : \"b5wwkx6b9aaosswr574h93fpms9exnuor52fim9rwo9aayt92w27fy17m9g4buci67dtonkfuilns1ox0sr4ibee5kr0bjq09aknq0d3ha7ekuue006xk6v9pmygico9nnwcoe249o7hsz9gtrrf\",\n  \"fileSize\" : 1644353378933497256,\n  \"lastModifiedDate\" : \"2022-09-16T02:36:38.305Z\",\n  \"name\" : \"Roscoe Schmeler\",\n  \"id\" : 3751990787296000237,\n  \"lastUploadedDate\" : \"2024-02-16T00:52:02.305Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f52fd487-1ff6-3e0e-a9cb-b14596f1ff5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An audio spot for insertion.",
            "properties" : {
              "createdDate" : {
                "description" : "The date the spot was created. Generated at creation.",
                "format" : "date-time",
                "type" : "string"
              },
              "duration" : {
                "description" : "The length (duration) of the spot in seconds.",
                "format" : "int32",
                "type" : "integer"
              },
              "fileName" : {
                "description" : "The name of the audio content file. Generated at creation.",
                "type" : "string"
              },
              "fileSize" : {
                "description" : "The size of the audio content file in bytes. Generated at creation.",
                "format" : "int64",
                "type" : "integer"
              },
              "id" : {
                "description" : "The unique ID of the spot. Generated at creation.",
                "format" : "int64",
                "minimum" : 1,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date the spot was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "type" : "string"
              },
              "lastUploadedDate" : {
                "description" : "The date the spot audio file was uploaded. Automatically updated on upload.",
                "format" : "date-time",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the spot",
                "minimum" : 1,
                "type" : "string"
              },
              "notes" : {
                "description" : "Miscellaneous notes about the spot",
                "minimum" : 1,
                "type" : "string"
              },
              "originalFileName" : {
                "description" : "The original name of the audio content file.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "dd610037-35e5-3ae6-adc0-e083ca2a7dca",
    "name" : "Returns the spots matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"h2smzxquo1taf8qoz46fqf8hfzuyj94o3vbvdxmoex02rix59nq6s2cgm3lhis7q822u49xusaw9a5tdz3cp2y689x25mo4ydg8qqbutvecu5g7osowgcsvwmgj906miesucy1lfbhm2qbpru4yvuullpx6e6710\",\n  \"title\" : \"Placeat quos blanditiis.\",\n  \"status\" : 1020117284\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd610037-35e5-3ae6-adc0-e083ca2a7dca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "a90fa570-f669-339f-b51c-ef5923ebf82e",
    "name" : "Returns the spots matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"g61nw5auxlv6w1yhjea94ayf81bzmk0aktdgh7cpi3tccgze2x\",\n  \"title\" : \"Ex et sunt rem commodi inventore quas.\",\n  \"status\" : 391332754\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a90fa570-f669-339f-b51c-ef5923ebf82e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "a43e8624-9995-3ef5-b036-c4659c146337",
    "name" : "Returns the spots matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/spots",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"duration\" : 301275845,\n  \"originalFileName\" : \"Hui Wisozk\",\n  \"fileName\" : \"Clinton Brakus\",\n  \"createdDate\" : \"2023-04-22T02:53:01.304Z\",\n  \"notes\" : \"vahkm77gzef2oyvpdmmd7yp7cydqxhl12qu51kg8dlh7ei6kih2l00mm9uvt40413yjcwrfbanow85yu4qtmyla9kc4bekyib9pc6sef4a0zjq4jfk6cdz98d4oae40syr2u43xet1px5bb3rz1s6k6nvf7h91tbz03c0zp6egnoct0ujre5n4iq04t1hayr4\",\n  \"fileSize\" : 9144097002875697928,\n  \"lastModifiedDate\" : \"2023-07-01T15:35:40.304Z\",\n  \"name\" : \"Ms. Pei Metz\",\n  \"id\" : 147067880355227385,\n  \"lastUploadedDate\" : \"2023-01-15T13:56:31.304Z\"\n}, {\n  \"duration\" : 182250176,\n  \"originalFileName\" : \"Dr. Karima Lemke\",\n  \"fileName\" : \"Scott Padberg\",\n  \"createdDate\" : \"2023-02-17T10:56:52.304Z\",\n  \"notes\" : \"0aucp60vvxknk1yr4benmld4j2gbilfghw53pxte4j7sn891kyv2qh3xs8xsdc0ncxuj5vp10ybx6as9ogh1j5dtehnh1rhd2rsy03i6\",\n  \"fileSize\" : 3263649592410882801,\n  \"lastModifiedDate\" : \"2023-09-26T10:54:49.304Z\",\n  \"name\" : \"Earnest Hagenes\",\n  \"id\" : 6870101951737876631,\n  \"lastUploadedDate\" : \"2023-05-20T22:45:49.304Z\"\n}, {\n  \"duration\" : 1259410814,\n  \"originalFileName\" : \"Amal Huel\",\n  \"fileName\" : \"Garfield Schinner\",\n  \"createdDate\" : \"2022-04-20T13:51:29.304Z\",\n  \"notes\" : \"3m0r8c08l581b6f33rxnh5jyucxznh8nvfr1rthwchyoh945860wsqy5a7qikm1teegtg\",\n  \"fileSize\" : 1963009550563077294,\n  \"lastModifiedDate\" : \"2022-09-24T13:16:47.304Z\",\n  \"name\" : \"Wally Hartmann\",\n  \"id\" : 4733886192727149569,\n  \"lastUploadedDate\" : \"2024-02-07T20:27:23.304Z\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a43e8624-9995-3ef5-b036-c4659c146337",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Spot"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "69c37906-979c-3d17-976b-e5b664034876",
    "name" : "Returns the spot insertion matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions/2458489087184182874",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"hph4zfh7vd2z4kkjv9js2batfhujjfz0z0xdq8vs5ols0zdcvpe8tswfkmzi62eupmfbvaj8ckl887c00cdp176d63x0sceondp6z43aguv7op57s4xo31ufiqioc7dcid8b2rdyih6gs9khajuk5a6yz130h5lxd03ecfokqto8or6erw3rcelouknk83tbcwkud8ov\",\n  \"title\" : \"Labore sunt quos hic dolorum sapiente ut.\",\n  \"status\" : 2011707704\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69c37906-979c-3d17-976b-e5b664034876",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "7b69991f-2c7d-3bca-bcfb-01feb98d428c",
    "name" : "Returns the spot insertion matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions/5249880824372025321",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"x3luq2ftyl7vywbnpr7wof7zqut9qho26v5tmi49u6bl1qviluk9gno85\",\n  \"title\" : \"Vel reprehenderit cupiditate.\",\n  \"status\" : 1506387183\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b69991f-2c7d-3bca-bcfb-01feb98d428c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d14ca49e-5252-3406-8e2b-6f87a966ed41",
    "name" : "Returns the spot insertion matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions/4391587620042540617",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"duration\" : 891798544,\n  \"cue\" : \"S:000_SPOT\",\n  \"createdDate\" : \"2022-08-25T18:59:26.303Z\",\n  \"endDate\" : \"2020-01-31\",\n  \"customerId\" : 5735208385687079437,\n  \"spots\" : [ 5290604937509116902, 7087951274500697642, 5510494599574916741, 8341193208952111362, 3947624434411765858 ],\n  \"id\" : 7166776488203859563,\n  \"programId\" : 840975971505790756,\n  \"startDate\" : \"2020-01-31\",\n  \"broadcastServiceId\" : 5354645052062544244\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d14ca49e-5252-3406-8e2b-6f87a966ed41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A spot insertion for playing a series of spots when a cue is received during a program.",
            "properties" : {
              "broadcastServiceId" : {
                "description" : "The ID of the broadcast service for the spot insertion.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "createdDate" : {
                "description" : "The date and time the spot insertion was created. Generated at creation.",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "cue" : {
                "description" : "The cue that triggers the spot insertion.",
                "example" : "S:000_SPOT",
                "pattern" : "^S:[A-F0-9]{3,4}_[A-Za-z0-9_-]*$",
                "type" : "string"
              },
              "customerId" : {
                "description" : "The ID of the customer who owns the spot insertion. Set to the logged-in customer at creation.",
                "format" : "int64",
                "minimum" : 0,
                "readOnly" : true,
                "type" : "integer"
              },
              "duration" : {
                "description" : "The duration of the spot insertion.",
                "format" : "int32",
                "type" : "integer"
              },
              "endDate" : {
                "description" : "The date the spot insertion ends. The time will be set to midnight Eastern Time.",
                "example" : "2020-01-31",
                "format" : "date",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the spot insertion. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "readOnly" : true,
                "type" : "integer"
              },
              "programId" : {
                "description" : "The ID of the program for the spot insertion.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "spots" : {
                "description" : "The ordered list of spot IDs to play.",
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              },
              "startDate" : {
                "description" : "The date the spot insertion can start. The time will be set to midnight Eastern Time.",
                "example" : "2020-01-31",
                "format" : "date",
                "type" : "string"
              }
            },
            "required" : [ "programId", "broadcastServiceId", "cue", "duration", "spots", "startDate", "endDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b2990e02-0dec-33fa-bb0e-7dee47e05804",
    "name" : "Deletes the spot insertion with the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions/298130016092183488",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"tgh6gj1lv8z52t7jg70hd9z7h9x5\",\n  \"title\" : \"Corrupti impedit consequuntur nam deserunt animi omnis dicta.\",\n  \"status\" : 738332433\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2990e02-0dec-33fa-bb0e-7dee47e05804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "019037f8-a2c5-3ffb-81f6-ae874c018d3b",
    "name" : "Deletes the spot insertion with the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions/419810181894168567",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"02bi06fyz3tifytrv\",\n  \"title\" : \"Consequatur asperiores nihil ipsum autem placeat quae.\",\n  \"status\" : 660444561\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "019037f8-a2c5-3ffb-81f6-ae874c018d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "3418150c-17ed-3bf6-ad7a-a2209352cede",
    "name" : "Deletes the spot insertion with the given ID. - 200",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions/1087442518705647802",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3418150c-17ed-3bf6-ad7a-a2209352cede",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "c7a154e7-f840-315b-8619-1491256cb66b",
    "name" : "Creates a new spot insertion.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"detail\" : \"n0mwd5\",\n  \"title\" : \"Reiciendis ad corporis explicabo recusandae.\",\n  \"status\" : 764110822\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7a154e7-f840-315b-8619-1491256cb66b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "7ec009e0-bdb2-3a54-aea0-14bcbe93b752",
    "name" : "Creates a new spot insertion.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"bkml3l8ytmnz4rgorb6co0q2n72q0dbixrik2w8ls9eyd8obequub8pzzd921v7dmb75yu4oreqxr3q3f0kf32nems3gsv8onp8k5h5je3sylfehkvthu2gnf31\",\n  \"title\" : \"Rerum eius molestiae qui dolorem ipsum.\",\n  \"status\" : 1898235936\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ec009e0-bdb2-3a54-aea0-14bcbe93b752",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "b75d482a-64fa-35cd-8972-15c0c2862df2",
    "name" : "Creates a new spot insertion.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"ust7x2462tiakcd246g8zhkxaf2zavkx4l975q78kv2ldnb72wowlbf2xp2xysqcoqx0cwi1t6nqy7tox1ta1z8453t2ovyh2voatyxmizt5m35mggb0h0qsrszwwtmsfmn0pfk2di7invmsjuv8muvt6hjpyst6p19sk4j5wq2lfjk66bw0ziaw\",\n  \"title\" : \"Ullam minima labore ipsa quam eaque facere non.\",\n  \"status\" : 1740885986\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b75d482a-64fa-35cd-8972-15c0c2862df2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "cf78b68f-a684-39eb-9325-d5828e5e46b1",
    "name" : "Creates a new spot insertion.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"duration\" : 795259572,\n  \"cue\" : \"S:000_SPOT\",\n  \"createdDate\" : \"2022-04-16T03:58:27.303Z\",\n  \"endDate\" : \"2020-01-31\",\n  \"customerId\" : 2410949527553147198,\n  \"spots\" : [ 3840772898608504358, 797728734659570501, 6240445475419728173, 3048102511724281053, 8708403510832262473, 7529459926107591019 ],\n  \"id\" : 7449451060151764842,\n  \"programId\" : 5975727303475523969,\n  \"startDate\" : \"2020-01-31\",\n  \"broadcastServiceId\" : 8677311351705958092\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf78b68f-a684-39eb-9325-d5828e5e46b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A spot insertion for playing a series of spots when a cue is received during a program.",
            "properties" : {
              "broadcastServiceId" : {
                "description" : "The ID of the broadcast service for the spot insertion.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "createdDate" : {
                "description" : "The date and time the spot insertion was created. Generated at creation.",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "cue" : {
                "description" : "The cue that triggers the spot insertion.",
                "example" : "S:000_SPOT",
                "pattern" : "^S:[A-F0-9]{3,4}_[A-Za-z0-9_-]*$",
                "type" : "string"
              },
              "customerId" : {
                "description" : "The ID of the customer who owns the spot insertion. Set to the logged-in customer at creation.",
                "format" : "int64",
                "minimum" : 0,
                "readOnly" : true,
                "type" : "integer"
              },
              "duration" : {
                "description" : "The duration of the spot insertion.",
                "format" : "int32",
                "type" : "integer"
              },
              "endDate" : {
                "description" : "The date the spot insertion ends. The time will be set to midnight Eastern Time.",
                "example" : "2020-01-31",
                "format" : "date",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the spot insertion. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "readOnly" : true,
                "type" : "integer"
              },
              "programId" : {
                "description" : "The ID of the program for the spot insertion.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "spots" : {
                "description" : "The ordered list of spot IDs to play.",
                "items" : {
                  "format" : "int64",
                  "type" : "integer"
                },
                "type" : "array"
              },
              "startDate" : {
                "description" : "The date the spot insertion can start. The time will be set to midnight Eastern Time.",
                "example" : "2020-01-31",
                "format" : "date",
                "type" : "string"
              }
            },
            "required" : [ "programId", "broadcastServiceId", "cue", "duration", "spots", "startDate", "endDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "cc726f56-31ab-36b1-90c3-735826f12e28",
    "name" : "Returns the spot insertions matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"diqwlp49nw35s79z9rkhnpzmbz1df6pu3kxkv1tt\",\n  \"title\" : \"Ea non dolorem eum consectetur fugiat explicabo.\",\n  \"status\" : 1631180812\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc726f56-31ab-36b1-90c3-735826f12e28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "6c39dd57-43f8-31c1-a275-dcaf02cf6ab4",
    "name" : "Returns the spot insertions matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/spotinsertions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"duration\" : 49232850,\n  \"cue\" : \"S:000_SPOT\",\n  \"createdDate\" : \"2023-09-06T07:18:59.302Z\",\n  \"endDate\" : \"2020-01-31\",\n  \"customerId\" : 2130553274985704649,\n  \"spots\" : [ 336029685198404472, 4674356782286082029 ],\n  \"id\" : 5728485021854462569,\n  \"programId\" : 4328538799912966277,\n  \"startDate\" : \"2020-01-31\",\n  \"broadcastServiceId\" : 854941928677217002\n}, {\n  \"duration\" : 1789787226,\n  \"cue\" : \"S:000_SPOT\",\n  \"createdDate\" : \"2023-10-19T14:39:01.302Z\",\n  \"endDate\" : \"2020-01-31\",\n  \"customerId\" : 2794608403757255768,\n  \"spots\" : [ 551460106589714018, 6268600323233502698, 4541926681677422648, 735900949925800955 ],\n  \"id\" : 9185040355363302973,\n  \"programId\" : 4335775135450220420,\n  \"startDate\" : \"2020-01-31\",\n  \"broadcastServiceId\" : 6927662970969666456\n}, {\n  \"duration\" : 1232212870,\n  \"cue\" : \"S:000_SPOT\",\n  \"createdDate\" : \"2023-10-12T05:52:38.302Z\",\n  \"endDate\" : \"2020-01-31\",\n  \"customerId\" : 4562669771947290726,\n  \"spots\" : [ 1277215176011919523, 592927585072224541, 3272337561240665833, 4614442313280523890, 7693967433168694526, 2263071434690596363 ],\n  \"id\" : 6908824468902150113,\n  \"programId\" : 6782530163567937807,\n  \"startDate\" : \"2020-01-31\",\n  \"broadcastServiceId\" : 5225455044262490563\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c39dd57-43f8-31c1-a275-dcaf02cf6ab4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/SpotInsertion"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "6b49855d-24a0-3060-936a-99b41afdd500",
    "name" : "UNDER DEVELOPMENT - Returns the audio content segment matching the given ID. - 404",
    "request" : {
      "urlPath" : "/api/v2/segments/3330936509162368567/content",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "6b49855d-24a0-3060-936a-99b41afdd500",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "54e2f5c9-ec49-3f99-ab7e-f5f860092e1b",
    "name" : "UNDER DEVELOPMENT - Returns the audio content segment matching the given ID. (application/octet-stream)",
    "request" : {
      "urlPath" : "/api/v2/segments/4886162779245735309/content",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/octet-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"6dn55meygw6g9myuccxfb5wgyhhcd9jlmmexqua0wvowgqdlnkkcg7vanfemiogfgl698r6v2s5upcpoti7zc48zwsrbrzglgr40qeyinrccntn5fetstts6u1y3nmsapnsssdvin7rqiv6n8xwzxw7bk9mirwvm0b\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "54e2f5c9-ec49-3f99-ab7e-f5f860092e1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "0ed0ad65-d4bd-3511-81de-dcf7757dc971",
    "name" : "Returns the segment matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/segments/1164132930439216220",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"wwglm5fzdca1hj7yzskzvv4j8ljq179ch9favq3qd8unnqnldzaqlvub2w8urtycoz1gdlwb07anvxe2bh1sr7fafwszqlggaiu34zvgip5h6e3qajwxwu84dgxb555hb7qbc6vcdll96m6ghw9hhm411p87krfpie0gdzs8b4o65281tpbfs6s9uu\",\n  \"title\" : \"Reprehenderit nesciunt impedit quia ea.\",\n  \"status\" : 922741521\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ed0ad65-d4bd-3511-81de-dcf7757dc971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "9542f08c-562c-3038-b719-b1441558f457",
    "name" : "Returns the segment matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/segments/3918747989885157266",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"v7jrjkbpwbc9ppz3ymb8f8yihryvfe7qbqpgbkkzr6c5qvwc5r7ttspnom0ummmeauci4xxxz6yhf6qj98ha4l3rduiv7\",\n  \"title\" : \"Quae quaerat et deleniti ipsam ex.\",\n  \"status\" : 410444237\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9542f08c-562c-3038-b719-b1441558f457",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "e297c2e1-5083-3f41-a289-dd12586bed9c",
    "name" : "Returns the segment matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/segments/7205176829705481423",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originalFileName\" : \"Jamar Marvin\",\n  \"segmentNumber\" : 900180587,\n  \"fileName\" : \"Wilburn Fadel\",\n  \"createdDate\" : \"2023-05-17T00:47:51.302Z\",\n  \"channels\" : 1915219467,\n  \"inCue\" : \"3uw2zaczn95to92kd4qr0fp4dgvlxvhand1hzaakgikcomqjfp5wsey3shlh121x8lo94pn82gaimt63c9twg2k7j6w6icqjmm8b7cytfwzq2wq07kggi1elev0zvdx0oljmf24upvvpdvwmpefnk4wapctcw1dwf80z4x47lwm2e8flqojmxafsbl32ezz7nxf\",\n  \"fileSize\" : 5427455439563758550,\n  \"lastModifiedDate\" : \"2022-12-25T20:58:07.302Z\",\n  \"outCue\" : \"nr4buzzq\",\n  \"length\" : 1916082561,\n  \"id\" : 4921003061893645994,\n  \"episodeId\" : 8751980325829296031\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e297c2e1-5083-3f41-a289-dd12586bed9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An audio segment in an episode.",
            "properties" : {
              "channels" : {
                "description" : "The number of audio channels in the segment. Generated at creation.",
                "format" : "int32",
                "type" : "integer"
              },
              "createdDate" : {
                "description" : "The date the segment was created. Generated at creation.",
                "format" : "date-time",
                "type" : "string"
              },
              "episodeId" : {
                "description" : "The ID of the episode that owns the segment.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "fileName" : {
                "description" : "The name of the audio content file. Generated at creation.",
                "type" : "string"
              },
              "fileSize" : {
                "description" : "The size of the audio content file in bytes. Generated at creation.",
                "format" : "int64",
                "type" : "integer"
              },
              "id" : {
                "description" : "The unique ID of the segment. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "inCue" : {
                "description" : "The in-cue copy that signals the start of the segment to a board operator.",
                "type" : "string"
              },
              "lastModifiedDate" : {
                "description" : "The date the segment was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "type" : "string"
              },
              "length" : {
                "description" : "The length (duration) of the segment in seconds.",
                "format" : "int32",
                "type" : "integer"
              },
              "originalFileName" : {
                "description" : "The original name of the audio content file.",
                "type" : "string"
              },
              "outCue" : {
                "description" : "The out-cue copy that signals the end of the segment to a board operator.",
                "type" : "string"
              },
              "segmentNumber" : {
                "description" : "The number of the segment in the episode, starting with 1.",
                "format" : "int32",
                "minimum" : 1,
                "type" : "integer"
              }
            },
            "required" : [ "episodeId", "segmentNumber" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "7c0e05a0-5795-3009-862a-b03121f88578",
    "name" : "Deletes the segment with the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/segments/3383118489177894784",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"k7gcpon0ufu5cohd9tgq3v9vqn9h7kh2dgh9atg5oymnhy1jo26n5ap81id4cj090mtfbesz5l6bfc2zsoajyuip9wca9a3w9yq2lvyr0289bs6yfl0f5xrxd06xggxz43bunx7c6bvp4pijmjhdny9gm\",\n  \"title\" : \"Quis ratione iure omnis molestiae quae vitae ut.\",\n  \"status\" : 207399195\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c0e05a0-5795-3009-862a-b03121f88578",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "2d5b1771-0abc-3ac5-93ae-c85677e47ab3",
    "name" : "Deletes the segment with the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/segments/5922579949034615839",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"93k0r5kn75b7gbujc600rth2987fn2l4ndrjp8j8i8aouiibmtwx9h7a83z4ynxi51o2nltzp7s6qymrlkv50v121v4gzt262cjfci9q05d9pxq01bnjccpoohvsqypkuhxsxw8r03qratt4eboszox7s8n8sb6spo1993awb\",\n  \"title\" : \"Corrupti blanditiis atque rem harum.\",\n  \"status\" : 661325632\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d5b1771-0abc-3ac5-93ae-c85677e47ab3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "77647f00-a3c8-3952-84e1-2a7fe525e02f",
    "name" : "Deletes the segment with the given ID. - 200",
    "request" : {
      "urlPath" : "/api/v2/segments/6185565948741678718",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "77647f00-a3c8-3952-84e1-2a7fe525e02f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "52b4f5ce-bf12-3009-909e-c9205627e6cf",
    "name" : "Creates a new segment.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"w0de48my4uyh1tifu7ov9et2\",\n  \"title\" : \"Quod explicabo dignissimos deserunt illum laudantium quod.\",\n  \"status\" : 871826605\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52b4f5ce-bf12-3009-909e-c9205627e6cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "cfcff790-df28-3837-b22f-8221603d2c5d",
    "name" : "Creates a new segment.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"bnlcpl67sfb55msnfsvxz71l4a2v3mz8bj1tmhb68a8ja2vhc2sq7pg4lhuhbegx1fl0rysvopjhfjvrtojtlflgouwyyn9wvpkff5qlzpqo84dvr095g0h3h5mk3187vv4ii29yrc30ijgv\",\n  \"title\" : \"Ex earum libero deleniti et.\",\n  \"status\" : 926976611\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfcff790-df28-3837-b22f-8221603d2c5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "aa498f60-0699-308e-afe6-9df283bc88df",
    "name" : "Creates a new segment.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"andn84s2c65cf2ngvu3pyozk0dm5pqeo8ewjqvocyotr\",\n  \"title\" : \"Facere repellat qui assumenda error dolorem.\",\n  \"status\" : 1650877544\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa498f60-0699-308e-afe6-9df283bc88df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "f38c1f10-d01c-3b5c-be64-a29dcd2db254",
    "name" : "Creates a new segment.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"originalFileName\" : \"Phillip Volkman\",\n  \"segmentNumber\" : 11193446,\n  \"fileName\" : \"Colton Veum\",\n  \"createdDate\" : \"2022-11-25T18:46:22.301Z\",\n  \"channels\" : 960279658,\n  \"inCue\" : \"os5rm7tf2q6s81czk7i1frl3fmlkup7ri0z8zg3mm6lrxed60beem8y3ew255bt19yy6l68tssl0wgvfuwvxkf14o4ai15hc1ekz0gyt76m6tfbxgk7ehdb2\",\n  \"fileSize\" : 1523478898239308291,\n  \"lastModifiedDate\" : \"2022-12-13T14:40:42.301Z\",\n  \"outCue\" : \"f9zlcmbq9s2cfxg1gcl3ycel9h2snc4xujiyzglev0sfyvsv7evnocitmv3cnga\",\n  \"length\" : 1387859060,\n  \"id\" : 4105717628151360445,\n  \"episodeId\" : 5233685460544698273\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f38c1f10-d01c-3b5c-be64-a29dcd2db254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An audio segment in an episode.",
            "properties" : {
              "channels" : {
                "description" : "The number of audio channels in the segment. Generated at creation.",
                "format" : "int32",
                "type" : "integer"
              },
              "createdDate" : {
                "description" : "The date the segment was created. Generated at creation.",
                "format" : "date-time",
                "type" : "string"
              },
              "episodeId" : {
                "description" : "The ID of the episode that owns the segment.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "fileName" : {
                "description" : "The name of the audio content file. Generated at creation.",
                "type" : "string"
              },
              "fileSize" : {
                "description" : "The size of the audio content file in bytes. Generated at creation.",
                "format" : "int64",
                "type" : "integer"
              },
              "id" : {
                "description" : "The unique ID of the segment. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "inCue" : {
                "description" : "The in-cue copy that signals the start of the segment to a board operator.",
                "type" : "string"
              },
              "lastModifiedDate" : {
                "description" : "The date the segment was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "type" : "string"
              },
              "length" : {
                "description" : "The length (duration) of the segment in seconds.",
                "format" : "int32",
                "type" : "integer"
              },
              "originalFileName" : {
                "description" : "The original name of the audio content file.",
                "type" : "string"
              },
              "outCue" : {
                "description" : "The out-cue copy that signals the end of the segment to a board operator.",
                "type" : "string"
              },
              "segmentNumber" : {
                "description" : "The number of the segment in the episode, starting with 1.",
                "format" : "int32",
                "minimum" : 1,
                "type" : "integer"
              }
            },
            "required" : [ "episodeId", "segmentNumber" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "265f88c3-3323-3fa2-9108-5d917dc060bb",
    "name" : "Returns the segments matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "GET",
      "queryParameters" : {
        "episodeId" : {
          "equalTo" : "6559922318277056814"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"pesgxwawwqk1ivrnfgmmxjyraow5n5uj5lbne0hp4dd61dq07s16cmlp686fg4p3xri67jythm19q2v0oijxkl80pm04h9091afucwdgbf61s7il0a4fzl3kuwz8l701xw56i4cy5uq3\",\n  \"title\" : \"Sed aut animi aperiam.\",\n  \"status\" : 154504490\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "265f88c3-3323-3fa2-9108-5d917dc060bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "26c88178-1663-3426-ac89-c18175a260cc",
    "name" : "Returns the segments matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "GET",
      "queryParameters" : {
        "episodeId" : {
          "equalTo" : "2082832711716063899"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"y9hlpzuz0jgpx0jjgnb4cwrtsn846s8ebizhd1oqz2t3p6gltsq4xn5rox3w1dzmhozf6iwockyrcbdfh4dcakx4juu5ocj0cvqq\",\n  \"title\" : \"Nobis modi tempore deleniti facere occaecati.\",\n  \"status\" : 958246234\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26c88178-1663-3426-ac89-c18175a260cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "689ffeee-7120-3936-9968-0da7a0396834",
    "name" : "Returns the segments matching the query parameters.",
    "request" : {
      "urlPath" : "/api/v2/segments",
      "method" : "GET",
      "queryParameters" : {
        "episodeId" : {
          "equalTo" : "1423065527123507681"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"originalFileName\" : \"Lester Boyer\",\n  \"segmentNumber\" : 1093114025,\n  \"fileName\" : \"Dr. Joel Feest\",\n  \"createdDate\" : \"2023-11-03T18:47:09.301Z\",\n  \"channels\" : 652944622,\n  \"inCue\" : \"e541p48v7ix2gzppjwtomdjvn41yux424pk0w2dj0908nvmoeqaap7d2t2b7kig85b7z5m2azvmud2va70s2u\",\n  \"fileSize\" : 1682267576390950729,\n  \"lastModifiedDate\" : \"2022-06-05T18:28:12.301Z\",\n  \"outCue\" : \"x5bt3xafawwrqnxth7304p0tbfxluwno7o083md\",\n  \"length\" : 826133844,\n  \"id\" : 7005776021921714993,\n  \"episodeId\" : 2469886231030856428\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "689ffeee-7120-3936-9968-0da7a0396834",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Segment"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "ff287920-b2a2-3304-bff0-d503fb410747",
    "name" : "Returns the program matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/programs/7434547629926441626",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"z8dppwnkgp0hs3qp0jq6hal580b26iw2w6ow3xvakz6uy6p\",\n  \"title\" : \"Quas non sed facere et ut et impedit.\",\n  \"status\" : 1668410651\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff287920-b2a2-3304-bff0-d503fb410747",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "82304a8d-38b8-3a1d-ab32-c25ee2062545",
    "name" : "Returns the program matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/programs/643173038663730003",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"bcynznqw5abx293pkbzonf2ufydivaaz4h9bog0p1jy56sy48cagvmw3bmm43w60onxsr\",\n  \"title\" : \"Sit molestiae sunt excepturi dolorem.\",\n  \"status\" : 1182412659\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82304a8d-38b8-3a1d-ab32-c25ee2062545",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "84a3efe2-d005-328b-b3d9-f3932d4fe36a",
    "name" : "Returns the program matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/programs/1993072898522016956",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2022-10-15T08:27:47.3Z\",\n  \"lastModifiedDate\" : \"2022-05-09T17:27:13.3Z\",\n  \"customerId\" : 8803372320622213416,\n  \"id\" : 8458019203610278343,\n  \"title\" : \"Incidunt cupiditate quis fuga accusantium odit magnam quidem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84a3efe2-d005-328b-b3d9-f3932d4fe36a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A program that stations can subscribe to to get live or file content.",
            "properties" : {
              "createdDate" : {
                "description" : "The date the segment was created. Generated at creation.",
                "format" : "date-time",
                "type" : "string"
              },
              "customerId" : {
                "description" : "The ID of the customer that owns this program.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "id" : {
                "description" : "The unique ID of the program. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date the program was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "type" : "string"
              },
              "title" : {
                "description" : "The title of the program.",
                "type" : "string"
              }
            },
            "required" : [ "title" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "221f5688-185c-33da-a737-e290b7a36245",
    "name" : "Optimized free-text search for programs using various filters. - 403",
    "request" : {
      "urlPath" : "/api/v2/programs/search",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "221f5688-185c-33da-a737-e290b7a36245",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "2cf31790-1d7b-3a14-bd75-d0283b306b2a",
    "name" : "Optimized free-text search for programs using various filters. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/programs/search",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"createdDate\" : \"2023-12-19T15:24:14.3Z\",\n  \"lastModifiedDate\" : \"2023-11-29T11:26:28.3Z\",\n  \"customerId\" : 2321209915968796422,\n  \"id\" : 1397129359577441754,\n  \"title\" : \"Illo in odit.\"\n}, {\n  \"createdDate\" : \"2023-10-19T13:36:39.3Z\",\n  \"lastModifiedDate\" : \"2022-09-26T23:36:31.3Z\",\n  \"customerId\" : 2244899426213668860,\n  \"id\" : 4510909087324408442,\n  \"title\" : \"Eaque architecto quam.\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cf31790-1d7b-3a14-bd75-d0283b306b2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Program"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "7c465db9-b4b1-32d8-bd48-7c311865c39a",
    "name" : "Returns the piece matching the given ID. - 404",
    "request" : {
      "urlPath" : "/api/v2/pieces/8859782986110355715",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7c465db9-b4b1-32d8-bd48-7c311865c39a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "ed4bcc9b-ae02-35fc-a979-1411df4ce951",
    "name" : "Returns the piece matching the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/pieces/6268089077282064307",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"aa52whbw8ze4hwlnckuwv9llrgqefv6tx9i5gdan4lpqi3uah68ee0kgvzn26rbyhr39rofawuyzl5auat1i9eb8vdhpbnhx3g9bk30c\",\n  \"title\" : \"Nobis molestiae et quod qui sit totam.\",\n  \"status\" : 558660083\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed4bcc9b-ae02-35fc-a979-1411df4ce951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "c1f73e2f-d991-3095-bff7-3fa16e6c6d5f",
    "name" : "Returns the piece matching the given ID. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/pieces/10318769034031319",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastModifiedDate\" : \"2024-01-12T18:52:18.299Z\",\n  \"relativeEndTime\" : 1040242503,\n  \"description\" : \"Reprehenderit debitis perferendis perferendis. Minima esse quo reiciendis voluptatem. Non distinctio rerum. Vitae blanditiis cupiditate quo dolores magnam nulla laboriosam.\",\n  \"episodeId\" : 8773896962757633634,\n  \"fullDescription\" : \"Amet fugit omnis mollitia. Est suscipit perferendis. Adipisci corporis ullam. Iusto debitis atque quia iure eos quos. Iusto dolores voluptatibus sit est corrupti.\",\n  \"title\" : \"Voluptas voluptatem reprehenderit qui\",\n  \"imageFileSize\" : 4063598877793108984,\n  \"relativeStartTime\" : 416900580,\n  \"segmentNumber\" : 1561415017,\n  \"imageCdDriveUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremymouton/128.jpg\",\n  \"contributor\" : \"gthrsp6b64y1z\",\n  \"createdDate\" : \"2023-02-10T07:08:15.3Z\",\n  \"imageOriginalFileName\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/weglov/128.jpg\",\n  \"imageFileName\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/teddyzetterlund/128.jpg\",\n  \"id\" : 1198982442941003658\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1f73e2f-d991-3095-bff7-3fa16e6c6d5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The metadata about a \"piece\" which may be a story, song, report, etc.",
            "properties" : {
              "contributor" : {
                "description" : "The artist or contributor name.",
                "maxLength" : 26,
                "type" : "string"
              },
              "createdDate" : {
                "description" : "The date the piece was created. Generated at creation.",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "The short description of the piece.",
                "maxLength" : 180,
                "type" : "string"
              },
              "episodeId" : {
                "description" : "The ID of the episode that owns the piece.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "fullDescription" : {
                "description" : "The long description of the piece.",
                "maxLength" : 1200,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the piece. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "readOnly" : true,
                "type" : "integer"
              },
              "imageCdDriveUri" : {
                "description" : "The URI to the piece image content in CD Drive. Format should be 'cddrive:id:{value}' or 'cddrive://{path}'. This property is only used on modification and is not returned.",
                "type" : "string"
              },
              "imageFileName" : {
                "description" : "The name of the piece image file. Generated at creation.",
                "type" : "string"
              },
              "imageFileSize" : {
                "description" : "The size of the piece image file in bytes. Generated at creation.",
                "format" : "int64",
                "type" : "integer"
              },
              "imageOriginalFileName" : {
                "description" : "The user's original name of the piece image file.",
                "type" : "string"
              },
              "lastModifiedDate" : {
                "description" : "The date the piece was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "relativeEndTime" : {
                "description" : "Seconds relative to the start of the episode.",
                "format" : "int32",
                "type" : "integer"
              },
              "relativeStartTime" : {
                "description" : "Seconds relative to the start of the episode.",
                "format" : "int32",
                "type" : "integer"
              },
              "segmentNumber" : {
                "description" : "The number of the segment that this piece is in, starting with 1. This is an optional field but it can be used to provide more detail by linking the piece to a specific audio segment.",
                "format" : "int32",
                "minimum" : 1,
                "type" : "integer"
              },
              "title" : {
                "description" : "The human readable title of the piece that is normally displayed on an end user's device.",
                "maxLength" : 37,
                "type" : "string"
              }
            },
            "required" : [ "episodeId", "title", "relativeStartTime", "relativeEndTime" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "022d434b-0cd0-362b-b79f-37269f0677e4",
    "name" : "Deletes the piece with the given ID. - 404",
    "request" : {
      "urlPath" : "/api/v2/pieces/8178017969618005889",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "022d434b-0cd0-362b-b79f-37269f0677e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "f1452120-9542-3e90-8249-467fbf687dd9",
    "name" : "Deletes the piece with the given ID. - 403",
    "request" : {
      "urlPath" : "/api/v2/pieces/1938462210734971699",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f1452120-9542-3e90-8249-467fbf687dd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "ed573a7a-5a84-3e60-a905-4d11be474a49",
    "name" : "Deletes the piece with the given ID. - 200",
    "request" : {
      "urlPath" : "/api/v2/pieces/5578426869170142466",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ed573a7a-5a84-3e60-a905-4d11be474a49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "72146785-30cd-34db-acb2-7f526ecd890d",
    "name" : "Create a new piece. - 403",
    "request" : {
      "urlPath" : "/api/v2/pieces",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "72146785-30cd-34db-acb2-7f526ecd890d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "e1103b27-6bcf-30d7-8fc3-2e236af0f070",
    "name" : "Create a new piece. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/pieces",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"2q7wrp7spqabjgzp6455t0v91tt81zm4uwvz6070zlbwe3d41hm3nmr00bmg2mmayv7o33qks2iwls8z28zowcs4tcsq7h8ick1o18ilhpnw5iktnmji8h3wo\",\n  \"title\" : \"Qui et excepturi ipsam nobis consequatur.\",\n  \"status\" : 395149163\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1103b27-6bcf-30d7-8fc3-2e236af0f070",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "67553cd6-4284-3ea2-8491-779faf1f9275",
    "name" : "Create a new piece. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/pieces",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"lastModifiedDate\" : \"2022-07-24T13:11:35.299Z\",\n  \"relativeEndTime\" : 1534307887,\n  \"description\" : \"Excepturi ea saepe ducimus repudiandae. Impedit fugit quas. Quia quia debitis. Enim et minima repudiandae animi officia autem. Aut qui omnis dolor perspiciatis pariatur maiores.\",\n  \"episodeId\" : 405883222223570593,\n  \"fullDescription\" : \"Placeat id id dolorem necessitatibus accusantium eum iusto. Et architecto tenetur nostrum. Cumque porro facere ut.\",\n  \"title\" : \"Delectus autem voluptate laboriosam.\",\n  \"imageFileSize\" : 5538492037168289844,\n  \"relativeStartTime\" : 2104658332,\n  \"segmentNumber\" : 1018693476,\n  \"imageCdDriveUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/kennyadr/128.jpg\",\n  \"contributor\" : \"b80qh\",\n  \"createdDate\" : \"2022-11-05T11:18:49.299Z\",\n  \"imageOriginalFileName\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/dss49/128.jpg\",\n  \"imageFileName\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/stevedesigner/128.jpg\",\n  \"id\" : 8997376279793020696\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67553cd6-4284-3ea2-8491-779faf1f9275",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The metadata about a \"piece\" which may be a story, song, report, etc.",
            "properties" : {
              "contributor" : {
                "description" : "The artist or contributor name.",
                "maxLength" : 26,
                "type" : "string"
              },
              "createdDate" : {
                "description" : "The date the piece was created. Generated at creation.",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "The short description of the piece.",
                "maxLength" : 180,
                "type" : "string"
              },
              "episodeId" : {
                "description" : "The ID of the episode that owns the piece.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "fullDescription" : {
                "description" : "The long description of the piece.",
                "maxLength" : 1200,
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the piece. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "readOnly" : true,
                "type" : "integer"
              },
              "imageCdDriveUri" : {
                "description" : "The URI to the piece image content in CD Drive. Format should be 'cddrive:id:{value}' or 'cddrive://{path}'. This property is only used on modification and is not returned.",
                "type" : "string"
              },
              "imageFileName" : {
                "description" : "The name of the piece image file. Generated at creation.",
                "type" : "string"
              },
              "imageFileSize" : {
                "description" : "The size of the piece image file in bytes. Generated at creation.",
                "format" : "int64",
                "type" : "integer"
              },
              "imageOriginalFileName" : {
                "description" : "The user's original name of the piece image file.",
                "type" : "string"
              },
              "lastModifiedDate" : {
                "description" : "The date the piece was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "relativeEndTime" : {
                "description" : "Seconds relative to the start of the episode.",
                "format" : "int32",
                "type" : "integer"
              },
              "relativeStartTime" : {
                "description" : "Seconds relative to the start of the episode.",
                "format" : "int32",
                "type" : "integer"
              },
              "segmentNumber" : {
                "description" : "The number of the segment that this piece is in, starting with 1. This is an optional field but it can be used to provide more detail by linking the piece to a specific audio segment.",
                "format" : "int32",
                "minimum" : 1,
                "type" : "integer"
              },
              "title" : {
                "description" : "The human readable title of the piece that is normally displayed on an end user's device.",
                "maxLength" : 37,
                "type" : "string"
              }
            },
            "required" : [ "episodeId", "title", "relativeStartTime", "relativeEndTime" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "dace34ac-11c8-3e6c-82ee-05fedb9fbd02",
    "name" : "Returns the pieces matching the query parameters. - 404",
    "request" : {
      "urlPath" : "/api/v2/pieces",
      "method" : "GET",
      "queryParameters" : {
        "episodeId" : {
          "equalTo" : "6730913311487629361"
        }
      }
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "dace34ac-11c8-3e6c-82ee-05fedb9fbd02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "20c46721-c4be-3aaf-8e12-d81756537958",
    "name" : "Returns the pieces matching the query parameters. - 403",
    "request" : {
      "urlPath" : "/api/v2/pieces",
      "method" : "GET",
      "queryParameters" : {
        "episodeId" : {
          "equalTo" : "6865351502389202502"
        }
      }
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "20c46721-c4be-3aaf-8e12-d81756537958",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "ca288a41-4db2-331e-be4c-b8732e58e7aa",
    "name" : "Returns the pieces matching the query parameters. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/pieces",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "episodeId" : {
          "equalTo" : "1561067930787067472"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"lastModifiedDate\" : \"2023-11-23T16:33:57.299Z\",\n  \"relativeEndTime\" : 423772026,\n  \"description\" : \"Qui sit molestiae eos non neque atque. Aut voluptas qui assumenda nobis accusantium qui. Quia id reiciendis. Mollitia rem saepe quia aliquid. Porro at natus laboriosam.\",\n  \"episodeId\" : 6055481599256937699,\n  \"fullDescription\" : \"Exercitationem est quas et quae praesentium qui. Similique perferendis cupiditate fugit pariatur aut eum. Aut ea tempora soluta quia nobis voluptas laudantium. Possimus nihil culpa tenetur.\",\n  \"title\" : \"Et nam inventore eligendi possimus mo\",\n  \"imageFileSize\" : 6637635268770580824,\n  \"relativeStartTime\" : 1096127203,\n  \"segmentNumber\" : 1270212767,\n  \"imageCdDriveUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/tbakdesigns/128.jpg\",\n  \"contributor\" : \"pwyjbghrxf04v7n9\",\n  \"createdDate\" : \"2022-04-10T13:14:27.299Z\",\n  \"imageOriginalFileName\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/pechkinator/128.jpg\",\n  \"imageFileName\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg\",\n  \"id\" : 2701013602040326221\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca288a41-4db2-331e-be4c-b8732e58e7aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Piece"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "9d8b28c3-efab-39a1-9e19-2fb34796654c",
    "name" : "Get an EPG batch operation. - 404",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch/583118826621935075",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9d8b28c3-efab-39a1-9e19-2fb34796654c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "1a4adb6b-d6e1-3915-b940-2c1ef23666a0",
    "name" : "Get an EPG batch operation. - 403",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch/2984192867150310602",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1a4adb6b-d6e1-3915-b940-2c1ef23666a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "3866084c-e835-3bd9-b1ab-6282e61dd70c",
    "name" : "Get an EPG batch operation. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch/6743578470277967252",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2022-07-22T16:35:57.298584Z\",\n  \"format\" : \"radiodns\",\n  \"name\" : \"Sol Romaguera\",\n  \"id\" : 7649583814864989956,\n  \"program\" : {\n    \"airDate\" : \"2022-04-07T16:25:57.298669Z\",\n    \"title\" : \"Consequatur inventore sint.\"\n  },\n  \"message\" : \"Voluptatibus autem aut illum omnis recusandae. Rerum molestiae in nisi vero eligendi et et. Ipsa minima quo sit soluta. Sed non quis ut distinctio est.\",\n  \"uri\" : \"https://web.example.mocklab.io/796987\",\n  \"finishedDate\" : \"2023-01-22T16:02:57.298815Z\",\n  \"status\" : \"successful\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3866084c-e835-3bd9-b1ab-6282e61dd70c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An electronic program guide (EPG) batch operation to create or update metadata on one or more guide programs.",
            "properties" : {
              "createdDate" : {
                "description" : "The date and time the batch was created.",
                "format" : "dateTime",
                "type" : "string"
              },
              "finishedDate" : {
                "description" : "The date and time the batch finished (either successful or failed).",
                "format" : "dateTime",
                "type" : "string"
              },
              "format" : {
                "description" : "The format of the metadata file defining the create or update actions to be performed on one or more EPG programs.",
                "enum" : [ "radiodns" ],
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the batch.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "message" : {
                "description" : "The human readable success or failure message.",
                "type" : "string"
              },
              "name" : {
                "description" : "The optional name of the batch for human reference.",
                "type" : "string"
              },
              "program" : {
                "description" : "The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly. If this is specified, it will overrite the value specfified in the metadata file. If this is specified, the metadata file should only contain one program.",
                "properties" : {
                  "airDate" : {
                    "description" : "The airDate for the program in ISO 8601 format.",
                    "format" : "dateTime",
                    "type" : "string"
                  },
                  "title" : {
                    "description" : "The title of the program.",
                    "type" : "string"
                  }
                },
                "required" : [ "title", "airDate" ],
                "type" : "object"
              },
              "status" : {
                "description" : "The current processing status.",
                "enum" : [ "queued", "processing", "failed", "successful" ],
                "type" : "string"
              },
              "uri" : {
                "description" : "The URI to the metadata file defining the batch creates/updates.",
                "format" : "uri",
                "type" : "string"
              }
            },
            "required" : [ "id", "status", "format", "createdDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "3d376c32-5020-3bb9-aaaf-44ddc5c23d52",
    "name" : "Create a batch operation on EPG information.",
    "request" : {
      "urlPath" : "/api/v2/metapub/program-information/batch",
      "method" : "POST"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"createdDate\" : \"2022-09-30T13:56:57.298106Z\",\n  \"format\" : \"radiodns\",\n  \"name\" : \"Petronila Green\",\n  \"id\" : 330207000705716763,\n  \"program\" : {\n    \"airDate\" : \"2022-10-17T13:48:57.29821Z\",\n    \"title\" : \"Dolores odit quos sed soluta autem molestias.\"\n  },\n  \"message\" : \"Dignissimos qui delectus impedit labore vero voluptas. Debitis nihil et commodi laboriosam doloribus eveniet aliquam. Laboriosam sit quibusdam ipsum cum.\",\n  \"uri\" : \"https://web.example.mocklab.io/616022\",\n  \"finishedDate\" : \"2022-06-03T13:33:57.298391Z\",\n  \"status\" : \"processing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d376c32-5020-3bb9-aaaf-44ddc5c23d52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An electronic program guide (EPG) batch operation to create or update metadata on one or more guide programs.",
            "properties" : {
              "createdDate" : {
                "description" : "The date and time the batch was created.",
                "format" : "dateTime",
                "type" : "string"
              },
              "finishedDate" : {
                "description" : "The date and time the batch finished (either successful or failed).",
                "format" : "dateTime",
                "type" : "string"
              },
              "format" : {
                "description" : "The format of the metadata file defining the create or update actions to be performed on one or more EPG programs.",
                "enum" : [ "radiodns" ],
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the batch.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "message" : {
                "description" : "The human readable success or failure message.",
                "type" : "string"
              },
              "name" : {
                "description" : "The optional name of the batch for human reference.",
                "type" : "string"
              },
              "program" : {
                "description" : "The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly. If this is specified, it will overrite the value specfified in the metadata file. If this is specified, the metadata file should only contain one program.",
                "properties" : {
                  "airDate" : {
                    "description" : "The airDate for the program in ISO 8601 format.",
                    "format" : "dateTime",
                    "type" : "string"
                  },
                  "title" : {
                    "description" : "The title of the program.",
                    "type" : "string"
                  }
                },
                "required" : [ "title", "airDate" ],
                "type" : "object"
              },
              "status" : {
                "description" : "The current processing status.",
                "enum" : [ "queued", "processing", "failed", "successful" ],
                "type" : "string"
              },
              "uri" : {
                "description" : "The URI to the metadata file defining the batch creates/updates.",
                "format" : "uri",
                "type" : "string"
              }
            },
            "required" : [ "id", "status", "format", "createdDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "f892c33f-7266-3a06-93b6-52243ed5a007",
    "name" : "Returns the episode matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/episodes/64651836004576934",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"wy801mhzf27ddiawkvkvx1ajet8hdo6hj22oudh0nc9ozd5okht2d3mwa26e7hdzkunoafu5tm0xuwuh0p4ouywik3bbrsnbskc55tedjzjrsz3epco58zx13sm8kxpiqdc73mv54pbs2zdftqxd6k7qvoflg81becgmnlgwpdnejuxpy6o8az\",\n  \"title\" : \"Velit velit dolorem sunt.\",\n  \"status\" : 907593968\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f892c33f-7266-3a06-93b6-52243ed5a007",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "62826aa1-d103-3e3b-afa8-3a7c45d45632",
    "name" : "Returns the episode matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/episodes/3509922054611975345",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"it54d92p4roelgcqaojnhnjcbtpwhv1cvahip67anov\",\n  \"title\" : \"In sunt et.\",\n  \"status\" : 43727840\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62826aa1-d103-3e3b-afa8-3a7c45d45632",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "42e2dd28-da16-3b46-a0e2-0070ffee1a51",
    "name" : "Returns the episode matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/episodes/3623395214839231285",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"endAirDate\" : \"2022-03-17T19:47:21.297Z\",\n  \"beginTransmissionDate\" : \"2024-03-04T06:26:12.297Z\",\n  \"createdDate\" : \"2023-05-04T17:07:31.297Z\",\n  \"lastModifiedDate\" : \"2023-10-13T04:11:07.297Z\",\n  \"customerId\" : 7779085234415432381,\n  \"id\" : 4992007526760880077,\n  \"beginAirDate\" : \"2023-12-21T23:11:10.297Z\",\n  \"title\" : \"Neque maiores enim vitae.\",\n  \"endTransmissionDate\" : \"2022-03-13T00:48:29.297Z\",\n  \"programId\" : 4046528306682352931\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42e2dd28-da16-3b46-a0e2-0070ffee1a51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An episode that defines a specific air date for an instance of a program.",
            "properties" : {
              "beginAirDate" : {
                "description" : "The date the air window opens for the episode.",
                "format" : "date-time",
                "type" : "string"
              },
              "beginTransmissionDate" : {
                "description" : "The date the live stream begins for the episode. Only set for live and LWSF episodes.",
                "format" : "date-time",
                "type" : "string"
              },
              "createdDate" : {
                "description" : "The date the segment was created. Generated at creation.",
                "format" : "date-time",
                "type" : "string"
              },
              "customerId" : {
                "description" : "The ID of the customer that owns this programs.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "endAirDate" : {
                "description" : "The date the air window closes for the episode.",
                "format" : "date-time",
                "type" : "string"
              },
              "endTransmissionDate" : {
                "description" : "The date the live stream ends for the episode. Only set for live and LWSF episodes.",
                "format" : "date-time",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the episode. Generated at creation.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date the segment was last modified/updated. Automatically updated on any write operation.",
                "format" : "date-time",
                "type" : "string"
              },
              "programId" : {
                "description" : "The ID of the program that owns this episode.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "title" : {
                "description" : "The title of the program.",
                "type" : "string"
              }
            },
            "required" : [ "title", "programId", "beginAirDate", "endAirDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "7526198b-88f7-3441-b2b1-2026fb0c4de3",
    "name" : "Gets episodes matching the given criteria.",
    "request" : {
      "urlPath" : "/api/v2/episodes",
      "method" : "GET",
      "queryParameters" : {
        "programId" : {
          "equalTo" : "1574725727967741621"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"jvetp8datlemctwlmpvrkky8qd17v7ahfl6artlqlu3p6pjytsqi1ew14kja4md3aq1d5hd59rw9u67yd8eqtiszypze0invnz7a8d7rnxgvjr1rclqykjsqqc983q6xea3yzpd4huotiipbo83u96e67hn32zw44wd3\",\n  \"title\" : \"Eum assumenda voluptatem quo sunt ut commodi commodi.\",\n  \"status\" : 367574486\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7526198b-88f7-3441-b2b1-2026fb0c4de3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "36f5c11e-25b0-387b-a652-f0f94b51348c",
    "name" : "Gets episodes matching the given criteria.",
    "request" : {
      "urlPath" : "/api/v2/episodes",
      "method" : "GET",
      "queryParameters" : {
        "programId" : {
          "equalTo" : "4920550603041664027"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"c39xeifsqe0gpinzpz6z1elieax81bei06pwyl7grz3rvt9p6kd5efn3mqmt9dphfnspuagmfrlngn2esxlhr9gfcm\",\n  \"title\" : \"In et sit minima.\",\n  \"status\" : 1468315886\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36f5c11e-25b0-387b-a652-f0f94b51348c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "994e8b52-0770-366c-8178-b294989339fe",
    "name" : "Gets episodes matching the given criteria.",
    "request" : {
      "urlPath" : "/api/v2/episodes",
      "method" : "GET",
      "queryParameters" : {
        "programId" : {
          "equalTo" : "4955826027012217033"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"f5etyuixgi5yc0o9jh6ningw326vn24eddj5o1ou3xvomu6ciaczqu6910hscqq47usm4tuxc0t03eozxylsqox3ygjbkuuw66gqwlo6\",\n  \"title\" : \"Ut aperiam soluta qui reiciendis eligendi non dolorem.\",\n  \"status\" : 2060527822\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "994e8b52-0770-366c-8178-b294989339fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "9ae0aac1-ade0-340f-b670-6a563a894588",
    "name" : "Gets episodes matching the given criteria.",
    "request" : {
      "urlPath" : "/api/v2/episodes",
      "method" : "GET",
      "queryParameters" : {
        "programId" : {
          "equalTo" : "2237254787752014447"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"endAirDate\" : \"2023-01-21T18:13:58.296Z\",\n  \"beginTransmissionDate\" : \"2023-10-26T04:33:00.296Z\",\n  \"createdDate\" : \"2022-03-10T19:44:21.296Z\",\n  \"lastModifiedDate\" : \"2023-08-04T07:34:55.296Z\",\n  \"customerId\" : 4250369383538442411,\n  \"id\" : 7483224599780901680,\n  \"beginAirDate\" : \"2023-07-02T06:12:50.297Z\",\n  \"title\" : \"Id eaque consequatur aut voluptas qui.\",\n  \"endTransmissionDate\" : \"2022-10-19T09:34:51.297Z\",\n  \"programId\" : 6588000399223775902\n}, {\n  \"endAirDate\" : \"2022-07-12T03:45:51.297Z\",\n  \"beginTransmissionDate\" : \"2023-03-16T19:41:03.297Z\",\n  \"createdDate\" : \"2022-07-31T16:29:23.297Z\",\n  \"lastModifiedDate\" : \"2023-06-23T18:55:19.297Z\",\n  \"customerId\" : 3274975841069466430,\n  \"id\" : 1995203935876779131,\n  \"beginAirDate\" : \"2022-07-31T16:38:59.297Z\",\n  \"title\" : \"Dolorem et autem.\",\n  \"endTransmissionDate\" : \"2023-09-13T00:00:08.297Z\",\n  \"programId\" : 116722788549892973\n}, {\n  \"endAirDate\" : \"2023-08-21T09:06:09.297Z\",\n  \"beginTransmissionDate\" : \"2023-07-30T13:23:13.297Z\",\n  \"createdDate\" : \"2022-04-29T12:48:47.297Z\",\n  \"lastModifiedDate\" : \"2023-11-27T19:09:55.297Z\",\n  \"customerId\" : 3294538242406159628,\n  \"id\" : 6012206876610658747,\n  \"beginAirDate\" : \"2022-09-20T02:26:11.297Z\",\n  \"title\" : \"Similique quibusdam aut accusantium natus.\",\n  \"endTransmissionDate\" : \"2023-11-03T05:11:00.297Z\",\n  \"programId\" : 4394079937320253482\n}, {\n  \"endAirDate\" : \"2023-10-01T16:57:23.297Z\",\n  \"beginTransmissionDate\" : \"2022-05-24T07:57:07.297Z\",\n  \"createdDate\" : \"2023-08-24T01:43:09.297Z\",\n  \"lastModifiedDate\" : \"2023-07-14T14:11:04.297Z\",\n  \"customerId\" : 1467905396446803342,\n  \"id\" : 6496369053127932418,\n  \"beginAirDate\" : \"2023-06-29T22:37:49.297Z\",\n  \"title\" : \"Qui temporibus nisi consequatur aut vel.\",\n  \"endTransmissionDate\" : \"2023-03-14T07:05:54.297Z\",\n  \"programId\" : 7426692689846017553\n}, {\n  \"endAirDate\" : \"2023-04-13T07:25:57.297Z\",\n  \"beginTransmissionDate\" : \"2023-07-01T01:04:48.297Z\",\n  \"createdDate\" : \"2023-04-26T12:29:05.297Z\",\n  \"lastModifiedDate\" : \"2022-06-28T12:37:39.297Z\",\n  \"customerId\" : 1771515016980596800,\n  \"id\" : 5783637862583926924,\n  \"beginAirDate\" : \"2023-07-29T00:36:02.297Z\",\n  \"title\" : \"Deleniti nesciunt eum.\",\n  \"endTransmissionDate\" : \"2022-09-02T11:46:42.297Z\",\n  \"programId\" : 4462860559496130552\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ae0aac1-ade0-340f-b670-6a563a894588",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Episode"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "0ea7220a-a8b6-3924-a3aa-c6dfca2122b0",
    "name" : "Get the items in the folder. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/963923725515938161/items",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0ea7220a-a8b6-3924-a3aa-c6dfca2122b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "6b09986e-4a3a-3932-a4f8-2743a698aad5",
    "name" : "Get the items in the folder. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/3557375306886397446/items",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"entries\" : [ {\n    \"name\" : \"Kelvin Kutch Jr.\",\n    \"id\" : 2056738171807857765,\n    \"type\" : \"file\"\n  }, {\n    \"name\" : \"Jonah Kunze\",\n    \"id\" : 3942770981806779123,\n    \"type\" : \"file\"\n  } ],\n  \"offset\" : 555464189,\n  \"limit\" : 1688123786,\n  \"totalCount\" : 1614484105\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b09986e-4a3a-3932-a4f8-2743a698aad5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "entries" : {
                "description" : "The item instances.",
                "items" : {
                  "$ref" : "#/components/schemas/CDDriveItem"
                },
                "type" : "array"
              },
              "limit" : {
                "description" : "The maximum number of items to return.",
                "format" : "int32",
                "type" : "integer"
              },
              "offset" : {
                "description" : "The start offset into the items.",
                "format" : "int32",
                "type" : "integer"
              },
              "totalCount" : {
                "description" : "The total number of entries available.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "b212972d-876c-3603-8eda-31d835880da7",
    "name" : "UNDER DEVELOPMENT - Get folder information. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/3882938270877635628",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b212972d-876c-3603-8eda-31d835880da7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "455761bf-b302-35e6-bb9e-a78869d2c84b",
    "name" : "UNDER DEVELOPMENT - Get folder information. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/6636160422566765652",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2022-11-08T16:27:57.296521Z\",\n  \"lastModifiedDate\" : \"2022-10-07T14:21:57.296547Z\",\n  \"name\" : \"x6wCoG5W\",\n  \"id\" : 6844906778947904492,\n  \"parentId\" : 1515982715497013715\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "455761bf-b302-35e6-bb9e-a78869d2c84b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A folder in the CD Drive that can contain other items such as files or folders.",
            "properties" : {
              "createdDate" : {
                "description" : "The date and time the folder was created.",
                "format" : "dateTime",
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the folder.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date and time the folder was last modified. This may only represent a modification to to the folder metadata itself, not to the contents of the folder.",
                "format" : "dateTime",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the folder.",
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string"
              },
              "parentId" : {
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              }
            },
            "required" : [ "name", "parentId", "id", "createdDate", "lastModifiedDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "66d853bc-bbc2-3608-91ed-76e4538507c5",
    "name" : "UNDER DEVELOPMENT - Delete a folder. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/879368304614960099",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "66d853bc-bbc2-3608-91ed-76e4538507c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "2a5ed7fa-e4dd-3a54-9e49-0b26b911578b",
    "name" : "UNDER DEVELOPMENT - Delete a folder. - 204",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders/6362895862229335694",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2a5ed7fa-e4dd-3a54-9e49-0b26b911578b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "54a722f1-e0c5-34a3-9d8a-8f19119132dc",
    "name" : "Create a folder. - 409",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "54a722f1-e0c5-34a3-9d8a-8f19119132dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "16ee3b1b-96ea-3fe8-886e-c44ff86cc4c0",
    "name" : "Create a folder. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "16ee3b1b-96ea-3fe8-886e-c44ff86cc4c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "e3c189f9-5276-3f28-ae84-7edbb5c1b50b",
    "name" : "Create a folder. - 403",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e3c189f9-5276-3f28-ae84-7edbb5c1b50b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "78a23ade-3f03-3717-b9a0-0aad39f4b839",
    "name" : "Create a folder. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/folders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"createdDate\" : \"2022-11-26T14:32:57.296247Z\",\n  \"lastModifiedDate\" : \"2023-02-20T15:26:57.296276Z\",\n  \"name\" : \"cb9Ln3V_6nLFqgTpxD.25VcaDyJdtHPZoX GlxOFe4klj3fVEWrD3xz3Rwx3iw28TUbQNJ.JEKDpT7g8FNZzeong3Kj1J1YsWK\",\n  \"id\" : 2751718502264602347,\n  \"parentId\" : 5670836058324532916\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78a23ade-3f03-3717-b9a0-0aad39f4b839",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A folder in the CD Drive that can contain other items such as files or folders.",
            "properties" : {
              "createdDate" : {
                "description" : "The date and time the folder was created.",
                "format" : "dateTime",
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the folder.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date and time the folder was last modified. This may only represent a modification to to the folder metadata itself, not to the contents of the folder.",
                "format" : "dateTime",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the folder.",
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string"
              },
              "parentId" : {
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              }
            },
            "required" : [ "name", "parentId", "id", "createdDate", "lastModifiedDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "2966d88e-0a46-3279-abf8-3cb2dabfe820",
    "name" : "UNDER DEVELOPMENT - Download a file. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/4893824925509787672/content",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "2966d88e-0a46-3279-abf8-3cb2dabfe820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "059d74a3-8bb3-3d11-bebe-4599d0c41179",
    "name" : "UNDER DEVELOPMENT - Download a file. - 302",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/3588951173712983568/content",
      "method" : "GET"
    },
    "response" : {
      "status" : 302
    },
    "uuid" : "059d74a3-8bb3-3d11-bebe-4599d0c41179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "ddc86df6-f490-3a7c-9d2c-ef6bad64d4c1",
    "name" : "UNDER DEVELOPMENT - Download a file. (application/octet-stream)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/6201935718853645428/content",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/octet-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"kn43voh7wjdu84oajf4scxqdxhsal8esjupyjqgtl0lsaxk2vz3iacu7cm0xh1jfdlcmweub2d5t52ooqdk6eycvl9tsse0scn3k84l193plmt1a\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "ddc86df6-f490-3a7c-9d2c-ef6bad64d4c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "13a7a023-2052-3a2b-a31e-8919c575f773",
    "name" : "Get file information. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/803618503167465337",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "13a7a023-2052-3a2b-a31e-8919c575f773",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "6285759e-404e-3933-92d1-7c66c9d8683c",
    "name" : "Get file information. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/3533689175430100497",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2023-01-01T16:42:57.295951Z\",\n  \"size\" : 5818951752876954497,\n  \"lastModifiedDate\" : \"2023-01-10T13:14:57.295984Z\",\n  \"name\" : \"Zy1ogKosSVX7YhfGjAqx2I.aa\",\n  \"id\" : 5755945172003187957,\n  \"parentId\" : 7352143543781093650\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6285759e-404e-3933-92d1-7c66c9d8683c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A file in the CD Drive that contains content.",
            "properties" : {
              "createdDate" : {
                "description" : "The date and time the file was created.",
                "format" : "dateTimed",
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the file.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date and time the file was last modified.",
                "format" : "dateTime",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the file including the extension.",
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string"
              },
              "parentId" : {
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "size" : {
                "description" : "The size of the file in bytes.",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "name", "id", "parentId", "createdDate", "lastModifiedDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "66046a39-4484-3591-abc2-69fdff63811c",
    "name" : "Delete a file. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/7836595759085736230",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "66046a39-4484-3591-abc2-69fdff63811c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "65c75613-a602-3ad5-80aa-74e938509693",
    "name" : "Delete a file. - 204",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/8400445124241280923",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "65c75613-a602-3ad5-80aa-74e938509693",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "9be8104a-b3b2-336d-a33f-bdc8ec97770e",
    "name" : "Upload a file. - 413",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 413
    },
    "uuid" : "9be8104a-b3b2-336d-a33f-bdc8ec97770e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "cd3ec0f3-8296-3851-a2e6-a55dce2b3c5a",
    "name" : "Upload a file. - 409",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "cd3ec0f3-8296-3851-a2e6-a55dce2b3c5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "da36c118-3bcf-35e7-b008-b306bab0acb4",
    "name" : "Upload a file. - 404",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "da36c118-3bcf-35e7-b008-b306bab0acb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "8af36544-bcac-3c4d-abbe-f0452d3f0692",
    "name" : "Upload a file. - 403",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8af36544-bcac-3c4d-abbe-f0452d3f0692",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "aac9fafd-f3b4-3647-a6a0-fe2dbcb055dc",
    "name" : "Upload a file. - 400",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "aac9fafd-f3b4-3647-a6a0-fe2dbcb055dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "ec93c279-9f0c-3823-bd91-577bee2bb880",
    "name" : "Upload a file. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/cddrive/files/content",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"createdDate\" : \"2022-03-19T16:40:57.295602Z\",\n  \"size\" : 3872912942151144695,\n  \"lastModifiedDate\" : \"2022-06-18T15:47:57.295641Z\",\n  \"name\" : \"vRRar.wwAb1i4PNDTB0Lg_dyn2UvXZ06K4tfIIUox\",\n  \"id\" : 820547720361272678,\n  \"parentId\" : 3853425516187274064\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec93c279-9f0c-3823-bd91-577bee2bb880",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A file in the CD Drive that contains content.",
            "properties" : {
              "createdDate" : {
                "description" : "The date and time the file was created.",
                "format" : "dateTimed",
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the file.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date and time the file was last modified.",
                "format" : "dateTime",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the file including the extension.",
                "maxLength" : 255,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9 \\._]*[a-zA-Z0-9]$",
                "type" : "string"
              },
              "parentId" : {
                "description" : "The ID of the parent folder or 0 for the root folder.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "size" : {
                "description" : "The size of the file in bytes.",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "name", "id", "parentId", "createdDate", "lastModifiedDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "e821266f-ceb6-3935-bda6-c208ff299e10",
    "name" : "Returns the broadcast service matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/broadcastservices/5623752175416877136",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"detail\" : \"qptwrzcc724m6cyarwa5lj7e1vbbifvvdvfe19ksw2galx4ymp9m2l48awcpwmawtoceuwc5c9niof6csqdmb9jp5qak8podwao558f768u9ij08fnuoglnlkdvoxj0p8vfy2kdlfxa87ofythk1e3pjsii6ktv\",\n  \"title\" : \"Et saepe veritatis voluptatem.\",\n  \"status\" : 569539742\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e821266f-ceb6-3935-bda6-c208ff299e10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "8a7c08e6-b213-3fd8-83c1-132369d2ae3d",
    "name" : "Returns the broadcast service matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/broadcastservices/6577845909259531557",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"vag69qqk6a81tqbgq43oiuf8t2txcpatemc9ju8fzpdpa6m287h\",\n  \"title\" : \"Eos id laudantium iste facilis labore sunt ducimus.\",\n  \"status\" : 666344421\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a7c08e6-b213-3fd8-83c1-132369d2ae3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "57ff2f48-14aa-3fdd-b519-7c9c3e1c9309",
    "name" : "Returns the broadcast service matching the given ID.",
    "request" : {
      "urlPath" : "/api/v2/broadcastservices/4106393193691771788",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : \"2023-11-19T12:12:06.295Z\",\n  \"lastModifiedDate\" : \"2022-10-05T21:33:57.295Z\",\n  \"name\" : \"Mae Wiza\",\n  \"description\" : \"Reprehenderit aut et quia impedit quo. Impedit voluptate aspernatur nostrum et. Rerum non nihil. Est consequatur nihil ducimus voluptatibus.\",\n  \"id\" : 4938848383254683770\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57ff2f48-14aa-3fdd-b519-7c9c3e1c9309",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A broadcast service that can subscribe to content for multiple destinations.",
            "properties" : {
              "createdDate" : {
                "description" : "The date the broadcast service was created.",
                "format" : "date-time",
                "type" : "string"
              },
              "description" : {
                "description" : "The description of the broadcast service.",
                "maxLength" : 1200,
                "minLength" : 0,
                "type" : "string"
              },
              "id" : {
                "description" : "The ID of the broadcast service.",
                "format" : "int64",
                "minimum" : 0,
                "type" : "integer"
              },
              "lastModifiedDate" : {
                "description" : "The date the broadcast service was last modified.",
                "format" : "date-time",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the broadcast service.",
                "maxLength" : 128,
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "createdDate", "lastModifiedDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "4691525e-5e22-3bea-8fe7-81690e1b4171",
    "name" : "Gets broadcast services matching the given criteria. - 403",
    "request" : {
      "urlPath" : "/api/v2/broadcastservices",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4691525e-5e22-3bea-8fe7-81690e1b4171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "aab97488-9b6f-34e5-9a8b-2a16351a7a1b",
    "name" : "Gets broadcast services matching the given criteria. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/broadcastservices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"qz5d3uhgm3hix8uyicjvb0jyttnlw6qrxl0prbkuci7i7qtquro363roxoggp13pnebg2tcht536hjtfvomevybulcw2ppoggz27xd466sfunu3c5hfpx89wsvqy29k88ypo7n51f05blse4gkee3up5c\",\n  \"title\" : \"Excepturi rerum quia voluptatem.\",\n  \"status\" : 368512006\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aab97488-9b6f-34e5-9a8b-2a16351a7a1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Standard error response. See the [Problem Details for HTTP APIs](https://datatracker.ietf.org/doc/html/rfc7807) for more details.",
            "properties" : {
              "detail" : {
                "description" : "The occurrence-specific problem description.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status code of the error.",
                "format" : "int32",
                "type" : "integer"
              },
              "title" : {
                "description" : "The general problem description.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "f719b04b-acc3-3d59-afc8-76221a575cda",
    "name" : "Gets broadcast services matching the given criteria. (application/json)",
    "request" : {
      "urlPath" : "/api/v2/broadcastservices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"endAirDate\" : \"2024-01-23T22:51:34.294Z\",\n  \"beginTransmissionDate\" : \"2022-03-14T13:41:00.294Z\",\n  \"createdDate\" : \"2022-06-07T04:16:32.294Z\",\n  \"lastModifiedDate\" : \"2022-07-09T18:58:41.294Z\",\n  \"customerId\" : 7203987357077381556,\n  \"id\" : 5395518810265503364,\n  \"beginAirDate\" : \"2023-12-02T12:21:37.294Z\",\n  \"title\" : \"Tempore ut fugit.\",\n  \"endTransmissionDate\" : \"2024-02-21T23:58:28.294Z\",\n  \"programId\" : 4299699519860922471\n}, {\n  \"endAirDate\" : \"2022-04-30T07:18:09.294Z\",\n  \"beginTransmissionDate\" : \"2023-10-03T07:51:29.294Z\",\n  \"createdDate\" : \"2022-03-18T08:27:22.294Z\",\n  \"lastModifiedDate\" : \"2022-07-25T04:38:30.294Z\",\n  \"customerId\" : 2767778000776673844,\n  \"id\" : 6702490985497423690,\n  \"beginAirDate\" : \"2022-11-05T05:13:43.294Z\",\n  \"title\" : \"Iusto eius aspernatur optio adipisci qui.\",\n  \"endTransmissionDate\" : \"2022-12-08T13:03:48.294Z\",\n  \"programId\" : 6944356999922882160\n}, {\n  \"endAirDate\" : \"2023-07-06T02:56:08.294Z\",\n  \"beginTransmissionDate\" : \"2023-02-03T02:49:45.294Z\",\n  \"createdDate\" : \"2022-12-24T05:12:23.294Z\",\n  \"lastModifiedDate\" : \"2024-01-22T11:06:09.294Z\",\n  \"customerId\" : 7857173623623374562,\n  \"id\" : 8319830522724374267,\n  \"beginAirDate\" : \"2022-10-05T13:03:27.294Z\",\n  \"title\" : \"Delectus ea et modi consequuntur illum repellat quas.\",\n  \"endTransmissionDate\" : \"2023-07-11T03:46:21.294Z\",\n  \"programId\" : 2781166360140413968\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f719b04b-acc3-3d59-afc8-76221a575cda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Episode"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 101
  } ]
}