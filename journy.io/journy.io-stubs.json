{
  "mappings" : [ {
    "id" : "ef63b7bd-6596-3292-a218-b5caf1754cef",
    "name" : "Validate API key",
    "request" : {
      "urlPath" : "/validate",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"4d16\",\n    \"status\" : 7.054232337009586E307\n  },\n  \"message\" : \"Molestiae quia veritatis minima ut nesciunt beatae. Occaecati facere doloremque minima corporis. Tempora labore sapiente animi tempora officia ut. Harum dolor sed beatae recusandae in. Voluptatibus ne\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef63b7bd-6596-3292-a218-b5caf1754cef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getValidity",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3e98de0e-26e0-3dc0-a275-d7f6ec767b07",
    "name" : "Validate API key",
    "request" : {
      "urlPath" : "/validate",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"s880\",\n    \"status\" : 1.215418446965355E308\n  },\n  \"message\" : \"Totam consectetur eos hic nihil. Consequatur quia qui ipsum laboriosam. Minima eum nisi nihil omnis illo. Doloribus earum quia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e98de0e-26e0-3dc0-a275-d7f6ec767b07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getValidity",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a1c6a008-a9b6-39f2-9774-bea4738346c3",
    "name" : "Validate API key",
    "request" : {
      "urlPath" : "/validate",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"wwc2\",\n    \"status\" : 1.2772306745519512E308\n  },\n  \"message\" : \"Eligendi ipsa eaque sequi numquam quasi saepe omnis. Dolor sed dolorem iusto repudiandae vel quaerat. Et quia natus voluptatem ut dolores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1c6a008-a9b6-39f2-9774-bea4738346c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getValidity",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a3714ff9-9061-354f-a074-e59b3c2933fb",
    "name" : "Validate API key",
    "request" : {
      "urlPath" : "/validate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"q3hh\",\n    \"status\" : 1.1008239876124919E308\n  },\n  \"message\" : \"Minus placeat laboriosam minima exercitationem. Quia voluptatem quibusdam quos. Repellat omnis ut consequuntur qui distinctio magni quos. Occaecati omnis rerum repellendus dolor dolor velit et. Perspi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3714ff9-9061-354f-a074-e59b3c2933fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getValidity",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "537fbaa9-9775-3c11-8b0b-d7d774f06ef3",
    "name" : "Validate API key",
    "request" : {
      "urlPath" : "/validate",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : {\n    \"permissions\" : [ \"obtwb9xa685rhse2zzksqvcs61i2vnpj711\", \"qszbrfhugr8q3eaa7rh8z8jefu33rg3ksnns44u0yiewmcai8d3ffsfbdbunq2g9lgh\" ]\n  },\n  \"meta\" : {\n    \"requestId\" : \"6jze\",\n    \"status\" : 1.6031914561977652E308\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "537fbaa9-9775-3c11-8b0b-d7d774f06ef3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getValidity",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "description" : "Validation of API Key",
                  "properties" : {
                    "permissions" : {
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "permissions" ],
                  "type" : "object"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "dabbf382-dbe0-3f54-9936-7d65c579be57",
    "name" : "Create or update user",
    "request" : {
      "urlPath" : "/users/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"ja0c\",\n    \"status\" : 5.076646118158759E307\n  },\n  \"message\" : \"Recusandae et sed eos repellendus. Vel corrupti qui sit reiciendis ipsa assumenda ea. Omnis et et natus earum voluptatem enim. Quaerat odio id. Id sint maxime ut dolor assumenda.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dabbf382-dbe0-3f54-9936-7d65c579be57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "b60f019f-7f62-3bac-a1e9-394b7bdfb5fa",
    "name" : "Create or update user",
    "request" : {
      "urlPath" : "/users/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"5gk9\",\n    \"status\" : 1.6270933280630157E308\n  },\n  \"message\" : \"Optio eveniet consequatur ut deserunt. Ut inventore nisi consequuntur aliquid dolore. Qui nobis nemo. Odit ipsam temporibus voluptatem est perferendis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b60f019f-7f62-3bac-a1e9-394b7bdfb5fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "29fdf233-21d9-3c4b-a67a-04c8671dfad4",
    "name" : "Create or update user",
    "request" : {
      "urlPath" : "/users/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"99ok\",\n    \"status\" : 4.827943265633429E307\n  },\n  \"message\" : \"Est alias velit dolore. Rerum provident aut consequatur accusamus magnam. Omnis a temporibus enim illum ad omnis qui. Non eum sed delectus corporis error tempora rerum. Cumque distinctio illum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29fdf233-21d9-3c4b-a67a-04c8671dfad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "42405e37-5e8c-393f-af6f-2b4851cc9d13",
    "name" : "Create or update user",
    "request" : {
      "urlPath" : "/users/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"j1cn\",\n    \"status\" : 1.1165389977449346E307\n  },\n  \"message\" : \"Consequatur est sunt qui qui ipsum. Quia error saepe sed quo quod. Eos cumque voluptatum ea. Et modi magnam. Minima quibusdam earum autem velit et neque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42405e37-5e8c-393f-af6f-2b4851cc9d13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "bd46c7f6-243b-3634-9193-236da6ac258d",
    "name" : "Create or update user",
    "request" : {
      "urlPath" : "/users/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd46c7f6-243b-3634-9193-236da6ac258d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertUser",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b820866c-c7d1-3586-b03c-a8a2e9066a19",
    "name" : "Create or update user",
    "request" : {
      "urlPath" : "/users/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"rejected\" : {\n    \"created_at\" : \"Expected a date but found a boolean.\"\n  },\n  \"meta\" : {\n    \"requestId\" : \"4h5m\",\n    \"status\" : 8.141514471918492E307\n  },\n  \"message\" : \"User will be created or updated\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b820866c-c7d1-3586-b03c-a8a2e9066a19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "example" : "User will be created or updated",
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            }, {
              "description" : "Specifies if any warnings occurred when validating the properties",
              "properties" : {
                "rejected" : {
                  "additionalProperties" : {
                    "type" : "string"
                  },
                  "description" : "If validation fails, specifies property name and error description",
                  "example" : {
                    "created_at" : "Expected a date but found a boolean."
                  },
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "b83b3a74-03be-3778-bfa3-a7e15f1a9f6f",
    "name" : "Delete user",
    "request" : {
      "urlPath" : "/users",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"vprm\",\n    \"status\" : 1.1048324824390882E308\n  },\n  \"message\" : \"Et animi minus consequuntur amet. Et eius possimus non ipsa. Nam possimus voluptatem omnis vel alias nihil totam. Perferendis exercitationem ipsum veniam doloribus ratione vitae. Iste ut aut rerum vol\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b83b3a74-03be-3778-bfa3-a7e15f1a9f6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "6955545d-69ad-37d3-b982-b356939afb85",
    "name" : "Delete user",
    "request" : {
      "urlPath" : "/users",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"80n4\",\n    \"status\" : 3.1720659465732434E307\n  },\n  \"message\" : \"Sapiente in voluptas laudantium beatae voluptatibus voluptatum ut. Optio distinctio non. Eum veritatis et illum ipsam quis repellat et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6955545d-69ad-37d3-b982-b356939afb85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "4ad1810c-8330-39d3-8888-eb2cc47aff10",
    "name" : "Delete user",
    "request" : {
      "urlPath" : "/users",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"56uu\",\n    \"status\" : 7.941968674584391E307\n  },\n  \"message\" : \"At eius alias officia nemo. Aut ad natus facilis. Ipsa in quia porro numquam rem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ad1810c-8330-39d3-8888-eb2cc47aff10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "53aa8f65-d8da-312e-8ef9-6cc85194162a",
    "name" : "Delete user",
    "request" : {
      "urlPath" : "/users",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"zyo9\",\n    \"status\" : 8.786146113752099E307\n  },\n  \"message\" : \"Eveniet vel facilis eum sed. Sed modi deserunt rerum omnis quae. Accusantium dolor ducimus labore eum officiis aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53aa8f65-d8da-312e-8ef9-6cc85194162a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "cab58aba-4e93-3009-a499-9c153d884885",
    "name" : "Delete user",
    "request" : {
      "urlPath" : "/users",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cab58aba-4e93-3009-a499-9c153d884885",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "2327e64d-f4d7-36c4-b5b3-4e4deed61afd",
    "name" : "Delete user",
    "request" : {
      "urlPath" : "/users",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"me66\",\n    \"status\" : 3.521705034325687E307\n  },\n  \"message\" : \"Iusto enim tenetur atque iste. Itaque et earum nisi itaque. Aut occaecati totam qui ratione et. Quia id omnis sint.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2327e64d-f4d7-36c4-b5b3-4e4deed61afd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "9a39c9c4-de78-3632-8374-1bb7b13d89e7",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "f70ti99uwsd83y2c1c3ypce1pyluct002p4xowggo28fw62fj6yuky35sip4k3683kjjems"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"6yx3\",\n    \"status\" : 1.16465491848129E308\n  },\n  \"message\" : \"Qui nobis est aut qui autem aut rerum. Consequatur sunt qui possimus et culpa. Doloribus quos quo non asperiores dicta. Corrupti accusamus quibusdam adipisci aliquam culpa.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a39c9c4-de78-3632-8374-1bb7b13d89e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "1047c8bd-7508-31c7-b522-42dae8bdc6cc",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "myob3tupudw0mg2od4h2pdaik"
        }
      }
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"ub73\",\n    \"status\" : 5.377641605217048E307\n  },\n  \"message\" : \"Explicabo in atque nisi veritatis. Eos omnis fuga autem at voluptas eum. Adipisci similique eum quia repellendus. Laborum et debitis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1047c8bd-7508-31c7-b522-42dae8bdc6cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "041b45f0-422e-3a5b-87f3-8f04b36c9990",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "orad2hepcziub8m076yxrg6entwx23nrpmikrnnzzmywwfikjasf0v3p3pwfujtvt7xb5bly9ficj90f86a0clrhxg9m6scqnavmgdc6462tgi1c15pvvb7z854o6qgukqczgp581te18a44ffp69edliuidylki84ckd3vif9uy2hadudxnm8o"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"lp0x\",\n    \"status\" : 8.926447034289458E307\n  },\n  \"message\" : \"Vero tempore aliquam voluptatem deleniti nobis. Quia est dolores corrupti aut laboriosam. Cum labore est ea dolore sed quae ipsam. Sed facilis itaque praesentium exercitationem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "041b45f0-422e-3a5b-87f3-8f04b36c9990",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "421adaf5-5e45-3730-acec-af5aa751eb6c",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "8yj2hwqows4wd63g7not36hxrnpa0bwmrndeebwrv7w3z3e5tgct0k23bubkt8syezh85dtt6f503t4t0ayrt8fiep0nq"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"4c55\",\n    \"status\" : 1.5564649566246234E308\n  },\n  \"message\" : \"Minima atque suscipit eos distinctio sunt. Ut ea esse laudantium sit sapiente eaque molestias. Distinctio ipsum placeat eaque nam fuga ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "421adaf5-5e45-3730-acec-af5aa751eb6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "bea68176-c83f-3d92-bc39-44fb57776b1d",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "kttzkgg46o96eo2ca7w9h2ceuwcfh90acnxjgh8wz9opiupt8rwtm8rlu3fcry73zntf78k2gi4xnj1swty60t"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"72ki\",\n    \"status\" : 6.061674317251475E306\n  },\n  \"message\" : \"Illum et cupiditate et labore aut. Aut sint deserunt alias. Earum illum porro ut suscipit qui ratione provident.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bea68176-c83f-3d92-bc39-44fb57776b1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a1d04169-f98e-3c56-8d4c-796023ba2683",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "ol9jjhaonnghl29owg13lmci3wr39t9knu3nns"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1d04169-f98e-3c56-8d4c-796023ba2683",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "63f5e5a2-50a5-39de-8463-8e0f7148e858",
    "name" : "Get snippet for a website",
    "request" : {
      "urlPath" : "/tracking/snippet",
      "method" : "GET",
      "queryParameters" : {
        "domain" : {
          "equalTo" : "w84nssyi65wh7ohss17ab6h2l2qi1ouyj6dzn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : {\n    \"snippet\" : \"cmhfbl8fw95i6f4btwlran5kbj16mwb5i027moxszhsgctm89z1pn0c67n2p343l8ocnjx68d\",\n    \"domain\" : \"9t9kucylhg9rkjpi9su01x6yyg547vrj7mjyrtt5m7q3xvcvsudpq2xmkjk6drqybnxvuo9na84zk89pivrbb57161etitt9woojjjytg93e9wz6fqjqs478krnq5oktiy661c7wfovi1c09acq94ojx6wk5nmzkx5dj48q99tdh0k2qtsip4ehmttrdve58ln5rxnh\"\n  },\n  \"meta\" : {\n    \"requestId\" : \"9f6v\",\n    \"status\" : 1.3896809837274116E308\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f5e5a2-50a5-39de-8463-8e0f7148e858",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTrackingSnippet",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "description" : "A snippet",
                  "properties" : {
                    "domain" : {
                      "format" : "domain",
                      "type" : "string"
                    },
                    "snippet" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "domain", "snippet" ],
                  "type" : "object"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "bf3f6d75-4192-37d7-9bfe-2f5d9dcde47c",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/track",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"c37t\",\n    \"status\" : 1.5397137767844492E308\n  },\n  \"message\" : \"Rerum nesciunt ut ut nobis in. Odio ratione enim laudantium cumque minus laboriosam aspernatur. Qui eum ex culpa et ut. Eius tenetur facere dolor repellendus dolor quia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf3f6d75-4192-37d7-9bfe-2f5d9dcde47c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "a97bf04f-b9f4-3d76-93dc-9e3b28df7c25",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/track",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"a4g7\",\n    \"status\" : 1.0298924020209868E308\n  },\n  \"message\" : \"Esse aut esse vel quia. Quam quos reiciendis ut ipsam error error eum. Est recusandae quo sint recusandae. Aut suscipit facilis eligendi enim. Aut commodi eius consectetur officiis ab.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a97bf04f-b9f4-3d76-93dc-9e3b28df7c25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "af57b48c-86b9-3c00-ae05-6f7d8140e4af",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/track",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"6yds\",\n    \"status\" : 1.210227941626297E308\n  },\n  \"message\" : \"Quos adipisci et illum dignissimos qui reprehenderit. Ut aut animi adipisci. Est illo quo rerum cumque ea qui impedit. Pariatur nesciunt quam maxime magnam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af57b48c-86b9-3c00-ae05-6f7d8140e4af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "56ba5875-f0b2-3a28-879d-2e7a982d5f97",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/track",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"567y\",\n    \"status\" : 5.162850918322958E307\n  },\n  \"message\" : \"Labore et dolore accusamus voluptatibus. Blanditiis unde omnis ipsum rem ex similique molestiae. Et repellat consequatur et saepe.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56ba5875-f0b2-3a28-879d-2e7a982d5f97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "50b9b682-eacf-34c1-80f6-22f5e69cf3c0",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/track",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50b9b682-eacf-34c1-80f6-22f5e69cf3c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackEvent",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "c83406b6-d43e-3bcf-ba88-c2d9f87d9bbf",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/track",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"jyw3\",\n    \"status\" : 2.2514624846957214E307\n  },\n  \"message\" : \"Velit aspernatur voluptas iste dolorem qui tenetur aspernatur. Et est facere. Nemo aspernatur porro. Ipsum perferendis nobis qui. Alias enim omnis vel.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c83406b6-d43e-3bcf-ba88-c2d9f87d9bbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "f74dc146-3c08-3d52-bb3b-c6e443ec1a5d",
    "name" : "Get user segments",
    "request" : {
      "urlPath" : "/segments/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"n434\",\n    \"status\" : 1.0025820212760988E308\n  },\n  \"message\" : \"Molestiae soluta dolorem et laudantium perferendis. Distinctio ut officia rerum voluptas repellat veritatis sed. Perspiciatis omnis architecto qui eligendi dolores qui excepturi. Ut repudiandae quia e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f74dc146-3c08-3d52-bb3b-c6e443ec1a5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "c6d23b73-1b7f-3188-bed6-42041d2ed05e",
    "name" : "Get user segments",
    "request" : {
      "urlPath" : "/segments/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"u812\",\n    \"status\" : 1.3446018011087019E308\n  },\n  \"message\" : \"Ut sapiente exercitationem error at eos. Aperiam repellendus non ducimus. Repellat praesentium fugit illo vitae ex aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6d23b73-1b7f-3188-bed6-42041d2ed05e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "7463c737-df7b-3833-9de0-79b5b77e18c3",
    "name" : "Get user segments",
    "request" : {
      "urlPath" : "/segments/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"h556\",\n    \"status\" : 1.2565866002145341E308\n  },\n  \"message\" : \"Quo non aut quia. Quia saepe et. Est et dolorem earum sit voluptatum delectus. Qui inventore illo porro sunt sapiente autem sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7463c737-df7b-3833-9de0-79b5b77e18c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "20e63cb7-6b02-357c-8451-89d8d75dfa76",
    "name" : "Get user segments",
    "request" : {
      "urlPath" : "/segments/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"8sd0\",\n    \"status\" : 1.4474563894515602E308\n  },\n  \"message\" : \"Ea quam animi et ab ea enim accusamus. Id voluptas doloremque aut voluptatem voluptatem dolorem. Fugit est eligendi rerum sint.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20e63cb7-6b02-357c-8451-89d8d75dfa76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "7900473b-2fe9-3c2a-a20d-772b9a30920a",
    "name" : "Get user segments",
    "request" : {
      "urlPath" : "/segments/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7900473b-2fe9-3c2a-a20d-772b9a30920a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserSegments",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "98ec867d-63ae-3cf1-bd7b-1ef0c0e5aff5",
    "name" : "Get user segments",
    "request" : {
      "urlPath" : "/segments/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"name\" : \"Giovanna West\",\n    \"id\" : \"pfe9\"\n  }, {\n    \"name\" : \"Tamekia Schaefer\",\n    \"id\" : \"4eq3\"\n  } ],\n  \"meta\" : {\n    \"requestId\" : \"i8i7\",\n    \"status\" : 9.597935400103388E307\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98ec867d-63ae-3cf1-bd7b-1ef0c0e5aff5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "items" : {
                    "description" : "Segment details",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "id" ],
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "6e5e60a7-bf0e-35f0-9f58-031bea2a623b",
    "name" : "Get account segments",
    "request" : {
      "urlPath" : "/segments/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"e08l\",\n    \"status\" : 1.2916679579108063E308\n  },\n  \"message\" : \"Est illo sit ex ab aut aut sit. Aut fugit officia alias fugit ut neque nihil. Dignissimos id et illum accusantium eaque in aliquid.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e5e60a7-bf0e-35f0-9f58-031bea2a623b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "ec274178-9bf4-39f0-93d6-a8a7d61cd616",
    "name" : "Get account segments",
    "request" : {
      "urlPath" : "/segments/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"j9p3\",\n    \"status\" : 1.5589972358390455E308\n  },\n  \"message\" : \"Vero quidem itaque maxime quia atque animi voluptatem. Laborum aliquam facere. Similique eos ut sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec274178-9bf4-39f0-93d6-a8a7d61cd616",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "c7d2b975-8715-3605-be05-69857086bf40",
    "name" : "Get account segments",
    "request" : {
      "urlPath" : "/segments/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"fq91\",\n    \"status\" : 1.665310574104851E308\n  },\n  \"message\" : \"Exercitationem non veritatis possimus earum. Sint enim ut deserunt. Molestias eaque voluptates molestiae inventore alias officiis. Id quasi debitis vel.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7d2b975-8715-3605-be05-69857086bf40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "1a37f20d-036e-3234-8fc9-146bf3d54228",
    "name" : "Get account segments",
    "request" : {
      "urlPath" : "/segments/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"v9e7\",\n    \"status\" : 1.7884674640805548E308\n  },\n  \"message\" : \"Quas iure sequi omnis sed doloribus. Deserunt distinctio doloremque maiores. Fuga quis autem et voluptatem quia. Eius atque voluptatem itaque rem. Eum eveniet qui qui natus ullam eveniet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a37f20d-036e-3234-8fc9-146bf3d54228",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "bbf74fc1-5889-38fe-8a82-b26767ab1095",
    "name" : "Get account segments",
    "request" : {
      "urlPath" : "/segments/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbf74fc1-5889-38fe-8a82-b26767ab1095",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountSegments",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "6d792fcb-bfae-3880-82ab-fd71625159ee",
    "name" : "Get account segments",
    "request" : {
      "urlPath" : "/segments/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"name\" : \"Parker Kessler\",\n    \"id\" : \"trjs\"\n  }, {\n    \"name\" : \"Basil Kohler Sr.\",\n    \"id\" : \"q9b4\"\n  } ],\n  \"meta\" : {\n    \"requestId\" : \"6dvm\",\n    \"status\" : 1.6200695735823108E308\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d792fcb-bfae-3880-82ab-fd71625159ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountSegments",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "items" : {
                    "description" : "Segment details",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "id" ],
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "576c1267-a564-38a9-b1f2-68c26d2ccf0a",
    "name" : "Get user properties",
    "request" : {
      "urlPath" : "/properties/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"i50d\",\n    \"status\" : 1.1832547483138307E308\n  },\n  \"message\" : \"Porro architecto et qui. Aliquid quaerat et dolorem. Pariatur rerum eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "576c1267-a564-38a9-b1f2-68c26d2ccf0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "3ec66678-3988-306a-8cf2-162c7d55cf0c",
    "name" : "Get user properties",
    "request" : {
      "urlPath" : "/properties/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"t7u9\",\n    \"status\" : 8.694395862469986E307\n  },\n  \"message\" : \"Fugiat blanditiis nihil. Itaque culpa eum et id voluptatem consequuntur. Fuga ut eos voluptatem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ec66678-3988-306a-8cf2-162c7d55cf0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "749adae8-8cbf-3c6c-8090-ad1449397aba",
    "name" : "Get user properties",
    "request" : {
      "urlPath" : "/properties/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"79dz\",\n    \"status\" : 1.0329194943507402E308\n  },\n  \"message\" : \"Rerum rem omnis qui voluptatem ut enim. Perspiciatis dolorum et pariatur eos voluptates dolor. Aut ab est autem repudiandae. Nisi fugit non est excepturi iusto sint. Voluptatem ut qui aperiam praesent\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "749adae8-8cbf-3c6c-8090-ad1449397aba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "87e6208d-4e0a-3de4-84ff-1b50348d3cdc",
    "name" : "Get user properties",
    "request" : {
      "urlPath" : "/properties/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"619m\",\n    \"status\" : 1.4492243010061327E308\n  },\n  \"message\" : \"Quaerat et doloremque iste aut incidunt sapiente culpa. Ducimus sit nihil velit quae quia. Velit aut nam quo. Sit aut voluptates aliquam. Possimus rerum repellendus quam mollitia dolores animi est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87e6208d-4e0a-3de4-84ff-1b50348d3cdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "22f7dabc-2b80-3950-a758-940d190c2b5d",
    "name" : "Get user properties",
    "request" : {
      "urlPath" : "/properties/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22f7dabc-2b80-3950-a758-940d190c2b5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserProperties",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "6edb57c0-fd28-3294-8ced-a842d70123c8",
    "name" : "Get user properties",
    "request" : {
      "urlPath" : "/properties/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"isComputed\" : true,\n    \"name\" : \"Jefferson Rau\",\n    \"label\" : \"quis\",\n    \"group\" : {\n      \"name\" : \"Shawn Lynch\",\n      \"id\" : \"eix0\"\n    }\n  }, {\n    \"isComputed\" : false,\n    \"name\" : \"Ms. Blossom Gibson\",\n    \"label\" : \"iure\",\n    \"group\" : {\n      \"name\" : \"Joella Block\",\n      \"id\" : \"8436\"\n    }\n  } ],\n  \"meta\" : {\n    \"requestId\" : \"73r6\",\n    \"status\" : 1.7433895688451608E308\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6edb57c0-fd28-3294-8ced-a842d70123c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "items" : {
                    "description" : "Properties details",
                    "properties" : {
                      "group" : {
                        "description" : "Property group details",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "name" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "name", "id" ],
                        "type" : "object"
                      },
                      "isComputed" : {
                        "type" : "boolean"
                      },
                      "label" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "label", "isComputed" ],
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "c08f8b26-2d40-3620-b937-55523a5b4b68",
    "name" : "Get account properties",
    "request" : {
      "urlPath" : "/properties/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"1eg1\",\n    \"status\" : 1.6125722747704281E308\n  },\n  \"message\" : \"Repellat natus hic quia aut. Quis qui fuga autem voluptates et. Voluptatem neque repellat et optio et temporibus placeat. Debitis fugit ut cupiditate.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c08f8b26-2d40-3620-b937-55523a5b4b68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "b28e918f-6970-3679-8dc5-e2390f00f1cf",
    "name" : "Get account properties",
    "request" : {
      "urlPath" : "/properties/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"658t\",\n    \"status\" : 1.2080967113946222E308\n  },\n  \"message\" : \"Reiciendis perspiciatis blanditiis est est. Est impedit rerum culpa necessitatibus molestiae. Est reiciendis accusantium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b28e918f-6970-3679-8dc5-e2390f00f1cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "767e8a1a-4870-3b47-8b59-71cb2b43b179",
    "name" : "Get account properties",
    "request" : {
      "urlPath" : "/properties/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"1a5n\",\n    \"status\" : 1.5780832851990292E308\n  },\n  \"message\" : \"Et eaque molestiae laudantium commodi. Qui ipsum suscipit est aut. Similique delectus sint. Accusantium atque quisquam labore. Pariatur sed tempore dolor.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "767e8a1a-4870-3b47-8b59-71cb2b43b179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "dc10d8cc-c05c-355e-9e97-a94cd78f9c8b",
    "name" : "Get account properties",
    "request" : {
      "urlPath" : "/properties/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"74dn\",\n    \"status\" : 9.333064701079568E307\n  },\n  \"message\" : \"At ab architecto non est. Omnis ducimus ducimus neque. Suscipit quibusdam repellendus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc10d8cc-c05c-355e-9e97-a94cd78f9c8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "2a528215-b631-302c-8401-2adb904ec015",
    "name" : "Get account properties",
    "request" : {
      "urlPath" : "/properties/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a528215-b631-302c-8401-2adb904ec015",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountProperties",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "d51b2b83-6481-3ec3-9973-3a3a7d39b866",
    "name" : "Get account properties",
    "request" : {
      "urlPath" : "/properties/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"isComputed\" : true,\n    \"name\" : \"Ellyn Kautzer DVM\",\n    \"label\" : \"pariatur\",\n    \"group\" : {\n      \"name\" : \"Theo Rodriguez\",\n      \"id\" : \"90y7\"\n    }\n  }, {\n    \"isComputed\" : true,\n    \"name\" : \"Mr. Dewey Gorczany\",\n    \"label\" : \"nesciunt\",\n    \"group\" : {\n      \"name\" : \"Torie Hayes\",\n      \"id\" : \"3v3s\"\n    }\n  }, {\n    \"isComputed\" : true,\n    \"name\" : \"Jarvis Gaylord PhD\",\n    \"label\" : \"ipsam\",\n    \"group\" : {\n      \"name\" : \"Deena Johnson\",\n      \"id\" : \"42e2\"\n    }\n  }, {\n    \"isComputed\" : true,\n    \"name\" : \"Else Quitzon Sr.\",\n    \"label\" : \"esse\",\n    \"group\" : {\n      \"name\" : \"Daisy Jaskolski DDS\",\n      \"id\" : \"xq28\"\n    }\n  } ],\n  \"meta\" : {\n    \"requestId\" : \"d491\",\n    \"status\" : 7.827900808182265E307\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d51b2b83-6481-3ec3-9973-3a3a7d39b866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountProperties",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "items" : {
                    "description" : "Properties details",
                    "properties" : {
                      "group" : {
                        "description" : "Property group details",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "name" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "name", "id" ],
                        "type" : "object"
                      },
                      "isComputed" : {
                        "type" : "boolean"
                      },
                      "label" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "label", "isComputed" ],
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "379b47e9-becf-37b9-9dd5-2ae3a3dcc499",
    "name" : "Link web activity to user",
    "request" : {
      "urlPath" : "/link",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"d303\",\n    \"status\" : 1.9674611334656665E307\n  },\n  \"message\" : \"Beatae doloribus distinctio odit. Voluptates est ullam cum expedita sed. Rem officiis laborum aut hic. Esse temporibus fugit consectetur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "379b47e9-becf-37b9-9dd5-2ae3a3dcc499",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "link",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "dc1897ec-9bb2-3db9-a97e-b25430010b65",
    "name" : "Link web activity to user",
    "request" : {
      "urlPath" : "/link",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"h8rr\",\n    \"status\" : 1.2705622477164437E308\n  },\n  \"message\" : \"Mollitia ut consequatur sit perferendis qui. Aut dicta consequuntur libero mollitia et nam. Velit fugiat molestiae eos praesentium odit enim. Consectetur totam voluptatum exercitationem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc1897ec-9bb2-3db9-a97e-b25430010b65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "link",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "87f2abc5-06b6-34bf-9b44-efb8a9ca6e05",
    "name" : "Link web activity to user",
    "request" : {
      "urlPath" : "/link",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"5173\",\n    \"status\" : 2.686452766667945E307\n  },\n  \"message\" : \"Aut optio et nobis. Esse quaerat ut aut dolorem iusto et. Nulla veniam aspernatur est quis aperiam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87f2abc5-06b6-34bf-9b44-efb8a9ca6e05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "link",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "aabe0038-ee80-3176-866b-b9617b023d6e",
    "name" : "Link web activity to user",
    "request" : {
      "urlPath" : "/link",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"3k33\",\n    \"status\" : 7.179641381853966E307\n  },\n  \"message\" : \"Et porro eum. Doloribus qui ducimus veritatis. Ut illum recusandae id laboriosam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aabe0038-ee80-3176-866b-b9617b023d6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "link",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "2dd6de87-003d-3936-a59b-ba144d86dd31",
    "name" : "Link web activity to user",
    "request" : {
      "urlPath" : "/link",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2dd6de87-003d-3936-a59b-ba144d86dd31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "link",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "65125781-6b08-3516-81a6-47cb07252384",
    "name" : "Link web activity to user",
    "request" : {
      "urlPath" : "/link",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"ivk8\",\n    \"status\" : 1.316945686919208E308\n  },\n  \"message\" : \"Iste eveniet corrupti. Et necessitatibus eveniet. Corrupti aliquid necessitatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65125781-6b08-3516-81a6-47cb07252384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "link",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "54cebaad-8d18-302b-9640-5069eea3aed2",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/events",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"2hn8\",\n    \"status\" : 8.312724618116563E307\n  },\n  \"message\" : \"Aliquam deleniti ea tempore itaque velit ullam. Mollitia soluta recusandae. Ducimus ullam eaque nisi voluptatem. Quam harum est est nesciunt consequatur qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54cebaad-8d18-302b-9640-5069eea3aed2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackJourneyEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "c9b1e0bb-147b-3eb6-8b68-7d07d74f2c43",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/events",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"v049\",\n    \"status\" : 5.283215636580803E307\n  },\n  \"message\" : \"Similique occaecati natus vero earum eveniet dolorum officiis. Hic possimus at voluptatem minima qui. Quos sit nam consectetur. Consequatur ratione doloremque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9b1e0bb-147b-3eb6-8b68-7d07d74f2c43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackJourneyEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "82c7bcde-2bd3-3c53-872e-a74259c13855",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/events",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"j755\",\n    \"status\" : 7.44294359786329E307\n  },\n  \"message\" : \"Qui consequuntur rerum labore consequatur. Asperiores aut aliquid adipisci. Voluptatem consequatur voluptas. Amet qui harum maiores temporibus officiis minima. Doloremque aut sequi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82c7bcde-2bd3-3c53-872e-a74259c13855",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackJourneyEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "33193504-191b-3ef8-bcef-757f5be658bb",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/events",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"2wc8\",\n    \"status\" : 1.6629619778194518E308\n  },\n  \"message\" : \"Sequi velit sit recusandae accusantium. Ipsa incidunt laborum laborum tempora qui. Voluptate velit cumque velit nobis ipsam nisi ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33193504-191b-3ef8-bcef-757f5be658bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackJourneyEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "5d211c39-8235-331a-a51d-972b52076925",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/events",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d211c39-8235-331a-a51d-972b52076925",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackJourneyEvent",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "93ebab6a-99ec-39d7-ada9-49217fde9731",
    "name" : "Track event",
    "request" : {
      "urlPath" : "/events",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"cu86\",\n    \"status\" : 2.7128424499741236E307\n  },\n  \"message\" : \"Ad doloremque ea quaerat mollitia in. Qui quam doloribus doloremque facere nihil ut. Ea ducimus quo iusto.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93ebab6a-99ec-39d7-ada9-49217fde9731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "trackJourneyEvent",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "ff842fb2-62ae-3f5b-8b75-35527fc790cf",
    "name" : "Get events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"zv72\",\n    \"status\" : 1.6646765249174059E308\n  },\n  \"message\" : \"Sit inventore eveniet est ipsa assumenda ad aut. Ut nulla iusto sequi exercitationem. Perspiciatis nihil hic et hic ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff842fb2-62ae-3f5b-8b75-35527fc790cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "44e4deb0-c4da-3cce-8b63-be6fcb8d553c",
    "name" : "Get events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"fpd5\",\n    \"status\" : 1.3104509005390647E308\n  },\n  \"message\" : \"Ipsa rerum rerum ut neque. Et deserunt est. Consequatur consequuntur incidunt facere consectetur id necessitatibus. Et illo porro. Fuga facilis enim repellat ut et et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44e4deb0-c4da-3cce-8b63-be6fcb8d553c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "ba609a0a-2682-3be7-bedb-1a4a5e961174",
    "name" : "Get events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"ca4h\",\n    \"status\" : 1.4654892483986853E308\n  },\n  \"message\" : \"Nostrum animi ducimus dolorum. Aut nemo recusandae mollitia cum. Excepturi officiis tenetur a ratione qui sapiente. Qui repellendus tempore vero asperiores animi ratione.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba609a0a-2682-3be7-bedb-1a4a5e961174",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "836bd41f-41e4-3a4c-b757-57b993c1ef8b",
    "name" : "Get events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"6n1j\",\n    \"status\" : 9.211349236102706E307\n  },\n  \"message\" : \"Esse temporibus ratione cum sapiente ullam odio. Ea qui mollitia velit et aut necessitatibus facilis. Totam ipsum quae praesentium. Dolorem vitae adipisci nihil qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "836bd41f-41e4-3a4c-b757-57b993c1ef8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "e3354226-8e55-3f0e-93af-2548d42ba7af",
    "name" : "Get events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3354226-8e55-3f0e-93af-2548d42ba7af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "c918bd5e-f900-3db8-ad3b-7a15094d68be",
    "name" : "Get events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"name\" : \"Hoa Walter\",\n    \"id\" : \"79ty\",\n    \"group\" : {\n      \"name\" : \"Roger Schaefer\",\n      \"id\" : \"2y14\"\n    }\n  }, {\n    \"name\" : \"Joesph Weber\",\n    \"id\" : \"t6gs\",\n    \"group\" : {\n      \"name\" : \"Ira Hammes\",\n      \"id\" : \"agi4\"\n    }\n  } ],\n  \"meta\" : {\n    \"requestId\" : \"247o\",\n    \"status\" : 1.2344208208616257E308\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c918bd5e-f900-3db8-ad3b-7a15094d68be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "properties" : {
                "data" : {
                  "items" : {
                    "description" : "Event details",
                    "properties" : {
                      "group" : {
                        "description" : "Event group details",
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "name" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "name", "id" ],
                        "type" : "object"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "name", "id" ],
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "data" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "fafea0fe-1b43-392e-acdf-392ede3f11fe",
    "name" : "Remove user from account",
    "request" : {
      "urlPath" : "/accounts/users/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"6u01\",\n    \"status\" : 1.5080766787353932E307\n  },\n  \"message\" : \"Est qui dolorem quasi nemo et iure. Ut maxime aut est. Eius doloribus doloribus est soluta. Sunt iusto doloremque deleniti molestias laboriosam qui. Id dicta sunt vero eius.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fafea0fe-1b43-392e-acdf-392ede3f11fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "removeUserFromAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "72e08644-56a9-3e92-a6a4-e2b14bc020aa",
    "name" : "Remove user from account",
    "request" : {
      "urlPath" : "/accounts/users/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"vp55\",\n    \"status\" : 1.698907458804827E308\n  },\n  \"message\" : \"Rerum aperiam illo non saepe et. Aut commodi consequatur qui officiis molestias. Nisi porro sit occaecati vero dolor. Qui eos voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72e08644-56a9-3e92-a6a4-e2b14bc020aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "removeUserFromAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "e1680b8e-1e38-30ae-9f31-b6a64c0de7b7",
    "name" : "Remove user from account",
    "request" : {
      "urlPath" : "/accounts/users/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"hcft\",\n    \"status\" : 7.733117894837054E307\n  },\n  \"message\" : \"Sit ea optio delectus voluptatum ut. Et perspiciatis eveniet voluptates. Modi sequi sit veniam nesciunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1680b8e-1e38-30ae-9f31-b6a64c0de7b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "removeUserFromAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "734e45ba-2038-3e55-b8f3-3554215981c0",
    "name" : "Remove user from account",
    "request" : {
      "urlPath" : "/accounts/users/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "734e45ba-2038-3e55-b8f3-3554215981c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "removeUserFromAccount",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "48953884-9063-3887-925c-f72e66e4809b",
    "name" : "Remove user from account",
    "request" : {
      "urlPath" : "/accounts/users/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 204,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"65xb\",\n    \"status\" : 1.6752018818925653E308\n  },\n  \"message\" : \"Sit qui voluptas. Nihil eaque quia quo qui. Ipsa voluptatibus nam facere qui odit ab. Aut est qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48953884-9063-3887-925c-f72e66e4809b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "removeUserFromAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "51b7a695-384d-3f0d-b5ef-001d26f63844",
    "name" : "Add users to an account",
    "request" : {
      "urlPath" : "/accounts/users/add",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"bd6q\",\n    \"status\" : 3.3536336027340575E307\n  },\n  \"message\" : \"Repudiandae velit optio dolorum veniam. Illo molestiae officia. Quo quia et sapiente eveniet dicta vel. Totam velit vel officiis saepe aspernatur modi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51b7a695-384d-3f0d-b5ef-001d26f63844",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addUserToAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "f3df52d1-0c5b-3ff5-bbdf-0ef8e8e8be61",
    "name" : "Add users to an account",
    "request" : {
      "urlPath" : "/accounts/users/add",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"o38t\",\n    \"status\" : 1.0634064824590516E308\n  },\n  \"message\" : \"Soluta sunt corrupti vel recusandae soluta dolorem dolorem. Neque in sed est. Laudantium et possimus. Sapiente non fuga quos perspiciatis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3df52d1-0c5b-3ff5-bbdf-0ef8e8e8be61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addUserToAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "ead7f999-6d1b-3bfc-9223-3996e65f75c7",
    "name" : "Add users to an account",
    "request" : {
      "urlPath" : "/accounts/users/add",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"bs9r\",\n    \"status\" : 4.732144276628441E307\n  },\n  \"message\" : \"Quo aut aspernatur voluptas. Quia aperiam autem maxime aliquam accusantium debitis. Vel officia qui sequi porro et qui sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ead7f999-6d1b-3bfc-9223-3996e65f75c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addUserToAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "222fdd23-995e-3439-ab8c-82fde03eb805",
    "name" : "Add users to an account",
    "request" : {
      "urlPath" : "/accounts/users/add",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "222fdd23-995e-3439-ab8c-82fde03eb805",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addUserToAccount",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "e5b41859-634c-349e-90b7-16468505cc72",
    "name" : "Add users to an account",
    "request" : {
      "urlPath" : "/accounts/users/add",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"x47m\",\n    \"status\" : 5.459359409733508E307\n  },\n  \"message\" : \"Corrupti deleniti dolorem. Aut nihil consectetur tenetur ipsam aut nihil et. Nisi quaerat et tempore ut voluptatem. Maxime quibusdam suscipit expedita non optio mollitia. Quaerat et voluptatem ea ut r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5b41859-634c-349e-90b7-16468505cc72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addUserToAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "01d29def-0ede-3711-b7a6-52bdace25bd2",
    "name" : "Create or update account",
    "request" : {
      "urlPath" : "/accounts/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"o02i\",\n    \"status\" : 1.4946641421122023E308\n  },\n  \"message\" : \"Quasi numquam nihil. Cupiditate occaecati eum ea. Ut dolores itaque vitae ullam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01d29def-0ede-3711-b7a6-52bdace25bd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "0e7cd266-ceef-38be-88ad-00622c73f40f",
    "name" : "Create or update account",
    "request" : {
      "urlPath" : "/accounts/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"nkd8\",\n    \"status\" : 9.648472976598456E307\n  },\n  \"message\" : \"Minus beatae non sed velit. In occaecati soluta. Fugit voluptatem rerum optio vitae et quam magni.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e7cd266-ceef-38be-88ad-00622c73f40f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "6ca50ee2-951a-3a36-93bd-3f51342bb87c",
    "name" : "Create or update account",
    "request" : {
      "urlPath" : "/accounts/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"l988\",\n    \"status\" : 4.541382691223231E307\n  },\n  \"message\" : \"Voluptatibus veniam modi pariatur ad voluptatibus ratione. Autem ea odio consequatur magni. Assumenda reprehenderit modi esse. Ut odio voluptatibus dolore expedita asperiores. Eos quia sed assumenda q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ca50ee2-951a-3a36-93bd-3f51342bb87c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "c2cf121b-2e24-3c22-a2b6-699f55016c5a",
    "name" : "Create or update account",
    "request" : {
      "urlPath" : "/accounts/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"s31h\",\n    \"status\" : 8.826882976816978E307\n  },\n  \"message\" : \"Laborum dignissimos veniam et dolores itaque ex. Fuga fugiat quo. Quae deleniti et iure velit nihil perspiciatis ipsa.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2cf121b-2e24-3c22-a2b6-699f55016c5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "622672f9-826c-3383-be6e-ada6df15a755",
    "name" : "Create or update account",
    "request" : {
      "urlPath" : "/accounts/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "622672f9-826c-3383-be6e-ada6df15a755",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertAccount",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "ffa2d798-5a60-3a8e-8dbb-308de462d602",
    "name" : "Create or update account",
    "request" : {
      "urlPath" : "/accounts/upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"rejected\" : {\n    \"created_at\" : \"Expected a date but found a boolean.\"\n  },\n  \"meta\" : {\n    \"requestId\" : \"42f4\",\n    \"status\" : 2.1040026264246646E307\n  },\n  \"message\" : \"Account will be created or updated\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffa2d798-5a60-3a8e-8dbb-308de462d602",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "upsertAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "example" : "Account will be created or updated",
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            }, {
              "description" : "Specifies if any warnings occurred when validating the properties",
              "properties" : {
                "rejected" : {
                  "additionalProperties" : {
                    "type" : "string"
                  },
                  "description" : "If validation fails, specifies the property name and error message",
                  "example" : {
                    "created_at" : "Expected a date but found a boolean."
                  },
                  "type" : "object"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "d9fd1dc8-bed3-3996-90f3-c4842ab3bb7e",
    "name" : "Delete account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"7jdw\",\n    \"status\" : 9.349748995554998E307\n  },\n  \"message\" : \"Aliquam soluta dolorum in. Magnam nemo incidunt quibusdam alias. Voluptatibus sint in ducimus non quisquam laudantium. Perspiciatis odit labore facere sit voluptas. Nemo dolorum veniam non dolorem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9fd1dc8-bed3-3996-90f3-c4842ab3bb7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "dac81131-47d6-3aa5-92a8-9a528fe923db",
    "name" : "Delete account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"t8eu\",\n    \"status\" : 6.844174487911805E307\n  },\n  \"message\" : \"Cum exercitationem enim itaque accusamus odio. Consectetur qui porro qui rerum enim autem. Inventore non et et ipsum est. Minima et temporibus rerum mollitia omnis voluptatum maxime. Quibusdam volupta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dac81131-47d6-3aa5-92a8-9a528fe923db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "d8dbc9fa-e13f-371f-b579-81c0e1ec2837",
    "name" : "Delete account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"4rq1\",\n    \"status\" : 7.305380614264834E307\n  },\n  \"message\" : \"Ipsam et fugit. Nesciunt facere quo. Voluptatem rerum excepturi occaecati natus et commodi dolore.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8dbc9fa-e13f-371f-b579-81c0e1ec2837",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "4c32be3e-843d-308a-8a11-eb042c98b0a7",
    "name" : "Delete account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"nkml\",\n    \"status\" : 3.2635662225343263E307\n  },\n  \"message\" : \"Repellendus omnis ex et unde et quam atque. Inventore tempora vel et incidunt at magni. Sit asperiores quidem rem labore. Exercitationem aut suscipit et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c32be3e-843d-308a-8a11-eb042c98b0a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "f43ce3a4-4ca8-3e25-a97a-754e680382ff",
    "name" : "Delete account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : {\n    \"fields\" : { },\n    \"parameters\" : {\n      \"path\" : { },\n      \"query\" : { },\n      \"header\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f43ce3a4-4ca8-3e25-a97a-754e680382ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount",
          "schema" : {
            "allOf" : [ {
              "allOf" : [ {
                "description" : "The basic response containing the unique ID of the request and the response status",
                "properties" : {
                  "meta" : {
                    "properties" : {
                      "requestId" : {
                        "type" : "string"
                      },
                      "status" : {
                        "type" : "number"
                      }
                    },
                    "required" : [ "requestId", "status" ],
                    "type" : "object"
                  }
                },
                "required" : [ "meta" ],
                "type" : "object"
              }, {
                "description" : "The message specifies what is done",
                "properties" : {
                  "message" : {
                    "type" : "string"
                  }
                },
                "required" : [ "message" ],
                "type" : "object"
              } ]
            }, {
              "description" : "Specify the fields and/ or parameters that had errors",
              "properties" : {
                "errors" : {
                  "description" : "Map that sums up all received values that seemed incorrect",
                  "properties" : {
                    "fields" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "All input fields that seemed incorrect",
                      "type" : "object"
                    },
                    "parameters" : {
                      "description" : "All query-, header- and path- parameters that seemed incorrect",
                      "properties" : {
                        "header" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "path" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        },
                        "query" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              },
              "required" : [ "errors" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "b2052894-0287-3aaf-a6c8-157d29787743",
    "name" : "Delete account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"meta\" : {\n    \"requestId\" : \"f8lx\",\n    \"status\" : 1.1064307032484396E308\n  },\n  \"message\" : \"Sint quasi voluptatibus nam assumenda. Eveniet nostrum mollitia qui. Aut quis nostrum. Velit magni vitae voluptatum repudiandae doloribus. Ut qui inventore possimus cum nostrum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2052894-0287-3aaf-a6c8-157d29787743",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount",
          "schema" : {
            "allOf" : [ {
              "description" : "The basic response containing the unique ID of the request and the response status",
              "properties" : {
                "meta" : {
                  "properties" : {
                    "requestId" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "number"
                    }
                  },
                  "required" : [ "requestId", "status" ],
                  "type" : "object"
                }
              },
              "required" : [ "meta" ],
              "type" : "object"
            }, {
              "description" : "The message specifies what is done",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "required" : [ "message" ],
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 93
  } ]
}