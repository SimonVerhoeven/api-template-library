{
  "mappings" : [ {
    "id" : "4a0befac-bdd5-3bfa-b07b-909c9ca5e0ae",
    "name" : "Visual hash of this server - 404",
    "request" : {
      "urlPath" : "/servers/qey4/vash",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "4a0befac-bdd5-3bfa-b07b-909c9ca5e0ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerVash"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "7dde5baf-eac9-3f7f-876b-daa99e52b89d",
    "name" : "Visual hash of this server (application/octet-stream)",
    "request" : {
      "urlPath" : "/servers/m8k4/vash",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/octet-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"2u02e4dd01q59qdtnpcy4rdj56abam3u88779rah4b4c83kj3u3hnvkxpqemjrsgrm1prtjhonrhrdzyjzhuw\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "7dde5baf-eac9-3f7f-876b-daa99e52b89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerVash",
          "schema" : {
            "type" : "string",
            "format" : "binary"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "636a4f6f-c39f-32fd-aae3-ae9024211935",
    "name" : "Get or create a role for a specific user. - 404",
    "request" : {
      "urlPath" : "/servers/6087/users/6o62/role/",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "636a4f6f-c39f-32fd-aae3-ae9024211935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getOrCreateUserRole"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "4c3be9e3-16ab-35fa-b966-2bea00dce04b",
    "name" : "Get or create a role for a specific user. (application/json)",
    "request" : {
      "urlPath" : "/servers/j38w/users/a144/role/",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"role\" : \"z01unor1odw4ff4dvjav18aft76qy20qy06z84rmfr6tc5tu74gqbr0v0erhrwiutybo8n8ob8xvd7xlaps72wqwj74vin1slczq028neyzxz1kt0npizy4w6i2gjp9nysxjncxxmfilh4efli3e6t9fp32kvd99k6n0pyvhhcxuz22i1l69d6qg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c3be9e3-16ab-35fa-b966-2bea00dce04b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getOrCreateUserRole",
          "schema" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "0aa738c0-6d7d-326e-91c0-c03484de841a",
    "name" : "Get role for a specific user. - 404",
    "request" : {
      "urlPath" : "/servers/202r/users/z1q4/role/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0aa738c0-6d7d-326e-91c0-c03484de841a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserRole"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "a70259d3-cdc1-35db-8f12-b2248491877b",
    "name" : "Get role for a specific user. (application/json)",
    "request" : {
      "urlPath" : "/servers/k798/users/9d0c/role/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"role\" : \"z9yyfah4l9d5nooyyjqkeoxmy7g5g7q5uwr54mw8u0gsvdvws3b92bj9ql8pwjgdgtpqtym7zy9dnol2mrwts6ut1h84eagel1m7doz1kcazk5jg68q0wvifmdb26xpiwzp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a70259d3-cdc1-35db-8f12-b2248491877b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserRole",
          "schema" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Base64 encode role"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "f1a2b1dc-34f6-3cab-8cf5-09d2081697fd",
    "name" : "Push a login confirmation to the user's app - 200",
    "request" : {
      "urlPath" : "/servers/mb7r/users/zr24/provokelogin",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f1a2b1dc-34f6-3cab-8cf5-09d2081697fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "provokeLoginOnUser"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1a3663f8-3a8f-3f98-9460-38017b3323f7",
    "name" : "Delete specific attribute of a specific user - 404",
    "request" : {
      "urlPath" : "/servers/dfw6/users/i9s3/attributes/4ss8nphekqez49jgyu8wbod3bi4a13ligeqrq8ufutlvu2lyg3aih0h0oq3luj6ea6mlsrte7vhx7kmy7f0xw6827i7esnkcv4m29paj4jc6g3e62fpi7qfgqza1c6rf5ndsswdnj95",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "1a3663f8-3a8f-3f98-9460-38017b3323f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUserAttribute"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0d4c2ade-6078-3d20-8e99-56d5623d1898",
    "name" : "Delete specific attribute of a specific user - 200",
    "request" : {
      "urlPath" : "/servers/890p/users/3c92/attributes/gmdnvhtwtymvjd7i3vjxtmhq04vjsozfbfjs3yrod1plshlngjvhx57rvavq0m03vs2z4f68psvogu12q9vjl9rzdrgy2inyt8cdgo4xlwc4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0d4c2ade-6078-3d20-8e99-56d5623d1898",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUserAttribute"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "62461590-6f34-3de7-9251-901e2bd0cca0",
    "name" : "Delete all attributes of a specific user - 404",
    "request" : {
      "urlPath" : "/servers/1u4e/users/u1t3/attributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "62461590-6f34-3de7-9251-901e2bd0cca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUserAttributes"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "43ed7a9d-074c-3caf-ab22-ed9e408c33e1",
    "name" : "Delete all attributes of a specific user - 200",
    "request" : {
      "urlPath" : "/servers/uiyi/users/44bz/attributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "43ed7a9d-074c-3caf-ab22-ed9e408c33e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUserAttributes"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "10b6c263-c20b-3cb9-b479-89fe5154ea43",
    "name" : "Set all attributes of a specific user - 200",
    "request" : {
      "urlPath" : "/servers/7071/users/tu84/attributes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "10b6c263-c20b-3cb9-b479-89fe5154ea43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "setUserAttributes"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "3fdf4496-233a-3694-a199-5cbb5c805d48",
    "name" : "Update specified attributes of a specific user - 404",
    "request" : {
      "urlPath" : "/servers/w8rw/users/5895/attributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3fdf4496-233a-3694-a199-5cbb5c805d48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateUserAttributes"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0d363d50-edba-3694-9cbb-b5b14b722727",
    "name" : "Update specified attributes of a specific user - 200",
    "request" : {
      "urlPath" : "/servers/92k2/users/bxw4/attributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0d363d50-edba-3694-9cbb-b5b14b722727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateUserAttributes"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "c4e8f417-78d0-3e1a-a871-87e45ba5fd0d",
    "name" : "Get all attributes of a specific user - 404",
    "request" : {
      "urlPath" : "/servers/n55s/users/642t/attributes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c4e8f417-78d0-3e1a-a871-87e45ba5fd0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserAttributes"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "a4cc44f3-3f51-360c-8967-17e7edd3951e",
    "name" : "Get all attributes of a specific user (text/plain)",
    "request" : {
      "urlPath" : "/servers/k29t/users/0skw/attributes/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"yhi3xpm8arr55d3\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "a4cc44f3-3f51-360c-8967-17e7edd3951e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUserAttributes",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "9932dd98-1d33-3ca2-99fd-b11a6423a532",
    "name" : "Delete all accounts of a specific user - 200",
    "request" : {
      "urlPath" : "/servers/am19/users/vva5/accounts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9932dd98-1d33-3ca2-99fd-b11a6423a532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUserAccounts"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "3b5ceb9a-da2f-3789-aac3-4a19115448e4",
    "name" : "Get all accounts of a specific user",
    "request" : {
      "urlPath" : "/servers/r74f/users/pn6v/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalnumber\" : 4440276616555216770,\n  \"accounts\" : [ {\n    \"lastprovoke\" : 2186954377676915363,\n    \"blocked\" : false,\n    \"created\" : 945900645827078201,\n    \"lastlogin\" : 1603851971504488176,\n    \"description\" : \"Voluptas provident quis totam eveniet ipsum. Ut sunt iste inventore eaque ipsa magnam excepturi. Voluptas ut accusamus saepe iusto est distinctio distinctio.\",\n    \"id\" : 537047114724000316,\n    \"clientVersion\" : \"7k5wc2y674c8hv\",\n    \"userid\" : \"jw6v\"\n  }, {\n    \"lastprovoke\" : 2335931794448114843,\n    \"blocked\" : true,\n    \"created\" : 4653830840498845833,\n    \"lastlogin\" : 3589785215965538911,\n    \"description\" : \"Culpa ipsum quo architecto ipsum. Unde qui quo consequatur omnis nesciunt. Eos ut eligendi autem ut minus. Ut dolorem magnam voluptas. Totam minima natus.\",\n    \"id\" : 5549599940251830296,\n    \"clientVersion\" : \"rt9gdch4hihzlewwbpcsry4un9ngftn0\",\n    \"userid\" : \"a5ob\"\n  }, {\n    \"lastprovoke\" : 6981244248974155537,\n    \"blocked\" : true,\n    \"created\" : 3995963927952096468,\n    \"lastlogin\" : 1745632335347544056,\n    \"description\" : \"Quaerat natus quod et. Id quas earum consequatur. Est nihil alias quae.\",\n    \"id\" : 2608504507296991180,\n    \"clientVersion\" : \"cew0l3i4i3a5gc5laqmr9idkr5rwqj4bnnaezw59q6d7qf13z1n5p0lbc8198twectep84z7n64cwhwe1dw3nnhw1290jlro411z3jr1zrhwunmgwgcq1yakl35j53292e022fef7x1fo5fjno9kdlf25b1kkdvfnfq4k7ubm47q2u4zee1yyl0v0unlm5d0\",\n    \"userid\" : \"b6vm\"\n  }, {\n    \"lastprovoke\" : 3847838404548613140,\n    \"blocked\" : true,\n    \"created\" : 3509689930855341519,\n    \"lastlogin\" : 2321988642315466071,\n    \"description\" : \"Id nihil molestias nam. Velit minus dicta nam nihil. Et quas minus eum libero aut. Numquam aut ratione saepe officiis veniam expedita odit.\",\n    \"id\" : 5470702042384773963,\n    \"clientVersion\" : \"l0vb555bn93z8rjykj36h49r95xz7y3rteg463yuvfkalati2l041lxs3gae3fwgi528thkaq5nq1tp9j1nrwonoijq37h41gngyu9n8uhytr4jy7n5arfn\",\n    \"userid\" : \"395w\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b5ceb9a-da2f-3789-aac3-4a19115448e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "required" : [ "accounts" ],
            "type" : "object",
            "properties" : {
              "accounts" : {
                "type" : "array",
                "description" : "Array of accounts",
                "items" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "totalnumber" : {
                "type" : "integer",
                "description" : "total number of accounts"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "59872fe2-7b55-3b78-9e9e-0318858b220d",
    "name" : "Delete a specific user - 404",
    "request" : {
      "urlPath" : "/servers/7943/users/7yp9/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "59872fe2-7b55-3b78-9e9e-0318858b220d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "3e952fd2-79c3-31f2-9df6-6a0680570748",
    "name" : "Delete a specific user - 200",
    "request" : {
      "urlPath" : "/servers/44z1/users/ba07/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3e952fd2-79c3-31f2-9df6-6a0680570748",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteUser"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "5c29567d-529e-3c9f-a959-8884f5380bb0",
    "name" : "Get all users",
    "request" : {
      "urlPath" : "/servers/1152/users/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalnumber\" : 1486741281275829211,\n  \"users\" : [ {\n    \"numberaccounts\" : 4231690889056335411,\n    \"lastlogin\" : 1645133362722925998,\n    \"userid\" : \"59gv\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c29567d-529e-3c9f-a959-8884f5380bb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "required" : [ "users" ],
            "type" : "object",
            "properties" : {
              "totalnumber" : {
                "type" : "integer",
                "description" : "total number of users"
              },
              "users" : {
                "type" : "array",
                "description" : "Array of users",
                "items" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "33bf7b04-5e39-346d-9b79-81de1875711b",
    "name" : "Get transaction result for a given transaction. - 404",
    "request" : {
      "urlPath" : "/servers/0898/transactions/wzfu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "33bf7b04-5e39-346d-9b79-81de1875711b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTransactionResult"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "522b5a27-1097-3166-b3f4-193fa3831b9d",
    "name" : "Get transaction result for a given transaction. (application/json)",
    "request" : {
      "urlPath" : "/servers/9h75/transactions/9o49",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tstatus\" : \"vujmckq41hb8lx7f6t8qey7nbyp736q8i5sqymq393tj3aky7hcdvsml46xktyeg5d7aobc81qgoyi7dhyyzrs9nd91h6cez85zvees0jq2li2hc12czl47io8p96wmfqizkh8mfpcl1za9brjx2qdt2edl029\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "522b5a27-1097-3166-b3f4-193fa3831b9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTransactionResult",
          "schema" : {
            "type" : "object",
            "properties" : {
              "tstatus" : {
                "type" : "string",
                "description" : "0 = new, 1 = approved, 2 = declined"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "4c644c48-8d32-325a-8dd7-420ca8a18a92",
    "name" : "Create a transaction to be approved within the current session. - 403",
    "request" : {
      "urlPath" : "/servers/7ba4/sessions/transactions",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4c644c48-8d32-325a-8dd7-420ca8a18a92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createTransaction"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "b72d6f6e-daa4-3dda-b80d-1ab6ac950ebc",
    "name" : "Create a transaction to be approved within the current session. (application/json)",
    "request" : {
      "urlPath" : "/servers/s4xa/sessions/transactions",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tid\" : \"i86m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b72d6f6e-daa4-3dda-b80d-1ab6ac950ebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createTransaction",
          "schema" : {
            "type" : "object",
            "properties" : {
              "tid" : {
                "type" : "string",
                "description" : "Base64 encoded transaction id"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "399f3261-2252-3b9a-91fb-9b5bc6830766",
    "name" : "Register a userid for the currently logged in account. - 200",
    "request" : {
      "urlPath" : "/servers/g95a/sessions/registeruser",
      "method" : "POST",
      "queryParameters" : {
        "userid" : {
          "equalTo" : "yhne"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "399f3261-2252-3b9a-91fb-9b5bc6830766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "registerUser"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "a3fd6cee-6383-35f4-8a01-9dd79b6cd46e",
    "name" : "Generate data for a login qr code",
    "request" : {
      "urlPath" : "/servers/e96g/sessions/qr/login",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"qnye7wn29\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "a3fd6cee-6383-35f4-8a01-9dd79b6cd46e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getQrLogin",
          "schema" : {
            "type" : "string",
            "format" : "binary"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "7973f54f-a85c-37b7-827f-952771f18f08",
    "name" : "Generate data for an enrol qr code",
    "request" : {
      "urlPath" : "/servers/sfo8/sessions/qr/enrol",
      "method" : "GET",
      "queryParameters" : {
        "name" : {
          "equalTo" : "Gilma+Hagenes"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"l0gi3h6hthmq2700w6kbjkb3wbn2uasv555t1v41leln22qke739rwxutsnyv013y09mzzvw8dk8r0z8nnlsgovquemwtvfxljdi14ke9r0oxtrdk3\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "7973f54f-a85c-37b7-827f-952771f18f08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getQrEnrol",
          "schema" : {
            "type" : "string",
            "format" : "binary"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "e3dfbbb8-5245-38a8-a995-6b1161a02921",
    "name" : "Push a login confirmation to the user's app - 200",
    "request" : {
      "urlPath" : "/servers/w2i3/sessions/provokelogin",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e3dfbbb8-5245-38a8-a995-6b1161a02921",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "provokeLogin"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "1c338ff9-21e4-304f-b8c0-3d7026eb868e",
    "name" : "Force a logout on the given session - 200",
    "request" : {
      "urlPath" : "/servers/797r/sessions/logout",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1c338ff9-21e4-304f-b8c0-3d7026eb868e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logout"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "27ae0a3c-01fa-3a38-9b8a-d69ba3c1fe7a",
    "name" : "Generate HTML for the login block",
    "request" : {
      "urlPath" : "/servers/3484/sessions/html/login",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"cxj8xntrc8123ldi3lu9dnh6c078j0f148xosygcsm5nhc8ns6t3crjbw2l32zih6gb1x5c2dx7s2jki3yimn953wjnnez51g4hi3m0pw12td\"",
      "headers" : {
        "Content-Type" : "text/html"
      }
    },
    "uuid" : "27ae0a3c-01fa-3a38-9b8a-d69ba3c1fe7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getHtmlLogin",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "e277fa4a-b323-30c0-96cd-0fc5e84d8800",
    "name" : "Generic HTML to add to footer. Required for login/logout/enrol functionality.",
    "request" : {
      "urlPath" : "/servers/9s9f/sessions/html/footer",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"w9zq7r507npovup4kg7umlesomy4gvgbrlgf8ngurqavyi518d56rvdgk86us1vrupgngg01833dsr8bulk0ir4ua0dmhi78r5n2xtijggcop666k6kb2umpusmlinwp8lu9f7rx\"",
      "headers" : {
        "Content-Type" : "text/html"
      }
    },
    "uuid" : "e277fa4a-b323-30c0-96cd-0fc5e84d8800",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getHtmlFooter",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "56f63650-2b6c-31ba-a121-a1fde2e69a44",
    "name" : "Generate HTML to enrol a new user",
    "request" : {
      "urlPath" : "/servers/a8mo/sessions/html/enrol",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"fzkh8gksnuwqhq6p3rzg6qr0q6dudljkpku3e7m7o81td1jpsqyjtp743atjhn1j1t8xs92ar5b2qovvztm96tjwpjwsrg8q204jtb7yjz8rjrazyx40sqftumtb8n47rugdh4de6ki6onzknaztcc\"",
      "headers" : {
        "Content-Type" : "text/html"
      }
    },
    "uuid" : "56f63650-2b6c-31ba-a121-a1fde2e69a44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getHtmlEnrol",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "ba02fdaf-f502-34bc-bb23-871634714f56",
    "name" : "Check if the user is logged in",
    "request" : {
      "urlPath" : "/servers/e4rz/sessions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountid\" : 3914682563054896944,\n  \"hsid\" : \"g035\",\n  \"loggedin\" : false,\n  \"loginqrdata\" : \"2pr94qnck68mpmyozy1b249qbyyykcda7oiflomg58bkntn1t6yvh9snaqq5dpunlhys6ei3jre24\",\n  \"canprovoke\" : true,\n  \"pk\" : \"qom2nd31rszipezzcifzhd2xtr9q3f1ltkk7e7gof10gftoh18o2k8ktfzrf2hicy41atlxmvzltp6rmfqhu1mhm64j9ilz15akf5z0ny9pqyf3zkeje5oeotns5kws7fgteyfbec3ga8o68ay5eghl26l2dv1abydd0s8zptp65r\",\n  \"userid\" : \"jn8i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba02fdaf-f502-34bc-bb23-871634714f56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSession",
          "schema" : {
            "type" : "object",
            "properties" : {
              "accountid" : {
                "type" : "integer",
                "description" : "Account id"
              },
              "canprovoke" : {
                "type" : "boolean",
                "description" : "True if a login can be pushed from the server, false otherwise"
              },
              "hsid" : {
                "type" : "string",
                "description" : "Converted session id, used by the websockets"
              },
              "loggedin" : {
                "type" : "boolean",
                "description" : "True if the user is loggedin, false otherwise"
              },
              "loginqrdata" : {
                "type" : "string",
                "description" : "Base64 encoded data that is represented in the login qr code"
              },
              "pk" : {
                "type" : "string",
                "description" : "Base64 encoded public key of the nextAuth app. This uniquely identifies the account on the nextAuth app, regardless of the username"
              },
              "userid" : {
                "type" : "string",
                "description" : "User name"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "921f2900-9c37-3ef3-b692-048502896dd3",
    "name" : "Delete specific privileged attribute of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/v0o3/privilegedattributes/s6ztbqe2i1dm39",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "921f2900-9c37-3ef3-b692-048502896dd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerPrivilegedAttribute"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "7806220c-b13d-3964-b8f9-ea7b6a0f5ad3",
    "name" : "Delete specific privileged attribute of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/zpuh/privilegedattributes/h7qjib2mow49hrhq98voovvkbihrs010jo7hjsa6bfuwzm49fmniuqy77b2255dqim43f3tfurax5b3mrkqth1i8rchlowono155abjxj2fz2bat99g35vbwi61r9f4pjpw8rhoo1zh2o2pitdb7pd1r073houzuuiq2cokw8a5zpnkwcsuy2e4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7806220c-b13d-3964-b8f9-ea7b6a0f5ad3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerPrivilegedAttribute"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "c5b3f0d0-3f74-3641-ab4f-bd776bb556b4",
    "name" : "Delete all privileged attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/38c5/privilegedattributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c5b3f0d0-3f74-3641-ab4f-bd776bb556b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "701f0080-779a-3f0d-bf0c-8655cdd7735a",
    "name" : "Delete all privileged attributes of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/l3fc/privilegedattributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "701f0080-779a-3f0d-bf0c-8655cdd7735a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "d146f637-e166-341e-9f69-fb4d1b515831",
    "name" : "Set all privileged attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/fh3a/privilegedattributes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "d146f637-e166-341e-9f69-fb4d1b515831",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "setServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "b5d0973f-3098-3237-a021-a4a991a41ddc",
    "name" : "Set all privileged attributes of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/3b6e/privilegedattributes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b5d0973f-3098-3237-a021-a4a991a41ddc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "setServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "b100e3ef-c8fb-3879-ae48-23bf8cf43804",
    "name" : "Update privileged specified attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/oh6t/privilegedattributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b100e3ef-c8fb-3879-ae48-23bf8cf43804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "68160b63-1a45-3e07-9331-1f48187c0dc3",
    "name" : "Update privileged specified attributes of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/8v67/privilegedattributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "68160b63-1a45-3e07-9331-1f48187c0dc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "c61d28b4-9dad-3aaf-a58b-486b1b90b3cd",
    "name" : "Get all privileged attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/vll2/privilegedattributes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c61d28b4-9dad-3aaf-a58b-486b1b90b3cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerPrivilegedAttributes"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "3668b9a8-e640-3397-899e-fc7c2d02c3f3",
    "name" : "Get all privileged attributes of a specific server (text/plain)",
    "request" : {
      "urlPath" : "/servers/00d1/privilegedattributes/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"b227r4i3vz4sxb8tch0as52nvtg61oa31z1abjm07yxbe\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "3668b9a8-e640-3397-899e-fc7c2d02c3f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerPrivilegedAttributes",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "0eba5da5-187c-3984-b7fe-eeca293bf6bc",
    "name" : "Revoke all permissions for the specified server and role. - 404",
    "request" : {
      "urlPath" : "/servers/ni6w/permissions/tz34",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0eba5da5-187c-3984-b7fe-eeca293bf6bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "revokePermissions"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "4e5187d9-4a15-30aa-addb-edf738edabf0",
    "name" : "Revoke all permissions for the specified server and role. - 200",
    "request" : {
      "urlPath" : "/servers/mkzi/permissions/cbnk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4e5187d9-4a15-30aa-addb-edf738edabf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "revokePermissions"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "06b92626-6794-366b-92e0-4ea5b657e997",
    "name" : "Set new permissions for the specified role on a server - 404",
    "request" : {
      "urlPath" : "/servers/yw7s/permissions/qs2y",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "06b92626-6794-366b-92e0-4ea5b657e997",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "grantPermissions"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "30647a27-9e17-3c37-8028-b8fb3ea8ff36",
    "name" : "Set new permissions for the specified role on a server - 200",
    "request" : {
      "urlPath" : "/servers/yb66/permissions/3j6z",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "30647a27-9e17-3c37-8028-b8fb3ea8ff36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "grantPermissions"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "937c5e9b-b250-3e51-844d-b47f697f3e6a",
    "name" : "Get all permissions for the specified server and role. - 404",
    "request" : {
      "urlPath" : "/servers/752s/permissions/7bde",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "937c5e9b-b250-3e51-844d-b47f697f3e6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getPermissions"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "e75af39c-c67f-3dd8-a420-fc5a1902b530",
    "name" : "Get all permissions for the specified server and role. (application/json)",
    "request" : {
      "urlPath" : "/servers/7i28/permissions/dsh7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ {\n    \"server\" : \"ci2\",\n    \"role\" : \"76tfoapcg1\",\n    \"acl\" : \"6t14xe4vlf5yb1wvcvhxzn0skrmwvi\"\n  }, {\n    \"server\" : \"li3cwcokm1ih99aqefxmcs7iryz8s4jfwayj3z1wa7uooosxexryik7ob9xxkci5e29xsh03etbv2qhfbbndfen39eeqcbqpoc4k7imv3a1gbd15b6t9dsjvm964afgx683ponuqh7vv7s9echawzv8iex4fal3of0pro28vjrbuyf0avpkz1chm8jeeyhb3d58wm\",\n    \"role\" : \"idgpet\",\n    \"acl\" : \"vav68eq6l151r1us8l6mwytzm9v0xfh04k1gch2q4hzzrfgu7bfzhkiaydiuxc2ximusr73l6y2p8ptx9zydoiyeihxt0mg9qa0gvennye1vqx2jzciu1veob2eatxsfbok16adwghxc04aekrxtwcvqw7acalxbtqpy2td4d5u4oh0o8qogh9spl4g\"\n  }, {\n    \"server\" : \"y10zk23qx544tvr34enzcqk017x1gx9sbjhulmn3mjvq36r3gfybvhawx2arw1n6zo73vut7qgzgy9d0tk8uwf7a3m712t2j2ua283rkbwy92mty4xoinkrfw6slojsg1idjxgm2lvy4mwzqstzd3ijbi4o1phzcngkayly\",\n    \"role\" : \"iyg16cicrar6kwi26u88ad7aejq0vh4snapfh4rk6akfxieaudkzodfub8pijat8npx1spy8pknbw8pygbdonc6j63r6jfv6zpt9i230wqhwqsqsmegiop6mzmnlo89w1t0plsy70mcuvy3yyb8p2dlfer6694p0j5ukunyi7637yhi9jbepnjgy7cz9fjpm49\",\n    \"acl\" : \"4gmrx85tw26uvf96u0sg3lpuwkcjmn0xzy987yvd69qgd3qsoc3k1xa7semxnxqa5scluh4d53job57n8fr2wtsfgowr2wauvc3e52kmm2ic8ufpacqj387m62lsrw9\"\n  }, {\n    \"server\" : \"u8ygn0uxncz6rkiqyfq1rq9txoo5w17jxt7kqj2rwnpr2p6hby5ulyu1gsct7l8y56qz8ptl0fu796lawugj8ibve5qi7vnhoaarp51sbg5utacgekj84f08s24cmuaoircyts0cm2wk8dyc9t6phd1fgq8k7uj62sw3ohhgw15m4s3hor0mjav1a\",\n    \"role\" : \"3u5z0rmkktehs11ow5wex06ijzhs0kkibma7l1a8i0q1up7cmsnx5gmy7krp1t7o0lkdp4ogu3svuooxzwle5winkqi5nj2df337ut2n1ioiyheqoxun9idd22selod0wwuzu3m6ih5pt83sd39ex9nik8hqhnx6lkrk8yv1i759j6rvlx\",\n    \"acl\" : \"owt9nh9x9uy306z8ssqju11rsrof84q8qfu1afb0znxhq5bwqom04i63jxsuf3clt3i4fc5hd7n7fchs53yu6vek9ou3gvu9ma\"\n  }, {\n    \"server\" : \"5xlm\",\n    \"role\" : \"jvd2u63cbyc2au7qgb4iw9omwwqnxdl04g0olniogah747gc7cy83g363qzwby682uur79s5bka4k5ere1k7j53hfqptjausbfap2nqfwe3jw5lw9fkm0x8arz2som8jlqqukqwqdfsf3uk\",\n    \"acl\" : \"kyjrsl67alp0j17s7oaedu5hc0zc074f437v0xsgjvkw889wfyw749vrru796udtsmgff73ka7m752xh1kqtjvzjhpd4ahlqcfc5g32otifjkknjdpklny7lj53xjiu9sm2ybuvc503j0o3tyqmt7edrz2rod4138a5i5fnbu07y29kcxrxq7dx8yj3ldzhws9ga9u\"\n  }, {\n    \"server\" : \"tq0jequruhh7kp9aa35rp9h0ijhdzu7sz8wk258lenpngq33rqmg017sj6w6p4ccb5rtbe4oqohty13e1xwzjtd7ix9ucahsjb17w9x95ncxmvq87b659gb22dlzv1qc9i2m7uwfossf4dv8edqiykrwclyneagc5nemji8iysg3ph\",\n    \"role\" : \"42z9pwmh76ibqbixb0qkhzcg8los12godr4rhvqhz0u5j4ccd1mpje9a23ldnorxodf\",\n    \"acl\" : \"3gzhhmah6i0c7xcmk0x527i07mxe4uege3dw5xcj66gmegbdes2nyq9mqk0ejyfut\"\n  }, {\n    \"server\" : \"3hwxap022cb21zbm1fjz6rvwll6404irivpzcvinhmes0shxk08d2oydna47clylvwc7i3d8kx05hfpkgxm8wuveiavcz\",\n    \"role\" : \"t44jnf9pqscg8j6dvgzj8lnw3lnd7ydty6ejzjaezmwiobxp58bk8jd9ty02jmaohokablg8so404u1of902xuvmlu965or8\",\n    \"acl\" : \"0yk9zor53ahduze9y0facad3e3fbf4q6so2wkfz08klapem3fvvbkhy5btzrbb503453kcib1o3xfbqrrhh259xun03upfbffl0n27suo66mi32ccaynykwlaybcgvaxzbn2rn57tpzzg9ekfux60av4cgmqy4jqzm3rnx\"\n  }, {\n    \"server\" : \"aic3pcxgffdoanr3fqqkkgn08ehe\",\n    \"role\" : \"e5oz9nw9jd7ha1cfieq8z4kjj56c3ewz6uzw8nk9g3ubm58748cdn97gf6wq7bo9wyg7uy8rhpt1tb513b6zc5z7o1c114bwws14i7f9cdfrj73dxpx1gr2yutntx042mtgps894912fg8hqzcq4x4pntd3jlj4kmj3nsarw\",\n    \"acl\" : \"kuieiv3kq7u23x9okm15rv0vx0y3m3qjpmrny7km05derlovyx94d2ypugrk2quv1v3ontqt12lj8kqtlfqliwlmdmmifuqosrpbd1tp2h96kmixksgdjnne983b3bro173a5ziirv0nu04j0tus2x8u32qdk1cp0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e75af39c-c67f-3dd8-a420-fc5a1902b530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getPermissions",
          "schema" : {
            "required" : [ "permissions" ],
            "type" : "object",
            "properties" : {
              "permissions" : {
                "type" : "array",
                "description" : "Array of permissions",
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "e3236fe8-d418-3735-a25a-d067caa7d6c2",
    "name" : "Get all permissions for the specified server. - 404",
    "request" : {
      "urlPath" : "/servers/inhb/permissions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e3236fe8-d418-3735-a25a-d067caa7d6c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAllPermissions"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "44e98934-6edf-3d73-a29b-516eba55ebb2",
    "name" : "Get all permissions for the specified server. (application/json)",
    "request" : {
      "urlPath" : "/servers/8nh9/permissions/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ {\n    \"server\" : \"2d531tb5l31bojkqz8pprmm2w4f1w8n6mfytd50r7nlc7uphung2juegfgt64v3n61c2bjx6z07zsdbdohhg33tplcqhkn04nbim9tvm9ixfc4zs25pjae3ucvrmpac2dqc429mjpmd2irt8aria1l41udnxyaonoh2i04iqzca5zq8j9o2qfl0gpmaxb\",\n    \"role\" : \"cok3egb3ujjiszv1ad0y3a6a5eqz2ceiwe9mudt1vbr4hteje45nlwfck31s7zz5wzznqp7gd6ahjvvsxz9s4a3ur8sdrlrk39f05fdq9jb4qpkjvuhwtpw0ingaxn2x2anwwojd8gil5ia115ojntk1tuk\",\n    \"acl\" : \"6iuk7ddfdvpanjd0s55utxn738vrxo8d3u8x1z8ozs91vfrsasrsxdw5wvjd8xle82fud3ox4ferjg2m\"\n  }, {\n    \"server\" : \"pzpkl3pz1t91qezkboat3p3r5qogd06j8a9mehfrx26a56h3bc9wrvvx6y6cq3zy44puwte7va1absqztlvucp6ojsnsrdtrydx\",\n    \"role\" : \"x2suqic10eks3jav95az7s6sdl71z86ph446x46tl16oz9b8m6z00xgn9njb01eyzha115hswvngun29mw4xczwnl3650ihw71f5ulwqjqfviezezv9q23wczx2lch1xhsi039lehkz5ryd\",\n    \"acl\" : \"5kfxay5tj29pq4jps78d5zncy34cgfokgz2jz4vqfk1xncx4k8b71f3pf876ah1rz6jr8k4kl0tqxmdko27c46vbcwsegkht1l6cs4qpmlr70my984i60cw5i0l1tesvway9ld4n6o81octbs4\"\n  }, {\n    \"server\" : \"9paq192nvy67jv1np99qq1a3dds5luk8as2c0685v26e6yxne4uig2ahk6guhxg1i52z6xu8nljmc2xdmzaoz7i2fjg6yx55ryixqlm8l1t7udydd884284654qd6hx\",\n    \"role\" : \"wi31qerirg39dts0uhnntyvbjx44x4n3f5aw3bggybm3k6170ew9len3w4quo6ve4ivddrwb68swdwqvci2uhcbm44\",\n    \"acl\" : \"67959j9qnes3oefjpzoy2ut56tsan6x\"\n  }, {\n    \"server\" : \"4n5secene5u1jk9elfy2z08s1f3vj2kuos1ni51lujk6am4ggpt8djbdyxybafq0egxl28y66zv79uruim6qw273gs5tvxlz1o4xqs5pjtqjii4c3q51qtu6yjihb7elxebzqaicbmi3bg5r825cq0iyty2mqyktnl6guqh6213uh5htcl3oji9fgikk4uz3zt40i46\",\n    \"role\" : \"uooh33jg9a47cen3ey4jre7045wy8psiot9sld149yjg2zup\",\n    \"acl\" : \"khs7a62v1r19zj5v0gfj0cs36m6og9jbweadrnme9pptcyw3g8yhszk7ymtzdi2os6npceihabugrxlwdtmry3haqolrqj5rw58ydfuddyzurjq3kc458q1j48w4qyqyk8k1r6mw8ho74jwqagjevma\"\n  }, {\n    \"server\" : \"zymn84znyq9vd3e49hv53ufn15rn8zqicntkbyko3rbb3z30f5hpv2htnn9a4gsxhmn14knhw4x6h588uczgkoj9fnzh681vkjy3mohsps2y89wxjcx67qmxqkn3v\",\n    \"role\" : \"quzobgqttosp8oklzcgxa1jeuh0t85eg2z0wbnkpm73dz7bjyq209kftku39kk2bxj73xuqtnni6pa0k2lfun08c1aq5ge06gqcs55w2d36dlj524ic6xrkt8s68qq\",\n    \"acl\" : \"yie7j4lj22dnman477i20m52emhn1htnc2r5ml410yjy7qc0ib6rp63clkkvkatlp31dxlyzhe8p89gq10qvyrqkhg45oxv3070nyvuahc8vp\"\n  }, {\n    \"server\" : \"suhgk92y7lw2uvurxa7lyqdcubporn4ejw0\",\n    \"role\" : \"galgetk3a7wvcmn22rjsi10uv6lt4j8bsnxlpb9uwh241rrd44nxrymvcrjl3hmyhgh4xo3vkdth4wpa5vhbz4c0xecsjt82gi2xmwdk6ptll9sdhs1lf38vdp0v78h9rgv65zxzukzdx\",\n    \"acl\" : \"7ijoses30fq8ye9ju2vtz44vzmruswc9s58h8gnolil5chn9og1jdy3bkhh42voz7r34lqegiqj67pjzp37dmtg72uwsg8x34o5ifgj629syc941bz2f2ydl09p41sxwoc529d\"\n  }, {\n    \"server\" : \"3crazptbw45hm1iaelwrvhijf0tm7bfc4nku3eb6oulu8biage5763u\",\n    \"role\" : \"t93wj9kly9c90yz01linbirtuc6r3njwfsoyzacna6wkj01fxx6iieucwvnwrtst4igvix8srr6buutnkdaixy5c9q07x84cp92j779xxm0afneglxrz9utiievjgrb26lfqij75xghe831wv0c5l7xu1b7ao97njkh4wl15s4d1tauuzvh85jf779ozur5e\",\n    \"acl\" : \"kzeusyhojs3abx7lqisbtjfgtc6uje2oqlcw93ww6wmq7i6140ow6i13u0tl1l6ndch3dxx6r2xl7wjw8xscntqd3oxkdr9rnnll48u5h14evobe60cbhq67j\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44e98934-6edf-3d73-a29b-516eba55ebb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAllPermissions",
          "schema" : {
            "required" : [ "permissions" ],
            "type" : "object",
            "properties" : {
              "permissions" : {
                "type" : "array",
                "description" : "Array of permissions",
                "items" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "2a095f95-7a7f-3334-a6a6-f997c2b02ff8",
    "name" : "Delete specific attribute of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/x93t/attributes/q1q30dj00ezstzjvl2l0z6bg34n9pltryq5z7rouuix8njfq71unhkfu32i5giflcolmcuokw3x0n9w4brtuytx485wl72wdpmau6v8ba3vq5muyjzkpyike8qfj2osa92kx5cfhg040u5484nv02i4td0utp52h82f16c2murygeirtuh8f11j",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "2a095f95-7a7f-3334-a6a6-f997c2b02ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerAttribute"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "e81a36f7-0633-3030-97d4-51991b960188",
    "name" : "Delete specific attribute of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/z02w/attributes/f25f40r0isi4vnswafya96pznbiwlso6yhksgwkcvbyt7274ddcw83ps8sd1cirm1ry4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e81a36f7-0633-3030-97d4-51991b960188",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerAttribute"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "59609a88-90e8-3253-b2a6-41117751629b",
    "name" : "Delete all attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/m320/attributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "59609a88-90e8-3253-b2a6-41117751629b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerAttributes"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "7ff09031-9db5-3196-af1c-fd44cc1e54c4",
    "name" : "Delete all attributes of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/4kr8/attributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7ff09031-9db5-3196-af1c-fd44cc1e54c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServerAttributes"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "25d1d174-58d8-38b9-987c-3256757e5dd3",
    "name" : "Set all attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/4suv/attributes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "25d1d174-58d8-38b9-987c-3256757e5dd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "setServerAttributes"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "d741c6ef-1fcf-3b8b-a140-b54f84b708e5",
    "name" : "Set all attributes of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/33px/attributes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d741c6ef-1fcf-3b8b-a140-b54f84b708e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "setServerAttributes"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "9200b5a2-6efe-357e-994c-c382bb2cfe9b",
    "name" : "Update specified attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/4x6e/attributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9200b5a2-6efe-357e-994c-c382bb2cfe9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServerAttributes"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "8188b59e-1467-3af5-9eae-13434682fa89",
    "name" : "Update specified attributes of a specific server - 200",
    "request" : {
      "urlPath" : "/servers/awf1/attributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8188b59e-1467-3af5-9eae-13434682fa89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServerAttributes"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "32ed3819-3172-35f7-8fe9-e4565f454c4d",
    "name" : "Get all attributes of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/zr5w/attributes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "32ed3819-3172-35f7-8fe9-e4565f454c4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerAttributes"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "3e2b948a-3848-34df-b64b-69c0e667de17",
    "name" : "Get all attributes of a specific server (text/plain)",
    "request" : {
      "urlPath" : "/servers/1514/attributes/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"nup62mu8a6vvhvdnsiig3bc1h78waomoeiag5nysisg45sbrcjhhpzicrvth8\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "3e2b948a-3848-34df-b64b-69c0e667de17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerAttributes",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "a8a24d0e-03de-3a34-ab7b-64d6ffca349f",
    "name" : "Update user of the given account. - 404",
    "request" : {
      "urlPath" : "/servers/h7ir/accounts/7410337658089543717/user",
      "method" : "PUT",
      "queryParameters" : {
        "userid" : {
          "equalTo" : "9u79"
        }
      }
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a8a24d0e-03de-3a34-ab7b-64d6ffca349f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateAccountUser"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "bdff1ec8-5d01-3d78-91dc-2bcf7e2ec3d7",
    "name" : "Update user of the given account. - 403",
    "request" : {
      "urlPath" : "/servers/sfb3/accounts/7346750224261447721/user",
      "method" : "PUT",
      "queryParameters" : {
        "userid" : {
          "equalTo" : "1071"
        }
      }
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "bdff1ec8-5d01-3d78-91dc-2bcf7e2ec3d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateAccountUser"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "5ce83420-ee18-3178-a333-6055e3e15632",
    "name" : "Update user of the given account. (application/json)",
    "request" : {
      "urlPath" : "/servers/i03m/accounts/7133921605652422968/user",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "userid" : {
          "equalTo" : "i082"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastprovoke\" : 1038723422716151138,\n  \"blocked\" : false,\n  \"created\" : 3579759139084429718,\n  \"lastlogin\" : 7612422695808379683,\n  \"description\" : \"Accusantium aliquid asperiores. Sapiente occaecati quia ipsa in nobis. Voluptatem fugit est unde sit laboriosam. Cum minima perferendis iste.\",\n  \"id\" : 6574119033395298004,\n  \"clientVersion\" : \"81ecvfm1otczlj4dun9cwlp4wrq4xlqmne90fqrq4zt2w46up8bw05gfstvitpirvlsqx0m0qebbqv27nulgpg7bhsnbtlrasftt8ypoq4n6v1999a5zxjhyiugd7askjom4ymmhp2lbram8z2g0p9e1whwzajqsswkhm7chf0pu2wdf\",\n  \"userid\" : \"5ny0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ce83420-ee18-3178-a333-6055e3e15632",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateAccountUser",
          "schema" : {
            "required" : [ "description", "id" ],
            "type" : "object",
            "properties" : {
              "blocked" : {
                "type" : "boolean",
                "description" : "True if the account is blocked, false otherwise"
              },
              "clientVersion" : {
                "type" : "string",
                "description" : "Version nextAuth client in the app"
              },
              "created" : {
                "type" : "integer",
                "description" : "Timestamp of creation",
                "format" : "int64"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the account (e.g. device name)"
              },
              "id" : {
                "type" : "integer",
                "description" : "Account id"
              },
              "lastlogin" : {
                "type" : "integer",
                "description" : "Timestamp of last login",
                "format" : "int64"
              },
              "lastprovoke" : {
                "type" : "integer",
                "description" : "Timestamp of last provoke (push message)",
                "format" : "int64"
              },
              "userid" : {
                "type" : "string",
                "description" : "User name"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "c97f4865-1ce4-3d8a-aee3-c6578e6eaa06",
    "name" : "Push a login confirmation to the user's app - 200",
    "request" : {
      "urlPath" : "/servers/h7gk/accounts/8195172464083039835/provokelogin",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c97f4865-1ce4-3d8a-aee3-c6578e6eaa06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "provokeLoginOnAccount"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "4e2dbe56-f543-3960-a7e2-c6a34f87abea",
    "name" : "Delete specific account - 404",
    "request" : {
      "urlPath" : "/servers/bz2n/accounts/1222060764708009838/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "4e2dbe56-f543-3960-a7e2-c6a34f87abea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "4caffdf2-9c3d-3f9f-8e85-ab12a7cdc637",
    "name" : "Delete specific account - 200",
    "request" : {
      "urlPath" : "/servers/9r9i/accounts/5176329707307288154/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4caffdf2-9c3d-3f9f-8e85-ab12a7cdc637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteAccount"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "3aeed419-6b22-380f-a786-df0b296535e4",
    "name" : "Update specific account - 404",
    "request" : {
      "urlPath" : "/servers/21a6/accounts/6182645325786722475/",
      "method" : "PUT",
      "queryParameters" : {
        "blocked" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3aeed419-6b22-380f-a786-df0b296535e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateAccount"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "a143ee7d-1e32-3e19-a47f-b93fb90a1b7e",
    "name" : "Update specific account (application/json)",
    "request" : {
      "urlPath" : "/servers/8407/accounts/5645672491740450464/",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "blocked" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastprovoke\" : 8254908714597316515,\n  \"blocked\" : true,\n  \"created\" : 2321830507973772754,\n  \"lastlogin\" : 1810315030278742137,\n  \"description\" : \"Sed ut ut sapiente consequatur totam et ad. Voluptatem exercitationem autem reprehenderit dolores ipsa. Quod ut iste exercitationem nostrum aspernatur. Velit est sequi aliquid. Laborum dolore qui quia\",\n  \"id\" : 2104355139834050076,\n  \"clientVersion\" : \"o6bm9xkc03c6hcwxfva34mqrtf1r2h2nptdrhvhh3dmpwaoix13dglkysp87kdgylzmkj1k7ew6wi95l8hgikyrcl2cgksq2lp7xaeyeany2vpcittkuk55a0gg7s2a1ku338n83yakxsibdwrfbk51eal1q\",\n  \"userid\" : \"67kv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a143ee7d-1e32-3e19-a47f-b93fb90a1b7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateAccount",
          "schema" : {
            "required" : [ "description", "id" ],
            "type" : "object",
            "properties" : {
              "blocked" : {
                "type" : "boolean",
                "description" : "True if the account is blocked, false otherwise"
              },
              "clientVersion" : {
                "type" : "string",
                "description" : "Version nextAuth client in the app"
              },
              "created" : {
                "type" : "integer",
                "description" : "Timestamp of creation",
                "format" : "int64"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the account (e.g. device name)"
              },
              "id" : {
                "type" : "integer",
                "description" : "Account id"
              },
              "lastlogin" : {
                "type" : "integer",
                "description" : "Timestamp of last login",
                "format" : "int64"
              },
              "lastprovoke" : {
                "type" : "integer",
                "description" : "Timestamp of last provoke (push message)",
                "format" : "int64"
              },
              "userid" : {
                "type" : "string",
                "description" : "User name"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "12883a32-ebe9-3b71-95a7-c8f0247b5dc9",
    "name" : "Get specific account - 404",
    "request" : {
      "urlPath" : "/servers/n924/accounts/1267277182248149007/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "12883a32-ebe9-3b71-95a7-c8f0247b5dc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccount"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "12eadc45-5282-3553-b6ba-da2fc5c16e02",
    "name" : "Get specific account (application/json)",
    "request" : {
      "urlPath" : "/servers/uuv8/accounts/3749452952523666978/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastprovoke\" : 2907343435593055662,\n  \"blocked\" : false,\n  \"created\" : 3214589017582141720,\n  \"lastlogin\" : 8493956026214373929,\n  \"description\" : \"Atque tenetur neque fuga omnis cumque et ut. Dolores rerum omnis. Dignissimos rerum atque in iste ea asperiores. In occaecati non delectus quam reiciendis similique molestiae.\",\n  \"id\" : 7948432898867873955,\n  \"clientVersion\" : \"7kuayjs600141kaddjvw2kwyc2qrlpvbycxydxi13o09ulqnckfrgj03nzo46dm7z08xmnf17\",\n  \"userid\" : \"093m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12eadc45-5282-3553-b6ba-da2fc5c16e02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccount",
          "schema" : {
            "required" : [ "description", "id" ],
            "type" : "object",
            "properties" : {
              "blocked" : {
                "type" : "boolean",
                "description" : "True if the account is blocked, false otherwise"
              },
              "clientVersion" : {
                "type" : "string",
                "description" : "Version nextAuth client in the app"
              },
              "created" : {
                "type" : "integer",
                "description" : "Timestamp of creation",
                "format" : "int64"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the account (e.g. device name)"
              },
              "id" : {
                "type" : "integer",
                "description" : "Account id"
              },
              "lastlogin" : {
                "type" : "integer",
                "description" : "Timestamp of last login",
                "format" : "int64"
              },
              "lastprovoke" : {
                "type" : "integer",
                "description" : "Timestamp of last provoke (push message)",
                "format" : "int64"
              },
              "userid" : {
                "type" : "string",
                "description" : "User name"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "522bc95a-d5a2-3454-9fc7-537446c3e389",
    "name" : "Get all accounts",
    "request" : {
      "urlPath" : "/servers/0v0k/accounts/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalnumber\" : 5512724370658246760,\n  \"accounts\" : [ {\n    \"lastprovoke\" : 6864901765503568870,\n    \"blocked\" : true,\n    \"created\" : 4326712197904321784,\n    \"lastlogin\" : 4280894469321981729,\n    \"description\" : \"Nihil deserunt dolorum praesentium. Nulla et dolorem dolorum laborum aut nesciunt. A odit non numquam. Ut quia quia enim aspernatur voluptatem suscipit. Quis ut qui eligendi commodi qui.\",\n    \"id\" : 163650362748121830,\n    \"clientVersion\" : \"8j6bgnrs908h1aln448i5ai1ej2jgtn62bbe45eqh3esmkgnq2t3ebpo6e4y25fpc7lakum7ebmpf2nzl9da5hj39\",\n    \"userid\" : \"8960\"\n  }, {\n    \"lastprovoke\" : 1220530487505961001,\n    \"blocked\" : false,\n    \"created\" : 400737994534695161,\n    \"lastlogin\" : 6371638892987804278,\n    \"description\" : \"Incidunt aspernatur voluptatibus ipsa nobis quia. Rerum in facere et. Commodi soluta dolor et nihil nihil nihil est.\",\n    \"id\" : 8201980124521518539,\n    \"clientVersion\" : \"2f903m3y4p0lgw9vs0cjm3k6qmizs1lbp6eqhmd121\",\n    \"userid\" : \"h0e9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "522bc95a-d5a2-3454-9fc7-537446c3e389",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAllAccounts",
          "schema" : {
            "required" : [ "accounts" ],
            "type" : "object",
            "properties" : {
              "accounts" : {
                "type" : "array",
                "description" : "Array of accounts",
                "items" : {
                  "$ref" : "#/components/schemas/Account"
                }
              },
              "totalnumber" : {
                "type" : "integer",
                "description" : "total number of accounts"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "b290a9f4-1239-37c0-8cea-a2c0d4cd5d06",
    "name" : "Update configuration of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/ij9g/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b290a9f4-1239-37c0-8cea-a2c0d4cd5d06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServer"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "6bae8f0a-6ff4-3007-b3a2-241ff1409190",
    "name" : "Update configuration of a specific server (application/json)",
    "request" : {
      "urlPath" : "/servers/4z57/",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"owner\" : 8141727109519042297,\n  \"serverFlags\" : [ \"eegj\" ],\n  \"lastLogin\" : 7861487273781401120,\n  \"pinTransTimeout\" : 7863893872244211487,\n  \"accountCount\" : 3593359345968743712,\n  \"siteurl\" : \"https://web.example.mocklab.io/409811\",\n  \"pingTime\" : 3189061227402422536,\n  \"appios\" : \"27c6x1m3bx7vott9p0gq7hjd5vqrplafghyzmeli08ca6\",\n  \"serverName\" : \"Jed Boyle\",\n  \"appurl\" : \"https://web.example.mocklab.io/069643\",\n  \"serverid\" : \"6x34\",\n  \"serverpk\" : \"9uczw5tx7lnj08t47z42mwc25k9koqhsy07zersohrx2c24arxav7pgm13p9t3z0qg0ajkl640y9zn2l5kfdd76ofjd4n91rv634ngm0f479hnxd5alcfw7f5srxqdqsrdclxlf6k73wej6tjc64inys2iygbufg4zzphphjhw6kv2hlb6s\",\n  \"pinTimeout\" : 57327433015205792,\n  \"wsurl\" : \"https://web.example.mocklab.io/254387\",\n  \"appname\" : \"Mr. Steven Stanton\",\n  \"logo\" : \"cm3p9mvpbjg8ohc77y9k88p5okis0t0q96a86ulr4p50kv7zs\",\n  \"appandroid\" : \"h8qw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bae8f0a-6ff4-3007-b3a2-241ff1409190",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServer",
          "schema" : {
            "required" : [ "logo", "pinTimeout", "pinTransTimeout", "pingTime", "serverFlags", "serverName", "serverid", "serverpk" ],
            "type" : "object",
            "properties" : {
              "accountCount" : {
                "type" : "integer",
                "description" : "Number of accounts registered with this server"
              },
              "appandroid" : {
                "type" : "string",
                "description" : "URL of the app in Google Play"
              },
              "appios" : {
                "type" : "string",
                "description" : "URL of the app in the App Store"
              },
              "appname" : {
                "type" : "string",
                "description" : "name of the app"
              },
              "appurl" : {
                "type" : "string",
                "description" : "URL (prefix) to launch the app"
              },
              "lastLogin" : {
                "type" : "integer",
                "description" : "Last login on this server",
                "format" : "int64"
              },
              "logo" : {
                "type" : "string",
                "description" : "Base 64 encoded logo"
              },
              "owner" : {
                "type" : "integer",
                "description" : "Owner id"
              },
              "pinTimeout" : {
                "type" : "integer",
                "description" : "Time (minutes) since the last time the user entered his PIN, that the user is not requested a PIN at login. -1 means that the user is never asked for a PIN before logging in, 0 means that the user is asked every time he wants to login"
              },
              "pinTransTimeout" : {
                "type" : "integer",
                "description" : "Time (minutes) since the last time the user entered his PIN, that the user is not requested a PIN at transaction approval. -1 means that the user is never asked for a PIN before approving a transaction, 0 means that the user is asked every time he wants to approve a transaction"
              },
              "pingTime" : {
                "type" : "integer",
                "description" : "Time (seconds) that the nextAuth app has before it needs to reply to a ping request from the nextAuth server (continuous authentication)"
              },
              "serverFlags" : {
                "type" : "array",
                "description" : "Server flags",
                "items" : {
                  "type" : "string"
                }
              },
              "serverName" : {
                "type" : "string",
                "description" : "Server name"
              },
              "serverid" : {
                "type" : "string",
                "description" : "Base64 encoded id of the nextAuth server"
              },
              "serverpk" : {
                "type" : "string",
                "description" : "Base64 encoded public key of the nextAuth server"
              },
              "siteurl" : {
                "type" : "string",
                "description" : "URL of the main website"
              },
              "wsurl" : {
                "type" : "string",
                "description" : "Websocket URL"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "b4adc861-2b0e-3de8-b006-7152e9966511",
    "name" : "Configuration of a specific server - 404",
    "request" : {
      "urlPath" : "/servers/hkgx/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b4adc861-2b0e-3de8-b006-7152e9966511",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServer"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "2a63c332-863f-3117-bad2-c857aa14211e",
    "name" : "Configuration of a specific server (application/json)",
    "request" : {
      "urlPath" : "/servers/359m/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"owner\" : 7175255822944986191,\n  \"serverFlags\" : [ \"dphjjmsxoxkolot012hmisdkc49vn1r1nrsdsebbsuiuzknkyohggs0rlu7dwbwkguao3j853t5ufow3v5pos07afvvrwx6wryanqzixeasnhr8k9lv8wsyc4lphxhon9cunv5tn5qympkm3k2mef4\" ],\n  \"lastLogin\" : 7615227442068880199,\n  \"pinTransTimeout\" : 7615340617719634422,\n  \"accountCount\" : 7322509116220240721,\n  \"siteurl\" : \"https://web.example.mocklab.io/535185\",\n  \"pingTime\" : 7796413731412857828,\n  \"appios\" : \"2vaincjongy073fyyumdqro8e543kcnsg6sxdsaz9gkm3rmk0wgc3swrql41ztpjz\",\n  \"serverName\" : \"Jean Kilback DVM\",\n  \"appurl\" : \"https://web.example.mocklab.io/278700\",\n  \"serverid\" : \"55d4\",\n  \"serverpk\" : \"l4dboi8eimh24fi053b32dd62g5zsjvndl2pppmqai5vp0mxmmo1olsxq3fvsy35xskfd23gvh7kah8rephom9mg077umhw98c9wrmqe9ultytoyj4f3pdeaa0ci96kz8f5nncx0jzqqx0tpujhcge\",\n  \"pinTimeout\" : 6743711816972208195,\n  \"wsurl\" : \"https://web.example.mocklab.io/543450\",\n  \"appname\" : \"Morris Greenfelder\",\n  \"logo\" : \"r8c\",\n  \"appandroid\" : \"zh12\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a63c332-863f-3117-bad2-c857aa14211e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServer",
          "schema" : {
            "required" : [ "logo", "pinTimeout", "pinTransTimeout", "pingTime", "serverFlags", "serverName", "serverid", "serverpk" ],
            "type" : "object",
            "properties" : {
              "accountCount" : {
                "type" : "integer",
                "description" : "Number of accounts registered with this server"
              },
              "appandroid" : {
                "type" : "string",
                "description" : "URL of the app in Google Play"
              },
              "appios" : {
                "type" : "string",
                "description" : "URL of the app in the App Store"
              },
              "appname" : {
                "type" : "string",
                "description" : "name of the app"
              },
              "appurl" : {
                "type" : "string",
                "description" : "URL (prefix) to launch the app"
              },
              "lastLogin" : {
                "type" : "integer",
                "description" : "Last login on this server",
                "format" : "int64"
              },
              "logo" : {
                "type" : "string",
                "description" : "Base 64 encoded logo"
              },
              "owner" : {
                "type" : "integer",
                "description" : "Owner id"
              },
              "pinTimeout" : {
                "type" : "integer",
                "description" : "Time (minutes) since the last time the user entered his PIN, that the user is not requested a PIN at login. -1 means that the user is never asked for a PIN before logging in, 0 means that the user is asked every time he wants to login"
              },
              "pinTransTimeout" : {
                "type" : "integer",
                "description" : "Time (minutes) since the last time the user entered his PIN, that the user is not requested a PIN at transaction approval. -1 means that the user is never asked for a PIN before approving a transaction, 0 means that the user is asked every time he wants to approve a transaction"
              },
              "pingTime" : {
                "type" : "integer",
                "description" : "Time (seconds) that the nextAuth app has before it needs to reply to a ping request from the nextAuth server (continuous authentication)"
              },
              "serverFlags" : {
                "type" : "array",
                "description" : "Server flags",
                "items" : {
                  "type" : "string"
                }
              },
              "serverName" : {
                "type" : "string",
                "description" : "Server name"
              },
              "serverid" : {
                "type" : "string",
                "description" : "Base64 encoded id of the nextAuth server"
              },
              "serverpk" : {
                "type" : "string",
                "description" : "Base64 encoded public key of the nextAuth server"
              },
              "siteurl" : {
                "type" : "string",
                "description" : "URL of the main website"
              },
              "wsurl" : {
                "type" : "string",
                "description" : "Websocket URL"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "54b13664-ecba-31ae-8c4b-7987a01a8e95",
    "name" : "Create a new server",
    "request" : {
      "urlPath" : "/servers/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"owner\" : 3692582174253106681,\n  \"serverFlags\" : [ \"36woowq4zc0ejvn1g3ydt99k7bksze1wa6mkjmmmxo4ner5n8ly3tsmxcnvmwso8te39ezxc0ljj254vi89k1mspb9k400fboljgm14yt2v1wffbuocq2tlreuvckhddb8vkylb0ucfirsw4t612a3rmz5tbc6t3peuqvyxjpi\", \"q0oxifyw03tfsfkw3rgem7\" ],\n  \"lastLogin\" : 3283316715366737026,\n  \"pinTransTimeout\" : 8805693557444817553,\n  \"accountCount\" : 8955366601329333341,\n  \"siteurl\" : \"https://web.example.mocklab.io/093561\",\n  \"pingTime\" : 7246373443670150472,\n  \"appios\" : \"xst72t6w7ezlt9d\",\n  \"serverName\" : \"Patricia Considine\",\n  \"appurl\" : \"https://web.example.mocklab.io/292088\",\n  \"serverid\" : \"idor\",\n  \"serverpk\" : \"sfs3b8l3k0ckj2yll0l92bs79ut88krd5yh2gjrdm6d9smnnma0i0cq770ewji92g8gqf3u4918ggb8fhp3yp36urxsrgfny0ekzcugg08p42tzdma9838ggivn593jbaqygntbq0bya0snlrccdoaopzgujo177gmh98ka4cj5xwnwrn79ohib1jb\",\n  \"pinTimeout\" : 4165740003032379069,\n  \"wsurl\" : \"https://web.example.mocklab.io/495056\",\n  \"appname\" : \"Lashaun Dicki Jr.\",\n  \"logo\" : \"ty8q2pqxjb4hvx8v56be9k5s59zbyfba680xr2h4tffgvxbgjpmsxdd214mv0ecdmizv65z7xj3azcrrj\",\n  \"appandroid\" : \"ex5z\"\n}",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "54b13664-ecba-31ae-8c4b-7987a01a8e95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "required" : [ "logo", "pinTimeout", "pinTransTimeout", "pingTime", "serverFlags", "serverName", "serverid", "serverpk" ],
            "type" : "object",
            "properties" : {
              "accountCount" : {
                "type" : "integer",
                "description" : "Number of accounts registered with this server"
              },
              "appandroid" : {
                "type" : "string",
                "description" : "URL of the app in Google Play"
              },
              "appios" : {
                "type" : "string",
                "description" : "URL of the app in the App Store"
              },
              "appname" : {
                "type" : "string",
                "description" : "name of the app"
              },
              "appurl" : {
                "type" : "string",
                "description" : "URL (prefix) to launch the app"
              },
              "lastLogin" : {
                "type" : "integer",
                "description" : "Last login on this server",
                "format" : "int64"
              },
              "logo" : {
                "type" : "string",
                "description" : "Base 64 encoded logo"
              },
              "owner" : {
                "type" : "integer",
                "description" : "Owner id"
              },
              "pinTimeout" : {
                "type" : "integer",
                "description" : "Time (minutes) since the last time the user entered his PIN, that the user is not requested a PIN at login. -1 means that the user is never asked for a PIN before logging in, 0 means that the user is asked every time he wants to login"
              },
              "pinTransTimeout" : {
                "type" : "integer",
                "description" : "Time (minutes) since the last time the user entered his PIN, that the user is not requested a PIN at transaction approval. -1 means that the user is never asked for a PIN before approving a transaction, 0 means that the user is asked every time he wants to approve a transaction"
              },
              "pingTime" : {
                "type" : "integer",
                "description" : "Time (seconds) that the nextAuth app has before it needs to reply to a ping request from the nextAuth server (continuous authentication)"
              },
              "serverFlags" : {
                "type" : "array",
                "description" : "Server flags",
                "items" : {
                  "type" : "string"
                }
              },
              "serverName" : {
                "type" : "string",
                "description" : "Server name"
              },
              "serverid" : {
                "type" : "string",
                "description" : "Base64 encoded id of the nextAuth server"
              },
              "serverpk" : {
                "type" : "string",
                "description" : "Base64 encoded public key of the nextAuth server"
              },
              "siteurl" : {
                "type" : "string",
                "description" : "URL of the main website"
              },
              "wsurl" : {
                "type" : "string",
                "description" : "Websocket URL"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "6bf3922a-d1ba-3401-b610-f883538e44d5",
    "name" : "List all your servers",
    "request" : {
      "urlPath" : "/servers/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"servers\" : [ {\n    \"owner\" : 7949428516148104473,\n    \"serverFlags\" : [ \"dj6xvli0nvab9v4s1cwzo5aril2cuuslsfwoxc1lxa\", \"nwoafup18z5te84yjs7xtgacklx2cyvqiszmvcq75g7cz65pya6zp7xh6eym58iiyhni05vx5rktmtgzzwmz5tpgjkmgb11bqlm77g41uhji7d417yhhvkkalj8yc1kyva5buq6bgefdvrdmms9pgz1ihfuyy1pjk67kal0x0m39gyovnmzrwnhyqwy60\", \"kky9qhez0ix1egtdwnlmeujefor1v5b267jd8nwnis09bp08pkymirbuwspu0uma7q26ro6wt2m0moo9j2ftmao9a6obzyl5vduf5q8ex5nowjmgq64h674cjngbixe1f2ox9zqywsup2m0dbj0xiut9v2gb6fy92v\", \"b07hy0xdryp1yqwn9ce68m2jrrvqtpvzs6dxzcahkshrhufn7sdnzxlpt05rs2kq00n4y2o0d2dpe1bmy1zd8jimawqjmn0q2qhz92yol07we6pwxke9u\", \"rg15t8c7oz07bus8xu49pgvnwo5zlbcsmp58ypxf14hmg4j9mtk653geprtvs8p22ze8wj3ns2thj5fzvew10hws3qmefm1es\", \"cjxpsxcqrso2ol8fll09u7e8q2i3imnv4mjehzlgbjegnwf4fe1u0wzjm4l5d152ctc9hh7\" ],\n    \"lastLogin\" : 3596962725537893371,\n    \"pinTransTimeout\" : 476857636223009428,\n    \"accountCount\" : 4341097345313827867,\n    \"siteurl\" : \"https://web.example.mocklab.io/747861\",\n    \"pingTime\" : 593662232386726082,\n    \"appios\" : \"ggm9yogpvamcrkzeb2bexz89gluhq67on0gliw5rzesa8d9zxrgqaw\",\n    \"serverName\" : \"Mercedes Stehr\",\n    \"appurl\" : \"https://web.example.mocklab.io/726367\",\n    \"serverid\" : \"w94u\",\n    \"serverpk\" : \"qdutc9yjpz3h1hmhj0m1jcqvndcj5cl4iz4jpiv9bj8gblqyk9lniubwinax1bqrw94mz2hn7tx6ztpl3e800m5wwmurheslttfn2q2ahtdmlrvk8i6tpbbq\",\n    \"pinTimeout\" : 82999632776601065,\n    \"wsurl\" : \"https://web.example.mocklab.io/794486\",\n    \"appname\" : \"Mr. Ta Prosacco\",\n    \"logo\" : \"osaq9xgh7uhc8ev9zaftthh9wsnv4eoc9ubflq0s6014ovtkl721ebpinh59auk1ifm276snqew1a68ol69vurfl9pmv6o06y4axuzp8iwa7r1\",\n    \"appandroid\" : \"3c40\"\n  }, {\n    \"owner\" : 4722224968936506346,\n    \"serverFlags\" : [ \"2rcf27mjt24gstnkzn5ncabpgwof2k9hvbxwo0pfjc0lpehh1naveix578a28mzkisjgkbe0dq0d1v7jjhmvqhr08mgtpmpfcgr24wuumaa1evzz6d37adxt3cvmr75dtlpqq0gpvevnzq85qufc0mse38zsrqzfo1dwkak0zor1\", \"w0rfkyy0yzgft3w0r31galbso1hrqey4crpdc81ga5fgnl8sx3ys6aldq8no4uhziei44m77b11ja8i82zjgsukrc2uim1p183pxa43umjuk8ohliiofim6khpaw9n7ezxaspl2pabigs437pcy68tmiqg7vkfmayg5zeez7929e3dwir1jwk92mn7193halj12o\", \"12vsge6anq3hvn0evditk42uefhef34g3oezn82hrokig1f7fche8dwyuvu9ck\", \"4u0oadj5fhj7ptns44p37o4wu8qsqzxcnbsxmqjvedjipfg7d96kagj4krm2pb1o35tr47syjz8t8hrl20sl01gomgmiwwckty6xb6afzunr2z8h56hbyn7u7a9rk\", \"dz7jx0z621swberl533z1t5iwkha1f8ibrkvphab1erwx6fb56ntt094moph2h2b5qwtf7ug8np66jcra7yy6pq2bvd8fxcwqw8jfom6rpxuhov5oc\" ],\n    \"lastLogin\" : 7073553065283204204,\n    \"pinTransTimeout\" : 2033885727271475032,\n    \"accountCount\" : 370106709837787787,\n    \"siteurl\" : \"https://web.example.mocklab.io/795693\",\n    \"pingTime\" : 5441104948888779745,\n    \"appios\" : \"fwqtuxyizarq28h917n\",\n    \"serverName\" : \"Mrs. Moses Deckow\",\n    \"appurl\" : \"https://web.example.mocklab.io/960281\",\n    \"serverid\" : \"2r42\",\n    \"serverpk\" : \"e9etr59evc507cyi6x2hjmn6vwnz8m5i8jdba3u1h2fpkrjw5chyu6pnspimqap1n2mpy2xraklj4m1to6pimi3yxl7wtoupfr6btsv71zemy7ft2xajsfukbsudkyxrk1ht9ssp6j3egk8ts6zvzjafd5id162ev2m7frtpqffn8w2ttw9g\",\n    \"pinTimeout\" : 9087190989794979145,\n    \"wsurl\" : \"https://web.example.mocklab.io/597540\",\n    \"appname\" : \"Laronda Hand\",\n    \"logo\" : \"6uwi5ht3oxz5yhpoc2thn6m2a6g1grrtvn54w52xxlq71jarzxjywcki2juy8kjvw956x7dgyd5ke7eb62ukttx0lrfuc88b8bcqj0jui6gvu81o72jo2lnkd7igpsie38b73bipvpk51k2emfpten950do8irczx2laxazv480wq0fhtqkk\",\n    \"appandroid\" : \"6o7c\"\n  }, {\n    \"owner\" : 299025684773479534,\n    \"serverFlags\" : [ \"8ppij6u7y7ai2od92tsmty5t8f5bcl6axg19nyyaatnn1psjxx4fhw92ic65zfiz26plen\", \"f5cl3jlqxc7fibj8fsympint2zbqgdtc3ufrr0mocbgphtpa\", \"0bat1fst3vsa253r2awuby\", \"f8ny7gmcbi87ocn14ck3uailx3cszqtw9gmqo8nn0eigk4p423mkrce20iox659m0m5kb1bqyhdtvivaj9fz6tzx290tbwaofo0h1\", \"zeakq54ph7dvkelekno\", \"p1fgckrino8cj4duxwsp1u6dj9mqr50yi20ib2igs7vii5udu24hd3xdhvvv3sama57ks8nbn0jw\", \"aztygf1mg1n933krlqmszs21shrr5a9bdopnqcq6yd91yaixl7ili6dgv8l4qm34i5qv7e9ijz5jps7tg5mpiu1ewhlptnlkpyp1rv37shct1u8e1edm3dun2t10melbvbimej3lp4augf0dqolb51if14qg4aeukgxos0pb4w72f3\" ],\n    \"lastLogin\" : 7396337728365743293,\n    \"pinTransTimeout\" : 2407653760951419897,\n    \"accountCount\" : 352037910333175278,\n    \"siteurl\" : \"https://web.example.mocklab.io/993268\",\n    \"pingTime\" : 6143004345045450250,\n    \"appios\" : \"oawd1n4a9bc8kd9pjz3vqf6gak5xvpjje35anubhrhv821k161g26rmo3p3d23okgxstyw98w5i4262dbmv7y5izad4rtsn5hao5gnk3a6ph153nt0cayu5brgfbhdzolvq7fzx64zoeyaudwde9de1p6\",\n    \"serverName\" : \"Lashaun Collier\",\n    \"appurl\" : \"https://web.example.mocklab.io/381156\",\n    \"serverid\" : \"aa84\",\n    \"serverpk\" : \"he1u4utfzoynpytvrsjidt5ao4tl5rfrxn4ntivoeq8fqf1undtfdgk76pry22lhu9249p46ufem11u05tj1rth3ciyxqv9k1cm0q8si6lja4bbk88jnjva8cv7yy7jz1s1b7j8vfdhigtgvo2r3h313q\",\n    \"pinTimeout\" : 2095886942126001617,\n    \"wsurl\" : \"https://web.example.mocklab.io/572194\",\n    \"appname\" : \"Emory Smith\",\n    \"logo\" : \"2ugui4tapvl247sdhzh8npsc3m65ep\",\n    \"appandroid\" : \"4mbr\"\n  }, {\n    \"owner\" : 1205754331606193838,\n    \"serverFlags\" : [ \"ivit6gtvdwphrcitrmg616mrn\", \"pk27gkahi5iv0f51fcq962cz1aaofb55mypbwuwn2oiwntaw2jacaui8w5gwsi4dljvzt2wv886yym7f9w7ye76t3f3euucj49rr8doax4ilja\", \"l0wzp19rg0mj11w8kqznrbsnp2d9qmd44ls515v2e7smq2pcow5tq4hxb3yy45vc24fcnsvg8v4hfkd0q56fg66vvudncuv0khepvqu3nek6qh9atk5wblkp2a3lph0m5\", \"xstqma0jxhd5e54g5uk3cd\", \"x77st1emqeuwadudr9wz3kxfj3rb9o6t37g4r3nm006tjutsbmtbn58077x4n1tc82ntqg9sz7o8ih\", \"28pwzyj8upzt8spscdlsp8tm232dhxjnbtq24wflu82vdrpum70xxf6l9slq6zyura6v2ydairq10cfky7g4bqyh73iacstt7vywql52z42r53dfqy5cyazn7qqcmhxq60ik85anndiq67hj420t81bf5\" ],\n    \"lastLogin\" : 4412876009560446666,\n    \"pinTransTimeout\" : 5623075065651565855,\n    \"accountCount\" : 1436202754474047315,\n    \"siteurl\" : \"https://web.example.mocklab.io/959677\",\n    \"pingTime\" : 1712405208228021344,\n    \"appios\" : \"4ww7lb0srfjsobnd55r1nrtmimtsebvbefs233jeh1zvardp7q8v9a5ax1uoz9f0q43z0f15izyif0g76fqcmovplqhudn2swz5aw0rdu3aon8gbsttiodieyzqa1pbpj82slylxdflirwwlinldn8ffn61eievhd3i4t0yyqq9ze78c41ak9\",\n    \"serverName\" : \"Cliff Kovacek\",\n    \"appurl\" : \"https://web.example.mocklab.io/266667\",\n    \"serverid\" : \"49sv\",\n    \"serverpk\" : \"3okhjcvvtkxyp99lxffbln34zw83u7ug4whp3yaosjhgeehlbih9m00q84wy1ppab7gze7zjk2n0fadjcin0w5iifrmpe8ysoee3wqnmfagkpyse75duzvd\",\n    \"pinTimeout\" : 3724208541048470470,\n    \"wsurl\" : \"https://web.example.mocklab.io/595047\",\n    \"appname\" : \"Branden Rath\",\n    \"logo\" : \"b6qarnaojt3gndwc7m5l9sj7q1dzb5tzjexe26hlrxl2n20nd95v1ffe9j0ywf77hm2vt7netfjiyw274cesaoh60eelru4g68ktycarv6ixy60kb14wsuib53n043l8llc3mg17sflp94vxzg4aj5sajxauqvo768lb8ooq4mxr0e0a2rm0fysn3qs138\",\n    \"appandroid\" : \"mqa1\"\n  }, {\n    \"owner\" : 4525170891991588538,\n    \"serverFlags\" : [ \"nocbabahg2izlwz9jwdatvw7g6hx2zzs9whwltd060xuhotu86abhnmcwqakeqqob1bayhjz18pjsfbxwj6np3pfbinn62zz5zxhfqwftqexv8g6anoluu51aje2hy27sbsvihv0fi99y0al2igdw9levje7p2byu\", \"frkaspid27b619\", \"7vxuntl19jiqxbovtvyfs6tx3hgogrgyb5s4iee2tnumy3dg3ni1hd9x6ytonis8owe1e3qlixp7knxnqybxk5esi7vmxgqy8s7lpgydbiskjfiag8xqtzhz5oor\", \"j1vv9au7jn2qfnparugfw566wrdmnzmvp1t677ffbgtcxguogvp43ok12y5htafkz85134jroiu\", \"mgr90kgwzgwhzgmh72lpw4tk7fz22j2p3i6vxn7d9tvny1i5nxhmghl0b0v59wgquftxn8dkiaphfc6k5dqa1v\" ],\n    \"lastLogin\" : 3852524342987636613,\n    \"pinTransTimeout\" : 6842815434458804593,\n    \"accountCount\" : 247714054493908969,\n    \"siteurl\" : \"https://web.example.mocklab.io/307507\",\n    \"pingTime\" : 4393231714786679307,\n    \"appios\" : \"ktngn4srxhhk0j285200m6g9qnbosx9swygt9pxnqzhgcstn4hsejgi79t3zw1ig6w0ly5twmd0fx1o4reg0xuxkrivwuakb8m97i77dl5uq1o3fzlvjs5vbtekxals2br7v9f7nk6rkxrc78e294cyse4iwkic0m9wdk2qtnnz0y69\",\n    \"serverName\" : \"Samella Simonis\",\n    \"appurl\" : \"https://web.example.mocklab.io/091438\",\n    \"serverid\" : \"o0c0\",\n    \"serverpk\" : \"xwn02e5rhznn7rvbmlspgmi3vey39ljblcphk1c3ilzjkecjvuvk9324xg06q026zmz2oq8xi8c7yz2q5vhgzwmlcokzlc5th4padogxd26r7nqfv65dqh4phegruh7m1ljycc5zpdsox9o0u6m0flk2gifmhupzsdqt\",\n    \"pinTimeout\" : 9048416814266794038,\n    \"wsurl\" : \"https://web.example.mocklab.io/251861\",\n    \"appname\" : \"Lavern Hermiston Sr.\",\n    \"logo\" : \"0chras4g6khowmallo4bc3c02fz9fjbx5hhekkgj1a6uxppehut9cqmhw4nlin9z69qsvihot8uo0ffa016wezge34kq98o640gdi1gmqmkq0zwwqw34n4xu\",\n    \"appandroid\" : \"36zz\"\n  }, {\n    \"owner\" : 3775621513944415636,\n    \"serverFlags\" : [ \"fpi96657h959s75yl1siyg7ov85zzt5soj0djfo8xfhzrbtstrv7v5yjkfpihiwofyo755gqg0k8cikgwcfe\", \"rmwftq09w6xea3ohwacvjygxsj7wtg95xlb\", \"8xska59h0nnznlmk8qys2b65hzi0tti2w6x4hg052kxdth4zzea1ie3ktkm3uh5t0uunq7lccajjq6hfkgjntfd170wtjtwbqr9l1v0onl26xht49wiqoj2sbnsa9spw8z1f5ctjdt9dql36wqj3e1gptxjscamsc4fnvto20fdorndtc24d1q\" ],\n    \"lastLogin\" : 3651023601665344988,\n    \"pinTransTimeout\" : 2745422630422156487,\n    \"accountCount\" : 9214823014873739033,\n    \"siteurl\" : \"https://web.example.mocklab.io/731268\",\n    \"pingTime\" : 2328202369442620513,\n    \"appios\" : \"w0j7xqc2\",\n    \"serverName\" : \"Salina Kihn\",\n    \"appurl\" : \"https://web.example.mocklab.io/706102\",\n    \"serverid\" : \"fbq1\",\n    \"serverpk\" : \"5qayuai7yox0pa2fjeza6m7oacq7ml\",\n    \"pinTimeout\" : 5710962436738205050,\n    \"wsurl\" : \"https://web.example.mocklab.io/139655\",\n    \"appname\" : \"Dr. William Mertz\",\n    \"logo\" : \"arsefo8qr0rarjw4cidfi1l2hs403sulci9lq1b2814vx8j7hclxtwwq5cnabgswm01stm0fylp1gqecpzrlxs7w8loa2p3fx1oerey875uwr5nys3h3y5ahr5zpj93d19fl5de9hlkdjbj9ev945nxddawnuswn6n1s2jo0m1liv65234yq5zvb05r1g0lcskie6t\",\n    \"appandroid\" : \"7220\"\n  }, {\n    \"owner\" : 586095424639643735,\n    \"serverFlags\" : [ \"asaug392k7\", \"s5kqvkq7153j0peg6o0tmhxwul0zpd4svygk16xwvijo624b8utf6jrxtxaapcjnrtvzo9jbpush6h8uzrbr5zfvsy70hzovkiahswuoqc680ekg69oxsqupbzvw2etxtp185s6pj6g48be2ueaddrn5te9o3chc3mwrvgdgzmjle6dw6nb897i1yl3r\", \"xou8d6b4mhpeadhcbte2vr0vehsbsrxsurhpfjmpo15idcdqgbyuzcoehzih7d7ng4rg3kofqt294c2hsgqqwnh4euh3mlj\", \"zigkodmqzxoagd01fccd9r0ufal6etdijnjdhaaz2ju6aln9okzh47qg5g8u0dw\", \"oy7aarlat35r8lfwbqi0ohvgss6kjyligiz25vobc6md45sm7eb6s03ygqrcq26pdqqpvlifzsglv5hrdap9kvw0juklerghhb8dzn2x7ub4hppnwnmcw0p79zj7877iwsniszp6swb2ftcjd48\", \"53sorctmldnf0uxuyuyvwidgy9axj3ki18nvyhozuaxc5arulc0mh79vi6gqbrzvkx5obr6te0bl9ucwp96ewhhlfazfxj0styg3nl77mb78qt14dvoav3mhmteata9gxft0nc1a\", \"02ytov5axnm2pldetc30yk8pxn39uohta02p6j1qsofc99fkc3lz361a8znuzquanuqpyszmzfbqjyw7wt8rr7l14udi0f7dv0hjkdjdmngc857fxdc9feim7zega9yb2z7lzqlcdkiakqpgcea4rzewnw10p59jw1lnkho7wiox7cfpbuthyj2xq07uwidvu\", \"2zdbhzaklad5nl3fe6z6vmckg6kgv7y1df4phelsvrv0nwdyn4w8yn8yadi11twz0il85r3lvm33wrscv7xigd5hlmhe215d1ivt1mdpehyzqkp866xrznd\" ],\n    \"lastLogin\" : 1187425322267812787,\n    \"pinTransTimeout\" : 7910034841539490830,\n    \"accountCount\" : 3175166361100221853,\n    \"siteurl\" : \"https://web.example.mocklab.io/733965\",\n    \"pingTime\" : 2811277929266587318,\n    \"appios\" : \"6k5p2t6i175q0gei0cpd3pwakrik5j89ra3e0zn18jaap04g2g4wy597zyf96rlibmf2ygoyvqrxrhk6oa7ed8om37hnnp1eg\",\n    \"serverName\" : \"Dirk Kreiger\",\n    \"appurl\" : \"https://web.example.mocklab.io/992884\",\n    \"serverid\" : \"77wh\",\n    \"serverpk\" : \"jgydoue72s41oelpubo1mj2yuq9l08az8omeozw72uhf2lkjfkqjt3rk0p7wwyg\",\n    \"pinTimeout\" : 543171195108628763,\n    \"wsurl\" : \"https://web.example.mocklab.io/196937\",\n    \"appname\" : \"Mrs. Mohammed Roberts\",\n    \"logo\" : \"29p62ibju74swv5gm02tqnh5k8pbcwqkjocsafcj7te4l4v5v1n6dzlckbw3f\",\n    \"appandroid\" : \"w85u\"\n  }, {\n    \"owner\" : 8504311417492241160,\n    \"serverFlags\" : [ \"8qbrr4peet5s9ote1zb14k7q3oo7lml72smtxqtcsdslrqhzgjy7enmfjrt34qf41lhjzw6ygknrgtn9dh1yx057f373qoj0iwup44stl636zo4wl72wl5cujdsmyhfsr\", \"wedkwvffn8v8lmb8kxxkyfcsbvo8j0ajn10ug68m2x8yg263scpxsqg3tzzskz1mf2usiyhfjsq\", \"57gds0lr987igexdkc021ylq8ii1ge0hsvwqfhrifz44v5qs0l8da0w04mnctxenvuzsil0238itnfno7j8ohy5hkrqfajjfakq0\", \"l0ll8x8wmhi7v7mvu58mge2mtvpfyb5ey1zukw82rv\", \"cal5radvhc3vgg4zor05mv195osggjer0bkta5xt6qh4v6zawz\", \"bwflvkpcio\", \"o1k24uu2m94or2lidhaw46vbqfwlxuhphy5qhp40y70nnryg9l3ars9i35lg7s6vmkfza7bdjnuz009yb2vis72quzda4scuytu8w7wdxg2wy4z4r1qpvuzjv8x78mmj6zqp6e6wgasvikf60zcakq4l4k6oo5l3mxn\", \"jc4p1srv2q15y3iig8btct9d964ikrlg20diaqv9fuhotfax4mr2nmw6nycfft9poli0xwinozpsxo35hz1aj1htzm6g4e48su6znh5c4ui3otx1hatpc1gx4tncu82eaxq3kd9cgikzv686aoav\" ],\n    \"lastLogin\" : 4929368551797809329,\n    \"pinTransTimeout\" : 6975046326410399129,\n    \"accountCount\" : 7155869712725362994,\n    \"siteurl\" : \"https://web.example.mocklab.io/804731\",\n    \"pingTime\" : 2547550072879723154,\n    \"appios\" : \"bgi9hjfib7jxqpipenqim\",\n    \"serverName\" : \"Christen Skiles\",\n    \"appurl\" : \"https://web.example.mocklab.io/414481\",\n    \"serverid\" : \"s3t2\",\n    \"serverpk\" : \"1gxj8oghvhg92dhj0t829zlj1xv2iujngahzth96kkq56s5gn\",\n    \"pinTimeout\" : 7725663683624944764,\n    \"wsurl\" : \"https://web.example.mocklab.io/875120\",\n    \"appname\" : \"Trey Schowalter IV\",\n    \"logo\" : \"mk3v7ivnufe2034h9t41k7i4qgg43dn1clj8sjx4uqe09l04yh6qnsxpl0ahl95thkv7ydjq9bnq90xb4cyo0nwke04gawux58k37nvvhjqybgd0s6lpathmq0dviac8hmp2wtvypeep6lyfhh227smysqxv0b2rc\",\n    \"appandroid\" : \"60nv\"\n  } ],\n  \"totalnumber\" : 439104031419362518\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bf3922a-d1ba-3401-b610-f883538e44d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServers",
          "schema" : {
            "required" : [ "servers" ],
            "type" : "object",
            "properties" : {
              "servers" : {
                "type" : "array",
                "description" : "Array of servers",
                "items" : {
                  "$ref" : "#/components/schemas/Server"
                }
              },
              "totalnumber" : {
                "type" : "integer",
                "description" : "total number of users"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "444149c1-1196-3308-bda5-d1e1ce81f03c",
    "name" : "Delete specific global attribute - 200",
    "request" : {
      "urlPath" : "/attributes/q8ojkibj5n9vpvsr52mj3clcjpmnzu83l7phpyxd6xr7qwg0lub40yj1i10dwjwsb0ndmifs4pn3vy2qrpvkauj3suig4k5tl6qzfijgmcgaq6y25od92bedns8nm7e9av9jgnz4gu6jhu5nxm1pkvdc1b0ob6noug",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "444149c1-1196-3308-bda5-d1e1ce81f03c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalAttribute"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "36cbf850-9897-31cf-aa6e-3dd061d6022d",
    "name" : "Delete all global attributes - 200",
    "request" : {
      "urlPath" : "/attributes/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "36cbf850-9897-31cf-aa6e-3dd061d6022d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalAttributes"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "302ef22c-61d8-3a67-a411-3c86d97cbec5",
    "name" : "Set all global attributes - 200",
    "request" : {
      "urlPath" : "/attributes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "302ef22c-61d8-3a67-a411-3c86d97cbec5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "setGlobalAttributes"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "5ef90103-fdb9-31ae-9dd4-72fba8c742b6",
    "name" : "Update specified global attributes - 200",
    "request" : {
      "urlPath" : "/attributes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5ef90103-fdb9-31ae-9dd4-72fba8c742b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalAttributes"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "741a0b2f-16fd-30e5-be02-47b8a2c8e64c",
    "name" : "Get all global attributes",
    "request" : {
      "urlPath" : "/attributes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"mz6m00u4q9845wurz34o9yjnfj346kkt0bpmwdm7klgx9szr6yzlytgq8nh2wy1e4fd0pnxg\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "741a0b2f-16fd-30e5-be02-47b8a2c8e64c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getGlobalAttributes",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "cb9d9eea-61cf-3d17-94e7-e4727748d21c",
    "name" : "Create a new API key.",
    "request" : {
      "urlPath" : "/apikeys/",
      "method" : "POST",
      "queryParameters" : {
        "description" : {
          "equalTo" : "Eligendi+quisquam+ut+et+quam+dolor+qui+consequatur.+Itaque+rerum+dolore+quos+omnis+occaecati+similique.+Commodi+consequuntur+rerum+unde.+Et+nulla+doloremque."
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"role\" : \"6q1ovxee\",\n  \"apikey\" : \"dtrflt2qsiunbv9wkaccpcge3mxi3ke2p\",\n  \"description\" : \"Similique sed cupiditate officiis delectus eum. Eos nesciunt natus non. Vel rerum ut ut voluptatum ea magnam explicabo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb9d9eea-61cf-3d17-94e7-e4727748d21c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKey",
          "schema" : {
            "type" : "object",
            "properties" : {
              "apikey" : {
                "type" : "string",
                "description" : "API key"
              },
              "description" : {
                "type" : "string",
                "description" : "Description"
              },
              "role" : {
                "type" : "string",
                "description" : "Role id"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "654dd230-b26b-3f9d-82fc-b5abc2af749b",
    "name" : "Get all API keys.",
    "request" : {
      "urlPath" : "/apikeys/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apikeys\" : [ {\n    \"role\" : \"s6kpdm8wdktuchwyt4jd5o5n43vyxvpka9t8cowk84insxl2l87hh0xn2dguxnlim6u29jkui6c3m2u0ujgd5f\",\n    \"apikey\" : \"2ylkav\",\n    \"description\" : \"Expedita eveniet perspiciatis. Quidem officiis aperiam voluptas. Quo tempore autem at soluta eius excepturi dolorem.\"\n  }, {\n    \"role\" : \"nubc9niursvheq35dkmaztycy4p\",\n    \"apikey\" : \"867uhaxox989oy37wtx28s0nfb82cdbj0w9fzhp5au6jzwors9rlhnvjnnmx2e78fq0txkfona7s2wxogp9bbgizi4mnyid8i5mk118joh351yt8y9cfr8a5enchmm1jska3\",\n    \"description\" : \"Quibusdam voluptatem molestias repellendus qui et explicabo eos. Aut reprehenderit illo quaerat ipsum ut id qui. Qui debitis libero officia. Consequatur et voluptatem.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "654dd230-b26b-3f9d-82fc-b5abc2af749b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getApiKeys",
          "schema" : {
            "required" : [ "apikeys" ],
            "type" : "object",
            "properties" : {
              "apikeys" : {
                "type" : "array",
                "description" : "Array of apikeys",
                "items" : {
                  "$ref" : "#/components/schemas/ApiKey"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  } ]
}