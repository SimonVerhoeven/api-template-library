{
  "mappings" : [ {
    "id" : "fc81b2a3-e289-43ac-ab87-d14f070ac9da",
    "name" : "Creates an answer or updates the existing answer written by the user for the spe...",
    "request" : {
      "urlPath" : "/v1/z61fpur4rlx1/answers:upsert",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-10-16T07:59:41.890136Z\",\n  \"author\" : {\n    \"displayName\" : \"Britteny Pouros\",\n    \"profilePhotoUri\" : \"https://web.example.mocklab.io/316137\",\n    \"type\" : \"AUTHOR_TYPE_UNSPECIFIED\"\n  },\n  \"name\" : \"Gracie Quitzon\",\n  \"updateTime\" : \"2022-11-01T10:08:41.890341Z\",\n  \"text\" : \"hjxupeb75t0v4ioryvjdcdf5mios6vde781lvwggl6x2n2lvprutcdu1a2\",\n  \"upvoteCount\" : 1520178393\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc81b2a3-e289-43ac-ab87-d14f070ac9da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.890465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.answers.upsert",
          "schema" : {
            "description" : "Represents an answer to a question",
            "properties" : {
              "author" : {
                "$ref" : "#/components/schemas/Author"
              },
              "createTime" : {
                "description" : "Output only. The timestamp for when the answer was written. Only retrieved during ListResponse fetching.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The unique name for the answer locations/*/questions/*/answers/*",
                "readOnly" : true,
                "type" : "string"
              },
              "text" : {
                "description" : "Required. The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp for when the answer was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "upvoteCount" : {
                "description" : "Output only. The number of upvotes for the answer.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "bc48430d-a925-4927-a2cb-2a43496ec653",
    "name" : "Returns the paginated list of answers for a specified question.",
    "request" : {
      "urlPath" : "/v1/1fxj5r1e2be0o56u90fi1hh16zdpg0ii160comwzcs38tw0gix5g2di0s1kwzr9c46xv4t78dcaunoejgrrsxwjnptxahu2wydpaydgwa4x55bbdv01b1/answers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 1997454574,\n  \"nextPageToken\" : \"0vtj18fw4uzfzgblay6ph6imzg7lpmiua6r85yvdshhd9wgy84ucjncn3azli1f427beeycfonn0saydnwbac36fssku05gq6tug8jjbw3xauc3azl1a4vmnfrfhqiisjh7svzzf0ymdtl7eodwmko7e4jx1lodi0ikgw5tl3j4ejm941ovcewn8vnok\",\n  \"answers\" : [ {\n    \"createTime\" : \"2022-12-06T09:59:41.889759Z\",\n    \"author\" : {\n      \"displayName\" : \"Miss Antony Grady\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/738659\",\n      \"type\" : \"MERCHANT\"\n    },\n    \"name\" : \"Celeste Schinner\",\n    \"updateTime\" : \"2022-12-21T10:39:41.88998Z\",\n    \"text\" : \"ob5ufpw8622zkxoxcaokx2783mz1xl89ka16lmjii7tkdve0e9epokpmszaerwrgpdlkun8ph5hkkmdx\",\n    \"upvoteCount\" : 1801561402\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc48430d-a925-4927-a2cb-2a43496ec653",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.890094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.answers.list",
          "schema" : {
            "description" : "Response message for QuestionsAndAnswers.ListAnswers",
            "properties" : {
              "answers" : {
                "description" : "The requested answers.",
                "items" : {
                  "$ref" : "#/components/schemas/Answer"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If the number of answers exceeds the requested max page size, this field is populated with a token to fetch the next page of answers on a subsequent call. If there are no more answers, this field is not present in the response.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of answers posted for this question across all pages.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8f191377-2526-4de6-a1fb-9f458b134b21",
    "name" : "Adds a question for the specified location.",
    "request" : {
      "urlPath" : "/v1/o43nisws4pz17cgghpfcb5vh72e650p1u24c17pfr9znpmvbffemnytroo6tff4np67xzjxlr2lofobdgz0lk5o6hpiiyxxrpa2816tr04se53u1vse5nfl31wyosaxu",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalAnswerCount\" : 871812330,\n  \"createTime\" : \"2023-02-01T10:03:41.887616Z\",\n  \"author\" : {\n    \"displayName\" : \"Adolph Lehner\",\n    \"profilePhotoUri\" : \"https://web.example.mocklab.io/324969\",\n    \"type\" : \"REGULAR_USER\"\n  },\n  \"name\" : \"Miss Nick Stokes\",\n  \"updateTime\" : \"2022-12-12T08:31:41.887836Z\",\n  \"text\" : \"47hkzxbmmgkr4bxicelad54xpjplohvu87n3vmk7x5w0127izpjysarfuk0v1y1gne2tpm1b8uytg9237kb4hdyb3mqcbot1ojxjjc54ya9eo8d1bve72045y5o78oz9oixxrlo4r6fc3ycwrn0w5kupf9tdtqwwyb1271ql84d70t79sn4zjd1z1\",\n  \"topAnswers\" : [ {\n    \"createTime\" : \"2022-10-07T08:18:41.887892Z\",\n    \"author\" : {\n      \"displayName\" : \"Hien Green\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/437915\",\n      \"type\" : \"MERCHANT\"\n    },\n    \"name\" : \"Royal Roberts\",\n    \"updateTime\" : \"2022-07-05T10:57:41.888102Z\",\n    \"text\" : \"va67axcj43vsl9kk9n1wphpmy0k96cl9cct61s4ntk2c3phpbhyauwzbfq89cwic3ixgcs9fuqppnnemghgikm8bcqhoxda2fe8aw\",\n    \"upvoteCount\" : 393724085\n  }, {\n    \"createTime\" : \"2022-11-18T08:05:41.888156Z\",\n    \"author\" : {\n      \"displayName\" : \"Angelika Botsford Jr.\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/153389\",\n      \"type\" : \"LOCAL_GUIDE\"\n    },\n    \"name\" : \"Lesley Beahan\",\n    \"updateTime\" : \"2022-10-13T07:57:41.888376Z\",\n    \"text\" : \"zzxippx8sd2tmtn08hgnr1ipt0gt59dmp0qq2m7qie6bldhop5axddsj058q8ou\",\n    \"upvoteCount\" : 1745350963\n  }, {\n    \"createTime\" : \"2022-03-26T10:31:41.888432Z\",\n    \"author\" : {\n      \"displayName\" : \"Elmer Wolff\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/829885\",\n      \"type\" : \"MERCHANT\"\n    },\n    \"name\" : \"Kai Hauck\",\n    \"updateTime\" : \"2022-08-11T08:32:41.888641Z\",\n    \"text\" : \"x6o177rcvvvpv5ae4v1yge69lbyt98oriedizx8c6ahiu06zwjgg1y8j6cai1a6kecyru3s1sqwsookw8eodnq4z1lhran3jwhq5gzlktocwqbmi5ohxh0uniuawam4080\",\n    \"upvoteCount\" : 1437774791\n  }, {\n    \"createTime\" : \"2022-11-11T11:51:41.888712Z\",\n    \"author\" : {\n      \"displayName\" : \"Lucius Little\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/281628\",\n      \"type\" : \"AUTHOR_TYPE_UNSPECIFIED\"\n    },\n    \"name\" : \"Chanelle Jast\",\n    \"updateTime\" : \"2023-03-07T08:23:41.88892Z\",\n    \"text\" : \"74dcm7vs66ej83oaslc0wczduzlgzk4wqqk33o9n99uvck37114o0rarn3j8pusnquv2ruteik3xnscp9b4k0qcoxphxxgf14ufzdl3pyump02zgmy2z0vxis9ri\",\n    \"upvoteCount\" : 688741688\n  }, {\n    \"createTime\" : \"2022-04-13T09:48:41.888972Z\",\n    \"author\" : {\n      \"displayName\" : \"Donte McKenzie\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/094654\",\n      \"type\" : \"REGULAR_USER\"\n    },\n    \"name\" : \"Enoch Padberg Sr.\",\n    \"updateTime\" : \"2022-08-20T08:21:41.889196Z\",\n    \"text\" : \"e4mb65mqh7i1pa1lao59umrn0ij5iyswfn9pcwu4jpyma8h3qbzaow411bo06ay9jv4ay2hkt235gb2p0dfkf8un9kqmalar\",\n    \"upvoteCount\" : 1061767248\n  }, {\n    \"createTime\" : \"2022-11-08T08:05:41.889251Z\",\n    \"author\" : {\n      \"displayName\" : \"Cruz Spencer\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/022594\",\n      \"type\" : \"LOCAL_GUIDE\"\n    },\n    \"name\" : \"Marylin Waelchi\",\n    \"updateTime\" : \"2022-06-04T11:47:41.889455Z\",\n    \"text\" : \"ykl3gm4bmyjs2owndpbopjv3nl8ov5mhvlwxm0bjhjiielechjqqcsksnt8kg972tdwrj7jvgsrytoayum8r4dc387v9ypzhcwtj2j4i4h5gbu4k6yx7zywv50qm9dk06q38fhvlvm\",\n    \"upvoteCount\" : 251457980\n  } ],\n  \"upvoteCount\" : 1962655145\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f191377-2526-4de6-a1fb-9f458b134b21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.889657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.create",
          "schema" : {
            "description" : "Represents a single question and some of its answers.",
            "properties" : {
              "author" : {
                "$ref" : "#/components/schemas/Author"
              },
              "createTime" : {
                "description" : "Output only. The timestamp for when the question was written.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The unique name for the question. locations/*/questions/* This field will be ignored if set during question creation.",
                "type" : "string"
              },
              "text" : {
                "description" : "Required. The text of the question. It should contain at least three words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters.",
                "type" : "string"
              },
              "topAnswers" : {
                "description" : "Output only. A list of answers to the question, sorted by upvotes. This may not be a complete list of answers depending on the request parameters (answers_per_question)",
                "items" : {
                  "$ref" : "#/components/schemas/Answer"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "totalAnswerCount" : {
                "description" : "Output only. The total number of answers posted for this question.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp for when the question was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "upvoteCount" : {
                "description" : "Output only. The number of upvotes for the question.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a5b0323a-603a-4215-a3e8-45efca0e4560",
    "name" : "Returns the paginated list of questions and some of its answers for a specified ...",
    "request" : {
      "urlPath" : "/v1/ffqcdwr4v2jx4687gvq2f3jzp67srhefhk2riqy54m9bt3qb24kjgbls55jdcgqu5jvqzyrbqaldlopi1vgp1r1gyimhin1u0a457vj7r5ln",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 236684167,\n  \"nextPageToken\" : \"ikxccc1pmtfx8ijgy5d2tmm0w9nmpxni1ndsliwggo41qv7v6vkfcvff5zah4g86noc47etlpe9vj6\",\n  \"questions\" : [ {\n    \"totalAnswerCount\" : 1822999179,\n    \"createTime\" : \"2022-06-22T11:38:41.886278Z\",\n    \"author\" : {\n      \"displayName\" : \"Miss Pablo Gutkowski\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/522895\",\n      \"type\" : \"MERCHANT\"\n    },\n    \"name\" : \"Yuri Roob\",\n    \"updateTime\" : \"2022-11-07T08:10:41.886504Z\",\n    \"text\" : \"n1zx0k30gdc306ni9sc1\",\n    \"topAnswers\" : [ {\n      \"createTime\" : \"2022-12-14T11:16:41.886557Z\",\n      \"author\" : {\n        \"displayName\" : \"Olivia Boyle DDS\",\n        \"profilePhotoUri\" : \"https://web.example.mocklab.io/597426\",\n        \"type\" : \"REGULAR_USER\"\n      },\n      \"name\" : \"Mrs. Fae Rolfson\",\n      \"updateTime\" : \"2023-02-13T09:27:41.886788Z\",\n      \"text\" : \"a451m24fbrl9cmu152lrio9km9paoz5nzuy39shlvaorv7h9f4o8ye43pbdzs8t93dg13vr3ye6l8a23xk37ovt9tmy775cj7ztuur52oof8ijdia32rsz15lgkmx3jx6rvv1cgp8nbz5m0z\",\n      \"upvoteCount\" : 112247984\n    } ],\n    \"upvoteCount\" : 991861764\n  }, {\n    \"totalAnswerCount\" : 1614295001,\n    \"createTime\" : \"2022-05-31T08:44:41.88688Z\",\n    \"author\" : {\n      \"displayName\" : \"Allan Cremin\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/604430\",\n      \"type\" : \"AUTHOR_TYPE_UNSPECIFIED\"\n    },\n    \"name\" : \"Ms. Tyrone Morar\",\n    \"updateTime\" : \"2022-04-17T08:20:41.887099Z\",\n    \"text\" : \"1fx6djii4swjgxjwv9yfec7kzys8qgx6wswq1ljn5n3zp5qyswbbp5e38c48do4bgbs7g6jdvlp58t6rw0nz53uex3dtb52\",\n    \"topAnswers\" : [ {\n      \"createTime\" : \"2022-03-31T10:19:41.887155Z\",\n      \"author\" : {\n        \"displayName\" : \"Jeneva Keeling\",\n        \"profilePhotoUri\" : \"https://web.example.mocklab.io/926331\",\n        \"type\" : \"REGULAR_USER\"\n      },\n      \"name\" : \"Marcelino Beatty\",\n      \"updateTime\" : \"2022-11-05T08:41:41.887378Z\",\n      \"text\" : \"htpjs67sv9wcf2ujcx70uebj3qa00nzk3t4h6s4lmiuo7ecz4ek1n9uhch57md9gzdiq\",\n      \"upvoteCount\" : 437357614\n    } ],\n    \"upvoteCount\" : 15513150\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5b0323a-603a-4215-a3e8-45efca0e4560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.887552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.list",
          "schema" : {
            "description" : "Response message for QuestionsAndAnswers.ListQuestions",
            "properties" : {
              "nextPageToken" : {
                "description" : "If the number of questions exceeds the requested max page size, this field is populated with a token to fetch the next page of questions on a subsequent call. If there are no more questions, this field is not present in the response.",
                "type" : "string"
              },
              "questions" : {
                "description" : "The requested questions,",
                "items" : {
                  "$ref" : "#/components/schemas/Question"
                },
                "type" : "array"
              },
              "totalSize" : {
                "description" : "The total number of questions posted for this location across all pages.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "44b8ceea-270c-4626-92dd-5dc99d069951",
    "name" : "Deletes the answer written by the current user to a question.",
    "request" : {
      "urlPath" : "/v1/Miss+Era+Macejkovic/answers:delete",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44b8ceea-270c-4626-92dd-5dc99d069951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.886186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.answers.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "482180ca-74c3-4a2b-a15a-b179e685a8bc",
    "name" : "Updates a specific question written by the current user.",
    "request" : {
      "urlPath" : "/v1/Miss+Gail+Hoppe",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalAnswerCount\" : 412316874,\n  \"createTime\" : \"2022-04-27T11:26:41.883802Z\",\n  \"author\" : {\n    \"displayName\" : \"Frankie Mayer II\",\n    \"profilePhotoUri\" : \"https://web.example.mocklab.io/292556\",\n    \"type\" : \"LOCAL_GUIDE\"\n  },\n  \"name\" : \"Nikki DuBuque\",\n  \"updateTime\" : \"2023-03-07T10:51:41.8841Z\",\n  \"text\" : \"6o9jt147ker\",\n  \"topAnswers\" : [ {\n    \"createTime\" : \"2022-11-05T08:25:41.884173Z\",\n    \"author\" : {\n      \"displayName\" : \"Bert Beer\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/102402\",\n      \"type\" : \"AUTHOR_TYPE_UNSPECIFIED\"\n    },\n    \"name\" : \"Dr. Rick Breitenberg\",\n    \"updateTime\" : \"2022-05-08T11:22:41.884412Z\",\n    \"text\" : \"547902q9lnksu5451dx42zhprcl9tyyiuqcydm2qan9ujmm5sknrm0m60xfiycf2kyl44ld5ch8lefkiiilhhdwb8pspe3eqyvjupsv0zhoi6laq9bw1i0r6w\",\n    \"upvoteCount\" : 1370485441\n  }, {\n    \"createTime\" : \"2022-06-10T11:27:41.884478Z\",\n    \"author\" : {\n      \"displayName\" : \"Romeo Tromp\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/029257\",\n      \"type\" : \"MERCHANT\"\n    },\n    \"name\" : \"Mrs. Kirk Ritchie\",\n    \"updateTime\" : \"2022-07-09T08:36:41.884698Z\",\n    \"text\" : \"u3qj0k6vwcjbwfhnz0j6ggyz9qjzzh0hhkfkbn0qq4fqd9b0e21qsb439vdchgfmy32fltejazsq7fls9r645ovu51rphd9p78v\",\n    \"upvoteCount\" : 1917025002\n  }, {\n    \"createTime\" : \"2022-11-29T09:56:41.884754Z\",\n    \"author\" : {\n      \"displayName\" : \"Ms. Paris Zemlak\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/760746\",\n      \"type\" : \"MERCHANT\"\n    },\n    \"name\" : \"Desmond Aufderhar Sr.\",\n    \"updateTime\" : \"2023-01-08T08:09:41.88497Z\",\n    \"text\" : \"hhp1\",\n    \"upvoteCount\" : 1488746956\n  }, {\n    \"createTime\" : \"2022-10-19T08:03:41.885023Z\",\n    \"author\" : {\n      \"displayName\" : \"Genny Berge II\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/718243\",\n      \"type\" : \"LOCAL_GUIDE\"\n    },\n    \"name\" : \"Michelle Schiller\",\n    \"updateTime\" : \"2022-08-16T11:28:41.885245Z\",\n    \"text\" : \"3m9zvqdolofgpk33bvc4icgt6dre6lh34km26pohr84mj4uxxgr77ywzj61jkh4u35h22svi069knti\",\n    \"upvoteCount\" : 439628501\n  }, {\n    \"createTime\" : \"2023-02-21T09:42:41.885298Z\",\n    \"author\" : {\n      \"displayName\" : \"Felicia Mraz\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/957056\",\n      \"type\" : \"AUTHOR_TYPE_UNSPECIFIED\"\n    },\n    \"name\" : \"Renetta Kreiger\",\n    \"updateTime\" : \"2022-04-18T11:22:41.885514Z\",\n    \"text\" : \"uowu442acewjbpilv0o0qxapsr2r9py5\",\n    \"upvoteCount\" : 742237384\n  }, {\n    \"createTime\" : \"2022-08-14T09:58:41.885569Z\",\n    \"author\" : {\n      \"displayName\" : \"Lydia Walker\",\n      \"profilePhotoUri\" : \"https://web.example.mocklab.io/461236\",\n      \"type\" : \"LOCAL_GUIDE\"\n    },\n    \"name\" : \"Willard Wuckert\",\n    \"updateTime\" : \"2022-07-24T10:49:41.885781Z\",\n    \"text\" : \"ihdqx4kmqxqi0zuukxwcaqlgtgif3bu6zt538m67bmf343wc29ijlpfvyh02y2bf39el8ogxs8npzc8pt9k0sy39dhv56faozkyrb1vke6yp9uxwa\",\n    \"upvoteCount\" : 55734377\n  } ],\n  \"upvoteCount\" : 1589289785\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "482180ca-74c3-4a2b-a15a-b179e685a8bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.886055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.patch",
          "schema" : {
            "description" : "Represents a single question and some of its answers.",
            "properties" : {
              "author" : {
                "$ref" : "#/components/schemas/Author"
              },
              "createTime" : {
                "description" : "Output only. The timestamp for when the question was written.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The unique name for the question. locations/*/questions/* This field will be ignored if set during question creation.",
                "type" : "string"
              },
              "text" : {
                "description" : "Required. The text of the question. It should contain at least three words and the total length should be greater than or equal to 10 characters. The maximum length is 4096 characters.",
                "type" : "string"
              },
              "topAnswers" : {
                "description" : "Output only. A list of answers to the question, sorted by upvotes. This may not be a complete list of answers depending on the request parameters (answers_per_question)",
                "items" : {
                  "$ref" : "#/components/schemas/Answer"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "totalAnswerCount" : {
                "description" : "Output only. The total number of answers posted for this question.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp for when the question was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "upvoteCount" : {
                "description" : "Output only. The number of upvotes for the question.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "a923f42c-4be5-47ef-90ea-4649bf1437ad",
    "name" : "Deletes a specific question written by the current user.",
    "request" : {
      "urlPath" : "/v1/Deanne+Davis",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a923f42c-4be5-47ef-90ea-4649bf1437ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:41.883676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessqanda.locations.questions.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  } ]
}