{
  "mappings" : [ {
    "id" : "d2288085-6c84-447d-9c72-914d79f10768",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2288085-6c84-447d-9c72-914d79f10768",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.07652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "95053e70-7be1-47ce-8260-4ce7570bb131",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95053e70-7be1-47ce-8260-4ce7570bb131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.076445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6a0cd906-314c-4ca3-80ad-c2172d41bf38",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a0cd906-314c-4ca3-80ad-c2172d41bf38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.076333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b9d2c15e-991a-4026-a936-23fa8ef9169d",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9d2c15e-991a-4026-a936-23fa8ef9169d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.076254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1279be9d-8672-4b8b-a02f-14722c46452e",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1279be9d-8672-4b8b-a02f-14722c46452e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.07617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c529fdcf-5b19-4caa-acf0-f750ee9623b3",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"session_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\",\n    \"session_uri\" : \"http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c529fdcf-5b19-4caa-acf0-f750ee9623b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.076052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "data" : {
                "additionalProperties" : false,
                "properties" : {
                  "session_token" : {
                    "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  },
                  "session_uri" : {
                    "example" : "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "session_uri", "session_token" ],
                "type" : "object"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSessionResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e9dac6b8-5a7f-4b5b-a66d-bd1523100e1d",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/2423/3mps",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "California"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F812419"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9dac6b8-5a7f-4b5b-a66d-bd1523100e1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.075905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a614a96e-bb0c-48b5-b296-25bb84e4a8d0",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/z1r3/9450",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Kentucky"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F770448"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a614a96e-bb0c-48b5-b296-25bb84e4a8d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.075395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5af17af8-d80d-4353-9382-3e6f2da04675",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/n2zm/gkot",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Vermont"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F874553"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5af17af8-d80d-4353-9382-3e6f2da04675",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.075029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "698b36f6-34a4-4529-aa01-1401e3c87e0d",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/6z75/b799",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Colorado"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F629549"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "698b36f6-34a4-4529-aa01-1401e3c87e0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.074708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a3ff7caf-fbe7-49db-86ac-9dfe6dfb428d",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/0iv6/fmn9",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Illinois"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F452816"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ff7caf-fbe7-49db-86ac-9dfe6dfb428d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.074379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "11286833-d644-4112-b10d-273cf17354d6",
    "name" : "Revoke connection - 301",
    "request" : {
      "urlPath" : "/vault/revoke/23xz/r3kz",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Indiana"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F165738"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "11286833-d644-4112-b10d-273cf17354d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.074021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e18b830b-c228-41ba-a221-86af51501c1d",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e18b830b-c228-41ba-a221-86af51501c1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.073716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "fb33b0af-c862-4901-8db8-62c18126034f",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb33b0af-c862-4901-8db8-62c18126034f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.073639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "0a3365b5-46d3-4792-8738-6e8d2e26134c",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a3365b5-46d3-4792-8738-6e8d2e26134c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.073537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6319bdf3-29bd-4bfc-b4de-4633acf8a8c2",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6319bdf3-29bd-4bfc-b4de-4633acf8a8c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.073456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "883c4951-1b05-48f1-98c7-48127405f4df",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "883c4951-1b05-48f1-98c7-48127405f4df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.073374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "61790534-afac-4a95-a330-2a5a3aba582b",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61790534-afac-4a95-a330-2a5a3aba582b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.073263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Log"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLogsResponse",
            "x-graphql-type-name" : "LogList"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "7b2532f8-9f42-4602-8283-a2f01464ac97",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/5hzv/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-11-13T07%3A59%3A34.072975Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-09-15T05%3A47%3A34.073007Z"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b2532f8-9f42-4602-8283-a2f01464ac97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.07307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "a190e51f-d565-4737-a391-2087f913c86a",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/gb2n/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-10-31T07%3A29%3A34.072707Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-08T08%3A13%3A34.072742Z"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a190e51f-d565-4737-a391-2087f913c86a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.072847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "7ff29c5e-fd01-4103-b236-b02bbbd7f486",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/8y1c/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-06-02T07%3A05%3A34.072408Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-08-07T06%3A18%3A34.072441Z"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ff29c5e-fd01-4103-b236-b02bbbd7f486",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.072504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "d04c9ac6-1b95-4d82-9d8b-60b8b0772253",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/vz9j/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-08-10T08%3A47%3A34.072192Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-04-19T06%3A05%3A34.072226Z"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d04c9ac6-1b95-4d82-9d8b-60b8b0772253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.072287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d94f8a15-c5c0-4bb3-ad79-365f7d37893a",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/5i99/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2023-01-20T08%3A43%3A34.071937Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-12-01T08%3A56%3A34.071972Z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d94f8a15-c5c0-4bb3-ad79-365f7d37893a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.072062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "f8b7431b-26c2-48da-a4ea-64cb2f8632c0",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/rra6/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-10-27T09%3A05%3A34.071588Z"
        },
        "end_datetime" : {
          "equalTo" : "2023-03-17T05%3A55%3A34.071639Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_user_id\",\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"end_datetime\" : \"2021-05-10T12:00:00.000Z\",\n    \"start_datetime\" : \"2021-05-01T12:00:00.000Z\",\n    \"aggregated_request_count\" : 40,\n    \"application_id\" : \"1111\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8b7431b-26c2-48da-a4ea-64cb2f8632c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.071728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "aggregated_request_count" : {
                    "example" : 40,
                    "type" : "number"
                  },
                  "application_id" : {
                    "example" : "1111",
                    "type" : "string"
                  },
                  "consumer_id" : {
                    "example" : "test_user_id",
                    "type" : "string"
                  },
                  "end_datetime" : {
                    "example" : "2021-05-10T12:00:00.000Z",
                    "type" : "string"
                  },
                  "request_counts" : {
                    "$ref" : "#/components/schemas/RequestCountAllocation"
                  },
                  "start_datetime" : {
                    "example" : "2021-05-01T12:00:00.000Z",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "x-apideck-schema-id" : "ConsumerRequestCountsInDateRange"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ConsumerRequestCountsInDateRangeResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "71c2a3ce-1027-43e0-9c8f-f4f8f4da85fd",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/2gvh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71c2a3ce-1027-43e0-9c8f-f4f8f4da85fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.071362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "1a20958f-ba1b-4884-be1a-458231eda7e0",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/5cm8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a20958f-ba1b-4884-be1a-458231eda7e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.071212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "3bc50faa-3233-483d-8360-658693adf0aa",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/1qm5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bc50faa-3233-483d-8360-658693adf0aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.071039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "40704bf6-5ada-4d63-925a-7736476d3772",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/ctqh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40704bf6-5ada-4d63-925a-7736476d3772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.070885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "114ab8ba-23a4-412d-b24b-936bc83a06e9",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/rt6j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "114ab8ba-23a4-412d-b24b-936bc83a06e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.070727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "90310c65-121d-42e3-afff-8b0115d0c39f",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/g3d1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90310c65-121d-42e3-afff-8b0115d0c39f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.070534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "aee39c2e-c181-4fb1-b38a-8ba7779a4327",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/qs03",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aee39c2e-c181-4fb1-b38a-8ba7779a4327",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.070101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "6d19da8b-1d8e-4091-b676-2c111a6900db",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/tz6w",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d19da8b-1d8e-4091-b676-2c111a6900db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.069915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "61fc84cb-0433-4777-96cb-7a51b657fbb5",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/0563",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61fc84cb-0433-4777-96cb-7a51b657fbb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.069741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "afaad3e2-ced0-4fe2-b036-6901d5353d3a",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/0vk5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afaad3e2-ced0-4fe2-b036-6901d5353d3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.069596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "7b91f2ba-5ad7-4fa4-a98a-a476f48b1880",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/b02z",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b91f2ba-5ad7-4fa4-a98a-a476f48b1880",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.069441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "2202bff8-5d7d-4192-98ea-1aa113bdc134",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/h970",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2202bff8-5d7d-4192-98ea-1aa113bdc134",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.069267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "26749a4e-9fb0-49fd-9459-51f04229e138",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/6sjs",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26749a4e-9fb0-49fd-9459-51f04229e138",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.068984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "0f845ad1-5c86-4950-b060-b770f51dd428",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/4v4l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f845ad1-5c86-4950-b060-b770f51dd428",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.068829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "a6fb20e6-228e-4468-891d-ebb1a09ecc81",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/o2z9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6fb20e6-228e-4468-891d-ebb1a09ecc81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.068651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "514de174-6d01-43bb-a8a2-450bd57cc772",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/rh6y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "514de174-6d01-43bb-a8a2-450bd57cc772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.068508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "80cd2964-841c-4e53-a9c6-5f163a4d1ec9",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/5g1f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80cd2964-841c-4e53-a9c6-5f163a4d1ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.068354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "ad6fae19-e9b7-4fce-80d4-a73a7dc88893",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/ff34",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad6fae19-e9b7-4fce-80d4-a73a7dc88893",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.068167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "consumer_id" : {
                    "$ref" : "#/components/schemas/ConsumerId"
                  }
                }
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "b3baadf5-178c-4ee8-bdb9-23165e4b8489",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3baadf5-178c-4ee8-bdb9-23165e4b8489",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "eba5415f-4057-4c05-8f9f-4fe0fd25f9be",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eba5415f-4057-4c05-8f9f-4fe0fd25f9be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "8b2ce00c-a55e-41d1-9c37-fa2c2f95cf42",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b2ce00c-a55e-41d1-9c37-fa2c2f95cf42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "58f2b14c-6b53-4e7b-a25a-bb9bfdf1c179",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58f2b14c-6b53-4e7b-a25a-bb9bfdf1c179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "598dccf3-542c-4005-9979-40918f0bfb67",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "598dccf3-542c-4005-9979-40918f0bfb67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "a7a7b077-9aac-4850-bfdb-672e365fff4b",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7a7b077-9aac-4850-bfdb-672e365fff4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "12318b8f-db13-43a0-827b-58c368f8f14a",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12318b8f-db13-43a0-827b-58c368f8f14a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "c26c2b89-61bc-461f-84ca-f842c2557291",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c26c2b89-61bc-461f-84ca-f842c2557291",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "8d38b073-556a-49bb-85f3-a15bc1e4f918",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d38b073-556a-49bb-85f3-a15bc1e4f918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.067062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "810abfbe-1e8f-431a-b5b4-d43b983469fc",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "810abfbe-1e8f-431a-b5b4-d43b983469fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.06698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "4aecf327-d0b7-4fda-a446-83c83728da2e",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4aecf327-d0b7-4fda-a446-83c83728da2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.066896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "e2470f09-9ab3-4a2c-999f-b4b094384d25",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2470f09-9ab3-4a2c-999f-b4b094384d25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.066767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "properties" : {
                    "aggregated_request_count" : {
                      "example" : 101,
                      "type" : "number"
                    },
                    "application_id" : {
                      "example" : "1111",
                      "type" : "string"
                    },
                    "consumer_id" : {
                      "example" : "test_consumer_id",
                      "type" : "string"
                    },
                    "created" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "metadata" : {
                      "$ref" : "#/components/schemas/ConsumerMetadata"
                    },
                    "modified" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_count_updated" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_counts" : {
                      "$ref" : "#/components/schemas/RequestCountAllocation"
                    },
                    "services" : {
                      "example" : [ "salesforce", "stripe" ],
                      "items" : {
                        "example" : "salesforce",
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumersResponse"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "5052f6b4-e62e-4b42-b834-f2f9d0d0d69c",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/h9wod02echra8di2f9px2b0yvlo88ku7loq78d21bnzf2f5vrhqq8ytfw3tiv9z1t57ehgngbr3cz8tlk47gy642063jbr0voox7p9ljwa9dfkz7jswaoexx7af5174zg82wztrpx8b/z113/p7z01gucheljlcbwkzcak24n6cqkv2s21ty1ugvkjr5ogkh2sv38z98krpmyjk6b1nm70jlzmde3jctklw961xhuspmjn7571t3cudhhxgirk0geosit86t9b0vny8xw0vp70h6dlwgpm7xj/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5052f6b4-e62e-4b42-b834-f2f9d0d0d69c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.06645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "c2d8accd-8c9c-42b0-9308-ed03ad69384d",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/fwiwgpfl2niz0tsa2womysjdayrn0khayl4rrf7bv45nzmv39m63fy7sq0py/m9tv/a3rtgq5qjned0arbwo97nv73avuq2tryti0ie49k8c1qpv121ggw6r20ykpm4msn5k7hzanygioegh3bp0te1h2t7zpbfzst67ir5h6qra01f1yi1sj1g67cxy0yffzump0netjyhhn4pf9vl4qc0dyz7ypykgkz759i65d498qyb/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2d8accd-8c9c-42b0-9308-ed03ad69384d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.066248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "64bfb7c0-b651-4563-b0e2-a2883769e885",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/lnnzll6p2f0o8p5zwtmer1wvjtvtu8v39wcdyurcfjq4yctk2g4kjuli36ug5ao7mm3ybculuynb21kfq8l8ba2ppdm1rsiyr836xjqz9xufocqosgetxxfbjeasaikykktsc3py2c4qke2chxea1jgtsk7hgwgbxnlh8g/70u4/hudk1hgemf1ybo87iu4da3j06x6pow4ngs1nqtf4rmpmxz5k1sw93ovs17xjxi4e09yawz64mrf4lz5qgxicyvp0iffu4c66rlze2kzdpoewakpco7njwomovmsg0/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64bfb7c0-b651-4563-b0e2-a2883769e885",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.065981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "b19a0b63-0fff-4de6-9d16-096afcb650f2",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/7afj7z0ztsh2wkwq74ppvlpdpjguztrmmwj4qtsezexkps5wikj04evwawuussw93bh9uqhh0ql3vc85jwe18zli0tduxd6lb82njs/0q86/jdon9hz3o7kz4hpxkbzuunp43duo2u0oj5o2u1artnc43nj325fu739cvur/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b19a0b63-0fff-4de6-9d16-096afcb650f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.065809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "a281d8b5-faad-4121-9e5a-3f4a3c1e4f28",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/8wvq2pszg7f7cj5aqtv2046klh5gi2ud40gmofbxscmjqyqlkobt6m85qnkdtkkoybtqcrit5cnrgnouvpt7ux5t73rlfmlpbi6q159fdp47z8lm36utgrsxndw3b59ergnosgdi1mroqr6akl0hu4hdlxxs2514ml4/g4b0/xckbfnzr7u49p35haj5002zlhd45380clbn3qm1bl6x88g0n5lgemssl02cqd89mfg4odr6zlvhwgs067l05no7jfg4exw9cvsj4sol8x908t1/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a281d8b5-faad-4121-9e5a-3f4a3c1e4f28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.06564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "309e798a-55fa-4459-ac7c-d4db5d335490",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/i71fp323vc9n85o/vxz3/5evkzefwubp56m6k3481axi8fuh6xb8fw3noarvz69mvd991mr0s64ltls9ck98nctgpvmti7v9dk3b5sheuagck62wppo1f0415ve3ndelanjp6772efiwa23a9jfda/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "309e798a-55fa-4459-ac7c-d4db5d335490",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.065432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "892727df-677d-4243-9865-6c26b95c06eb",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/rhk0zampc81ngpi47v0ubcz91rafgug4acplnvldnsw41mtkycp8oyrcjwpvm7ata9r29gtwmawtl4630t09zvaf5tnvkbjofgcofxw9vo5oi4p2s7plmu/qdhv/3wuvx15jb1tli1lka1formr1uoj5ynzfixamb874h6i0i3nu8eeqwo/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "892727df-677d-4243-9865-6c26b95c06eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.064546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "b098bf47-bf9f-4922-b5c8-7ca3c74fa28a",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/e9mtjtm2l0sv1viz01lkczhxuoyheolusl29csvr56qkaj5khg3aa1i74ecdnrnhq8nmbiuu/9li0/4s7dsyjlzgm2yannely9tiluz0su842zfq7juzy4lm40hokytpmlfw3sdz68kht371061wfe8/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b098bf47-bf9f-4922-b5c8-7ca3c74fa28a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.064375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "50cedc13-eda1-4014-993f-b1df1cce69f7",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/qqeqnmr7xu9b6t1fvqf02wwtpltxfb2ynik3cvt7mpgf32ud2hhw2fw11wtg7ctbiczjvc892yekgop3dma9b0oiasl4hlpu6zyudhcip1aqkszs9fykvyrr4kicdsmql3k6uib8330ks3fskg19/n2v5/t0ri4eewg9q9ai1eyr7n7aw12wf39pcy378ykaptec1ewjoi0625wuzw6thtg1k72bi2fee7k9zolyumehg02vik6uc0039/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50cedc13-eda1-4014-993f-b1df1cce69f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.064173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "1abdc064-fbae-43c5-ba0f-95cde6db8ae1",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/kf3wd61t824rluaaici4yu9jx2ciphe86dcywl23d2e2evpii9mpj5ukdkuzxysy3mtzqigjiu0do04ikz4sg8lk8cy2mnalafx44gqxnrw4mzddm39bf3ros6qz6hr8x/h1ve/x9rgbgnedzamq2ssz0az4b04ndehwjq2m1aai6hh26fz0rudaf5g0uc59zed51cavs/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1abdc064-fbae-43c5-ba0f-95cde6db8ae1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.063999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "dbf6670a-b63c-4a46-949f-939f182907a2",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/c2tlp3c6oj49jj38xyaz4a36berlfz9v0oy8gjw635pk9qu2l71s41wd37nfi0gmtuw7xr2dkutyzqyf4knqoyk0b1oc7rk6w63y9iipdafy8bun0g011xs/yi40/sy5bunhj6b90kt8rgx5qor5kytzwz8wkg0sxkkqpfmf65dr24th990camy96u0r0cnbq2vgt2faj3zolj5wt8yc6m0ij813r3b290odtceav6s84qng9e7bb2y11dbhv21wb53ows8rb60onvtldxojkrcwc5ucuncysbbxt68cnjqr7detqmxmj471drlo2eosi4qgu/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbf6670a-b63c-4a46-949f-939f182907a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.063815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "cc9dbae4-3459-4793-b63d-9dd1bbe0cc2a",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/r3nmvtpi0ysg743ryt447c9h3whrg78kx83b2rpkgq28qgpdzxh/tgcf/3le0uqtsqr50zi8ohdhykubwdq5qzdknnzo2klwam7rxq7ierkgqowl02cnyexvj0008a3ys041slfu5w4rvlf36/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc9dbae4-3459-4793-b63d-9dd1bbe0cc2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.063591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "240a420a-d55b-4276-9a0d-2e5b9cafdd39",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/wq5ji04bz49dweqz7g703z1muezhxi0gq9ljp9l0rpz1eo4iaubnav6sazf4w4b13c2ewu29p8u4n7bu8ymjh6nsnn7ll1hlyu8otjl1pi33c2yn8rbz6m/52o9/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "240a420a-d55b-4276-9a0d-2e5b9cafdd39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.06246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "b934d07d-8277-4130-b7fd-e2003836f1e4",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/x3mcov92xchiju2fr798b1yrn0aa9qlhxnaqiel6nx50jh4qsh8dmpdy5o1k0i3w9t7n3zv0ylg6b74f8ncjms6y11l/qr11/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b934d07d-8277-4130-b7fd-e2003836f1e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.062302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "a836aac6-130e-4d0c-bc46-df7858e641b7",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/vktzfcego0fq6gw33au30ndf1f1l5uvq8exdo1x2rxsrnjm69964p6v2i4vny59ukfmq17c3jdngt3hblzpxb3to6cc3l7bd01jh2hdivsz3r4jmqyuarvl8c/cpnj/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a836aac6-130e-4d0c-bc46-df7858e641b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.062113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "91e3862a-457d-49d0-b951-55acceaa5d8f",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/8tbuk7dxapma75gkhnr5x8cuxt2l7pgpmfvhqd5sm35tewy3lc645rv849ppj7fljhcp3225ty985irqv78tpputdzjse9anfq4n8k7gssy4wjw3ano2/bv4w/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91e3862a-457d-49d0-b951-55acceaa5d8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.061957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "78e997ac-6c4b-4707-badb-2f32834f1eae",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/lgup3pg8pkzzcf86hc2za9yh2tmiis2z9ar4cgm2z/7w2k/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78e997ac-6c4b-4707-badb-2f32834f1eae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.061786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "fc4b505c-c57f-4bee-ade5-efd4cab2b83d",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/ge4t1b89k6r3j5s/7x1k/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc4b505c-c57f-4bee-ade5-efd4cab2b83d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.061597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "21efa943-06b1-49b7-a27b-34500b17453e",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/vfn4264qt5t7d7ryn1c7fo7hvxzdsibkk59lgntq0l1tmnfwkfzur2z5pe9hubt3islzy3h4qpnhg74x01pp55i2v1l6pv6f12mbgd6k6ggc3n6hczqis06mpx4rcs6cml5cpmndwhr03u98u9j7ogsm8xck12dhorhiqt41kup37g8d/2i8t/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21efa943-06b1-49b7-a27b-34500b17453e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.061079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "3968176d-8d72-4101-a15a-6fdd29de54bf",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/5pz1vzdymf/ece1/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3968176d-8d72-4101-a15a-6fdd29de54bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.060915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "d90b1833-b244-489c-82ed-696bc7c10941",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/g174r8o6s4m4x3mqhxu8k4144mwpwo/66cg/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d90b1833-b244-489c-82ed-696bc7c10941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.060722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "5ce355d3-a58e-478b-b55d-5e10ed0775ec",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/zfzw9uhfqnc214nx7y4h51xkhvf0upmvmbehlqr6kl9d8pwy2n1bs3n0legs6p9qphy2gn6h7qc7a5avefr2rlcedprmn20v0plhgnuf/2a4m/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ce355d3-a58e-478b-b55d-5e10ed0775ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.060555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "0861a179-e5b9-4d6a-a0c3-cd448807dbe0",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/yvg4yvly0i7dphesu3s0w03f0ulj15mya1nz3blbsh4ahesxyqrxy6vd4pbsuwxausuz092jxm4h90hp8wxwfaygnoh5ngds6ejjdiwmrftlrp0mnc1pamc8l2n53bptuphvj/lwh8/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0861a179-e5b9-4d6a-a0c3-cd448807dbe0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.060371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "51a3bbe5-ad0e-47e3-84b6-cf8099a621ed",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/rltlrdjs27ym1cqmwpho0a8318sa4uvqchgsrx51oysezomm8xormhcgo8k2r1yngbdc8l7nm4cfowq4abk0bu90qy69jkdboi7wzstu5rzxv50wpv6g111sj/4g09/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51a3bbe5-ad0e-47e3-84b6-cf8099a621ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.06014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "b9dc7130-6521-4ca0-aab0-93f3ff81b1f5",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/tojfikn06ixhc0jifaa3q9kkof4nbcz6sta5lrj84c6q0vsepy1ntdinq9h4k7uffgh3qq8znxzjn3fdi5dggcuynhs0tq0yf58cwq5wf8hmoxupxlb722xrcme32wynjgmq7qiwpfsba4b8v0bp3dx08n7lc93d7/3emv",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9dc7130-6521-4ca0-aab0-93f3ff81b1f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.059394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "01127037-5906-42dc-83b5-a958188462c1",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/6mx7078fzagtpgp2i8ay8zroja3pw8y97nk2f4wp9bfrl1arfhgxqb7zn4r5hk804pq3s7wiwath4pw99ytmwn6znqk67gztlh1swleqt5ibbfsj/13q8",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01127037-5906-42dc-83b5-a958188462c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.059212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "4c17ea3f-6a7d-444f-a944-84e0c90923df",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/1kg70gmgt0r2k8izlide5k28arbm2j6z3kzdlhvc5fre9trl9v1b4tnhl2g01u34i2/232n",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c17ea3f-6a7d-444f-a944-84e0c90923df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.058966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "a3b5f2e0-41e5-477e-920c-4a3770d7e7e3",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/m7rot72da/mvid",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3b5f2e0-41e5-477e-920c-4a3770d7e7e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.058719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "1f6aba06-6261-46e6-b34a-d9e57f9a65f7",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/jcm6gw88wrcv/0a9z",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f6aba06-6261-46e6-b34a-d9e57f9a65f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.058541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "64f46faf-cc8d-42ba-96d0-18387631de5e",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/f21z7gbptv5avtxj30yu0g8dokngwhb42feb5hv9ocw3kz/7408",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64f46faf-cc8d-42ba-96d0-18387631de5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.058294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "f6a50ae8-43af-46d6-acd5-c4de54ccf6fd",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/fcyctorbtu27gzikujbdj6wyoc7m2qujq3ax/a1h2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6a50ae8-43af-46d6-acd5-c4de54ccf6fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.057313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "0d2cd15c-a9e5-4ac9-a187-fedf3b6740de",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/3imqko35lssdgmd38ftggpn6c62xtuc34sexzqqa4smvv31lnuoq8uvzsgqw7k6i2a/gie4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d2cd15c-a9e5-4ac9-a187-fedf3b6740de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.057138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "666db258-b6d5-4e3d-b92c-ba7ceb05e7c7",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/fmxiaty1qzt9a6rsay0at3gnifoe7u0n5sebc7d3qfnzaj9amgwstgtvoxmn6tl1c36nf0pyfcy987lycxaf1epfq202l1hvzn7h88inrmbi9ceg20jykhgxkrkvhrdm8edfa7j1oe1nkpyonpam7dhrrnd5d3d06r676lqv/nxp2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "666db258-b6d5-4e3d-b92c-ba7ceb05e7c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.056918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "a44e8eb2-a49d-429a-827d-385acbde0623",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/0nl08obwejztb6u2xu3d2we6c91s0la0boixjvudu0ha68qj6r0ukkbicctx0wjbua3cgs4gvd42oely4dufewqmv8tglimodgko79wed/e17m",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a44e8eb2-a49d-429a-827d-385acbde0623",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.056687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "7a511eaa-d6d9-4535-a3fd-765386725fc1",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/ccrl7w3455ywqi7pt5n0c09x0cjoh8tuqgwoslvagcmi3ydoxavyajpt6eh35sogvg47s7fhkpiueda/65s9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a511eaa-d6d9-4535-a3fd-765386725fc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.935818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "bf04d782-b3e0-4bad-861d-aeae63c34cc9",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/imwqqmbg3ywwgqoqxmq0ix65iz4ui30ebya0fejwab3zxvqw4n7ny13hqpnnxxh83seircil7ef71fjgc62t31l4t3iflb0ms2mkq3bfegpkuxtpb171dsgqz5s6f2tc5ey3nb0y5j5ue6u572bvrb369jilqt4qbqmu31chpo62ylka2uyk6mc2dg/wz13",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf04d782-b3e0-4bad-861d-aeae63c34cc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.935616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "851e1347-a82d-4190-ade0-635516cc7713",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/nk64502lwurgh4ewbjwszqxapuxyqd5298gr9deqcvrwz2dceucofkvez4g9gay3783f1tkqegpvdctvj4r9tatvsxyjld7qshn0e33tg65qedx7qw9191y5sm9lpyt3udwcas4ajyv7ryay723krprnftbmkcoqnmex78mbjjnddm72man8jmknh82v3ofroq57/q3bh",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "851e1347-a82d-4190-ade0-635516cc7713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.935059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "d584245d-d71c-400d-b923-05edd4648961",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/l1m6jnwdkx1a83jabyttornpi9vnp2k5k9qnrrkmkdi7nevwuy4e8is327f2cbe6mbwkjjjxoy3wu68pu1rja46ko51zi6e7x9ibve2m5qs1fy90rggy9ai50r2qr49dbwae8xbcy3cz/02n4",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d584245d-d71c-400d-b923-05edd4648961",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.934884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "0fed9d9c-1bc7-4df5-a4dc-eadc78c6376e",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/wqebgsd8lqmknwym9b68fb8n4driuh7beckwwvvx3gokddzlantrs5yk8ald76bjkgev2xn8yl4ifbzfejei8kclvhy4add5lyov2fd95urzs57t2dm1ptf7k9uwiig33redkb61xy8wrmjd92fv6u3mo695369rbzo1se1yyi/tmaf",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fed9d9c-1bc7-4df5-a4dc-eadc78c6376e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.934678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "a987ccd0-1ffa-494a-b46a-dfd6557417f0",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/vikhgwhyqkk11g3jvqbs0210fao2dzjzuqqiuyt1fa5fqnghkbgc6qrwp1mz0dkini3tugqzz8tsx0zyumhzg7d9v7qdjdafyci2emh8ia5cxtfjfx3rndhbzendeofdgunyvfg7kcdw7au8pydz22ghsblaoxghzqvg4rwuxifvb/vq4v",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a987ccd0-1ffa-494a-b46a-dfd6557417f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.934486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "22eafed3-c527-4587-ac5b-8cd8c65d72a2",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/ru7j1pre5caxtqicardaw0lz3/dvoy",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22eafed3-c527-4587-ac5b-8cd8c65d72a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.934313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "e797fb23-ab9c-4a8b-b291-3f227d6075c7",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/7va1jy6l1oi1egyfny51slajdkb9jl8z0bzg8gswd3/45qb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e797fb23-ab9c-4a8b-b291-3f227d6075c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.934103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "db4ae642-1aeb-4aa0-b1c9-eff36612ec4d",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/5066tr47qrc9g4xl13atnclte0ojgnv75osssf0pbzedr2kubmbwz70byreicpqbblx91du4nmclle/4zvu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db4ae642-1aeb-4aa0-b1c9-eff36612ec4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.93304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "f168fe8a-1ca5-4776-8cc2-c096234e9d79",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/c3xm5tjkz9nmry0h4v5tw0a5yiy4ahqb0dk7t2bjyerz7g9cyae4dklymg23l7gg8m7/097p",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f168fe8a-1ca5-4776-8cc2-c096234e9d79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.932868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "932b6b4c-7f20-4d75-a642-0e33c5db441e",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/h43ah6hozfy62vw5fy2c7ognd8pzvq0zbityuxp40jqrp8aucpel3uw80d2vry9z9et1xz6s9yx9csfpbjjjm8q3ifokdvl9u040m3fj8cjnefwngt5nbvv86pz7tpil0jcxqh52c4ltkag3vrmzbu7ma43s11xkpsvycew8sfdj5spfo839w/m856",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "932b6b4c-7f20-4d75-a642-0e33c5db441e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.93267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "33c7579a-9040-4f44-b36b-1ee50fe09ff8",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/lpjyeayaqdo1arnrl9wx9ksszhsljpg75288pm2tmuqa5ylfawa1b2es1mkx9t05wf9f8vu7av27gkkljw67n7eco8wom5zoxkmgu2balo38vodi6tlmw4p0x1rytm2shvbdv2pgxd0brrj6hj56jtm4wg0hagxlslgewsj/u51n",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33c7579a-9040-4f44-b36b-1ee50fe09ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.932497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "63f56a40-9b95-47d0-87a7-f4aba2afceeb",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/dxmu1zcy74r108hus8mhothq6ze1mmcehk3hc7iaa252f3aqjzxeb/6028",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f56a40-9b95-47d0-87a7-f4aba2afceeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.932323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "2106a433-c7a8-4a68-be5f-a971c4e78aea",
    "name" : "Deletes a connection - 204",
    "request" : {
      "urlPath" : "/vault/connections/b5lhl3c1lssz55/dg1p",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2106a433-c7a8-4a68-be5f-a971c4e78aea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.932129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "5c948642-f40c-4fd8-a5d0-0e9612fa360a",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c948642-f40c-4fd8-a5d0-0e9612fa360a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.93199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "2cd5836b-2aa4-4fb0-980c-d1da5609e84e",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cd5836b-2aa4-4fb0-980c-d1da5609e84e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.931895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "fac96bc3-e995-45f6-a4ff-0856c303ed1a",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fac96bc3-e995-45f6-a4ff-0856c303ed1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.931763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "07498749-c6ee-48ec-b1a0-13f8ba05389c",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07498749-c6ee-48ec-b1a0-13f8ba05389c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.931663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "febdcfed-89e3-4b87-9af8-ddcb722a73a9",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "febdcfed-89e3-4b87-9af8-ddcb722a73a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.93147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "6ae77de8-ed82-403b-9d8d-c06dfeeec884",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  } ],\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ae77de8-ed82-403b-9d8d-c06dfeeec884",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.931338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionsResponse"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "26c24366-ac92-4eef-a2b0-2d31a060e985",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "6xcoas26t7sa3httgwiwtdlgrq2ug0s2y8l6peg11yshl7iu118hubsl8yki95zk49hultdl048vyfkqhvje0b5dibbb3tp60hk1142ya5p8fdyb5dfb1y3gg59uqth3tyi6ucnkm9p9iw16hfctz0eq8k5iv9r1hav"
        },
        "state" : {
          "equalTo" : "Delaware"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26c24366-ac92-4eef-a2b0-2d31a060e985",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.930708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "36a91c32-6a1c-41eb-8b81-77aa1a3a1eef",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "nf8r9hxc3dtoeutobk2w"
        },
        "state" : {
          "equalTo" : "New+York"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36a91c32-6a1c-41eb-8b81-77aa1a3a1eef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.930558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "c4728439-18a4-406b-9e30-a6505abedfbe",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "hwad6am1unde4rwogu9min0xsgyebhk8dwuss665bz043cl4giqjaon1nlgv30u9jlroyxp6e3y07xqqgupw7hg56kqw0soml0ay8ahdvp7roedcadgoaz60ij5xpagcluyp9e4iqn5gitg8stjzj6z"
        },
        "state" : {
          "equalTo" : "Oklahoma"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4728439-18a4-406b-9e30-a6505abedfbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.930376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "9afdbaad-5909-42be-b920-34acbd765443",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "bpm1poiwkvrmsnsf3703vdqnbk7my7u9yohgr5079v3wgdqe164zmuavujtp0wncgnnjcozd06wtoet9cj6m2p40r6iwceu48rmznreawymzk79g2a"
        },
        "state" : {
          "equalTo" : "Alabama"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9afdbaad-5909-42be-b920-34acbd765443",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.930218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "e73f64ee-7191-449a-8306-f4f3409ec94e",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "zdklwo8exvmx496hz6qbsktdrw61pmcne2cqonrgvqf"
        },
        "state" : {
          "equalTo" : "Wyoming"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e73f64ee-7191-449a-8306-f4f3409ec94e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.930034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "e59a7896-f660-45a7-bb3e-af541f0ff33e",
    "name" : "Callback - 301",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "queryParameters" : {
        "code" : {
          "equalTo" : "fbbi33hdcedcvty1e4tg8whft7lrcxssy9zvgigessihd86xzzt6vq1ihcywh596jszwyjpvwmpf86l4z1bv4c4xjdzgc67j9u5t0f0muauexkjb8t9uof7xokkkb15mrtozmq"
        },
        "state" : {
          "equalTo" : "New+York"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "e59a7896-f660-45a7-bb3e-af541f0ff33e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.929761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback"
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "3f1bc9df-9778-4eee-b0f1-28a33843c7f0",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/z022/59f4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Indiana"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F282202"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f1bc9df-9778-4eee-b0f1-28a33843c7f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.929655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "82261d33-e646-4071-ac3c-618c1082af3e",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/gr66/h1k3",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Maryland"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F246033"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82261d33-e646-4071-ac3c-618c1082af3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.929289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "0b4e807c-e95f-46ab-899b-e16cc7769f65",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/6d7c/4093",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Hawaii"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F382465"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b4e807c-e95f-46ab-899b-e16cc7769f65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.928897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "5c66c498-c0df-4ce9-8fdb-a0933d401486",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/w0z8/523d",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Florida"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F368844"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c66c498-c0df-4ce9-8fdb-a0933d401486",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.928538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "24600fa6-6dd4-4ed5-9dd8-f6cbee230443",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/lid4/8v35",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Oregon"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F554817"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24600fa6-6dd4-4ed5-9dd8-f6cbee230443",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.928165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "97fb930c-de4d-4452-9f7f-0e0aa0214530",
    "name" : "Authorize - 301",
    "request" : {
      "urlPath" : "/vault/authorize/0izk/vk12",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Wyoming"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F830285"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "97fb930c-de4d-4452-9f7f-0e0aa0214530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:33.927698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize"
        }
      }
    },
    "insertionIndex" : 119
  } ]
}