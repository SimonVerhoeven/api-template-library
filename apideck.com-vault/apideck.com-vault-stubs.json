{
  "mappings" : [ {
    "id" : "befebf05-fc3f-457b-b2ee-022117217676",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "befebf05-fc3f-457b-b2ee-022117217676",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.741373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3f0057ae-effd-4040-b0d5-ecf381a5c2a7",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f0057ae-effd-4040-b0d5-ecf381a5c2a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.741305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5b9de2ad-f69b-4769-a5d9-0d7db1a63236",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b9de2ad-f69b-4769-a5d9-0d7db1a63236",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.741214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "97d32b1b-57f8-4d05-82a3-329a90545eb8",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97d32b1b-57f8-4d05-82a3-329a90545eb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.741145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "dafd2897-2022-4e93-af7f-598f9daba094",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dafd2897-2022-4e93-af7f-598f9daba094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.741064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "cd7f3374-03cb-4c0a-93ba-a06306d29333",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"session_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\",\n    \"session_uri\" : \"http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd7f3374-03cb-4c0a-93ba-a06306d29333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.740961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "data" : {
                "additionalProperties" : false,
                "properties" : {
                  "session_token" : {
                    "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  },
                  "session_uri" : {
                    "example" : "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "session_uri", "session_token" ],
                "type" : "object"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSessionResponse"
          }
        }
      }
    }
  }, {
    "id" : "ac15fd82-2f26-448b-ae81-e8db21edcb5a",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/47tr/3dvr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Missouri"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F265555"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac15fd82-2f26-448b-ae81-e8db21edcb5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.740849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0fa74f38-3348-41f2-8ae2-23c9ad037705",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/s1cn/m9ks",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "South+Dakota"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F683484"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fa74f38-3348-41f2-8ae2-23c9ad037705",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.740556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "85f89075-f1b3-4e49-9240-10a8b50ffdd1",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/24z8/fn1k",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Minnesota"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F301746"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85f89075-f1b3-4e49-9240-10a8b50ffdd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.740241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "46a3c1f4-8125-4451-bf64-f70cc28afbc4",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/79p4/82ck",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Wyoming"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F616084"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46a3c1f4-8125-4451-bf64-f70cc28afbc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.739924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "acc119f0-860d-48c0-a882-d3f02840e171",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/ll69/348q",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Colorado"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F708123"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acc119f0-860d-48c0-a882-d3f02840e171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.739626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "31aff782-7d39-4271-b57e-220a54366f36",
    "name" : "Revoke connection - 301",
    "request" : {
      "urlPath" : "/vault/revoke/iprv/13r2",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Kentucky"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F007470"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "31aff782-7d39-4271-b57e-220a54366f36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.73931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke"
        }
      }
    }
  }, {
    "id" : "02239250-562b-4d5a-b8c5-0d94a6d84083",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02239250-562b-4d5a-b8c5-0d94a6d84083",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.739055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d263b670-7e27-4ecf-8da6-2233955141be",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d263b670-7e27-4ecf-8da6-2233955141be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "381c5cdd-4b17-4fc0-8271-6a07cbeac018",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "381c5cdd-4b17-4fc0-8271-6a07cbeac018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b80d6331-bcdc-46a8-9886-8b7e7db229b4",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b80d6331-bcdc-46a8-9886-8b7e7db229b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0d205678-0e31-4484-9843-7c7cecbced24",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d205678-0e31-4484-9843-7c7cecbced24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c85d904f-7d5b-43b4-baf9-7e552708f06d",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c85d904f-7d5b-43b4-baf9-7e552708f06d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Log"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLogsResponse",
            "x-graphql-type-name" : "LogList"
          }
        }
      }
    }
  }, {
    "id" : "9298819a-6e9d-4344-b627-62468f73a8d3",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/b0x1/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-11-21T17%3A07%3A03.73832Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-08T15%3A29%3A03.738354Z"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9298819a-6e9d-4344-b627-62468f73a8d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "2a1e1361-fe9b-4db5-aa69-84c47d9ba376",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/eu96/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-06-03T16%3A10%3A03.738075Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-08-25T16%3A06%3A03.73811Z"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a1e1361-fe9b-4db5-aa69-84c47d9ba376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.738198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a34fd929-61b5-4705-9987-fb1e891513d4",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/7k15/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-05-10T15%3A58%3A03.737868Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-03-31T14%3A25%3A03.737903Z"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a34fd929-61b5-4705-9987-fb1e891513d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.737958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "3b31fc79-c102-4604-a6bd-ec1616b8488c",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/723y/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-08-19T14%3A59%3A03.737672Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-12-14T16%3A02%3A03.737704Z"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b31fc79-c102-4604-a6bd-ec1616b8488c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.737757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d3bfa5e4-0210-4ffe-9db4-dbabd03f4cf9",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/94e1/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-07-04T16%3A09%3A03.737452Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-07T16%3A03%3A03.737486Z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3bfa5e4-0210-4ffe-9db4-dbabd03f4cf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.737561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "78762415-8d81-4620-aae4-ef9d3a11e82f",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/i152/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-03-16T17%3A10%3A03.737212Z"
        },
        "end_datetime" : {
          "equalTo" : "2023-01-13T16%3A03%3A03.737249Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_user_id\",\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"end_datetime\" : \"2021-05-10T12:00:00.000Z\",\n    \"start_datetime\" : \"2021-05-01T12:00:00.000Z\",\n    \"aggregated_request_count\" : 40,\n    \"application_id\" : \"1111\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78762415-8d81-4620-aae4-ef9d3a11e82f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.737333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "aggregated_request_count" : {
                    "example" : 40,
                    "type" : "number"
                  },
                  "application_id" : {
                    "example" : "1111",
                    "type" : "string"
                  },
                  "consumer_id" : {
                    "example" : "test_user_id",
                    "type" : "string"
                  },
                  "end_datetime" : {
                    "example" : "2021-05-10T12:00:00.000Z",
                    "type" : "string"
                  },
                  "request_counts" : {
                    "$ref" : "#/components/schemas/RequestCountAllocation"
                  },
                  "start_datetime" : {
                    "example" : "2021-05-01T12:00:00.000Z",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "x-apideck-schema-id" : "ConsumerRequestCountsInDateRange"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ConsumerRequestCountsInDateRangeResponse"
          }
        }
      }
    }
  }, {
    "id" : "e553a4d6-7a88-4fd4-93ba-dcf21d628086",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/rd1z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e553a4d6-7a88-4fd4-93ba-dcf21d628086",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.73707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b1519d44-68bd-491e-9828-35e19b76bcab",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/vk40",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1519d44-68bd-491e-9828-35e19b76bcab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.736933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7ccc64a4-303b-4f2a-b3da-56b1c872f963",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/712a",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ccc64a4-303b-4f2a-b3da-56b1c872f963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.736769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "753a0b21-7688-42b5-bd72-6f70a5a12f33",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/7u8s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "753a0b21-7688-42b5-bd72-6f70a5a12f33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.736618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "41ceb981-cbb2-4525-a5ac-4e1fbbfdac38",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/m1c3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41ceb981-cbb2-4525-a5ac-4e1fbbfdac38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.736486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ff5c2028-706c-4a1e-97d7-1637fa2159ce",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/w89j",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff5c2028-706c-4a1e-97d7-1637fa2159ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.736331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "126b131f-fa23-4ef9-8cf7-36de1516a077",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/l1xu",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "126b131f-fa23-4ef9-8cf7-36de1516a077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.735983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8c4282da-20db-44c7-a2e9-70edb1720267",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/kc0b",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c4282da-20db-44c7-a2e9-70edb1720267",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.735839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "14f19b51-770f-4072-ad71-862a12b708c5",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/2trf",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14f19b51-770f-4072-ad71-862a12b708c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.735691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "42b2a774-3716-4b35-a770-5ea6575e4ec2",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/76uw",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42b2a774-3716-4b35-a770-5ea6575e4ec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.735563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "fa9ed36c-6d05-408f-8aec-c98dce3adffa",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/s28z",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa9ed36c-6d05-408f-8aec-c98dce3adffa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.735427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "52e7b183-eaa8-48eb-9d61-e355787539cf",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/f0or",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52e7b183-eaa8-48eb-9d61-e355787539cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.735267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "0bfadbeb-58a0-415f-87d5-3cfc03bca933",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/0pd1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bfadbeb-58a0-415f-87d5-3cfc03bca933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d5ac4464-aa9d-4599-b508-0f383accabfa",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/fm8m",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5ac4464-aa9d-4599-b508-0f383accabfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "cbd68d1a-9bbd-40dd-bc25-730dd31779b8",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/1t37",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbd68d1a-9bbd-40dd-bc25-730dd31779b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "09026028-6783-48d2-ae1a-0bde5afcc424",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/a06l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09026028-6783-48d2-ae1a-0bde5afcc424",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "35d750b7-af24-41d9-afd8-f4731f1ef5cf",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/ifpm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35d750b7-af24-41d9-afd8-f4731f1ef5cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "794bceb0-d73f-43d9-9d70-5878464adcfb",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/nlsd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "794bceb0-d73f-43d9-9d70-5878464adcfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "consumer_id" : {
                    "$ref" : "#/components/schemas/ConsumerId"
                  }
                }
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "6961843d-8850-401e-9c4e-d67b08525eae",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6961843d-8850-401e-9c4e-d67b08525eae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "c3e07ed0-0a1b-4def-8ce5-b9bf6bcb76ad",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3e07ed0-0a1b-4def-8ce5-b9bf6bcb76ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.734043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e7b35399-1ec7-49b6-b351-9f79e26ebd3f",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7b35399-1ec7-49b6-b351-9f79e26ebd3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "636f082f-686b-4183-a7dc-b0f9445bee48",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "636f082f-686b-4183-a7dc-b0f9445bee48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.73389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "682281bc-ffa1-4440-a88b-61c4cdb51dbf",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "682281bc-ffa1-4440-a88b-61c4cdb51dbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "cc743049-a318-4e6d-98c1-4654b07aa9ef",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc743049-a318-4e6d-98c1-4654b07aa9ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "e5a61055-918c-4873-b092-bc653638cc63",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5a61055-918c-4873-b092-bc653638cc63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e1e992e9-cd0a-411a-87b4-67d1ec8f6fde",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1e992e9-cd0a-411a-87b4-67d1ec8f6fde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "da05694b-85f1-422d-b8a4-6d75119f6be6",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da05694b-85f1-422d-b8a4-6d75119f6be6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "5424f363-6238-4379-91e4-f5e921e926e3",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5424f363-6238-4379-91e4-f5e921e926e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "5cc6f22a-37eb-466a-824b-678d94c18740",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cc6f22a-37eb-466a-824b-678d94c18740",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.73317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "56c4179f-b97a-4158-9e6e-ca55f9f90b2e",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56c4179f-b97a-4158-9e6e-ca55f9f90b2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.733062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "properties" : {
                    "aggregated_request_count" : {
                      "example" : 101,
                      "type" : "number"
                    },
                    "application_id" : {
                      "example" : "1111",
                      "type" : "string"
                    },
                    "consumer_id" : {
                      "example" : "test_consumer_id",
                      "type" : "string"
                    },
                    "created" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "metadata" : {
                      "$ref" : "#/components/schemas/ConsumerMetadata"
                    },
                    "modified" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_count_updated" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_counts" : {
                      "$ref" : "#/components/schemas/RequestCountAllocation"
                    },
                    "services" : {
                      "example" : [ "salesforce", "stripe" ],
                      "items" : {
                        "example" : "salesforce",
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumersResponse"
          }
        }
      }
    }
  }, {
    "id" : "b2f2a069-4194-411f-9e7c-d622a324db08",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/zysjciz885zcwhzibhyk6bwoywxej8lbgirnuvfm27yh0selqvnpy3mg0xtvwekphzj9zac5yjjoky2bc5fldjb/r5x7/6kqvwj9mb52up23791ssybz6b23r77d1tw1di8ad89v33p2zjoj155kvvzw6ikd5kz8engbipsasquz6j3wvtzvx9u5zlys79pbr/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2f2a069-4194-411f-9e7c-d622a324db08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.732742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "878c114e-6360-4a25-b325-ea5a76b0550a",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/24etmfa52vq2xbhh6qizdpdogop7c8f2s8r3ivfmydhur3y7ki9roowsu93/rgq3/4ob3aoaux7033lkws38cocqjbuewndmk29f1plr1eghsjvh7qh5eisp2m95pobnxjpsjnhdhga86mq3x41o/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "878c114e-6360-4a25-b325-ea5a76b0550a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.732588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8620c90e-d9b0-4af8-93a4-9e76e30ca5ee",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/rtlybp5sqj2p3ajehz95ufol2ku971ysdmn15y600vux2vzxwqlpnlkezahmwb8c5bqzistz48qlp3n4m7rhm2fvzd3uo963aa0cohesjwfd6y5bn5yu3izelrsr7d2b0nhiirltcu90gzjfk57s2bfuui45gp/e0o8/1tqoxa9db3u6l0ivnos0ga37976f8qn2jqiqagyocnsd9h3a2rdghgka7irno3g7boeq9kn4wc4srmucrwoherk4le756dp936a4drmxp2s2hbub0w6ujni9zoe1wiyrpt2lb5tvpyvwg4sx3jmk3kvxpusyngauwof5umhyefeafhwdin13y/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8620c90e-d9b0-4af8-93a4-9e76e30ca5ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.732415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c6ff0950-8a4b-4428-bc74-07a9c3285d7d",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/i8h15fhdiuiemp8qp3ggym8ub3fidnw1bbnw186rhmcznosusuq6dfm052c16v1sii0ei9veo0hkx3ch9j4dr92mukf9ii9k2nsvu6jgckmhvvcn0syyj1bwi23cljrhc/2azg/kriyhtgjmfpajwm/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6ff0950-8a4b-4428-bc74-07a9c3285d7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.732256Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3b117ad1-e5b0-4ca4-bd8e-3137e5dbee6b",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/6i1ez4ohfhags3ka7zhonjrjracj1h36ocfnk9ie3tyqwpfhnr2jrjklk9gxu1mxvbbpt5evoue12sj8qq7xnp86mh8szwum7bd54lso6lozjspto8rbecq/z3wg/sxtd6riz1apu1ama9la3x9sxuyzqdu1iqudj3kefcef86qs69t7g/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b117ad1-e5b0-4ca4-bd8e-3137e5dbee6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.732102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "68922b94-6004-48f8-a889-6dc3dd67aeba",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/l5stk9e029a/4687/c4gqgix6hih24r8pnofezcko6cyosds134bhi4wo742hoyosvs7pb13kzoaueix7x6mppuz9yo9i1nerichahlnkq5gj9v5zll4khxqtbbk0psl2fol2zcywa3trzz859rf0yc9wytgafgx4esbns0v69mte5um9lihowjd52y87f03qx/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68922b94-6004-48f8-a889-6dc3dd67aeba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.731926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "976d0934-bae5-4c95-8550-085e61ca4c68",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/xgapdvsvu1u3pf9rjerwpp63huy7dcrohf018asbp5fjoqj7ow2dgorzqgo68p62dlc0sx798afrdzw9obwaup83x8eg7yqlx59yxmzc1uerzi4hmqthuulusx5jes6suwsr682k8hief3ysy/b5zt/kw1hgll8wz64zh3bo5rlme666q5gsmp6hjju5vr4u1wdj1987hbqmtl1niqj0a9dr76oe3q3tc1rpxtclieadgdh21ipsj61s3vyrqq/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "976d0934-bae5-4c95-8550-085e61ca4c68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.731302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5b4e8763-5618-46e7-9e36-8d6c95baffef",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/ijssb3bgpihihr7kjz1dx98nyrycdxk6jj6c4eetz8z8o91dkfg3ta5zj1ctyt7u1v7dgaiczve8ctey01zsxal2zqsi11/3139/e5m8ebsa9k6k0yqwv5n4ahrahnt52mzkfpn5g6evmlacmk/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b4e8763-5618-46e7-9e36-8d6c95baffef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.731147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "d58e443b-c08d-4c57-9c7e-765bfe09f53a",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/0lptznofp6xvn4uh925lx80pj1eto445r/d09f/fvodf7ro33rr9344ub5z02qdpxei5ioea8e1jpi7mc9rrumgfvndul6xpkznzj6hrc9dfzh6oj/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d58e443b-c08d-4c57-9c7e-765bfe09f53a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.730977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "65b0f5de-06f1-431c-9cdd-c5a186ba1f89",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/o5uyxnsy6eliyh3dw09t6j4396mn9b30md588ifv/a196/xvvxefzqslk731a2hrug9fcm5a3gklrp97qiluzx53jalztxxbyjzoi0ssiq8s3n5nbl0ik6cimsg/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65b0f5de-06f1-431c-9cdd-c5a186ba1f89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.730823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "60da823c-84f4-4576-b2a3-a920e582da37",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/nnna7z4kksr9rri721dr9u5mwvps3r2na8cp0nnzyqk4ms0aj7v4g7zfsm0vwok3o10wmahc1v5femnbskeexpadi99r808vanq6bxfb0pqeb56k70yds9v2okj5faz4g2srozjzs/0630/myv04fnguospzukz2eyf5dl816zur92jipgnqzsixnplgpen3wrfqvf7klrbnv00w9p1h99bs3cpcms2cunv49fecg3avt9mthxc18lmr/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60da823c-84f4-4576-b2a3-a920e582da37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.730661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "33c6f773-e52b-4e99-9ecc-c02eaddd0b54",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/dmom0onl0hivanu7wlkx1vtqzsgzylxvfv2kc0d3zyh56law2cwm5kg0ytde3mm7lsdltepn4gt79a8re1if421ipa2j9tmv9mc0309wu8rsn8c1i4ve7glrc6ty3mvju0jmvw26bd6pj1y816th5gc87hsielz706ujw8jmekm/07t9/kfx1yvhf2eivwvv17g14/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33c6f773-e52b-4e99-9ecc-c02eaddd0b54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.730482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "9cfc9b08-d55a-43e0-b988-495e8d0c955b",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/y5oxdyetu6w458el6jwc1zfedykzbu77ss05611g067h4t0geomlzenqrc4x5fk2yv2v6aeebv2/29u7/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cfc9b08-d55a-43e0-b988-495e8d0c955b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.729631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "4e166aed-9004-42f7-81a4-c10b8b537e53",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/y5agqx22795961xvhd539haqdonneasoaxlb4/10h8/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e166aed-9004-42f7-81a4-c10b8b537e53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.729468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a88c4b46-fe74-428c-8a25-e144bae3ac3e",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/a7cbey859hpv2gec4xlwohkdbnkoxq3h62a4hkk6w4v4utpyklo9kaevu5foyph7yce2fjefs8gfm5qpr6atb4gji2agxynj15jdmf1707y1g3iwhcyw3kp1685wxehns90hwtt31t2k23g1bv1uns1821nw5v49q8aafwi7agguni9xpzvozc9xzj5pn/07sv/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a88c4b46-fe74-428c-8a25-e144bae3ac3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.72929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "16111c9a-201b-47c9-aa75-902b77a46446",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/tri8k55hf5qxh67y2d46vnqt2hby0s99m1k9cwxxbfkdvuz31fjbag8xzv3i980uz26wsc5jvujillw8szh6uoti6zp8papoia832l3bat33zij38/u9hl/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16111c9a-201b-47c9-aa75-902b77a46446",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.729144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "928d6b8c-204b-4d64-ba5f-aeb76554d6bb",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/ekqf38t628v62xejr8r7c7rsbzi3vsbatpo9zwxxo3nuwwjbppemkgztzuazclboy0ecr7ex7fkssjnxvuen3lfhd6jkoiv3z4ek1bdqtagsmstdank68u690ejk1d8tpyl/0h31/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "928d6b8c-204b-4d64-ba5f-aeb76554d6bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.72898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b3439663-33a1-49a9-a021-09d89396a82b",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/jvnl44ze11vhltrjusi7y29sfobuiia8plgtj2chtkdk2gsh3e715hda8rivqurae7lp3q0s5wc3qhjkxmhwvqd6g9d6j2lfqxt8tapuc1zvkc54z7ski9xwl6ivghgbdkoz42hc4b7rl0uwsbpd4cwj5/ta9e/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3439663-33a1-49a9-a021-09d89396a82b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.728805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "684b773b-66a0-473b-aef4-3481d234ccdb",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/q0luj9d5692m1whf5un583hzj1xby4a7p4ahgq8o5ti3ig6sr5he9wdn5zz1sblv3s6hotouje3jkzfodw89onw8k97zxw2y7mdmu87fcm80oja6sxds/6lpo/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "684b773b-66a0-473b-aef4-3481d234ccdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.728039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "122b7bd4-4dc9-427f-a2c9-219940766aef",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/2id0h8ep7nc098ncb7kw22js6laegq2ahjrgu6itc3rlex1nzzsmu9qtgsbvvqg9lvs5di47gl4rdpzad8u2xs2q/32d4/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "122b7bd4-4dc9-427f-a2c9-219940766aef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.727895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "2f7c5309-7719-48da-b0c1-62bfe9dac8bc",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/vctpto7ejtu9u068b06vbul2a7f39s6ubl5tc78p2xuos6cf8ozs04u00ey2kizwedk406iog4tmklluplpp30qgkb6ve6807ktt0wh56kwfpg3c2zyrly18sywmol466usk96s96fygcjfa8m4ti/709v/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f7c5309-7719-48da-b0c1-62bfe9dac8bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.727727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "17641183-b29d-418f-860e-d0981c0a6a9d",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/6wqdauzv/hh62/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17641183-b29d-418f-860e-d0981c0a6a9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.727582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "21affc90-59ac-48b2-a69f-298917df3365",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/d9dq3e440jur6ootbb9clq8vuzsofl5ytfx0zm1kvyv2n6yd0wogn03ndgu91ur6nc5e0zoh9vc6imtz9986kimy023ennu79lrdynvfr7xcwucz4l9cwgowu99ahep7x9c1ds56h92cwkw9elrnsaxepoxuza0cr1jmqkrzuy3ui/006k/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21affc90-59ac-48b2-a69f-298917df3365",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.72743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "359d78da-90a6-4259-ad23-7e25652a8c7a",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/l5s0wu1nd1g2al1xk6vevfclm4nwxr0zztbs4eb3ra2cdettl7uvpeiuoxyvumdm4qvkkcip9oirtvshwrk7xlvsku0w66bbeegx5i3jks4g7cigddd2olkm6x3eq4m2zviiqt1kg58j5pus89lzcldekkdalgx/800w/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "359d78da-90a6-4259-ad23-7e25652a8c7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.727258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "9563dca8-c09f-478d-9737-0447f32221d5",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/9tqffk08c38a4d5120louu5b22k2u7bqae9h8sdw7x9iokxh7sldaw0tedopvonefb8dbg6m2955r0f0qvrta9iguvy46d8elwpe5axy46tb2/9693",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9563dca8-c09f-478d-9737-0447f32221d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.726724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b73d5bad-cdab-4a23-a980-6f16a5d4f943",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/zqyrw83d36eza77x04vuteldrfqpxz/t083",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b73d5bad-cdab-4a23-a980-6f16a5d4f943",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.726581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8c7a8b32-d466-45cf-ae11-48420c75035a",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/xi075mb9s2f2wkpehx1xgjh7ybz204o1vnk9b3ajea8h6/88t1",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c7a8b32-d466-45cf-ae11-48420c75035a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.726415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d1c01d73-6738-4209-a4c1-b50d968fc3ea",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/by7e4ujl722p0u1j0aorb7it2qgq780r42mst9mduqpwccv2hce7recx2kzxm9labtoaxiwvg2w7wk8hep59va3uj4ra23wmvgkxeq544zjom5ub7fsgim7nkbh2nveohy3bdz6fblh53w85mjn6uvx59w0mt3l/u5q8",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1c01d73-6738-4209-a4c1-b50d968fc3ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.726264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "45b18dc7-1bb4-4ad7-8fb4-6511564ec3b2",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/51522esclf0bi12l41flc5/umqb",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45b18dc7-1bb4-4ad7-8fb4-6511564ec3b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.726118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "9e2b29b7-ab12-49ee-8127-da5745167542",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/e4rlic9xjgjhg280mhdrctr4gy3i618wqfivhvua5fhpmjuugaw1yhj6iqal32mh97d676l5ngubz8bnbu6kxfib0a1yixsfd9azg4u3f15c8rjf62vxcbth0jpxigym7w4tb7t66byvsnmiptb88l0roc8g0yqanssqct1w9s1qsrfwwojh8xnqt/1106",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e2b29b7-ab12-49ee-8127-da5745167542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.725948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "4b2a787d-76d1-4a2c-8ac6-1c2a61f9f42c",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/ct16xdz75ijshls3gkufxj9de4k7i8bjai17yft7k4ziihif8ahgisa54xckpptx9qcehfucatkkm6584s/x39s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b2a787d-76d1-4a2c-8ac6-1c2a61f9f42c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.725347Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "15c6da2d-c6f0-4715-91b8-d81d05b0d427",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/aowdihebzn5095kbfnq1ovh1bj8x480bogqzc67cj6wb60dea727ub2huocs77j2lyxdbf4xi6a21nzri09yy1co23w5zjgtsqdia2069ctpeidld5r6enfl0yv4idkrxw1f74zff6pqh8bkxqj0g63rwjy6qspg1dqfwd1p9jsea2p7ib6vqq0o8/ukff",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15c6da2d-c6f0-4715-91b8-d81d05b0d427",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.725203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "59e7a008-1816-48d3-b8b0-3f428ef2cd60",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/xwwy2bqgzlb9cv78y53xv865xqibi4b92u4ud/7d5w",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59e7a008-1816-48d3-b8b0-3f428ef2cd60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.72504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "aea84c8b-689a-4cd8-aaa3-be2a9a93ec8b",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/zxvrvyvvao5zkqo8pfl5jeddz82an0mf5cy53ol37o4fdcjafwdjhy1pzed8gt4xgblxy7ofp5o8mjiwg5sjrwbmlv4bno9d4ppxhalmdvnnw39vopakngykcivo0e4fxiqzv02hzd37p9p2663d4n2k60q8vsanaok0wvzu7slajnu1rgjj23b/v1gb",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aea84c8b-689a-4cd8-aaa3-be2a9a93ec8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.724873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "5a6db474-af81-4d74-a1a4-52c83d3fb281",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/dcadrqgtexft4tx90lrsoee27mr9e3k58jrfuh0p9yr41ecn6lro6r8d3kbdg86kfr3xt1hnmacp98t0zmom0mxwu7q76tqxz97ouk718p5jaoz52bgydbs8p3vdlxvzn/1hyw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a6db474-af81-4d74-a1a4-52c83d3fb281",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.724725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c6f865f7-67d8-4918-b56d-22369a33115c",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/497nhqv2rglfyjswvtimo8gdphh0zcr0c4uynrlznvqc8tiz16zpxos0l3n1rtdua1u2xjfxtdm3nelyfoojs55bpy2jivqqg843ailexvo/s3ux",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6f865f7-67d8-4918-b56d-22369a33115c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.724559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "5a86703e-a21b-45c4-b564-f0e0624f0294",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/1xjn5gvifno8hhuczqu7lowq742t0je0y5yt7rhoshx1fngwjpo97nlgynlgd52rng8t2vhy28zn/bd4d",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a86703e-a21b-45c4-b564-f0e0624f0294",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.724037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "bd9901d4-bc8c-4b61-b684-0f2f0cb4867d",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/7w8buby4yxp7qtdr1ke/295y",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd9901d4-bc8c-4b61-b684-0f2f0cb4867d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.723866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "6bf6a9b3-3442-4bac-a12c-74f9bb0bd968",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/bo1al0xtzgcqdv21hwkyamqfn9h0jv0zp8yg96e56h3om/75l9",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bf6a9b3-3442-4bac-a12c-74f9bb0bd968",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.7237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c80bbeb5-8323-4143-9341-6302ed899957",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/g35ciu3ae6967311ljbz/ls97",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c80bbeb5-8323-4143-9341-6302ed899957",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.723523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0f485b03-ba64-41de-8ec0-adfd26b861cd",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/z5ustgy8cugm7ydedy1nuz3ga4xu8om3dpio36rm0d2w8key8zllthkulc26xis48zs68qsyjw7jpw7lp4evmd/d347",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f485b03-ba64-41de-8ec0-adfd26b861cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.723353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "aea23227-b271-44e7-8c6c-08aff91bce0e",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/r78knes11i8zhp2hhkpkbhtf5292uqfbytic14wto3m75rp7v4utf3z12qpnatibfq9gskk6zcpz4kdnhl7s2jihckx3va8bzs07733bq0f04atjfi6h3zirc/7354",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aea23227-b271-44e7-8c6c-08aff91bce0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.723164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "3d9b6a14-aa51-47cc-b64a-b274360ae697",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/zg76jauj7b9jfv7nc/6485",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d9b6a14-aa51-47cc-b64a-b274360ae697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.722131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "6119b06d-da42-4695-b5ae-5650314909c7",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/wybgz9yxof8lpbm8ynv4y4bqmwdntomonord5hbsn2jnt6vnqh2kr18ectc6w3wb94zpzxxk7zzwqqf44bpgjdsyzr2ijxuuzp86ppwn3ehzr3habspgk2zn164fsmh4w81tb90k0/td13",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6119b06d-da42-4695-b5ae-5650314909c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9b27b9fc-e7c4-488b-be89-3cc3c951fccd",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/0p2z3hjtsfh610w5413rjwhpcj0zjfoul8y7v886d1ya9xbuddap8iojpsbd5oy4zqktulz04zwbj09m068h7bkye8ulnyd2/fpq2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b27b9fc-e7c4-488b-be89-3cc3c951fccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "6d2a6864-3886-4150-8953-210cf5cad516",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/vropusmtg0qol2zywlapknao9d7jjaye25hrrdf78pa1gpj850cq9zh1nuw5jmm9njc419swrf56lfac9hdthmtju9enfjltc4tilqcg3ho5hklw9cjyxeutt4u7ktm6fd9zj2jpe8ec40g8/y937",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d2a6864-3886-4150-8953-210cf5cad516",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f198818c-3fdb-401b-b632-9828cc533172",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/f3nycnqq4rkks7d0mdojkpadjwrno8k8q5ypm76glj2ygk5qejr6n4okc8synrvvgfeuzgy/13v4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f198818c-3fdb-401b-b632-9828cc533172",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2d6a2210-ac20-4793-8d30-c1a6d80cdfd3",
    "name" : "Deletes a connection - 204",
    "request" : {
      "urlPath" : "/vault/connections/emg7c4sh3m5tbfvjfrr97q2j3ogazjywnj8d7cp00vwvhf3g0rsx9mc4dyta998q66yhxt1nru3l70c/w737",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2d6a2210-ac20-4793-8d30-c1a6d80cdfd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete"
        }
      }
    }
  }, {
    "id" : "a79e5119-ad7b-4959-b70c-bb6db1463b4f",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a79e5119-ad7b-4959-b70c-bb6db1463b4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "4c0bfa43-0bf7-476c-886e-35850ac6fe02",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c0bfa43-0bf7-476c-886e-35850ac6fe02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1054b3ef-00ed-426d-918f-b40765320232",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1054b3ef-00ed-426d-918f-b40765320232",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "3e234971-57d1-454e-8f66-ea45641c0e2d",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e234971-57d1-454e-8f66-ea45641c0e2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.721004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1d742555-0d01-46a4-a67a-8fbed2cea9e6",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d742555-0d01-46a4-a67a-8fbed2cea9e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.720916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "22b79054-4c91-4ca4-8dc8-8e728416c573",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  } ],\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22b79054-4c91-4ca4-8dc8-8e728416c573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.720809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionsResponse"
          }
        }
      }
    }
  }, {
    "id" : "4e85e675-3951-4cf9-9381-fc0a6c399e73",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "2bu24ow"
        },
        "state" : {
          "equalTo" : "Nevada"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e85e675-3951-4cf9-9381-fc0a6c399e73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.720165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8da42f01-5088-4889-a516-eaf571e7fbe4",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "m5sjkm7oprotpxgej9bqfdisjtpp3cflcmmoewv9uq3frsc1xvfosgqy7k3ic3nzhjfgyg4ivq29xj7kv8cilmmk56r5cf2h989pqi8cjrjhvh5i9e1sk1jcgbvk5otvgp890rv36l3"
        },
        "state" : {
          "equalTo" : "Indiana"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8da42f01-5088-4889-a516-eaf571e7fbe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.720042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "631db042-b509-42ed-88eb-2e9be348ce50",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "ligy2kj8gu3kmikwax2ssl0igtalinbyjcwif7axr1j33yk484uel8znpp46f9yvikhf24xfr0wgppm3ha5v4ccsmqesjsbhamg22odv6hsnwg8d2lkk59q4jc56lork3ncp930029nh3bbm9cacg2fcpgclm62s21hq4sfgl40t3hvhwik34o1w20gb61so"
        },
        "state" : {
          "equalTo" : "Illinois"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "631db042-b509-42ed-88eb-2e9be348ce50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.71989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "67d0c082-51c7-4ddf-8c6f-d42f366b0388",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "2iszm8jkj77t7xmftrn6xr0qxwtzrrcra0agz3ipr93y3"
        },
        "state" : {
          "equalTo" : "Washington"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67d0c082-51c7-4ddf-8c6f-d42f366b0388",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.719762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1302655e-ac83-409b-9c75-adaf665a95bc",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "ysdk964xor6m6jl9p779x5w9jgklqfkewdn9jsmt4fyx2w2qpznadcnbxhbewh2fqx86u6455isqngboafclq7sd1gin4nzazr68jhozhxyoc6z1zzuyl45da4bsr10gbf3vpx7hxzngilrz6lfnq4z6i11khz4"
        },
        "state" : {
          "equalTo" : "Iowa"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1302655e-ac83-409b-9c75-adaf665a95bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.719634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ff03921f-6590-42d2-a61a-e8809e4f9621",
    "name" : "Callback - 301",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "queryParameters" : {
        "code" : {
          "equalTo" : "t5zf4for5ngkbm6xv9gta3jquln74m8bwurwq303uep1bgoykxjmv6t0kfo9icmzt1xn4ahot8w8cu8e5ctemq9zxmzvjf0ovi9epv5w2uqph85hhwfa32r9rvh5qcw95dln77yhyiaxch268jo5q63yx04r020v6ew"
        },
        "state" : {
          "equalTo" : "West+Virginia"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "ff03921f-6590-42d2-a61a-e8809e4f9621",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.719486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback"
        }
      }
    }
  }, {
    "id" : "3422b699-db86-4397-9548-39b02bfa00c2",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/8a8z/4621",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Texas"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F234061"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3422b699-db86-4397-9548-39b02bfa00c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.7194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "622eda63-75f6-4540-af21-933e0aa1e5ff",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/15m1/86ba",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Nebraska"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F067386"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "622eda63-75f6-4540-af21-933e0aa1e5ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.719071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "d9fc45d4-c04b-4649-a13d-2d02571abcda",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/p9w9/3ez1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "New+Hampshire"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F354092"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9fc45d4-c04b-4649-a13d-2d02571abcda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.718734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "247c457e-296d-4cc0-ba3f-4e8de90a85c6",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/i6p9/11ct",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "North+Carolina"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F411186"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "247c457e-296d-4cc0-ba3f-4e8de90a85c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.718424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "69d04569-dd41-4584-8061-d84c2c0450e8",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/1r0e/vq8q",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Tennessee"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F439633"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69d04569-dd41-4584-8061-d84c2c0450e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.718089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "84c1d22d-fe99-422b-aafa-55cdee3a618f",
    "name" : "Authorize - 301",
    "request" : {
      "urlPath" : "/vault/authorize/du27/rhe4",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Wyoming"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F908580"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "84c1d22d-fe99-422b-aafa-55cdee3a618f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.717707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize"
        }
      }
    }
  } ]
}