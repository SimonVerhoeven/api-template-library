{
  "mappings" : [ {
    "id" : "73128014-82fb-4040-b082-d956198e8ac6",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73128014-82fb-4040-b082-d956198e8ac6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.813394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ae4b93c2-5e80-409c-8743-730922af052e",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae4b93c2-5e80-409c-8743-730922af052e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.813321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8d211173-8254-48f9-b824-179773951681",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d211173-8254-48f9-b824-179773951681",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.813228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a3fa1836-cbbe-443d-9240-94e5d8ae69f6",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3fa1836-cbbe-443d-9240-94e5d8ae69f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.813154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "7154b3c7-637f-4ac4-a451-d3d0d0aaef14",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7154b3c7-637f-4ac4-a451-d3d0d0aaef14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.813073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e8590d46-09a7-459f-89d4-f3c58b4f22ee",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"session_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\",\n    \"session_uri\" : \"http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8590d46-09a7-459f-89d4-f3c58b4f22ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.812965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "data" : {
                "additionalProperties" : false,
                "properties" : {
                  "session_token" : {
                    "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  },
                  "session_uri" : {
                    "example" : "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "session_uri", "session_token" ],
                "type" : "object"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSessionResponse"
          }
        }
      }
    }
  }, {
    "id" : "ce337b59-39da-407e-a337-07bc8bea3bb6",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/91l4/wb29",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Utah"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F439760"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce337b59-39da-407e-a337-07bc8bea3bb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.812824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0ccfac5e-9ff6-4aed-aec3-3e7d477065b8",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/36a1/e0o8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "North+Dakota"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F183668"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ccfac5e-9ff6-4aed-aec3-3e7d477065b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.812529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "4a3d7a9a-c27d-404a-aff4-41598a1b5a19",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/9ioh/2518",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Missouri"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F627621"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a3d7a9a-c27d-404a-aff4-41598a1b5a19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.812206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4bc69e0e-4e66-4be5-9143-c41a3fa1884a",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/45gc/7e8p",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Vermont"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F933975"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bc69e0e-4e66-4be5-9143-c41a3fa1884a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.811915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "bbe66995-c338-471a-a28b-a4c11a6a11d4",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/10if/65l1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Iowa"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F664651"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbe66995-c338-471a-a28b-a4c11a6a11d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.811615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "9d17b4a4-6f78-4ab5-a224-070f3af0dd45",
    "name" : "Revoke connection - 301",
    "request" : {
      "urlPath" : "/vault/revoke/o151/695w",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Texas"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F661239"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "9d17b4a4-6f78-4ab5-a224-070f3af0dd45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.811302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke"
        }
      }
    }
  }, {
    "id" : "cac84ab2-ea44-4620-9e2f-7282c811a938",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cac84ab2-ea44-4620-9e2f-7282c811a938",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.811033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ef16b0f4-f87d-4292-b2f3-4fd31b8247d6",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef16b0f4-f87d-4292-b2f3-4fd31b8247d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.810962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7ea8cd10-63be-428d-89ab-44c788f332d6",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ea8cd10-63be-428d-89ab-44c788f332d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.810861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "274003ba-8aea-44c8-915e-0f4d09222d65",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "274003ba-8aea-44c8-915e-0f4d09222d65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.810785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "edd05fcb-2b04-443d-9233-c968968e31f5",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd05fcb-2b04-443d-9233-c968968e31f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.810701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "925d14f2-0c71-4407-90f2-d5f2cfa94720",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  }, {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "925d14f2-0c71-4407-90f2-d5f2cfa94720",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.810592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Log"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLogsResponse",
            "x-graphql-type-name" : "LogList"
          }
        }
      }
    }
  }, {
    "id" : "d5d5de9d-b94b-49f7-aed3-faa7bae10b7d",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/b522/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-07-26T12%3A37%3A09.810062Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-03-21T11%3A12%3A09.810094Z"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5d5de9d-b94b-49f7-aed3-faa7bae10b7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.810152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "fe82b721-1210-4389-a73d-acbdfd4259a7",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/614n/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-11-13T11%3A43%3A09.809811Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-20T11%3A56%3A09.809843Z"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe82b721-1210-4389-a73d-acbdfd4259a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.809931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "30bd7dbc-10e9-4eee-835d-a8c6321e096c",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/44g3/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-09-09T13%3A50%3A09.809603Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-18T10%3A29%3A09.809636Z"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30bd7dbc-10e9-4eee-835d-a8c6321e096c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.809699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "52357bd4-a789-4f60-bac4-51a0d51c5f59",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/kv80/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2023-02-26T11%3A42%3A09.809395Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-11-25T10%3A26%3A09.809427Z"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52357bd4-a789-4f60-bac4-51a0d51c5f59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.80949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "6a4eaf96-2a3a-4874-a8a1-173b69e0dcef",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/5ux2/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-05-29T13%3A14%3A09.80916Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-20T11%3A11%3A09.809191Z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a4eaf96-2a3a-4874-a8a1-173b69e0dcef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.80928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a06a0c3f-b7fa-4e82-9be1-3a34ada6c790",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/n2wn/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-06-09T10%3A29%3A09.8089Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-06-29T12%3A55%3A09.808939Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_user_id\",\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"end_datetime\" : \"2021-05-10T12:00:00.000Z\",\n    \"start_datetime\" : \"2021-05-01T12:00:00.000Z\",\n    \"aggregated_request_count\" : 40,\n    \"application_id\" : \"1111\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a06a0c3f-b7fa-4e82-9be1-3a34ada6c790",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.809042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "aggregated_request_count" : {
                    "example" : 40,
                    "type" : "number"
                  },
                  "application_id" : {
                    "example" : "1111",
                    "type" : "string"
                  },
                  "consumer_id" : {
                    "example" : "test_user_id",
                    "type" : "string"
                  },
                  "end_datetime" : {
                    "example" : "2021-05-10T12:00:00.000Z",
                    "type" : "string"
                  },
                  "request_counts" : {
                    "$ref" : "#/components/schemas/RequestCountAllocation"
                  },
                  "start_datetime" : {
                    "example" : "2021-05-01T12:00:00.000Z",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "x-apideck-schema-id" : "ConsumerRequestCountsInDateRange"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ConsumerRequestCountsInDateRangeResponse"
          }
        }
      }
    }
  }, {
    "id" : "2d5a0efc-a5ad-49eb-88ed-98da7fcd1276",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/2uoo",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d5a0efc-a5ad-49eb-88ed-98da7fcd1276",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.808738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a95dddef-2ad8-43de-87c8-39b595d1035a",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/8wz6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a95dddef-2ad8-43de-87c8-39b595d1035a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.808603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "3f53555e-aa59-49dd-b533-7f61eafffc6d",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/8ap0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f53555e-aa59-49dd-b533-7f61eafffc6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.808441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "970ad9d8-7b14-4a5f-bf7a-95c89abe933e",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/nl44",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "970ad9d8-7b14-4a5f-bf7a-95c89abe933e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.808306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "28b125a2-689e-414f-929b-2f6ebba69e3b",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/8958",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28b125a2-689e-414f-929b-2f6ebba69e3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.808162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6a38f486-9ea4-492f-80a4-ee6df2866b17",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/9upp",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a38f486-9ea4-492f-80a4-ee6df2866b17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.807993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "dd4d51b5-3e38-4c8b-a9e0-e30a74fbabda",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/7237",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd4d51b5-3e38-4c8b-a9e0-e30a74fbabda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.807766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "573b134b-7f75-4824-8620-0d60d00b07e5",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/h14a",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "573b134b-7f75-4824-8620-0d60d00b07e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.807618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "81f6b1b8-a9f3-4149-a696-57fbbda1a4e0",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/tufs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81f6b1b8-a9f3-4149-a696-57fbbda1a4e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.807435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "27c023e4-e368-4f1d-a2ce-3f2b356c1e97",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/8u32",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27c023e4-e368-4f1d-a2ce-3f2b356c1e97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.807286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "dc9c7c2d-62b8-4559-bff0-db648de67de1",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/3492",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc9c7c2d-62b8-4559-bff0-db648de67de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.80714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "99658ffc-76b9-47b7-86f3-6e61d32719df",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/h328",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99658ffc-76b9-47b7-86f3-6e61d32719df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.806954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "a7528fe0-6785-4413-9ec9-4a3b618708af",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/jy9e",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7528fe0-6785-4413-9ec9-4a3b618708af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.806556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0bdac3d0-357d-40cf-86cb-7f9a77eca789",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/3uya",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bdac3d0-357d-40cf-86cb-7f9a77eca789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.806413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b187f673-8135-4aa9-8cc2-d55005fcb5b3",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/iqte",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b187f673-8135-4aa9-8cc2-d55005fcb5b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.806251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "594b7302-41fb-4f9c-913f-4cc064275090",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/q2kw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "594b7302-41fb-4f9c-913f-4cc064275090",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.806114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0d1d7bf4-aa6d-4f68-840b-b3f984ad17ad",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/qjso",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d1d7bf4-aa6d-4f68-840b-b3f984ad17ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "92644521-fecb-423a-b7b8-63063a6466c2",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/8807",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92644521-fecb-423a-b7b8-63063a6466c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "consumer_id" : {
                    "$ref" : "#/components/schemas/ConsumerId"
                  }
                }
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "453dc436-f2a9-4fa6-9f16-f3648b3ac703",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "453dc436-f2a9-4fa6-9f16-f3648b3ac703",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a674a43c-fcf5-4296-a757-ecffa3c6a29c",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a674a43c-fcf5-4296-a757-ecffa3c6a29c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "8bed9fee-7a8f-4a31-83a9-6965fa255055",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bed9fee-7a8f-4a31-83a9-6965fa255055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "08cc27fe-6652-4ef3-9a5c-8d53f1c8bbca",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08cc27fe-6652-4ef3-9a5c-8d53f1c8bbca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d27a4887-8caa-4150-b99d-b1774e8fc7e3",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d27a4887-8caa-4150-b99d-b1774e8fc7e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "83d158d2-b348-4569-9420-1e6501d26557",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83d158d2-b348-4569-9420-1e6501d26557",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.805217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "127788b1-8c09-42c3-b6e6-4aa5c2ee15e3",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "127788b1-8c09-42c3-b6e6-4aa5c2ee15e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.804833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e8b93baf-8b7a-4b38-a9e2-0e25fc701ede",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8b93baf-8b7a-4b38-a9e2-0e25fc701ede",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.804747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e4f7bf18-b4b9-4c35-abbf-4d0a1e4198bf",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4f7bf18-b4b9-4c35-abbf-4d0a1e4198bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.804639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "dcf7c724-465c-4dfb-87c6-f1e23d2dc84e",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcf7c724-465c-4dfb-87c6-f1e23d2dc84e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.804541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f666db79-4a02-49fd-bd7d-451a35d33bdc",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f666db79-4a02-49fd-bd7d-451a35d33bdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.804453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6ca7346f-7ea9-4e85-912f-d3ae5e1be2f0",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ca7346f-7ea9-4e85-912f-d3ae5e1be2f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.804327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "properties" : {
                    "aggregated_request_count" : {
                      "example" : 101,
                      "type" : "number"
                    },
                    "application_id" : {
                      "example" : "1111",
                      "type" : "string"
                    },
                    "consumer_id" : {
                      "example" : "test_consumer_id",
                      "type" : "string"
                    },
                    "created" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "metadata" : {
                      "$ref" : "#/components/schemas/ConsumerMetadata"
                    },
                    "modified" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_count_updated" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_counts" : {
                      "$ref" : "#/components/schemas/RequestCountAllocation"
                    },
                    "services" : {
                      "example" : [ "salesforce", "stripe" ],
                      "items" : {
                        "example" : "salesforce",
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumersResponse"
          }
        }
      }
    }
  }, {
    "id" : "480d7c1f-d6b6-4cb9-bb8c-c3c5781def00",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/th6m91u5ysbd0bdl714q0hc7ta4hzjc78wpvuojiv32zis9c7dl8onfhb21mign5h6kky1tlvzlgljk5nms05096bv45ebdn9bzgafrukj2awtcikw49kx8zt3jv1aoj47bbhk2h8b09s6lhqzjcsm7hs49nad1zhfiif25mw/zspg/92kfnwmsiqoozadwdnb5mcsbha6cil5yjb21e1xeku4hg2o760wl0k8tf19r7q1j8pzx5hyhz18zrq3g9wqn065noghcbe40xk3irhzjq1jd2vynhvprvhnozqkgjl17hva9ycsx/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "480d7c1f-d6b6-4cb9-bb8c-c3c5781def00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.803919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "15ab404e-d422-43ca-a3d7-417c4525aa94",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/tpba4vr2406myp20labmlsy4pe4ais/m3pj/4s3boik4hfnhrq7pxk5dl9v53gjr7x5squaut9l5wyk7mwcxmfuz7am0erqiwsxwznjs6ubzdpjxbhcuqrzy4ih6szvvh3dhdbc87f43y79blwmv3w72oms4ysj6q7/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15ab404e-d422-43ca-a3d7-417c4525aa94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.803757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7b075327-6b26-45f8-b421-4fd16f8f31bb",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/c56q773iuzgw6mdty6iiszgktt5i54b25o455rriep4v8hx92fhlj66ot83v9c5slk6yiv4vnns9v0fu7sb1zg3mr886k8k5h/idi0/egmifxalmbqy/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b075327-6b26-45f8-b421-4fd16f8f31bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.803561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8556c2ed-95ca-413e-89e3-bf48daa53ca0",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/jyx6pvnq6osp46vhh86ad0idahpj9tunsffv62g236ssi52n9f3pg3qz9x51k8nlrdj2pyct9u62euqh1/vic2/kwrxc1n6gwao8fd7qlbke48lo143h4d1b3rsbb9t7mlvuo6ggp/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8556c2ed-95ca-413e-89e3-bf48daa53ca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.803391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f0f3cd78-253e-4792-a345-211ae74c6ea9",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/2niej061eoa3jvddbdwnb3fb8xxl7woogjpfdm4i9opra5n6cymp8406tj4vr4lfqp6jlfe41nagwq74kiowxldjps5vg75pw5tuwmqxicj05f9apay/5098/7a9kzkg4da544hlmgroxyl0z4z3sl5fskydnlnnra10y4wuzs90glme64u/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0f3cd78-253e-4792-a345-211ae74c6ea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.803218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "02b5c37c-1abd-4772-8232-d2502688c0b5",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/u9378ok8qjmos09c1redo07jp73y7oi0arxfus77wdd/44en/yp3ugcf9zfj3jdbzjvmx2h4cyix4qy74rt34fll4jivhbutu4ka796a636zikxzxjb2n7s4t2ga0o70qhswonfbr1y8sexzme7ji05x7g5ha0n3iican9ssbto7m0u0c4s3f333nygkde6jvl71qda03nx087cqmoeboucj3kpvm6cqu3e/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02b5c37c-1abd-4772-8232-d2502688c0b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.803008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "3a9baa7f-134f-4ee3-a40a-0ba68ec0e190",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/pdy148rk61d3rl3pe20yijx0f/pd1x/0vdb4lo5z1vxtf9adw6ah3ntzpgvk6ijctwp8iwklmmhtzobq72ofwj07i1pfstwg1a3qfotcjeu35d4ix/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a9baa7f-134f-4ee3-a40a-0ba68ec0e190",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.802085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "50419083-c9b1-4473-86ac-b2fcb3fe5b37",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/kd0nrh2pz0e9g0kxemjr6mr6nreorxbcd4l839m8oln0sg59xoa3abakbxmaf0aqei7xvhkpnv660j0x9o5ezxsvhj2f90al2pveb3cyqeco6u9ouburrw2uysd8fu2i6gzozv96dujcx4/chb8/omgdmnvriozrgfsnayxdl88f6sykhld17i63sakenkjtbiqz0kuuf1bpfd9ew/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50419083-c9b1-4473-86ac-b2fcb3fe5b37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.80192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a134e2f4-d8ce-4672-896f-3fac53231549",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/1k6vgsyxf53tt4fucjdx3o1o8nupndpq9p7sbcy2zra0mg8tpzd7lwwm97h0a0hs71bh0xmq2eeglnhoohareo0s6yhi6okzqxh97k0o/mb98/ojahg8ciu28xb3pemdxt3wk02ualdxchjl7218kz7yze89bfwa8xi6gdeg4rtom88p91wo8kz3hyshnddj1revz0rkulandmfl799n35df8jjs5c2lmmlzd8gmzr4ajzyzyvs2ia2b176hl4a9hz9/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a134e2f4-d8ce-4672-896f-3fac53231549",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.801733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "98ba67d8-4794-4b0f-aca2-70e88c6b3864",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/omd826374ouths6y5cqy41vk3znw34vtv28daclydrq4o2advbiogx9lc3symfr8hhr9jn7a7bud0ff9uc3eq9d103bopvuaj4gqschayuypxjw2cyusbgayjw9yfwv7uz5hl7/1i37/1oeduic9s5slu7ffsefhps4vx23w3934md83yt50a9qogfzqm1ox4410buq6lydd2pcevcrbtliaiccy1ycjwrlr7s5cznaapkxpu3tssa9l7d1p1xb4jzaau8kt7air0e89jq2egfi5u38yvkbf7x9ocv9e0wlwmghhyg4l80/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98ba67d8-4794-4b0f-aca2-70e88c6b3864",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.801567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ebdbb3a5-3387-4016-9442-889f027a5b67",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/0ed343m9mkvts8qi0qw0mjakwquxvpu0v23rhsv4ho5ubs3aznu4l82owdlkj4x8w9yddeqn60ldxr277av43st6cbn8kztiffqo/len8/mn3ls9mujne992yuia38xtqhzejyyal0r75eh8vnhlo33wqyqyahhmoauve23o2ehkmjonekqa93n7xfi1y1fs6odgar4p9rv61vfm3coxhxez/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebdbb3a5-3387-4016-9442-889f027a5b67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.801398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "05769bc4-e06b-4ef8-a1bf-ee634406319d",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/6gy3lprioih48rtpi52hwk3de7mloay5kb/8d6a/hacqisni5i48g8vjq8mwil49n8c999l5t40/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05769bc4-e06b-4ef8-a1bf-ee634406319d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.801205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "658ea807-ee1e-43c1-a71d-051fdb8c5b2a",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/3r87vdokwtlfdjy0go5qbvz8hs5nwbkfgw8vr05rfmfsstkzk3o0oz51y0xygdywga47zhynqv6eymn7kiqbknds429ssamgyn1acele177p/pr69/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "658ea807-ee1e-43c1-a71d-051fdb8c5b2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.800833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "c5614e12-c037-4853-b622-1458f6d479ae",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/avxxhbaj1msm2hcw4f5dc16qpjtthd2pqc3nrvsro6al5q934rgj91637i39tacybf4n08num1tbwchej6sinhi5iu03dkfda3g1pghoau5xdeo22sqxstb892n6b7oq21s2j1pphhl66yrp422hnh/il9d/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5614e12-c037-4853-b622-1458f6d479ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.80067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "6f704968-1d83-475c-99d4-3a3fcfcbd203",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/168a59hxfbm561bft5gblyj5j3eltyoom3b8d90ewry2yrqjh7cayewhvw8ykueav5ukltkbp1ginaj4finoxrwc95ujkdr8qdlhk11x6b7ahaqvegheaz0aeo49ws1t9aet7twrrf4s7wrwm61kktq2p2twrhvujpuu/8791/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f704968-1d83-475c-99d4-3a3fcfcbd203",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.800483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a3ca2d21-9c9d-495c-9cc9-ebcad49db404",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/7wxcpcajph1lgorbdv409ekzchuc19y3g475ak2kdgm3b8luamnsmv2ej1z5lk/h468/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ca2d21-9c9d-495c-9cc9-ebcad49db404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.800327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "a408bd22-7a05-416c-bfb5-3952decad675",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/viyu9yu80yts6pgj2fcz42beivvsulcejex1wjgj8zp1t7pioduc9bz9gon5zie3wfvd7l/6tv0/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a408bd22-7a05-416c-bfb5-3952decad675",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.800162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d345a7e2-0c8d-41cd-9088-ff94feaea000",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/ww5ssl958e9khpzt1nsjkiyqlfkz6cu3hei57xe46slq89uesz21gszv9t5prg5wi0q5qpvdeh07vitpk9pc3zdl8478m2mbe844/ql65/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d345a7e2-0c8d-41cd-9088-ff94feaea000",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.799976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "f8e97718-8e68-4296-8426-1735e31ab438",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/flsv0rxyc9vg53qtjlax0sgscsmrotiaf2gx7van835pisevkrn685t8fp3cettq72a52j09z6v5n3xu7w9fwh2tck3uuwt5mnp5s00jb3ln2ove3a1yooe77iln9f278cf83dr078k0bew386me75b010huep8c1ho6wbvxbm7yo5f1ywocyk4mh08/6n6s/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8e97718-8e68-4296-8426-1735e31ab438",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.799414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0fc39f7b-7190-4a73-ac2d-de18a3e0873c",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/pt4t3qjukiszo3m1129ioctmlevdu2gr8yp343/2260/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fc39f7b-7190-4a73-ac2d-de18a3e0873c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.799254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5394c945-94bd-4418-be38-0de629dac14c",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/pavg20vhro2jslzzg8eilcvkh9bisjvlnmsx47wu1i2v9whce3x6q0f35ha4x9740lldv506fkdscuue3g2lu9js8v55zg45kx0vtml1jw1e5v4s9f3q4nmip5tu7pe45t8wkivu7dsi6xu95tz1hxxgdqkir4sd11du34r7c3t35u6ef8av8/z10i/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5394c945-94bd-4418-be38-0de629dac14c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.799074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ad88cf47-75d1-4ab2-921f-0acf243aad25",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/eqoy5nh9b95wm1pwxpnde1o3p1bom36vadntbscr3wv4w9wmy2o128gbq6w2e82wla0aybppmbw9vv6zosafo7wjhvbs5g4nr/m267/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad88cf47-75d1-4ab2-921f-0acf243aad25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.798916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8e1e3de0-ca02-4b04-a646-c9ef2fee7958",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/98bf7s8v03omel4g5ailyp0nxbu39myu6f9d9bdzirhjz3u1tvomauocy4ida8hdeb8b7j9fuct648zjvcta/3so4/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e1e3de0-ca02-4b04-a646-c9ef2fee7958",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.798743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "ada4f6a8-bfd8-46db-b9d8-198f2357946b",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/y49b6c3szbd4iucw3gz5lebj6bmd8rweq59euoj4vb8c2yt69dz6hrtn7k7ib7qwknygnqlw64sgdrxp148r1m79qvn2uusp2s5uiow02zhc263w6pbqsoawo5x42944z20buzu4mmipyqxhwobungsxvm6wb0cqrc6k02iweunypg16ftdghzawpehy169fr5czodb7/ln99/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ada4f6a8-bfd8-46db-b9d8-198f2357946b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.798541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "602233b4-2a9f-4c97-9c2f-a5e187f1ed5c",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/626shzqmhftmxr6btqlwgm03si56buuib7o9d9ymbjejyfmb2jkehgoyv9005c782dz1rkspoy56mo9fcs0hy81mk1w8tt5ardr54vgus8a9yhbx5ka3rup5d1cqyk8267l5r5hx7f24qwn3vkcm1m19bts05nf3jlwwt/941p",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "602233b4-2a9f-4c97-9c2f-a5e187f1ed5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.797771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "8ccfc2b3-d46c-4c81-81ae-4a00789e087d",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/3izmjllfm3zfxj4hpluth/z96y",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ccfc2b3-d46c-4c81-81ae-4a00789e087d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.797606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b5901b3a-508a-401e-9852-4ad031390171",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/uelm6h1vhhhdjmstg57t2fjknjwkqdj0lwakd5rtie46alzpxgv0abp7hywmklospn24n93hp4ytc68bkvz93pv16tushxa6phkhkj03lk8nz9zs9rkz1ywo2q1vfosgdtpzs5uovxycqu5x6mqfwukfyviqjc6v64dr3fte6fnng188sb147h7i5w5ytz08/i102",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5901b3a-508a-401e-9852-4ad031390171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.797419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "bcb5bfb8-5821-4a36-b5da-805f57a266d7",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/7i257zh4y/6xps",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcb5bfb8-5821-4a36-b5da-805f57a266d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.79725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e4ea7914-2ea8-4321-9ba6-c74cd12ae843",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/s3dxn9hv8a44977dfhvnaxyh93n5oaxl8t/6z3u",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4ea7914-2ea8-4321-9ba6-c74cd12ae843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.797089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d764571a-cee8-49d3-938a-2379d80f1360",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/z09pef65zuha11fwo70deet68up/n76c",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d764571a-cee8-49d3-938a-2379d80f1360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.79687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "5841c1cb-71c0-4575-ab01-45e17cd14c43",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/kk62ql930re0hqinxzba40onbdy5im981h9pws0a94hpctesrm38ohcvg0xxufcf5u08fwhs355etx2q2ip4v4rtwaevqklp0ju5z8salc5vqbshu1kl2y7ldyikn8e2b0n2ts9drktww7m5wyln0jqmx6o79ktm4/9251",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5841c1cb-71c0-4575-ab01-45e17cd14c43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.795914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "32a4e962-72a6-431a-a08e-39669bf11ea2",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/lbopge0bafviblv9j6prhzqxn988do9zivei4rrbcdnyyrys7fa05hevdu06laregmlkhi2rsr4vc1owgpbkxq6ecq/zr1k",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32a4e962-72a6-431a-a08e-39669bf11ea2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.795761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7585cd8c-8266-4d1c-8ffa-3498727faea5",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/6oe76ysneo6m6qexh4evp7fl89mqbwu0p6ra9lgjq5hnlpzoevwb8t0h1pn3to6e8zbo8680yuss43nakz54vvplcj266sd59jkdadh0h35i4r77q0nbtcnltk97xxhetydijtv9h8bo76ez/1op9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7585cd8c-8266-4d1c-8ffa-3498727faea5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.795576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4aa7250d-4c68-47da-a9ed-90a3565183a3",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/a2fqrkmaz072imce7mkbep18vs9zwv7ltyi/4d91",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4aa7250d-4c68-47da-a9ed-90a3565183a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.79542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9cf2b1b1-eda9-4b77-8f8f-577b1029f46c",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/lpxivyzuowzkw8giyrec44dgqxc7x39avhakesyrghzz8g4qmqgqe72m35uvi99gmzlla19oot9y2cd42owzi3ve2ak7y0fi0jspk1ndjts6ppe2fzfoxcap2hig22by9e4h6/0453",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cf2b1b1-eda9-4b77-8f8f-577b1029f46c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.795263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b69c46c2-aeb1-4dda-b39a-f619cf6de903",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/26cugar996llzyu63v5zhsiae3sp5xif27lqpatemq95ablh0t6272tmxiqi97v0ev8uvsamkeppjot8lgc84d/3e21",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b69c46c2-aeb1-4dda-b39a-f619cf6de903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.795074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "8c705c05-c735-43de-b737-b5d74180c675",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/wg2zcztqy64r1wvpa0fth7t7uoq24n0fw0rb4a2uks9dxwiblo48oervw8nu141cjtg3khavvrm87t6gmnh5ptuuto984dktufbx3j16a1ee5q13kdzbcrzhg8/e952",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c705c05-c735-43de-b737-b5d74180c675",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.794395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "eb477194-8143-49ce-934d-28f58b598d8a",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/nkm2w3f8hxv00i4moa62wdf282gskdgf7kz9lhjeozrl144t18s4i0r4x4yqhmg1hd0f0ekaar4iky6fp9x74ci2p6jm7e5qw65rliy7mc6qaslycgh2oxofloowh7x4s47q31pdwrtma6786xe2dbonetzz0qg6tex4rrgogvelpfif3oaqlp/o1j8",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb477194-8143-49ce-934d-28f58b598d8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.794232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7fa3aabb-8480-452f-b827-f308a1bb12e1",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/yeraedcq1iyxl4rsm2wbl2rvzic420cd4vet3oeu9z024i56110cvwwpkdqz83nx2jktcv3jixakjh2ys8l8fs9e0yhtqzvpdaaxz885a60jnkpstoc5wpt1gtvrpmzdh0uwbtcjrragrwvixk3kenpbwirjr/3ls4",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fa3aabb-8480-452f-b827-f308a1bb12e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.79405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "98d11a3d-1d94-497b-898d-b36e3e6ff5d5",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/9nq3karesl2rnw3wxtf8jrh6affr68y4q2nluwyl7klelf7cbujecjj4e6ehnhuylac8not3yoxjarngx5pzmho4k4c3egg6biw4ascpgxijz6ppbnhqs7idfygxal24bvs11ir6h97gwuguqo6ps3b0rczio0/58l4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98d11a3d-1d94-497b-898d-b36e3e6ff5d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.793895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "678cfbf0-280a-4bd7-a1cc-f5892c25e93b",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/9ro1ekinqiq89u216ardzv7zwtr0dr71y6wppolh0exm0fw5arhi04lmn52ytdvlagk71w2t5mdi9o27lbgazzj833w5bbsmfa42h0mz18enr380xs65kd/jiip",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "678cfbf0-280a-4bd7-a1cc-f5892c25e93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.793734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c20d597d-37a9-46d9-b88b-40af87b21071",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/wwbc8grnrcr494koif1q6z6ecm09g4qgiuncrlfkv8hgiah5lkqhsbn5x7sm01mxerbrttzyq3ai2qg0r1x5niembltwx5snkhl1p7qloloxx4b9leo95fnjp1s3r9g0nqixsd1ck2264bqofj0akrxvl1m0f5sms5nfkwwx7bo3ek2xcdqf8q9t1/8771",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c20d597d-37a9-46d9-b88b-40af87b21071",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.793549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "0a2d2ccf-b7c6-4689-9a75-e620fd530721",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/jibn9wkod/7t6x",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a2d2ccf-b7c6-4689-9a75-e620fd530721",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.792773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "cf4fa797-fc47-4c47-aece-efad85ca0ab9",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/9t014zx9k76kp8lqmct73vp89j54hvkcilw1nw3epby0xo52zhiak5kzy5w5ixu2h9zvo0ufr425wufail9tdeubhy6vk396geapm2cngejjy1cbavpi1lo1emrcmoah2qg6mknbm/klne",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf4fa797-fc47-4c47-aece-efad85ca0ab9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.792618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5e000364-4a6d-45dc-961b-bde830d411bc",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/876y42q4dz8h09652uqg0i5zvdw8dtbt9ffttto8jp8ax08yu9s3bjtauukpibuedugiv5c4wv18c2xse216cuayrifej0ykeyxotgnfw6s1cgxq2lkgsswg3x6kkt4m15v27g0qbmrva0amm2d0qfau1nr189gpe886/me8f",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e000364-4a6d-45dc-961b-bde830d411bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.792442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ed0d7826-613f-429b-aec7-69605385d66c",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/sbetc37oizkbuqczvdhafsr2qq7g7malh2uakn1aaji8lfabxx43m7s403tp8m1e1w4ak9q4keqy5s49g6x48uibsdzt9o3xzsuet2uuiwrlrcekbb1o5mhdptpj6s3wca5y7a6gwuywg4k/72cm",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed0d7826-613f-429b-aec7-69605385d66c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.792288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "999e13be-6165-4187-b7fe-c8bd2c86d9c3",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/2crv2p9cvoo77hp9za5z6a7dna06g05fuk3tj4amzvv0im7u1fhgvkxqjxwwc/jj6c",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "999e13be-6165-4187-b7fe-c8bd2c86d9c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.792127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "61f2b302-a2b9-4ca3-9e8b-dfdcd505fe0b",
    "name" : "Deletes a connection - 204",
    "request" : {
      "urlPath" : "/vault/connections/oeuhgbstrrkch7b31zbs6vqupspawp40zq0wif18zjiiifr8ra1kn4c7f72qhuwj9draaqx/r55i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "61f2b302-a2b9-4ca3-9e8b-dfdcd505fe0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.791951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete"
        }
      }
    }
  }, {
    "id" : "25eaa62c-15d5-48a9-809f-256e1c1d8040",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25eaa62c-15d5-48a9-809f-256e1c1d8040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.791831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "63f14550-2d66-4e8a-8a79-3acabec84a0d",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f14550-2d66-4e8a-8a79-3acabec84a0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.791747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "203de9ab-6f6a-4558-9489-d4d81c84a74a",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "203de9ab-6f6a-4558-9489-d4d81c84a74a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.791635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a5824f52-742b-47b5-9f15-9d13a359fb43",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5824f52-742b-47b5-9f15-9d13a359fb43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.79155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "3f3ed8e8-c37d-4709-b33a-ac7de99baf45",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f3ed8e8-c37d-4709-b33a-ac7de99baf45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.791456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "7f51782b-1e32-4793-9ec8-657b7e6bae58",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  } ],\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f51782b-1e32-4793-9ec8-657b7e6bae58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.791335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionsResponse"
          }
        }
      }
    }
  }, {
    "id" : "b33a1318-3b6a-43cd-ad71-75140d36edde",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "ulvetlnf2lsc86j3jd238nvazx78ilxt8adh3ilbf2zpr33c34jw9b97fqta1kwpntmd5azjelx99xh4i35ha1n6e4no1pboj403pr73zmt7k7res8u9ytyz11vvqq1yvh5m6rd71h5jqrl1htbs1uxn0jwaqxoe1f7mweiqa2wiu6uxod8"
        },
        "state" : {
          "equalTo" : "Tennessee"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b33a1318-3b6a-43cd-ad71-75140d36edde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.790467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5a422a8a-4014-48ff-901c-35b89374a3cb",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "ckcg5oiah5o194y2uw4kmdx7w3ojuy4yciv67svjw8m9wy0vhkbejermg1kc1uxhrabnbrbor69wpxix5dx3msaquszrx0l38lzj8dapts5skbgj9mxl5v61d9ah0kqz8h4o1ewiil89pyu75rw0af7um3tx3da32wyrzeusbh4qvzw86"
        },
        "state" : {
          "equalTo" : "Montana"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a422a8a-4014-48ff-901c-35b89374a3cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.790329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "56dd57c3-45ea-441e-b2b9-d4d8954610c9",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "r00w8pcgpmfq8zybrmbq2xtvat2kabjnlnxjktztywf0y2f0dqa0ew0gz7ieeqi8shrmlweiustu119ncq04twb2s"
        },
        "state" : {
          "equalTo" : "Michigan"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56dd57c3-45ea-441e-b2b9-d4d8954610c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.790162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "53165450-c787-4ea2-89da-ce0812706a2b",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "i6k5tms0429up50dv7ygdc4tkxnso0feh50t7ltjnixrxlnro3d4hr5042lavtqd5s8aklng83yupoh4v6yot1u8nvlg9e4hh4m9opbfyhlo9t"
        },
        "state" : {
          "equalTo" : "Montana"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53165450-c787-4ea2-89da-ce0812706a2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.790022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "9c23d4b8-529b-4a64-910a-617ebe9b1286",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "asm19q82isvj6o1m8jamtalkntjvanxdr2e6huhqiddzau6tsfsvam4fjusy0cw63snskzverc4ezmshdits84y5pkb61s7qi1gt3oi7oux8xstrj9wtllztaz3f0jnel3qva9yklzclbuwarza9rbf81r6kai69jzgzlqjhea04qx9bsh6ivc21"
        },
        "state" : {
          "equalTo" : "Maine"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c23d4b8-529b-4a64-910a-617ebe9b1286",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.789879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "55f509fb-d205-4ff5-9bec-990e6a7ef2c0",
    "name" : "Callback - 301",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "queryParameters" : {
        "code" : {
          "equalTo" : "dqosu0vuvj03i9ikrqqxjkoodcjbyc9s5eac6nmrsx7gq2ut73"
        },
        "state" : {
          "equalTo" : "Hawaii"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "55f509fb-d205-4ff5-9bec-990e6a7ef2c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.789714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback"
        }
      }
    }
  }, {
    "id" : "d178e56e-4aaf-412c-b8e3-59226344dab6",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/p0oc/2u79",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Arkansas"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F002766"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d178e56e-4aaf-412c-b8e3-59226344dab6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.789625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "4cbb6b5d-c6c7-4ab3-b8c2-c180f0eead60",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/l36l/p9jn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Florida"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F911766"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cbb6b5d-c6c7-4ab3-b8c2-c180f0eead60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.789267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "da7a2e12-91a5-4c51-9fab-02dcc90dbf95",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/760t/95vd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Oregon"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F218399"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da7a2e12-91a5-4c51-9fab-02dcc90dbf95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.788879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "008c68ea-0cc5-48a5-a27a-573028573951",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/05vn/o35p",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Oregon"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F515254"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "008c68ea-0cc5-48a5-a27a-573028573951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.788538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "16aa0925-1ba8-475f-9950-3baf216b9d96",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/fjg9/g2y2",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "New+Mexico"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F507556"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16aa0925-1ba8-475f-9950-3baf216b9d96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.788189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "714faa19-b09f-4fd3-95b6-f89e8c9932ca",
    "name" : "Authorize - 301",
    "request" : {
      "urlPath" : "/vault/authorize/3s1r/izh3",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Illinois"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F648714"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "714faa19-b09f-4fd3-95b6-f89e8c9932ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:09.78774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize"
        }
      }
    }
  } ]
}