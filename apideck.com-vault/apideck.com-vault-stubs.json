{
  "mappings" : [ {
    "id" : "0e06b3a0-509f-4970-9887-a3cff98c96f6",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e06b3a0-509f-4970-9887-a3cff98c96f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.249419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "57712097-5fe1-4f88-83f3-84b67ccc2d02",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57712097-5fe1-4f88-83f3-84b67ccc2d02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.249343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "edf460b0-aacc-4a7d-8358-8237978eb3e3",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edf460b0-aacc-4a7d-8358-8237978eb3e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.24925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e0fa85bc-e13f-4e55-be56-385fad3d99ea",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0fa85bc-e13f-4e55-be56-385fad3d99ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.249175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b521d9c7-1515-4344-bb3b-46a94c8e380a",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b521d9c7-1515-4344-bb3b-46a94c8e380a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.249101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "42aa3101-dfe1-4ae1-bc9d-b0685db6f349",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"session_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\",\n    \"session_uri\" : \"http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42aa3101-dfe1-4ae1-bc9d-b0685db6f349",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "data" : {
                "additionalProperties" : false,
                "properties" : {
                  "session_token" : {
                    "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  },
                  "session_uri" : {
                    "example" : "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "session_uri", "session_token" ],
                "type" : "object"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSessionResponse"
          }
        }
      }
    }
  }, {
    "id" : "01e9532e-bdf7-43cc-ac44-80be610e0e9e",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/w1a3/1a9t",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "New+York"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F480507"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01e9532e-bdf7-43cc-ac44-80be610e0e9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.248855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "2666b3ba-1279-4fb3-a3ec-e59e5913aca4",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/385d/5xrq",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Nebraska"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F422966"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2666b3ba-1279-4fb3-a3ec-e59e5913aca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.248446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "d178f830-7fd6-49e1-98be-1dce3d07cfa0",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/4ebh/9vqi",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "New+Jersey"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F068137"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d178f830-7fd6-49e1-98be-1dce3d07cfa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.248013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b38dde50-41b9-4ec9-8a10-28b45b2918d6",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/bb35/o20z",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "North+Dakota"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F569493"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b38dde50-41b9-4ec9-8a10-28b45b2918d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.247604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "29d4ba08-5a65-40bc-9528-ef56b435b78e",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/8rlc/g9sq",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Oklahoma"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F071904"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29d4ba08-5a65-40bc-9528-ef56b435b78e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.247142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b44a209c-cbc4-4d10-a549-4a2bb2f2a5a9",
    "name" : "Revoke connection - 301",
    "request" : {
      "urlPath" : "/vault/revoke/4tb6/5o4g",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "South+Dakota"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F576198"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "b44a209c-cbc4-4d10-a549-4a2bb2f2a5a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.246703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsRevoke"
        }
      }
    }
  }, {
    "id" : "39715920-0228-4395-ba9a-171cf8dd8b9c",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39715920-0228-4395-ba9a-171cf8dd8b9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.246293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "97135bb0-23c8-4972-85c4-dfc9485dc383",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97135bb0-23c8-4972-85c4-dfc9485dc383",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.246217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "396dbf88-bf92-46ab-8ada-6fa3a64425f0",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "396dbf88-bf92-46ab-8ada-6fa3a64425f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.246118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1b9d512b-4b9f-4713-b745-d9360162156d",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b9d512b-4b9f-4713-b745-d9360162156d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.246039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "aeef3904-6c73-4ba8-a0a4-ea5c2df6e274",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeef3904-6c73-4ba8-a0a4-ea5c2df6e274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.24596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "402a4a00-7c89-4f47-9a7d-21be4602f90a",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "402a4a00-7c89-4f47-9a7d-21be4602f90a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.245857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Log"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLogsResponse",
            "x-graphql-type-name" : "LogList"
          }
        }
      }
    }
  }, {
    "id" : "97fbb602-f8c0-4664-a50b-ed74db60961b",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/1yot/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-04-02T14%3A27%3A54.245516Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-07-05T16%3A03%3A54.245549Z"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97fbb602-f8c0-4664-a50b-ed74db60961b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.245616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "273fd77a-9f5e-43d0-bb99-617d28268749",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/2ot8/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-07-13T16%3A06%3A54.245225Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-10-01T14%3A12%3A54.245259Z"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "273fd77a-9f5e-43d0-bb99-617d28268749",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.245345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9ee88af2-1b9f-42b3-816d-7933a8c290d8",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/7253/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-09-11T17%3A40%3A54.24497Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-08-15T15%3A14%3A54.245004Z"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ee88af2-1b9f-42b3-816d-7933a8c290d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.24507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "871e9e7e-9ac8-4338-8185-686bbb8cd18c",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/votn/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-12-20T16%3A58%3A54.24472Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-08-14T15%3A47%3A54.244754Z"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "871e9e7e-9ac8-4338-8185-686bbb8cd18c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.244816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "4783037d-c1de-469a-b6b2-159fb02dced7",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/dq4v/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-04-04T15%3A55%3A54.244445Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-07-10T16%3A09%3A54.244478Z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4783037d-c1de-469a-b6b2-159fb02dced7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.244565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "20d49f9c-249a-406e-b531-de95a94e470b",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/6ni5/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-05-05T17%3A40%3A54.244117Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-05-17T16%3A52%3A54.244158Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_user_id\",\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"end_datetime\" : \"2021-05-10T12:00:00.000Z\",\n    \"start_datetime\" : \"2021-05-01T12:00:00.000Z\",\n    \"aggregated_request_count\" : 40,\n    \"application_id\" : \"1111\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20d49f9c-249a-406e-b531-de95a94e470b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.244266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "aggregated_request_count" : {
                    "example" : 40,
                    "type" : "number"
                  },
                  "application_id" : {
                    "example" : "1111",
                    "type" : "string"
                  },
                  "consumer_id" : {
                    "example" : "test_user_id",
                    "type" : "string"
                  },
                  "end_datetime" : {
                    "example" : "2021-05-10T12:00:00.000Z",
                    "type" : "string"
                  },
                  "request_counts" : {
                    "$ref" : "#/components/schemas/RequestCountAllocation"
                  },
                  "start_datetime" : {
                    "example" : "2021-05-01T12:00:00.000Z",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "x-apideck-schema-id" : "ConsumerRequestCountsInDateRange"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ConsumerRequestCountsInDateRangeResponse"
          }
        }
      }
    }
  }, {
    "id" : "ba198454-2ab9-45f6-aa88-0cfce486c565",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/qq9f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba198454-2ab9-45f6-aa88-0cfce486c565",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.243903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "611aede6-2789-4c4c-9135-ae8cf23a58ce",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/qt57",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "611aede6-2789-4c4c-9135-ae8cf23a58ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.24372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "97a4c1aa-185e-4b49-8931-928e3da05be9",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/r0c9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97a4c1aa-185e-4b49-8931-928e3da05be9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.24351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8959e186-c1e4-4cdb-b838-da28b06bee1b",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/l8mw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8959e186-c1e4-4cdb-b838-da28b06bee1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.243311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "eef901f6-67ae-4071-8430-bb3fcff224e8",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/023p",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eef901f6-67ae-4071-8430-bb3fcff224e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.243125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "57470ff4-fe9c-4c11-9096-8e4fd80232cd",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/64m3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57470ff4-fe9c-4c11-9096-8e4fd80232cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.242905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "d74422bc-f129-4cd8-9bfb-0fa8be22d343",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/489v",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d74422bc-f129-4cd8-9bfb-0fa8be22d343",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.242472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "54dad1cd-9235-4d0f-a3d7-65894ae1a644",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/4ixe",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54dad1cd-9235-4d0f-a3d7-65894ae1a644",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.242283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "80e99e1e-6562-40df-9314-41a0541e1d37",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/tz7p",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80e99e1e-6562-40df-9314-41a0541e1d37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.242086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "9acac901-93c1-4d5e-ae39-36e8ba329a29",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/8dv0",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9acac901-93c1-4d5e-ae39-36e8ba329a29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.241896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "cb2cc323-4d5f-40bc-989b-e89dcb38aa4e",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/65tc",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb2cc323-4d5f-40bc-989b-e89dcb38aa4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.241715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "6bcc130c-5f1f-4478-94eb-53c21b936a0d",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/p2ow",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bcc130c-5f1f-4478-94eb-53c21b936a0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.241494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "38879a97-3f32-4d58-a468-dc5752bdd917",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/ze15",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38879a97-3f32-4d58-a468-dc5752bdd917",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.241222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "78258542-cca2-4c39-ba4b-398d2948cefa",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/e61q",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78258542-cca2-4c39-ba4b-398d2948cefa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.241042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9e34b9e6-9710-45bf-a5c0-ab7a428f4635",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/n462",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e34b9e6-9710-45bf-a5c0-ab7a428f4635",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.240831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c60b1f6d-7155-4973-bca2-8c9ebc4b2db7",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/siz4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c60b1f6d-7155-4973-bca2-8c9ebc4b2db7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.240656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "521ca744-93b0-49ad-b524-06883d933629",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/2x1z",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "521ca744-93b0-49ad-b524-06883d933629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.240466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "fede617c-ebf1-4dfa-8781-d7160b723b4a",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/796r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fede617c-ebf1-4dfa-8781-d7160b723b4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.240266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "consumer_id" : {
                    "$ref" : "#/components/schemas/ConsumerId"
                  }
                }
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "adf36872-3e78-4752-bd5a-2ca8931c9db4",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adf36872-3e78-4752-bd5a-2ca8931c9db4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.240038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f51dfafe-2dca-4554-8371-53def971adf9",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f51dfafe-2dca-4554-8371-53def971adf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "dbe54aae-2d6f-42ca-bafc-df4db128d6cf",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbe54aae-2d6f-42ca-bafc-df4db128d6cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d8913550-0c78-4a4a-944b-afb4ce17392d",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8913550-0c78-4a4a-944b-afb4ce17392d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1c10400a-81eb-4be4-aa6c-993706320f17",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c10400a-81eb-4be4-aa6c-993706320f17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c3d36226-54b7-4738-9de3-832b8fc3fc42",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3d36226-54b7-4738-9de3-832b8fc3fc42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    }
  }, {
    "id" : "b47a3252-6101-4767-a958-955bc72a413b",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b47a3252-6101-4767-a958-955bc72a413b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f0e494a0-c902-41d9-8496-c34bfad32325",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0e494a0-c902-41d9-8496-c34bfad32325",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1b6d21e6-6b64-44b7-b00c-9fde152458bf",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b6d21e6-6b64-44b7-b00c-9fde152458bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "6f981a03-13e4-4933-adc2-d8d9c66b0637",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f981a03-13e4-4933-adc2-d8d9c66b0637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.23911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "4ac27db2-a66c-4f44-8463-02b19397e507",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ac27db2-a66c-4f44-8463-02b19397e507",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.239024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "24b5cb49-8c15-4cb6-a240-2a62f87ec9c1",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24b5cb49-8c15-4cb6-a240-2a62f87ec9c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.238901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "properties" : {
                    "aggregated_request_count" : {
                      "example" : 101,
                      "type" : "number"
                    },
                    "application_id" : {
                      "example" : "1111",
                      "type" : "string"
                    },
                    "consumer_id" : {
                      "example" : "test_consumer_id",
                      "type" : "string"
                    },
                    "created" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "metadata" : {
                      "$ref" : "#/components/schemas/ConsumerMetadata"
                    },
                    "modified" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_count_updated" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_counts" : {
                      "$ref" : "#/components/schemas/RequestCountAllocation"
                    },
                    "services" : {
                      "example" : [ "salesforce", "stripe" ],
                      "items" : {
                        "example" : "salesforce",
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumersResponse"
          }
        }
      }
    }
  }, {
    "id" : "6ea68949-8f6c-46af-a8a8-cfa6f98e0ae6",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/09huf73razuet3dkr06r1bhzlw1z69b7uwkx8ef59pvo5d66r82okcr1uqk06sj7cqabnar1os4h56dmztk2pk3k4ddnjv2p04ph280fumbztqm6ccdx3xey8vlhnk97nwgjc0lzd1yuu4owecb1idnc68t56h065s7oa9zgbrjo/v586/lcy3qosij1zebcx5pm2ahkrpi5zcqi13d89e6t0bd6bnilvp3mhu6otdt6hjscsj3ggshalrvcw0coterc9bizjbbiic2yca9tq1hklfw7l60px4kkital9aq/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ea68949-8f6c-46af-a8a8-cfa6f98e0ae6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.238472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "ed566aea-bbfb-4142-b077-526674da0dd8",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/47o9h1e5l0qi1ids5vc1ldbmnv9jksqi7tpc4vhcbomt3siqifmh7entn8yleo432l4iilvtx75bqglwwxvl3bv0qb3t05j15w0mexmflyyyou4z9jsvzb0r8jqvi1mkheiqma8iy52knyeh/eume/76dhlpw7z3t1my002rh87tpuqmrvfjqxyaksbjkmw8mpmmf6jy8o6tvmy90qig7b66g2qftp4ecl423y4sp5e2b66bsrcj4uszfri26ale3g0u5cn04b4cugxp0ujl8ouvnmg4sc4b8o3m9c9bp/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed566aea-bbfb-4142-b077-526674da0dd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.238254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "601a0e81-9816-4b4e-bfbe-77e503490694",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/iqp0dyy5bsgkj5n2zm7a9549f0ajrm9zwf02znxfu4g0ifpl2atog010jkd6rkw1xm9l81btlrf7q6u15yqdsi602b29f59mw01lxoc90hyz6sgoq6ggmn8ez2vjtjv1rs2tl0kpr77wn7pj0vf3dvmlhri/9dx1/bnb94206b3yxbegzx7i924rb02hyeab98poryr1bt1xu8n5g6etyd7iqnwv813/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "601a0e81-9816-4b4e-bfbe-77e503490694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.23801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "1b0493da-845f-4c0f-b28e-9aea2757fb20",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/6w45fnj8hy07kuffmuo7zq7gopou0xcu8px0tpto9y7wmfi1/uo0p/2c4x523t1fzwdiysexi4pk1tdsvw2xl7hgf9warymuauwg/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b0493da-845f-4c0f-b28e-9aea2757fb20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.237766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1819df3b-9813-4239-9422-d6ff11c925d4",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/j5lrdcib6ecig968nsbvoyxl1fkmug8rdfwhri1d4pbqeji5dhd/6yv3/4wv2s3979c1cm61m172nfdz6y4szpxototdkofbf6z0z9e7z9rykscj81vgusyr9ddt9nbh1l7ant0q2p9r24rhxde9oqa4cwvfrbokam5vcugjq0283pk5/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1819df3b-9813-4239-9422-d6ff11c925d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.237551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "75ae527a-5e75-4a3b-8bfa-49ac08970ee5",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/jo710zc89q9cjkcivq1f4kly5232d804sk51udznkdje6g43x8mxl55qbqfy6knr0f3ucbtq2022uosp3buu09maq2yaef0ytj1culevnojwcvri4oceezr2i09netrm4qs8pw9qm9c0vayam78djb5lm5bj9evblq6g8f66t7nijv8ovj6/j74i/l5p2ohl186ofqyoz6uitrb6pig4yr4ja3rn88pihvbbfg33g1uzv4xoafuel6dn7szkvnyxkjneuhpeddrg0z6y1yxiczaphki6/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75ae527a-5e75-4a3b-8bfa-49ac08970ee5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.237293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "4549655b-bed7-45db-b78d-f4acf67944a3",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/cr5d1kdi4oyi/4817/ll2lw4wz8engw318ukxaxvl1ehfk8rfa27o3nlww5ycjzc1g54oc71nmiut1ugm8xeoih5ar1c6but76xzioe1/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4549655b-bed7-45db-b78d-f4acf67944a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.236255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b3c6bc0d-6b8e-41af-b61a-4a6208dab8ce",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/9v9jb/82lv/7j3okcl2i32j034acx52hzce7ffi9lxmftz0habqz8dajxiyprz3p6c645qflzaq70co1r5i1rhm25s7chs7u/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3c6bc0d-6b8e-41af-b61a-4a6208dab8ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.236044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f9b3ddb7-7f75-4eca-a499-fe2e19e21b9c",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/apcd0h/vou2/u012bpvsrv01v6dtldfg191yz/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9b3ddb7-7f75-4eca-a499-fe2e19e21b9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.235809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "746ae8e3-8f3d-4a2f-827e-f0af5831a6e1",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/s8qmwrah62vv4g5/2zb9/obxzref71nlrwfs5mt39h1p1lxfhysf50qm2gbgs8hqbilgmtih117crfq5aaypjs777tzbh1h9nll47k6ddkk4adfl1p1kgr43jlcpwkf4alcrrzu6u02sbjs8qfpgeanyeqvszn4wplupkk9dnur/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "746ae8e3-8f3d-4a2f-827e-f0af5831a6e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.235528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0b908fe2-c50e-4ef5-8c0e-28fee5022a3e",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/rh8dnmvyw8grngs8e65suw8g7137fi791wtvk1kgp5sqixux3m51bobbobwdow1v61xr1b7ugpjsi2a11j5ieqxwjrft9dzz1efqfli6r9aqofr6elmfwhmtjxrmywp9m6vaiy259lsrgp3agkbl0yqvc8/x3h5/hq2fqogw3qiyrxhzo0buz9ub21ozxb9xupmm3u8emwspgy85fa40i6ec34gft0jko2mgdix3z5ojch8wqh8x5qa2mh976byyg7n6arcgjzayrbz3gcj9wdtzosp7odifuedtp289a8tkdvs6qc0czwnd3ldge/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b908fe2-c50e-4ef5-8c0e-28fee5022a3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.235263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "fda00f61-9e3e-4ea4-bb22-fc71299a561d",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/oujnc8qrzr8u3zlqd9ynu6cq4yugsvxa/6v52/qvgnrvi0mnr8uu1hmad5fhjbc4p8qawx6iwwrmdpwze476bk5mci63vc6301ij3nxbfpb8vj72ivx25mm87ss215ry0xa/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fda00f61-9e3e-4ea4-bb22-fc71299a561d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.234989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "443b51b5-adbf-4e35-8c7b-3a1151516530",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/8pcqqe999gjldvs7ftdtzqq76zavplwml2wxkmv5y39vxlhfvmoo1zgeaqpgmo5pdkve0dydiuwpoe/u64m/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "443b51b5-adbf-4e35-8c7b-3a1151516530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.234173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "08934a8e-94ae-424a-ae1a-76a07df0a2bb",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/d30uxnt6vlfhs77wq/b00i/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08934a8e-94ae-424a-ae1a-76a07df0a2bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.233947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "bbc1d0fa-bcc6-454e-8545-66cf865fc3f9",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/gr0itv59h8w055lokutwtxg7m3ovth2jp05emtkpm2sesbi4vkx4hdc9nwgs0i8fgdwwu26in0rscpflg9452g1i9wkfht4qumdptqeggjx93eb4df8qsg1ygzlbztttn3k7bbwynbitm2b5ecn7n1u0d9mwg3sgy8o30cktj4aoymdfgu1wrqbdwuh/3ffg/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbc1d0fa-bcc6-454e-8545-66cf865fc3f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.23372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "de81f071-f011-4b9f-ac1b-414659f37d2c",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/v2rpnw1bedv99jvtcaslzqgny4i6n3s5se8a93rgjezxf1pnyhb5x2sv2bmgpkpxyxxyz2q3a5uiaz1xzeoch8j8kixlmgue2locyrjmdxycy1cutt1t353tussmqp8pj545piacuetowi10tid/5pun/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de81f071-f011-4b9f-ac1b-414659f37d2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.233495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "485d6025-f8b0-499e-b803-a40d18a0dc23",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/aho01g8hbcwpdamrxm8ptvzqao0jbp7qcx9db8mdya1zv3kwa/1299/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "485d6025-f8b0-499e-b803-a40d18a0dc23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.233296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "5466f4eb-f292-4f1f-945f-b12ebf33e59e",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/4lavw6vbf6gd3v5bsxsqh6q08r9xkfm1vdezelt8lc3inb2lkjuh7zbyqty85ajhv57yp0fn1c373f99ujuk9gc25beg7b1ycyfv6yqynl4gsyevb5kg2f26b4piu2qiqn4ugmmfb3vph91r3uphmn4xmscalnrz5151s6a9xfjlj1ldulzmarwf/wq64/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5466f4eb-f292-4f1f-945f-b12ebf33e59e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.233063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "ebe9d630-1515-4ad6-97af-d76b93ab979f",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/hhktdwbp5gheabznt3rnjenayapdu7iuugg/1314/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebe9d630-1515-4ad6-97af-d76b93ab979f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.232318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "bd9976f0-6e3f-4b13-aa4a-9b62bec43613",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/e69jsug9j13ckxa3j1wfbubwoxogxcg5ok3c0p0v2i1y4pae14g39pwgaib3hh8isb7o9a0pbxf9w8jmcolt5gki4njg4akqqbs55fkkgx3hi8ur2jp5ztyyvcp3trfuxb4xue9m2jm6pq6mr11ioy3d34zai0l1unq979yq4yhntffi5hd5q1ux8jeb7dmftcd/cq9f/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd9976f0-6e3f-4b13-aa4a-9b62bec43613",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.232096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "2e3c787f-6999-4521-820d-898f5747cd7f",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/8z1tc1gp0mt1x1scnqa5gbxk4i/99q0/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e3c787f-6999-4521-820d-898f5747cd7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.231849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "f577fe9d-593c-4b6e-be0e-740dfc36b990",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/p3nn7ru78ocf05ioo4oqcfeu6s0qcqs094dqv4gbe9mdhxcfdaypijsybc8q7ke6mgudl8qdpksc8ujxykr6ous36hfpm9b/j988/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f577fe9d-593c-4b6e-be0e-740dfc36b990",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.231651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "a511086b-c599-4dd4-9558-3b44ca561564",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/ga9pfme3qu140awrmbxtfp6ae7pr5rwhohc2djj9gf49456199yy0t8yk8px35unav8cya7okwxcskyzqvqyatsevpp2qdw1pixnm8oe28l9tebnztatel/6g5n/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a511086b-c599-4dd4-9558-3b44ca561564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.231448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "7139411d-7293-4605-a877-d0da379b99b4",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/7ppobp8mor20560jxz43ty3vgun1qmki31hzcimljvbo78g8s1710ha1slqqux3nnhfp6g9r3yirnlyqdr50e7yebxutb768rnzutvyp1tnv17zrx6bof0ir1bqb7ivi4j8y1rxdhbg7t0/039z/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7139411d-7293-4605-a877-d0da379b99b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.231221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "835eb43b-4bf2-4905-b50c-3d4e9b57d96d",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/pdwob2p8ejroebwnvxjvq5g6cf7jmshw2jyhk0wixnooga386cvmkhcwpjcwbi22wlb3kpes8gu7nj7pbc5o5w90wdrlisybhuv3ew4y55b50nc3y75jkrhxv6csqbw8e6r9zddw3yddrahvmq1hlimepdgz/2y13",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "835eb43b-4bf2-4905-b50c-3d4e9b57d96d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.230654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "949b80b7-14cf-4817-ab4a-ff3a41cc495a",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/ig3ul5fwq74wz7qwujbb9w8gnui2sdg3dtn7qv/3oqk",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "949b80b7-14cf-4817-ab4a-ff3a41cc495a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.230452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "72bdc665-46b0-4445-8ed4-4f7171df715e",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/3wcbw7b74lb5f8j66bg5emu3owjg9tpxk6ci5j1cbjuxmvhft9hqur4xw57tcsgyt1ebim8l9ob0tbm2x240cm5mi7mblu3762rqqyv3w49tlkdxn8l1kcc9f1111zarahdv3agx7ihqiexbat13mv37mcnxcr2bsd46fm2bvnj5o1/a6z7",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72bdc665-46b0-4445-8ed4-4f7171df715e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.230233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8026e8c1-465e-4f4d-b2bc-dc6a9224c663",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/z890spfhz5oesfgc5kqgcjatcs1905qblpqvnr33gctxhpmqegkhw6w6ppij4owlks6spwoou5ykxfl1gfaks9xtxng365a2zxbcx3exp9eat46sgu4bp1ttoizq9f8p5fzojkhpgr9xk0d02lazmob3tif2xr16oosu4j09hlg8fklcu0o/3o4x",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8026e8c1-465e-4f4d-b2bc-dc6a9224c663",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.230033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "7fd02cd3-6818-4988-9b7c-7dec55d1990e",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/0brtw1s7lmqjfxiqir9q601gkta1hj93dt3zic9xrrgg0bk811ref8w5f69ceuil20n6/9j49",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fd02cd3-6818-4988-9b7c-7dec55d1990e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.229832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "203c8cf6-ae9e-4492-ab4c-57e481a9fb7a",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/a25s/ij7b",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "203c8cf6-ae9e-4492-ab4c-57e481a9fb7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.229602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "4b29bf37-ba1b-4709-b70d-5ddf6cbe4118",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/6baie6q9rsuokh53c9oj3aroga5vf2vbqu8vtok7p5rwvv6f1apqwmsq4xghfbwvqhe1m0c2xw81015xz2r4dnrrihcveha8j3yzszoaqtxh7d2x5ha4/l0f9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b29bf37-ba1b-4709-b70d-5ddf6cbe4118",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.228791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "276a0e9a-4e92-4262-86dd-46af8e60a10e",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/7s24tlgwafghr/n63s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "276a0e9a-4e92-4262-86dd-46af8e60a10e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.228578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "ce090a24-7b42-44d9-827e-4cb71bd66ee6",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/mkqjopx9u1ej5yp96jhjvnqcf8s72jo76psa5s2mft29slwnvu2m6cs6x1r7ze0sd04i2g1ak3cskmrpcdj3bzm/rw4h",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce090a24-7b42-44d9-827e-4cb71bd66ee6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.228343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "de33b8ce-9df2-432c-88b8-d65209b1c128",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/b9vwvoe3r4jwybr07uhtyslfnr3o0n5jllyhn6bjj60omw0i8k7iccs5vgjiqpltwl7yhhugoj4t77s68e0bmrgumeoygiawmry9rp7mm8qx2xndqhgpadrmkzhwe1cft7tr6uq5qd7dnw56n59h5rb2yoeff7vrs3z4y57eu531mi7p1lglj3ylzgcl0dcz/02vw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de33b8ce-9df2-432c-88b8-d65209b1c128",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.228125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "181d4b97-882a-41a0-acfa-bfc08de8b387",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/8llpz5vjcwh03bca/12t8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "181d4b97-882a-41a0-acfa-bfc08de8b387",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.22787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e9961999-820c-41d6-9c0d-a7dd55c1fe4b",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/l91ggwas55c6xd0gt027tewmpswtewamtnnlqj9h9d7qeh30zx7i7wuhxzd48g7w/1sl8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9961999-820c-41d6-9c0d-a7dd55c1fe4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.227457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "a79890cc-daee-4270-aa81-046cbec5db5d",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/inhj157suvkhh4mcvumpm3cjnbpi6vtk1pgxgv4gtay3kpuioi4th9v9t32x9aw2xk2scd3ofovshukxwhb1n8cknbwx17cvuka5ejdsn3nvhc3l3358x5td1jz95fej3esv5dyjo1udryx24xseugi47vvp/7m25",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a79890cc-daee-4270-aa81-046cbec5db5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.226312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a7095ed7-0560-48b3-9b64-080714a7f192",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/tpdzykqtxwefsk8o4mgyi2v7cpgyfwbeeygr556qstebiqwku3c1ldmrujo6sd9du8bqlod6mhnsevooswf6flyxiinw9sc0oxfxmq334wuu1pwpz61okmzd7mv5t59lkgrrs64o5izjxe0oa85sgrl0lni56nl6zlh/6j14",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7095ed7-0560-48b3-9b64-080714a7f192",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.226106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "1c7fbdc5-804f-4cc5-9d2b-9f4da924830f",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/2ybbnzb5xckdy1rpjsse08us6a5cof/42ny",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c7fbdc5-804f-4cc5-9d2b-9f4da924830f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.225875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "b3d54ee2-dff6-4d4f-be60-c68887c9b9e9",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/pr69b40boi8zbdqubx117u3mupuwojd2ltm9esxdp4juyxagme4wbiw2e0kts6ta4ytd76nsq7q2l57hy8xt4rje5e5krf9uivdskm5irtuq1nahaws7a/9186",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3d54ee2-dff6-4d4f-be60-c68887c9b9e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.225671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c83df559-e28b-4fd8-bdf5-30588987f829",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/y6gxres5qeb53ygse5hr7vgq88noxnt6q5613n55fz2jzybsglo0ydi77uxq8z6dyz4w7538493hbh77ympb3cw071xlyxr544qfap1w1vw00mltl4hy1m359rhgyzb69k49o6jn56nnh6gylzu8p3elxjwxgaq8dsu2adi39cbrig9uq4/co3p",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c83df559-e28b-4fd8-bdf5-30588987f829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.225462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "5d3b513c-0a79-4c96-951b-e23ba43218cf",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/jy42mc1ydi3alfytf5je0dohx0pthkgfmo2h2sf2a9nomcvs0vwk4j82xrxg2ubhfvywb6tdbfodkk8arghgqfpawdfuu/n317",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d3b513c-0a79-4c96-951b-e23ba43218cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.225223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    }
  }, {
    "id" : "e29cdea7-de83-4b63-bbb3-02ad451a59db",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/fyxdckv4xp6e8j3ggocsampf2bfsn4n35lorvdvhzhffuit0i1voiqxso8xp6sqfc5k63lgoqrbtthi4qw4v9u8e18nhdy2o2xxpekj/8au6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e29cdea7-de83-4b63-bbb3-02ad451a59db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.224648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "80edbdf8-c076-45ca-8f3b-f5c57619d866",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/0ag5iewlpo0ye2s5cpj043bbej6i4clju7x3kl2snqfb641r58q3dayvwcdupunx7dzg9u3bpginfy5b780p0622v5sjv92be23q1dabb87uo41k1770j2lsc4wxbdqsoz9n9bs80kzcc97n0c1wbz9gb2l5pbo5hslmv0rdtlmul1hr3qvjg/i250",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80edbdf8-c076-45ca-8f3b-f5c57619d866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.224422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "40ca3e85-5217-4ad7-9028-faa55ad35ebc",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/28oxje7wl9hrkkmx95hp8gmupw2hgq9ih9b5b6x4xb/549z",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40ca3e85-5217-4ad7-9028-faa55ad35ebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.224172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "069997f3-d1dc-4052-8c95-869963e12063",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/umdgqa/4uq8",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "069997f3-d1dc-4052-8c95-869963e12063",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.223961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "93e08056-3013-4225-bd2b-05db42b90616",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/7o3mkr9b7b4b5hrl9l4o9fix2bkcujiwr5fchnqxl35ti7766id5n2ij35hqhok51f398q1giqvbhkw8jvt7z97z13da5y45yfflocw2ix36qh0050vv7y5hx76dsjj0tic5g0itevw6lptcf6ot17cd6d9ujdvqbzed5rvvq4rmtq2hpw4bjd0nc7h/eb2i",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93e08056-3013-4225-bd2b-05db42b90616",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.223749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "71cf5073-60f4-4d9a-b679-d7a7dfdb8963",
    "name" : "Deletes a connection - 204",
    "request" : {
      "urlPath" : "/vault/connections/h41xl9o3wb0w14nzo22watwyqh6msvovxcuxf0tnvekpltsnfkduj0g57mqla4a71o8n389urijktslb/9o14",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "71cf5073-60f4-4d9a-b679-d7a7dfdb8963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.223498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsDelete"
        }
      }
    }
  }, {
    "id" : "3e89cc06-d02e-44e7-bd55-910950bd3373",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e89cc06-d02e-44e7-bd55-910950bd3373",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.223298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b4e211b7-8816-4fc8-b0bb-12ae02068e81",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4e211b7-8816-4fc8-b0bb-12ae02068e81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.223205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9f20a389-c876-4e63-b88d-cee7561134fe",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f20a389-c876-4e63-b88d-cee7561134fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.223088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "7ffe3626-653f-4790-a797-4e044dba8a60",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ffe3626-653f-4790-a797-4e044dba8a60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.222996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ab90d6da-ef6f-492b-af93-15431141546e",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab90d6da-ef6f-492b-af93-15431141546e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.222904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "a073a2e1-b3f3-4253-8ef4-b8a281b6711c",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  } ],\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a073a2e1-b3f3-4253-8ef4-b8a281b6711c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.222774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionsResponse"
          }
        }
      }
    }
  }, {
    "id" : "8ccf492b-7b1e-4c71-b1fa-e071983a68e7",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "wflz9es8hdx8v99dzyppe6gdkjrk0tyay3ggw4bpfhmiuj8qbjaq6j1lon1s847pq6ux9sykbrqpcbv77eesdnnxonlfl8ahn6rizn0m956dljvwjrkh4w2hxxy9v1rj2xyfwnxq94u6ov6otxufztayye169vpea7owyilp88lwf197fh4jm"
        },
        "state" : {
          "equalTo" : "Louisiana"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ccf492b-7b1e-4c71-b1fa-e071983a68e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.221855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5d4dda51-05c0-4ac6-93c2-12401aef2e03",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "k71lozz3j4lymc4qxa1txfm35dz2oe6oqf019pofqh5j97b5y9j9mduiquouaher7nh3fcmqye5lv"
        },
        "state" : {
          "equalTo" : "New+York"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d4dda51-05c0-4ac6-93c2-12401aef2e03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.221702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9d11edd6-0176-4a86-b2af-89f15cd842c0",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "ec3ihhucp7jfpq5t468izymn8u4454ykm20l6nk2209uclnj3oqrs6te5xc0ujpyoycxtpacbis4joypupmnea3qe4uossk6wikzgxhoz2rjdwuktt7eh0f8djrs4ju4bqj1khb06wjhjwbjsk589j90"
        },
        "state" : {
          "equalTo" : "Maine"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d11edd6-0176-4a86-b2af-89f15cd842c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.221519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "42a15dc3-067c-4d7b-bd72-fb398fbba321",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "2ajame31fvppoz9izxvn3wvl76tl0tazi8x2sn9a2jmdwaen29ohr1l8f1z0lsdrt391j16tsii5vr1jtwnke2nkl894q8k1mm19n07abu4bo78nudpzkto4heja3sxs3eifhxcit93p348vn"
        },
        "state" : {
          "equalTo" : "Minnesota"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42a15dc3-067c-4d7b-bd72-fb398fbba321",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.221362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "58b4d634-b31f-45a7-8a6c-ea288daa3d10",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "npr49wlflr5lr16xci61bv1fdcf4aa30tcpwq08d265p3gzanywn8z0vaptfcp0o9"
        },
        "state" : {
          "equalTo" : "Indiana"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58b4d634-b31f-45a7-8a6c-ea288daa3d10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.221204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "c4024d5a-ac8c-4d09-be77-adfa8537e12b",
    "name" : "Callback - 301",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "queryParameters" : {
        "code" : {
          "equalTo" : "qaesemxybfb5z30q6eyhl3spx0eiznmlr19gz9ofsrbjd3vz1i1dvkqjlzy6lfpgljkq71nlce3jit7tb2g163ujqnvwefjb12yexhd4cwnzu84ae21q1dbegwf33335382"
        },
        "state" : {
          "equalTo" : "Florida"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "c4024d5a-ac8c-4d09-be77-adfa8537e12b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.221012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsCallback"
        }
      }
    }
  }, {
    "id" : "bdf5b043-82d6-4f81-9217-fe0263a2584f",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/2399/9153",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Hawaii"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F243876"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdf5b043-82d6-4f81-9217-fe0263a2584f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.220902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "aba17526-c3d8-4856-81ca-866cd58e51a1",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/e594/65cy",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Hawaii"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F490354"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aba17526-c3d8-4856-81ca-866cd58e51a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.220366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "c0942566-7f62-4567-99f6-12187cf17c6c",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/ch13/d1r8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Florida"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F906149"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0942566-7f62-4567-99f6-12187cf17c6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.219843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "905cd26b-ba5a-4742-9bcb-1a246696285d",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/l474/l6n9",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Washington"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F675704"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "905cd26b-ba5a-4742-9bcb-1a246696285d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.219349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f80df387-6ff7-44af-9571-337e532bbb7f",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/feok/8qe8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "New+Mexico"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F373675"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f80df387-6ff7-44af-9571-337e532bbb7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.218817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "69a90972-cd4f-4b36-861d-0965942403e6",
    "name" : "Authorize - 301",
    "request" : {
      "urlPath" : "/vault/authorize/7si3/3sct",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Alabama"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F729205"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "69a90972-cd4f-4b36-861d-0965942403e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:54.218185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "connectionsAuthorize"
        }
      }
    }
  } ]
}