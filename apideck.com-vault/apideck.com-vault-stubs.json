{
  "mappings" : [ {
    "id" : "a6948078-bee5-309e-b33c-a3c20ef35fd8",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6948078-bee5-309e-b33c-a3c20ef35fd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f07a55d6-705f-30e9-89e7-869e4060d290",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f07a55d6-705f-30e9-89e7-869e4060d290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "78904e95-aed6-3091-bd73-a0e4345171ad",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78904e95-aed6-3091-bd73-a0e4345171ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "c4afe75d-0cad-32fc-a2b0-0d6d90585756",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4afe75d-0cad-32fc-a2b0-0d6d90585756",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "482ed605-89f3-3967-966a-426e048766b2",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "482ed605-89f3-3967-966a-426e048766b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "a998f567-bdf2-35b1-bdeb-6f384171c5ac",
    "name" : "Create Session",
    "request" : {
      "urlPath" : "/vault/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"session_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\",\n    \"session_uri\" : \"http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a998f567-bdf2-35b1-bdeb-6f384171c5ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sessionsCreate",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "data" : {
                "additionalProperties" : false,
                "properties" : {
                  "session_token" : {
                    "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  },
                  "session_uri" : {
                    "example" : "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
                    "readOnly" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "session_uri", "session_token" ],
                "type" : "object"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateSessionResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "5490e30d-a03a-34d6-9529-90aa5b926cec",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/i67w/4tx0",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Montana"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F550553"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5490e30d-a03a-34d6-9529-90aa5b926cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4653e752-6c19-30ab-bd8d-776e2b59413a",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/q0vl/r5b8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Alaska"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F099718"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4653e752-6c19-30ab-bd8d-776e2b59413a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "c67bffe8-70d9-304e-9714-bd0ddab2d0eb",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/1j8t/4245",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Michigan"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F677927"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c67bffe8-70d9-304e-9714-bd0ddab2d0eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "7338bce8-4f6b-3e00-b705-b03bd42eccfd",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/ouk4/c433",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Mississippi"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F672143"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7338bce8-4f6b-3e00-b705-b03bd42eccfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "f27dd10c-8442-39c5-b239-a3203d2a9376",
    "name" : "Revoke connection (application/json)",
    "request" : {
      "urlPath" : "/vault/revoke/8vhg/165y",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Kansas"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F465429"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f27dd10c-8442-39c5-b239-a3203d2a9376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsRevoke",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "a9db9e69-7e33-3e76-bf5d-e8003b72698d",
    "name" : "Revoke connection - 301",
    "request" : {
      "urlPath" : "/vault/revoke/z47k/f55n",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "Oregon"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F003540"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "a9db9e69-7e33-3e76-bf5d-e8003b72698d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsRevoke"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "596a5311-a173-35e1-9dd1-67904611ab65",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "596a5311-a173-35e1-9dd1-67904611ab65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "d46b2c87-ff04-326a-85e0-15ce67f6d273",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d46b2c87-ff04-326a-85e0-15ce67f6d273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "6bea6858-5017-3d96-8b3a-ec1ecc25a4e6",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bea6858-5017-3d96-8b3a-ec1ecc25a4e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "cf077b7d-487a-355e-9ce6-c200ddf023ba",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf077b7d-487a-355e-9ce6-c200ddf023ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "e15feb5c-a1b6-3ede-a8b4-08edf5494f3b",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e15feb5c-a1b6-3ede-a8b4-08edf5494f3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "4109338c-9d54-3154-8104-52b7e7c22732",
    "name" : "Get all consumer request logs",
    "request" : {
      "urlPath" : "/vault/logs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"error_message\" : \"Refresh token is invalid\",\n    \"execution\" : 2248,\n    \"status_code\" : 200,\n    \"has_children\" : false,\n    \"latency\" : 27.620695999999953,\n    \"base_url\" : \"unify.apideck.com\",\n    \"sandbox\" : false,\n    \"api_style\" : \"REST\",\n    \"source_ip\" : \"94.227.131.238\",\n    \"duration\" : 2220.379304,\n    \"consumer_id\" : \"test-consumer\",\n    \"path\" : \"/vault/connections\",\n    \"http_method\" : \"GET\",\n    \"child_request\" : false,\n    \"parent_id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"service\" : {\n      \"name\" : \"Apideck Vault\",\n      \"id\" : \"apideck-vault\"\n    },\n    \"success\" : true,\n    \"id\" : \"0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\",\n    \"operation\" : {\n      \"name\" : \"Get All Connections\",\n      \"id\" : \"connectionsAll\"\n    },\n    \"unified_api\" : \"vault\",\n    \"timestamp\" : \"2021-07-12T14:26:17.420Z\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4109338c-9d54-3154-8104-52b7e7c22732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "logsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Log"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetLogsResponse",
            "x-graphql-type-name" : "LogList"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "1e005639-1c22-3da0-b7f1-3bb070bb22f0",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/efi7/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-05-17T15%3A54%3A36.067349Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-12-06T14%3A35%3A36.067407Z"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e005639-1c22-3da0-b7f1-3bb070bb22f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "04f986af-458b-3b77-9f47-d32e09e33c25",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/4yzv/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-07-08T14%3A21%3A36.067065Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-10-17T15%3A05%3A36.0671Z"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04f986af-458b-3b77-9f47-d32e09e33c25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "4a6fe253-4a7c-3bd3-8c1e-5a9a022855c0",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/pez8/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2023-01-01T13%3A52%3A36.066806Z"
        },
        "end_datetime" : {
          "equalTo" : "2023-02-02T13%3A34%3A36.066838Z"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a6fe253-4a7c-3bd3-8c1e-5a9a022855c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "8b6c17bf-df9a-3cd1-83a3-520e6b8d18c7",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/y38w/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-09-10T13%3A21%3A36.066552Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-12-20T16%3A01%3A36.066584Z"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b6c17bf-df9a-3cd1-83a3-520e6b8d18c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "74bfdd3b-0f2b-36a7-829b-70835c40351c",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/e2h5/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-05-21T13%3A06%3A36.066267Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-12-01T14%3A57%3A36.066299Z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74bfdd3b-0f2b-36a7-829b-70835c40351c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "3e459a64-20eb-31be-849b-ddbd4ab440f9",
    "name" : "Consumer request counts",
    "request" : {
      "urlPath" : "/vault/consumers/m00h/stats",
      "method" : "GET",
      "queryParameters" : {
        "start_datetime" : {
          "equalTo" : "2022-05-12T14%3A45%3A36.065948Z"
        },
        "end_datetime" : {
          "equalTo" : "2022-09-15T15%3A00%3A36.065988Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_user_id\",\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"end_datetime\" : \"2021-05-10T12:00:00.000Z\",\n    \"start_datetime\" : \"2021-05-01T12:00:00.000Z\",\n    \"aggregated_request_count\" : 40,\n    \"application_id\" : \"1111\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e459a64-20eb-31be-849b-ddbd4ab440f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumerRequestCountsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "aggregated_request_count" : {
                    "example" : 40,
                    "type" : "number"
                  },
                  "application_id" : {
                    "example" : "1111",
                    "type" : "string"
                  },
                  "consumer_id" : {
                    "example" : "test_user_id",
                    "type" : "string"
                  },
                  "end_datetime" : {
                    "example" : "2021-05-10T12:00:00.000Z",
                    "type" : "string"
                  },
                  "request_counts" : {
                    "$ref" : "#/components/schemas/RequestCountAllocation"
                  },
                  "start_datetime" : {
                    "example" : "2021-05-01T12:00:00.000Z",
                    "type" : "string"
                  }
                },
                "type" : "object",
                "x-apideck-schema-id" : "ConsumerRequestCountsInDateRange"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "ConsumerRequestCountsInDateRangeResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "734e9149-4b9b-3433-9152-ae04b52cdfcf",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/274l",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "734e9149-4b9b-3433-9152-ae04b52cdfcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "20eb5a52-e233-3b2f-8b25-a15ce0d0ad9a",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/554x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20eb5a52-e233-3b2f-8b25-a15ce0d0ad9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "7f2569d9-5a30-3417-8b8a-0b597a770928",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/b7ah",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f2569d9-5a30-3417-8b8a-0b597a770928",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "1b0e6dae-493b-36d5-ac64-0ab54385fddb",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/n75y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b0e6dae-493b-36d5-ac64-0ab54385fddb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "e547ff59-e94e-3d41-91ed-10ffbdef1ac7",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/q44d",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e547ff59-e94e-3d41-91ed-10ffbdef1ac7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "df44a319-1e1a-3b25-b13b-17c95ce4fc15",
    "name" : "Update consumer",
    "request" : {
      "urlPath" : "/vault/consumers/onm8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    }, {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df44a319-1e1a-3b25-b13b-17c95ce4fc15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "db1ecdaf-5036-3a4d-bfd0-e707d22f1fcb",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/bxb3",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db1ecdaf-5036-3a4d-bfd0-e707d22f1fcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "d45cc89c-e823-39ab-9d44-880c393c5e0a",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/ufa5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d45cc89c-e823-39ab-9d44-880c393c5e0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "0140d170-3232-3708-add6-c90300cd627f",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/i1j1",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0140d170-3232-3708-add6-c90300cd627f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "063cf351-3f3f-3352-bdaa-a4dbc45627ca",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/xfwj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "063cf351-3f3f-3352-bdaa-a4dbc45627ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "6d360d89-84ac-3f01-b8b7-61e933b56f5b",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/57cv",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d360d89-84ac-3f01-b8b7-61e933b56f5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "04084f1f-48ec-3ede-9f0a-aff8d325a8ab",
    "name" : "Get consumer",
    "request" : {
      "urlPath" : "/vault/consumers/wt78",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04084f1f-48ec-3ede-9f0a-aff8d325a8ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "73402bb2-2c8a-3ac4-8809-dc5fcf009b29",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/cus3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73402bb2-2c8a-3ac4-8809-dc5fcf009b29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "5f4486d2-1cd1-3e37-b8b9-c73270f60635",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/xq0j",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f4486d2-1cd1-3e37-b8b9-c73270f60635",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "04ddc63e-691c-32a2-b529-79bb673c432e",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/e528",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04ddc63e-691c-32a2-b529-79bb673c432e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "e8057daf-0805-3d56-bfd1-b4ad36b9b384",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/14i1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8057daf-0805-3d56-bfd1-b4ad36b9b384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "4b8ff8b3-f305-34de-9b9e-65a09fe3a49c",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/2kp6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b8ff8b3-f305-34de-9b9e-65a09fe3a49c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "59ac4f8b-6a1b-3b17-a95c-8bf158cbb6ae",
    "name" : "Delete consumer",
    "request" : {
      "urlPath" : "/vault/consumers/7061",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59ac4f8b-6a1b-3b17-a95c-8bf158cbb6ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "properties" : {
                  "consumer_id" : {
                    "$ref" : "#/components/schemas/ConsumerId"
                  }
                }
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "637db695-891d-3bcb-be4f-757fd4f26b56",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "637db695-891d-3bcb-be4f-757fd4f26b56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "315de291-06ab-3ac7-bbb5-599c8d92822c",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "315de291-06ab-3ac7-bbb5-599c8d92822c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "306ccf56-4e66-3549-a027-6d0607304348",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "306ccf56-4e66-3549-a027-6d0607304348",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "00b91778-9775-3141-84e5-e39263511337",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00b91778-9775-3141-84e5-e39263511337",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "c6e4d606-bbb7-3c3e-ac12-37ec6ce065c2",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6e4d606-bbb7-3c3e-ac12-37ec6ce065c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "cc364383-6c90-39b7-bf37-01e9376461e4",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX\",\n    \"connections\" : [ {\n      \"settings\" : {\n        \"instance_url\" : \"https://eu28.salesforce.com\"\n      },\n      \"auth_type\" : \"oauth2\",\n      \"metadata\" : {\n        \"account\" : {\n          \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n          \"name\" : \"My Company\"\n        },\n        \"plan\" : \"enterprise\"\n      },\n      \"website\" : \"https://www.salesforce.com\",\n      \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n      \"created_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n      \"enabled\" : true,\n      \"consumer_id\" : \"test_user_id\",\n      \"updated_at\" : \"2020-09-19T12:18:37.071Z\",\n      \"service_id\" : \"teamleader\",\n      \"name\" : \"Salesforce\",\n      \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n      \"id\" : \"1111+test_user_id\",\n      \"state\" : \"authorized\",\n      \"unified_api\" : \"crm\"\n    } ]\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc364383-6c90-39b7-bf37-01e9376461e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Consumer"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumerResponse"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "dab07a74-6aae-3ffc-bf34-c51f97978853",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dab07a74-6aae-3ffc-bf34-c51f97978853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "5f597e78-e6ac-3388-8410-31a8923c01dd",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f597e78-e6ac-3388-8410-31a8923c01dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "88ac8d90-8170-3e1c-b1ca-e2175ab2b95b",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88ac8d90-8170-3e1c-b1ca-e2175ab2b95b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "7225adba-4f3e-3695-aedb-6b13e8ffeb19",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7225adba-4f3e-3695-aedb-6b13e8ffeb19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "537e23dd-4c3a-3f2c-99bb-894e6cabc887",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "537e23dd-4c3a-3f2c-99bb-894e6cabc887",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "4352024c-3979-38b8-9915-0cdf610eaf64",
    "name" : "Get all consumers",
    "request" : {
      "urlPath" : "/vault/consumers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  }, {\n    \"consumer_id\" : \"test_consumer_id\",\n    \"metadata\" : {\n      \"image\" : \"https://www.spacex.com/static/images/share.jpg\",\n      \"user_name\" : \"Elon Musk\",\n      \"account_name\" : \"SpaceX\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"request_counts\" : {\n      \"proxy\" : 10,\n      \"unify\" : 100,\n      \"vault\" : 21\n    },\n    \"created\" : \"2021-05-07T12:55:42.242Z\",\n    \"request_count_updated\" : \"2021-05-07T12:55:42.242Z\",\n    \"aggregated_request_count\" : 101,\n    \"modified\" : \"2021-05-07T12:55:42.242Z\",\n    \"services\" : [ \"salesforce\", \"stripe\" ],\n    \"application_id\" : \"1111\"\n  } ],\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4352024c-3979-38b8-9915-0cdf610eaf64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "consumersAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "properties" : {
                    "aggregated_request_count" : {
                      "example" : 101,
                      "type" : "number"
                    },
                    "application_id" : {
                      "example" : "1111",
                      "type" : "string"
                    },
                    "consumer_id" : {
                      "example" : "test_consumer_id",
                      "type" : "string"
                    },
                    "created" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "metadata" : {
                      "$ref" : "#/components/schemas/ConsumerMetadata"
                    },
                    "modified" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_count_updated" : {
                      "example" : "2021-05-07T12:55:42.242Z",
                      "type" : "string"
                    },
                    "request_counts" : {
                      "$ref" : "#/components/schemas/RequestCountAllocation"
                    },
                    "services" : {
                      "example" : [ "salesforce", "stripe" ],
                      "items" : {
                        "example" : "salesforce",
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConsumersResponse"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "44d78297-d06e-32e7-91f9-2979634342e4",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/oo6ray16xbr23eyym440fbqymq7ppukmernlfw2ppc2axo6xs5mtlkgjhbqkuzmftgs2f0evz8ak2eo00jnxndf7i0oz0rq9jgxcc8pnxwvpnwenx612pgmge01b4c3x/96iq/kjg884kxe13njojxfadkvt84ohbldtjtp5gzv3967ug1uvtnjjiwg73fkwfeumf0cg59voedite7zfgs5kw1otoejnvh893vn3vapd5g45xg/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44d78297-d06e-32e7-91f9-2979634342e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "19abbde2-57b9-3a0b-8539-16a68f55fdc2",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/al987twif37adv38116iitln03ewun/rn1j/9ki7cm4whgihoubkm2otoh1fzyhfgamgjo9s69iecod5nslazyizhe2axzsconnb5ue4ii178vnpdt5cvngaukr3ddlclt3h7dp39p4od5km7tzm8r2aneqpw8w6wp395vrtaj0h7p4ev56hzjwftc4ghf7yca2r66be6qkxixr300nkkyu5fqo2yf/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19abbde2-57b9-3a0b-8539-16a68f55fdc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "05ea2bda-a7dd-39ff-b187-8a252e2b8be8",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/rx9ggfak4as7dern077gche9lrpcu3bec2rigctewai7z9tdu0xeig0upoc1xby084myah3659oes8ukiuh91nq2v27j5hvgg5k3uknsmrrg37blzcmjbc9js1496ehkkpe34za8r108y/151n/951vg7imv5ws1nvpxfau7xv2sc93ya8lurcbjv6jgusfw6sf5svciodkh3xkp6rmiqd1jam2yxwbj9qvn51wzkohgey3qdosut1zjoxzoqbiw4jeicw97loinig4r2viudoknysano6up4546ywj409zz9t3etld/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05ea2bda-a7dd-39ff-b187-8a252e2b8be8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "847d33c5-b29e-3ebc-af50-c73be6b53312",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/euqh/beod/5nclljq9jtui38q0hz8dftqoj52e1b3dxq8q5172k4ztbdrcnrumiv75j617nbhglzlb6np5fxditkhfziis7zugy8zvmexlx2tkc2jw8tgz53lqttzpbhgvpz8z5c532uduwldpl4klsl65is7syy87j7st3d4fss9j4gwk/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "847d33c5-b29e-3ebc-af50-c73be6b53312",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "efda57e2-93c9-3862-a275-3b6d53a3902a",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/p35zsi3hc7ztda8np7fr0umwylw4swsx78fiey7uy13t9r9khoscfwe8xz9soovym78rj0ezfwni63l64paeo7nq0d12atolvf9i5ciyma8doq0sfdagwxkc0zwhgraipcdsve104ylhu8/1fnn/lcqxnqz9z8brcjyjf6mynd4mib78zzhs6z6a8y8cqk29dk9w6r4qwsguv8cbtywlkzko3tsbxjfl4fwm43j0p1dpzh21jtg6bg8ciw6mbkjr2m7yh2x38bahbu9l56a56rv6jb7d7jiweu56gp40kn0o78e4c11fjnb826v/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efda57e2-93c9-3862-a275-3b6d53a3902a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "04e7e358-8120-307b-bf49-edba45a05686",
    "name" : "Update settings",
    "request" : {
      "urlPath" : "/vault/connections/j87ghlsiovg6qcsztevyfnovr05015t2qbubup61n4lcr94lpmk6x28z6bhg66i3xcltyfi4895r4fy95al0lqoiqjb81h7vu9j4edrvvqmzew72zg8du7k8hdg6v2pe/5ry6/z244jvs1ikp2yi4y6sw37ciz9rjzwczvw5nsvp0edij9fvi81ipdbx643ezi4l6e2a75i9yffzjuzqyeok922xyfh3gm8jxd6ngrjig/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04e7e358-8120-307b-bf49-edba45a05686",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "fc134e73-dfaa-3b12-81a1-98a25dc0d09a",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/amw8d3jlxh2d10ddmcd3wbc/1rq4/v1q5kvirqhgdicx495o288n9ej4a3ofgsy3w6e623tmwc74r0ub8ex58c4zbkpa0c6fqdxjcntjl9v5q4t8en7q5bovacstq5kllsc5k25wmyjn1g8ocq76uztly/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc134e73-dfaa-3b12-81a1-98a25dc0d09a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "277d5762-e2df-3b95-b2bc-f583436aac1c",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/jhsagjswrymfdnkp9038eufpkha2nk2nfl8pfl541tj338brwhnpmlnhouik1n3q7jlhletuporti5wwryi5zhxmhj3q5fsudk0mr5tdn51ldet4hzl1vl96div1shbjgm0ldnprvqh8153nig33cp2aa1xcdc5sw3d9u35uat4gld2ga0thzymdjuuoi9qj594inihb/2v1v/h77eiux35ec6er0mwcd/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "277d5762-e2df-3b95-b2bc-f583436aac1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "30074b06-06fd-30c5-9467-8705a7cec5f7",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/66o6mgut5a9tgqriabg7be95ygzshez97oo65dc6i9t3gdbzlrq4yuvb4t4usly7dv28aa4ql9cv8pe/7pr9/i4iyfhhpj4sq29mrybeticapzde6fac6amc5mg0hew9sf5c0s5zhoowzirhpdknlq6ajsuhiuxjwjetnzsukehuhkvjw4gbu1hbenvwiu99knm9esgf89vkcswsw5a1od6xzlr2sks5mxvdwu8ugn6rab30ti2gvgymqhq74qbmjr3o2fkrb2e6hljqbt/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30074b06-06fd-30c5-9467-8705a7cec5f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "1159cd08-5ff6-3370-8abd-c4ef7e225600",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/jxrzbfg17opfr52u099kx9om1agvodqvxm0g5q7pqyh9j16/le22/ljwcmyvlgoreem5d28puq1sedhojwstevdtsa56d8gwrbyykom1dunszib06h2ojxt1nq0f0ylhpdjnyfbq/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1159cd08-5ff6-3370-8abd-c4ef7e225600",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "009ea2f2-2c08-311d-bc9a-4fad1b4747b2",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/ugudkn9gnu4mktw3pily/7ywo/v53a507xcm25o/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "009ea2f2-2c08-311d-bc9a-4fad1b4747b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "c7273488-6f6f-3cb3-89af-ac4797f8f770",
    "name" : "Get resource settings",
    "request" : {
      "urlPath" : "/vault/connections/taqpcsmn22eucc0/72l2/nsmmlztec18hz9zo7ehfew42krzjne9w75afrxl3skgnnmgrv2c35z8d4sji16y5nl6jksmecvh5chqmkjxlu5nppqf0xmrmioynhq3bczocp7qoheok3mwkszps4bshjna2ldx2jajbe/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7273488-6f6f-3cb3-89af-ac4797f8f770",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionSettingsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "aeb8c42e-de1f-3ee8-8c0f-a9acb374c736",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/cbcwg8vnhnb1rau3melu8xg6f5uapltfe3um3/337r/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeb8c42e-de1f-3ee8-8c0f-a9acb374c736",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "4b039fc0-8dfa-31a3-9c87-a6ed510795c4",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/t5x8ptgnjcnufj8ahcnp4vntwiyr937ui7z2qko06p32si0xsrsztezk75gklmi6b51lxcec6ivdcbvjwligkomiq7vmzhxzg/27nw/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b039fc0-8dfa-31a3-9c87-a6ed510795c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "c1145694-a19c-30a8-9e8d-a33e28e36337",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/y5jjlfqvzpkkmymgshi5mee4viyotiikh6n7239qg3cbwlrxbut/123y/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1145694-a19c-30a8-9e8d-a33e28e36337",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "4b5d1449-771f-391c-a902-827f9262d31f",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/pxwbdvbxa4lbc8nwghnqx62ecdrlgqipiw4icr6vd8d998htgn9b02v7phl9va5ufzudgjk49k6mpemvawh8qndu8f1qsqhqvycaq43t06f1v9e6422v80ra5pgih2u8l9l05dg24hg70i0hgb8webgtwa1gehflbk2smy3z0x1670u1ha4h7s6w1uwd54uh/2p8r/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b5d1449-771f-391c-a902-827f9262d31f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "4ecc485d-6aae-393d-8b50-1804b281849c",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/7sin2a292u9/2nck/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ecc485d-6aae-393d-8b50-1804b281849c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "b37a1e54-b556-3134-9c74-540f5c5c84c5",
    "name" : "Get Access Token",
    "request" : {
      "urlPath" : "/vault/connections/a7rp8dl6bmu896flf9rmvzj15imevlut3vh6lw0ddouhlmmcjlew2rsh227n9hfrvvav233bz0two76ffjm19lr2xyy08vrc44rxphrtgdmg40nz3cld1oz1ha/lh8t/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b37a1e54-b556-3134-9c74-540f5c5c84c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsToken",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "5248b700-db4f-3f7d-988f-7a0d26a2eae0",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/bpr4jd15tnpshfvhtgwnmrm4vkxawqjjvq7xtgfujsvgj4aujr4bq757jwefq4225g8zcd4wttboj4l46ubftf9wo2qypo/ytiv/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5248b700-db4f-3f7d-988f-7a0d26a2eae0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "6075d237-e756-3039-88f9-a3d08e4a5672",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/2v14ig3fo1srd7xauqsyozhg4ornd666wol25ihl42hja74rjy50wqqumdt4yxe3klp8kj19wgolwcj3z9xcznnk14pwqa5eume0c5c2ya3a8jqprhnsp78ec64d27plmuaoo8u/6831/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6075d237-e756-3039-88f9-a3d08e4a5672",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "81338dcc-907e-3978-b67b-66d544f9bba2",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/llrchsn45vav0koxljbttj6jv1om5rrx6msziuqgm7s0dqj162p1p5wwdj2ox1zi00ximdk7sxzlvitk6dd6jiaatu7cz8kpsg136mzdpeipfhvwmiv86gclp929wczu5dty29dnd1ed3azzhzjqw5i215844xm9vnhsyphvzar0kvfjg3wpbq9nx4hhz/9y28/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81338dcc-907e-3978-b67b-66d544f9bba2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "33ec9400-91ac-301d-b9d3-0b4b3644f8a5",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/606yuig13mi5ywancowige2n5rtrsr6habf0ubrt9utxz9uzz9xxwc7erwozhgsj1kh184mocgxbzjnm12k64/i8el/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33ec9400-91ac-301d-b9d3-0b4b3644f8a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "f5a952d7-c3b7-3231-ad0c-7c34bba369e9",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/f3yb6c433d2sh5ooekrcyrnjoekc0ric1gn7mhr1g1mm2f2ra6r1csu758u7qjiy7kfh7d6561r4f5hu3wy5yz58pbzrakoahiklfji0hhl8af2jaz66km0tkwzgm4yyqvtrhx6s8c86xqbgnzcm3fs6dqay4h20nraitmfz0vr8/68j8/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5a952d7-c3b7-3231-ad0c-7c34bba369e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "d45c19ff-960c-3528-9c6e-fc8701641dd7",
    "name" : "Import connection",
    "request" : {
      "urlPath" : "/vault/connections/wstfjlb/462y/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d45c19ff-960c-3528-9c6e-fc8701641dd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsImport",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "212c9fe2-3a12-3e19-b6ec-f04cb1d95f62",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/2428tqj2pgj5i39bq6/vq9n",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "212c9fe2-3a12-3e19-b6ec-f04cb1d95f62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "153dc49e-af27-3964-9a9e-e1ee203734d5",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/6t2y8mn1etww2a8nzymjmfgsb44h2fsae6o5rpejz1mlznw6/rz33",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "153dc49e-af27-3964-9a9e-e1ee203734d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "c852fe98-c712-341d-93b3-ba740b611bb9",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/xkluj5zxyfgsugre40ukleayezz2h5p16xiacd32vchaqv3gtt4pblf8280okudgdmt83yilnmpmlg4iohsu3itqsh0wkgo1c98d3xo4cqbmy0yjz34u3ndpsi8so7hg5stng5380k34iek48wyz3jj9qadmg5m8qwvw/3kkt",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c852fe98-c712-341d-93b3-ba740b611bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "f83c2188-0e72-36fb-96e5-76acf175ac5f",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/unwm6g3qj3k/het5",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f83c2188-0e72-36fb-96e5-76acf175ac5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "5875055c-16a7-394f-911f-c3e87f458bfb",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/6siza5dwyxxr811wg0i9l7x4btn79bcsj8jjo71qeex1n7dgb90vgognrnibgctqy8340kk0gu/am2u",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5875055c-16a7-394f-911f-c3e87f458bfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "fedd5f72-5821-327c-82bc-8e5da2d56f65",
    "name" : "Create connection",
    "request" : {
      "urlPath" : "/vault/connections/j6wsxmxyree8rps059liqv0zhkx86z6jlercd60mf606rgeh9kv1xfuxxkex4ima4hjfs3a6kr1jrllywpp1peyo5vncrocbckcta48hccvk72boabyyayzww83oxix29a22zx1bg6blbsi5eamj0sll/p487",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 201,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : { },\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fedd5f72-5821-327c-82bc-8e5da2d56f65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 201,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "78ebc4f1-d180-34be-957a-faef12c012ab",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/pf96s7rzdrdmqaawyirppd28ynw1tvxarlcd3brnjkl6omu83cgrpwcpms5x3kpdtw0ze34vn6vvc142sot6cv1xoke0/168h",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78ebc4f1-d180-34be-957a-faef12c012ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "a4bf0605-2d70-3683-b333-138ba5af0dc3",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/bdknbd4tcv8s2g0vqg7m14d7oo20hr9n8nyah6kea26aoqw04ytfw61/8hx1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4bf0605-2d70-3683-b333-138ba5af0dc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "699dfcb4-c873-380b-8258-57ec945aa945",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/tt1t19i9ejwz68mtuad3ab2/80of",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "699dfcb4-c873-380b-8258-57ec945aa945",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "9230ae4d-c386-37bc-992b-13b7091d6ac8",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/idygpggcb5198skhi985e2kpk5qvfv8vkyx9a55v4f526kikqg0hruebpb100w/rf2u",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9230ae4d-c386-37bc-992b-13b7091d6ac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "0b7bebe2-9ff7-3656-8bf2-f5aa113edbde",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/n1phabjzfr8twp028szh8jkkxqyt5lm3k74tpfknn0iu2k9v9gpsxqdjucrgitbaomjpmbyjqj0ob2kdkj1y7frg8xgjtr0biitue2bykg3xg/103a",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b7bebe2-9ff7-3656-8bf2-f5aa113edbde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "c3016ad0-1c83-32a3-bbb0-93a67a9372f6",
    "name" : "Update connection",
    "request" : {
      "urlPath" : "/vault/connections/xgdr7pfuty4n844zoobqs67hquoswgmdwhiixczerrcbtx4dd65ngz1iwdfus9rtwdq1jxtzmkj1ecyo1trxtmrvu9ggv50phbwwwbwwjpjov27d7svqbj9i383dkz1was63h3pxa2n40p6zpk4xrcqr9789vcsn18f3tr3s3mv06kon9ha9wzfvqh8j97v1gr/q8b6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ {\n        \"options\" : [ { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : \"GC5000 series\",\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : true,\n        \"target\" : \"custom_fields\"\n      }, {\n        \"options\" : [ { }, { }, { }, { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10.5,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3016ad0-1c83-32a3-bbb0-93a67a9372f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "d92e02e7-ac87-3a35-9249-9ba1894b403a",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/ksxw3ca4albrkj5pusve5sbnpe2hh8wnw7fkw62dp51levw2ddyu1e8surj4ccjx4qyobs6b5xaq3swyyygkxt0gduhrordrjbwt9ye2ttan7x5owx5tdbu3bs0odc7e9cf3o4e61lczaj00cdmkgeht7obua078zkv1xxan2yyrwmvyh2bmgmr2penzpf33kclfs/mdpn",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d92e02e7-ac87-3a35-9249-9ba1894b403a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "587acea8-b635-3c07-b3ab-d2782fc65485",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/99gjrwhmrumtsn49jtkrfx5yjwbkkgp2t6vwan6akpox6wpdpp1w69t0alojnta496i9lomw9ldvuiyl0sc67yh3755c9wrb5bvz8saxvrju33hl1kj4i30bjkut/93c1",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "587acea8-b635-3c07-b3ab-d2782fc65485",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "69237a72-a44e-3221-8093-1189246487ae",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/x20bvqyvm5mz0rkwhu2qremok9bq74sf9cxxwhp5jxxc5g7shfo8j8gptaw6l/9wwr",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69237a72-a44e-3221-8093-1189246487ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "636fc09a-47b0-3c52-a8a8-61d85848179a",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/gcwz641oitfot87zxlzakox2132d7rpnegenoctbxgo3b62gdvlyvpfob9hob2l8wq2vo62mguwdj4ce71oyl2wc5suk5j54j9plafwwg3f4o83t2jv4pjs193wnxd46dvt3nuelxudbrkz8slqiowi00s0/6c26",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "636fc09a-47b0-3c52-a8a8-61d85848179a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "45c35181-c160-3ad0-847a-52b6706b364d",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/xgcvjatgndeb77cgqwa6ibqcj08f7zsizkh66zyixct2ah4kbnn47xpbxvznt9ze/81az",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45c35181-c160-3ad0-847a-52b6706b364d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "8e5831db-6181-3ec5-853c-5c2938b51b1b",
    "name" : "Get connection",
    "request" : {
      "urlPath" : "/vault/connections/6y9fmfsljfyexgeawux7khpyhpi63cvbhzyw95ka0l0yuf0mgwxljrf/lt60",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ {\n        \"options\" : [ { } ],\n        \"id\" : \"ProductInterest\",\n        \"value\" : 10,\n        \"target\" : \"custom_fields\"\n      } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  },\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e5831db-6181-3ec5-853c-5c2938b51b1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Connection"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionResponse"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "abaa6e66-8096-3681-af73-42af43d55238",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/mmzp5zwltsuju993cwjd86r9ak7wtuen5f3dc83sdbfxxc7lfvf9g11igq2y8k2el5b59be82kqk8yu8xxhqs4h157hrhnwipg01mzr40jugn60xgiy31np8t9kr7ek2psiywd0h700lu/041n",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abaa6e66-8096-3681-af73-42af43d55238",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "1edc30c9-5599-396c-be7b-c64cb1a1cc70",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/s7omcxcy2wt0rva6gnbjwtz7y2g0rpdxlqwwj7qn6bgs0lz97e125bj6fevac7nagwjymxtp0j38hvn12nzgauevb9/642n",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1edc30c9-5599-396c-be7b-c64cb1a1cc70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "b12acd63-0a61-355b-80da-792e5436444b",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/49950pzbhlxdz/vdbh",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b12acd63-0a61-355b-80da-792e5436444b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "3d9b7138-e7c7-3a22-a1e7-57bf3a879ed1",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/l8v1wwf4ivu59wgcdnsxqcuremxjltfrbb1ulauey3t6t/t1v3",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d9b7138-e7c7-3a22-a1e7-57bf3a879ed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "90b27bff-9d4b-3c01-9683-3fc39bd4e4dc",
    "name" : "Deletes a connection (application/json)",
    "request" : {
      "urlPath" : "/vault/connections/7fhyt8u5bczgayydaab4k0b7e51tx5zmq9gu1e5v8nar1t0bljx94e0g5z2dq92ss6ihjxeh5e3m6lsioio48fa3d1e4sj5ge8v4rw9f7frherw1sshns2zhwd04bm6w2ikq/8904",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90b27bff-9d4b-3c01-9683-3fc39bd4e4dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "026cfc0c-d608-317d-ba81-59794472f729",
    "name" : "Deletes a connection - 204",
    "request" : {
      "urlPath" : "/vault/connections/bacjppvtxti5mrzu6puaifzf1dpyiijf9gr9k11dnjubq14dz2vhquyerf83vyr8j8zuvpr1l8owas0qquqspb5cy331zejhwy3099fej380fl58/r9wl",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "026cfc0c-d608-317d-ba81-59794472f729",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsDelete"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "13355236-9007-3e37-8f1d-5899cb343179",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13355236-9007-3e37-8f1d-5899cb343179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "23bb613b-bfac-3ce0-80ac-9489b0bd6409",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23bb613b-bfac-3ce0-80ac-9489b0bd6409",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "cd64c0aa-ad62-373e-bb8e-92263fd687a4",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd64c0aa-ad62-373e-bb8e-92263fd687a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "2e997026-1fb8-3b01-953a-81f2135a67e0",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e997026-1fb8-3b01-953a-81f2135a67e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "31df30c6-f62c-3309-8769-1e04339c4526",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31df30c6-f62c-3309-8769-1e04339c4526",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "1400526f-fb70-34f1-a573-815d058df5b7",
    "name" : "Get all connections",
    "request" : {
      "urlPath" : "/vault/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"upcoming\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"live\"\n  }, {\n    \"authorize_url\" : \"https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>\",\n    \"metadata\" : {\n      \"account\" : {\n        \"id\" : \"c01458a5-7276-41ce-bc19-639906b0450a\",\n        \"name\" : \"My Company\"\n      },\n      \"plan\" : \"enterprise\"\n    },\n    \"subscriptions\" : [ {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    }, {\n      \"downstream_event_types\" : [ \"contacts.CREATED\", \"contacts.CREATED\", \"contacts.CREATED\" ],\n      \"execute_url\" : \"https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}\",\n      \"created_at\" : \"2020-10-01T12:00:00.000Z\",\n      \"downstream_id\" : \"5f5f5f5f5f5f5f5f5f5f5f5f\",\n      \"unify_event_types\" : [ \"crm.contact.created\", \"crm.contact.created\", \"crm.contact.created\" ]\n    } ],\n    \"configuration\" : [ {\n      \"defaults\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { } ],\n      \"resource\" : \"leads\"\n    }, {\n      \"defaults\" : [ { }, { }, { }, { }, { } ],\n      \"resource\" : \"leads\"\n    } ],\n    \"icon\" : \"https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\",\n    \"created_at\" : 1615563533390,\n    \"tag_line\" : \"CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\",\n    \"enabled\" : true,\n    \"form_fields\" : [ {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"instance_url\",\n      \"label\" : \"Instance url\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : false,\n      \"type\" : \"text\",\n      \"value\" : \"https://eu28.salesforce.com\"\n    }, {\n      \"custom_field\" : false,\n      \"disabled\" : false,\n      \"id\" : \"api_key\",\n      \"label\" : \"API Key\",\n      \"mask\" : false,\n      \"placeholder\" : \"\",\n      \"required\" : true,\n      \"sensitive\" : true,\n      \"type\" : \"text\",\n      \"value\" : \"123455677\"\n    } ],\n    \"revoke_url\" : \"https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>\",\n    \"updated_at\" : 1616662325753,\n    \"service_id\" : \"salesforce\",\n    \"logo\" : \"https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\",\n    \"id\" : \"crm+salesforce\",\n    \"state\" : \"authorized\",\n    \"has_guide\" : true,\n    \"resource_schema_support\" : [ \"leads\" ],\n    \"settings\" : {\n      \"api_key\" : \"12345xxxxxx\",\n      \"instance_url\" : \"https://eu28.salesforce.com\"\n    },\n    \"auth_type\" : \"oauth2\",\n    \"settings_required_for_authorization\" : [ \"client_id\", \"client_secret\" ],\n    \"website\" : \"https://www.salesforce.com\",\n    \"configurable_resources\" : [ \"opportunities\", \"companies\", \"contacts\", \"leads\" ],\n    \"oauth_grant_type\" : \"authorization_code\",\n    \"integration_state\" : \"configured\",\n    \"name\" : \"Salesforce\",\n    \"resource_settings_support\" : [ \"leads\" ],\n    \"unified_api\" : \"crm\",\n    \"status\" : \"requested\"\n  } ],\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1400526f-fb70-34f1-a573-815d058df5b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetConnectionsResponse"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "7c33b2a6-f723-3f24-b03c-2a119d4c2eab",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "x0sv83egxw6ua2ufbg1qn6lm1qulc2pjgiqnsq4ztdgfz9pdfbnwe47"
        },
        "state" : {
          "equalTo" : "Colorado"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c33b2a6-f723-3f24-b03c-2a119d4c2eab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "a2cdc9c9-37ed-334c-9473-a67c7c5cac19",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "2cey37irzyuw4kv3e7rzgimzxrvniwdrrt9dnohlwixcg56lr8"
        },
        "state" : {
          "equalTo" : "New+York"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2cdc9c9-37ed-334c-9473-a67c7c5cac19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "aff021cc-957f-3a3f-a907-6766c9edb741",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "11w18rhed7n3fv88xe78byryffydzi4xrb0x790eehs0aquwo0lnlg42qgbzx0bggkjfgorec"
        },
        "state" : {
          "equalTo" : "Utah"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aff021cc-957f-3a3f-a907-6766c9edb741",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "e4ef3272-e104-327c-8136-6858b9ec295d",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "5q2vr7ri4pd8egbqdswhf5vw3mls4yt0cejge844epdbzpv3zkegj1i8ds415imz0knuc5mfd0db4mxhftptwntnkuel0sf9ax3beoy7nnd8qf386n"
        },
        "state" : {
          "equalTo" : "Georgia"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4ef3272-e104-327c-8136-6858b9ec295d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "b1e436fa-d995-359e-8f7d-30b1947fa8b4",
    "name" : "Callback (application/json)",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "code" : {
          "equalTo" : "jsf6xyqg89vtmbcqhw3qo0zbkbne7025npio2x46tis6qy6epdg3vqkve328"
        },
        "state" : {
          "equalTo" : "New+Hampshire"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1e436fa-d995-359e-8f7d-30b1947fa8b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsCallback",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "8fdd3797-9f60-3cee-aa2e-c608c1c28eff",
    "name" : "Callback - 301",
    "request" : {
      "urlPath" : "/vault/callback",
      "method" : "GET",
      "queryParameters" : {
        "code" : {
          "equalTo" : "uqcpy4v02venw51yywr8nvz2g3v9aq2hsd4k5le3n0q9f6mpb01tetw5jig3fo0u0uitdia0wqaecn20w48brp8d2gr5cpiof2bopaackwy7al3usdc5f7fiffctxdw4zmy6ea4fva5nqny8pgn462dsa4iu9vpdu87qri3p9fvi8anembonjqxvxv"
        },
        "state" : {
          "equalTo" : "Louisiana"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "8fdd3797-9f60-3cee-aa2e-c608c1c28eff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsCallback"
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "e8f06a47-2bc9-3334-9fab-0584c23ee29f",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/vv4q/cu83",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Alaska"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F045439"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8f06a47-2bc9-3334-9fab-0584c23ee29f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "8638df3f-3b01-376f-bda9-585cf5c4c0d0",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/ba5c/c1dc",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Texas"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F215712"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8638df3f-3b01-376f-bda9-585cf5c4c0d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "1a6826ef-0834-33ef-aa00-0509df571065",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/8o0x/9z9u",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "Idaho"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F754425"
        }
      }
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a6826ef-0834-33ef-aa00-0509df571065",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "e9f3478a-9b1a-39ba-ae55-75aff0578b6d",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/mt4m/p460",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "West+Virginia"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F054365"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9f3478a-9b1a-39ba-ae55-75aff0578b6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "db138170-41bc-3ee3-b5b9-a3c032566de1",
    "name" : "Authorize (application/json)",
    "request" : {
      "urlPath" : "/vault/authorize/5i9a/f00q",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "state" : {
          "equalTo" : "California"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F443998"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db138170-41bc-3ee3-b5b9-a3c032566de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAuthorize",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "b8a2f30c-b878-3f9d-bbe2-401612141209",
    "name" : "Authorize - 301",
    "request" : {
      "urlPath" : "/vault/authorize/2tt5/98du",
      "method" : "GET",
      "queryParameters" : {
        "state" : {
          "equalTo" : "West+Virginia"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F736233"
        }
      }
    },
    "response" : {
      "status" : 301
    },
    "uuid" : "b8a2f30c-b878-3f9d-bbe2-401612141209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "connectionsAuthorize"
        }
      }
    },
    "insertionIndex" : 119
  } ]
}