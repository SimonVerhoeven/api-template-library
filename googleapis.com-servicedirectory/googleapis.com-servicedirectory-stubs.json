{
  "mappings" : [ {
    "id" : "798be340-2b8d-492c-a9a2-63cdcfb615ba",
    "name" : "Tests IAM permissions for a resource (namespace, service or service workload onl...",
    "request" : {
      "urlPath" : "/v1beta1/8u4f5ipuc5a0g8s792ncj2:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"w9v2n4m058p9vp2bsrmq4q5o8l9u3sfts78jbptzcz1v8bg1o99evyqr36cq4o3xoezqk6gokgtt6p3t9eiqpnk2gclfoi1bbp5gwxey0v4v18toci7cpmfd89krn6h8\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "798be340-2b8d-492c-a9a2-63cdcfb615ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.494001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.registrationPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "626c5be0-c713-4688-971a-d664dd4d4252",
    "name" : "Sets the IAM Policy for a resource",
    "request" : {
      "urlPath" : "/v1beta1/9adtttw1c3fq:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"k9mphqsm3vx55p1igomtterpvf15zbfqc11i63htlllvuuxix6a5z5tus96ti9tbgeqr9i9ipbdqzaydxq6kdllkdhxwtb519yunqv8e76s6y0bz1szo2p9ey826t7b50mpstvfc0uzuc3jh83s27oi9\",\n      \"description\" : \"Aut expedita odio asperiores ut. Occaecati culpa voluptatem omnis veniam qui. Animi ipsum eos ratione omnis atque. Et molestias quod qui veritatis.\",\n      \"location\" : \"l0oqot0u34n86u6on28xgckira42opjnnwxga58o04fzz7zgfwiosy7v961sktk0t4a4wd3gc6reuzhv48xotpwr174xn4razydp7gampaex6kj0zc9h5pmfwztjd4hk80a4lespfct07au0jee3nzhnurrk1z9m9s\",\n      \"title\" : \"Quam rerum error in atque qui iure.\"\n    },\n    \"role\" : \"blu0ak7hld9y2shin1s9tfxergcmetrkdooute4affvnl5877lo58ms064keb0r3gy8e83a2nytr5ry1b2ta9nd356trwqfsqnisw0p17cy3gml6wsqf5tu76i768uifmrz519g79veqoplv1f0gfxl7s8nu8lpz9iq4\",\n    \"members\" : [ \"pdkqt0ybh8p4cksldt4crzvs0cildtjlw1sfr1x41e0v7f8elarvi625i3nrgtlb94dxw1k3nz29v55mw0353pa71fqmlf6mvdjsqgjgb3htvjf5mttna09w0804ei2ee0vtz9i2uegscgiyf2nf2w1drejzkz9u2tk2bpdznocw5dyjv0wr80nhixuz6\", \"7i5aa7c6u3njx65zr4kgr4nvwy0a1nrkpyfzfk1mt1kh4ls58xfpabmisug89fa6n5rpp33u5cb42qglbv60p13hsk16mp8l84trl38f5z6d7n4z3n8mc06254u3ouc4c1gis3qu12b43d2jxgafb8j6lrbcjap64uupkm0hy1\", \"a6h9p2om9r0fyzm4q1fhh903w3hzkamvruaikb0h99jjy4dh5pw6so9eryvgrv5qc4gts9o\", \"qhsdp29ceugjy6wzj2444ewc7nedoxvv44vq5ok56q7vra9rpzozg1jtf3\", \"orw41c4qmyzsqbmfnqvpq4ib08z92q71plas7jaqimpxq85m3r4kpvsxnllr8zmow6v3kzps16kergljbhoc56s78x3skblc3i55kxk31i5ffnzrsklinw3i3y7zmtnaw9rj8tbdkay1ckiiyos057h8ciqgjvd4n8o8nv4o3yc3icz1d6hph\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"k10rnst8xxp5v5fra9quxk2wt6m4s6oeywtzygi4piwjwqzztg3ex24e1wtfz1bz7wcsjcis18aow87rpmcd4zjovlfrnkx67krzyymq5hydt9kenffx3b42qd9p04iyemcsy6h\",\n      \"description\" : \"Doloribus minus qui maxime dolore voluptates vero. Et unde dolores consequuntur. Qui est minima voluptatem. Aut ratione voluptas non quia saepe et.\",\n      \"location\" : \"5i5ua6vlh1oh55hja2suvl0vvpwomxn0htjsz3zwwdp6u1502m45o79lt7y6fnngfv5ueje\",\n      \"title\" : \"Dolorum in ea excepturi optio.\"\n    },\n    \"role\" : \"1dyyvf3qzjx6j7mamjt7zfz9otsbzxtkab14r004n50j3x8lddgahzmhklq32odk0l15dj6rynsj1yorj1dqfbk4v8pdlhxhr0gcwpwrb\",\n    \"members\" : [ \"2gd2nmxac18v8v9op30wejwl7sif16gxyv09ezd929w16p0pb64q2z352bmrlhezuedu9i328yiv9yzqdikc3rmrzro0r5u9okg9mczz9czskakqkgnh2j14m3u6nrjv0rxnm4alivbs26ljrcnjtk8cuug5iapc3qkaeinzubaf9pq23yyahl8ijcslaa41l0kkkbj\", \"xv3v5mmk7eslgtvfxqy3yxftd8pa3rixsl114g79lfnbp0gficn4tm3jskmf2elutbnazm626kosz7aua279t\", \"cgptbmozcf5hbzh2fs6x7m4zyq78770apjuyk2t4btmfzmzuqqft6b5vo5ko0p2jfqvr18zk2q59bnv8utxfp3hmhu92oblxhvgjwguxl0torrseqeimmf76jlx22imfa4uubpxw0hubwqvfww0mg7gqsqwd2evvxgb12cxl7zr75477i35ccio5a6p7s\", \"vuv6n\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qh8uovgvrro77g5m68yzl48ljjmlz6mj2i6weyp4rkqed9wcb13ljh7iipaizq5ukdczuqvzrr6gxtzl0xnrdev0nu7fwvufqg8974fxq001rkvibc\",\n      \"description\" : \"Odio tenetur adipisci similique illum quia. Omnis rerum temporibus est. Commodi voluptatum quo accusantium quia. Sit consectetur rerum sit accusamus error est rerum. Eum cumque porro enim soluta et.\",\n      \"location\" : \"lrac5q5h47dwxvd3c91nsm3zph5z54w7elwxithzc2f4n25fx3l5\",\n      \"title\" : \"Aperiam nam aut delectus perspiciatis perspiciatis.\"\n    },\n    \"role\" : \"ylcpmeifblfej1wpumxqjm8oyfnmhvz911bi4nlutx43xqa3l0s\",\n    \"members\" : [ \"vaivjzsosdsim2uzuml4bj4ju4s2z9zvwc5ps32a92kjgmfdm4ms980tvu1yv2c7r0axbfx2crzwg21udcg5djj1mav08utscbe0e6tdzwlf5r1odgjm8sl9a4r\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"osmglz0m4wemdfcc6nytew7meeii4udizxqj16hxtc3m06wp3o0v77w2xcxpi76amf3hmqmucy9km6euygrrwx7iksvjorawyzu0j6w2zw77xbin4x4\",\n      \"description\" : \"Aut id et atque temporibus et ex sequi. Quibusdam facere aut qui quis. Aut sed excepturi et veritatis omnis et maxime.\",\n      \"location\" : \"kha885iossyq2tdj0zffb98x8dwz8i615h4ptpcluj5eg5u1qpwcdf3nfpyxwv070j4ftaupwp33u4uc4cgkk076dq17vggnnc2q4oqhmulqto3e4cpjh8o7ghqsvxadl\",\n      \"title\" : \"Debitis est excepturi nobis ipsam.\"\n    },\n    \"role\" : \"s36amdf2vdpr3923934sdeo56b4yrip8cb3h6x2khrn2bqaihvqmmhj702iiw0sl6jij9o5fppfg2602a8c4solgkx5brfr6vgfi0h5zhge9y2dcwo9qgwknl2p1oko6646cxg0nhcs6uhmrmhehockp8aqhjjmqk0ac9apsk9s1x8bkxhjzlpvmth72cep9\",\n    \"members\" : [ \"rhs5pwvxl6y3gr7f5a42fk3trkhiidrz746bbralu4m6pyszp3kxkdoi9yqx7gm2xnwzk4yf66iajfaqn8ix2mvjoujzawguf9q8wiajhx4u4zusl3xypn1nd5nvnhv67uo3niel\", \"hkutb6mejge7oi29a8w86ieilq5mksd2yi1yl6j6ry5mo2785k5e1lijcgjlgiee0heopdrd9lffum4p3jace96q2uy1a2s0zdwn64do1joz370mcmo2f8bntg\", \"ins9uoohoz8xcvs6x79h2a41m1mwo5al18pcxq531d2w9u5otv3u6paamb7ao5c7vbslrqe4zy3zlrlrba45awbxqp1e2uqrmo6hbdcdm6bttgmenuqs7bntdv81lgja93llpe\", \"y4ae1ykzmaat51tv0iaobt0gdtwa3vlyfrwedxc46gxriu9vy506wmuuyhp5pht8uqn8odxf5bwv4uptrquhqs4eo9es61tefhs4i4wlgz13deng2cfnd\", \"02hmdnqh621fgp758bdyn2i0ybbsx5l94vyfq0x2ak8yvx3vzhsec3938227z9c1raz0kqpw29kis36jjyvhotc1fyrd9jguomjm377n9pvcvtca7v073e6b7q2bnu8vx05lruf4cfn092s\", \"oi8sdtj37kar\", \"83b68hli3f3m6bdrw8jagjudx8vdz38eqtcx4fv6wp6det94dr4rbmh8904r1ab5kvxywazo7tvvvd5n69n0yajbdn1lygkxx9vjxa9gy1865e4kcr4r6h3x75kvu1fxoy863hvpb2rngxvwtonutiva92jhmxz2dvqxplek3fv760iv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1i6qkgfdbl9ljrrjql5vckvic5u5d0ieyjso0nv1acakj1h95qash6j5cxhvxmn84uuhj8108itiom3bznxts3rdw5omksag8yz\",\n      \"description\" : \"Blanditiis atque quas maiores illum sit. Neque repudiandae nihil explicabo quis voluptatem doloremque eius. Iusto eos similique eaque quia debitis.\",\n      \"location\" : \"y6vj6bpzbecydt2bhql2xw7fmalxsnu5ympe4gjbd1vw34b5jfzrznyxqg9ouhc8pkcvalb3w6j5prao1r0dqjfh4eb4u72xf3zqwvjwfm181j3l97byfy4z1020tzwqtgrnpw5la81y9lfn\",\n      \"title\" : \"Optio id minima et est ratione et dignissimos.\"\n    },\n    \"role\" : \"0c59xc1g3tzbvj0eulewtx1g10tgs2dzvs3i8q1o7dxuai7uptnrs44q5wodiie68tsk\",\n    \"members\" : [ \"hda9h3dglnoy2f002jqbrcj15x97chrz00ov4gv7n7j2\", \"j6bvsvtig7wpo7bkwoe8f2ajfvqoj095vk5uhj3z13m2of3ui9y0u2m8z7qswnspqsgbq86l6ied4thyux5zes5jyo38tpq5w5oy352207swecx7rd2es5jp766u8at5594rjirp1m6d44f1us6ywv8h39942qjza5pd83mofpb5rq75qbctm4o38o8rnem\", \"5wiq8zex83ce41f8v3pp8m916tim286nj1ef9jsmi5l7\", \"xwlspsmo2us9rdkq\", \"3n7kqe2tejwzk2f4f6d4fsl7mw6ihmj8ch08j404pq8oscpl5uymq6ukhcxux39bl70k5u4rt9gz8yufi26dapino3rkfblxnf789b2zgrsuwohbyj260lep3f6ablxribpg1vus0uobd3v8193ev\", \"rgqmb0wh0rlfrzk5qyfxyhp5pk4zjombituw\", \"1e0akbb48kb6nby5e54jh52ofmoqj8hw2bu7hwg5y6b0bk34o0f5rslojotvx5qwidv3x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"19bv953irbdgylvflmasvuayw6rgwtmn9eyx9xlkwtruk5xfeoc\",\n      \"description\" : \"Iure et saepe. Veniam dolor cum. Quis cupiditate error molestiae est dolores placeat.\",\n      \"location\" : \"m8fbxgg7ckuwhh58xddvn237vx0wenvrju61yixlpvz27oxkbad6dz4x0fsb0p6ibbfq7r62u6f\",\n      \"title\" : \"Maiores quia et distinctio suscipit sequi error.\"\n    },\n    \"role\" : \"fgymbcn76xruknp7d8p7umbf33myair3vtctvaqcmkfafmrm2nlk6v9eyad7qncyn79uboo1cou0oroiiq65c2g6g5t7u8a0ci3chdkmfj5gkgc3hj3p2nfdas65bbattjzvcabvtsuf66td28nt3hvpsk5qn40l8o1gomxw0ba4\",\n    \"members\" : [ \"9d926bh7d5ixor3xofv54zr7xnf7pab8rjypth3c5ohdfbh87qa8cgtzkjer7hbznvwca6h84x558isciwj4umftsjc\", \"5ql9vsljsel2dy6hhm65cg6okditgn0qro3tgbussq5b8f872lvqr262jqrhpj11ds34vdy3yp8tzns99r8c3t9dtj92f4xjyue3plw7\", \"bc7a94ec7a6axd9h1q6s4x6ebm8gtvwo17n91whb3677svvkjkbhva4vdncglbnqgm5ecctso4n3ykke0ttuj28t3ba93421chbwyheerf39hyb7rc37\", \"i1di3vfnhmurz3w82rxi72bvdvdnulprvm069aa73faze45qzx25hy7rj8n8aln0gfr545qha1z2cmczmuhcjo1nth8z7wwu7cnuyynsbdh50\", \"sogw4k8vz1r6lra\", \"idl4r52pa3ymkh1mkjxf57ky8uxty3skjxuknc591h23yxgg8g4193umbokgxpogk1gavaxzjofr3oorcce4v4oqv9p09u2sz56em\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gf6nf2t0zzjr1wrybg6dwr37s46mxdq0ix0it6u5bhs13ni2qlrvz3m5g34k78pq6wgs27jn7a8sb7fnw1rf46vu8ay15ko7b3unvpxgt7m8bqllm4kh7heetc61xj6rm669dcbm2vw1p3\",\n      \"description\" : \"Libero voluptas voluptatem. Cumque dolorem aut at rerum voluptatem eaque voluptatem. Autem quibusdam dolore nesciunt. Sapiente nam ut temporibus rerum.\",\n      \"location\" : \"tap2b9l5cigpp3kzmvt547o7hs5sp27do410fe6hecbevephse65f0sinpt2fyjk7hvnnw204a8peqpsklr088xaicdz4b46980yevxvaih2u4l6dpw9qviw4szo0gwapyzutyi9s75gyo1tftixag5r89ble4t5d2gb3fi66uo032gwxu7n\",\n      \"title\" : \"Voluptates aut ut aut.\"\n    },\n    \"role\" : \"ithvo6jpnuj2b6z\",\n    \"members\" : [ \"cv9y5afhufqbfxx2toa3nyvg2pyq5bg1anoh88p5lsdrlnmk2iqysvcw47fp1nftr8vtzy\" ]\n  } ],\n  \"etag\" : \"velit\",\n  \"version\" : 214886686\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "626c5be0-c713-4688-971a-d664dd4d4252",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.493899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.registrationPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "28c78a43-e209-416c-ae55-2c480863efc9",
    "name" : "Gets the IAM Policy for a resource",
    "request" : {
      "urlPath" : "/v1beta1/fa5rfmdznru3f4p9iosgi7ifx3gnmfdii448xhk8k9ygu9zyozwla9fswjqb18olo5df1csxiw0m7ueynofl6mestxywirdb1m8dafv4k791fkv4k1ak7wvvlymnnmi16ach69fcnut2ffdwygxt2ge10kq797egqly:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"7p6hblcbrwzzp3lvrgd8p2bv7w3oup6t78li2rbj9cycegmclhm5nf4tlo7mxws8c1y883r\",\n      \"description\" : \"Nobis maiores ipsa ducimus. Nihil quia laborum dignissimos repellendus facilis fugit sint. Nihil sit fuga. Debitis corrupti ab dolores est. Qui corrupti ea est unde ullam exercitationem repudiandae.\",\n      \"location\" : \"p0gydsqzurhwu1auu8zdoc178nagl79f0bx3fr1szch9gsyameoqlvlcvu6sfp2im9z6h3mu5pvpfpu4odsgqdpxe2gu835xlmv8sshudysls1wtxxsoly8sv4plal8dw5p5w\",\n      \"title\" : \"Aut amet enim quidem.\"\n    },\n    \"role\" : \"hik98h7at93r424bzab7tanm29uj0bt19cxll9zu30fmzradsu1f9a68qvirle4x6w2zdm6ub54csb7z3lps3p1ajcwpu90qtoebipexhpti22n2a0npb1we4q50el92hqemaitfqiv380y8du2z9wnrph90\",\n    \"members\" : [ \"sdbftkrd7ziq8s8dbsuumfqq24249hbew9z9l0g69gc7f6dp8pyozvhtgx9fd2berv4dryt3dl8hlnhvpe1y34f9vj3vf3r970albm400udaymrs5g3akjgrzf16l14r4gwv5ethxvplv7fjd3rix2s\", \"oppakk1nb5f8bjtaw0jjafmzrfjsabqygul9xf6qvxjlkct467w9svhdb6992eav89sjxw\", \"z7uonm8ssh81ftv67t5phj6j73o2dswma6e22ioq1pmujf9a61zeujs2forvy7ikue\", \"ru5axa7jx2q0kj4wawlmi7l\", \"4j7tawi6igttoumxxstfzhwaduv7vwl9gztjhzdb3gwfx4yp0wa41bh7houbkrvdvdhc8p0loumaoeitxcnrxyz3cnex5xulevwhi6eslqg078v77mtywzenplz905d29mix9zgqrjz74\", \"psdya14rizvkfpx\", \"8nz7fb9ji74mj4mr2m69snh7l285hw8sdjixqmzkvb3g8ebjbv9zut7bffnh00t6gnp90g58b5nk7h\", \"5cov1r14ofbm2unmxp38dxudsm02ryqsq4uhcu4xou5mcznabd2umyhh6li76zxo\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kdx121masd5ppfzel2w34m95cy8mfdtztpuijvz5izoo3hgosiiurxj0yd44jwpab67v78fo5s5iihcwcxb7481hntu9xj30849phxlgq7b8oo9az3ri46h5wspq4mvi5jjzl5nsosy79p52ld0oez6\",\n      \"description\" : \"Repellendus voluptatibus voluptas. Consequatur eum autem. Velit ipsam et mollitia. Unde laboriosam laborum porro et quisquam doloribus velit.\",\n      \"location\" : \"dm59ti05x1v9pd04nz\",\n      \"title\" : \"Itaque aspernatur veniam sed voluptates rem dignissimos provident.\"\n    },\n    \"role\" : \"w1sc7djn9551n4r48soxno3kxoq457h62n9m77se6yp4co736nzq8svtqo1horkico7nki0vhupvmhd9yj5sx7j6zytvn37rvn7nta9khi6ae1b1sr3zk2nqw1azl7os11subct4b6n9gnfggjxnqvj1nq363vq58tfwqeu8y564s7ftb928fczkudwq5sg\",\n    \"members\" : [ \"185wb4ui4dlo3lj54x6upydf1mhiimhwidusgglvlmvy34k3mubbewudxfdop0a3hv46i68makvi2edl4xc0yusveomsp6xwwt4newnp2lwic5vis7rg260yuw2kxw6nd089zkalyj50r31vs8a9y7aqkkrm1zm7ikq5iic\", \"g19ayozznx9keid52xrac582dxq4vd37euf5w11zeofv7x5v4gkm6kbpz5r80x1rxstnzjz266h4qifhgfvsb\", \"6bgkykq3orcf6vj811446wczw3ds5zldan5m2btlf8viah1apvkcezj3idahz2u68jy2ge2we5nmnhiq9a7cx0wj1b2ix8o3zz32p\", \"e2d06yhifz8w4a4c80ncznbyizgfnj19zhfyjsm6q9nxtq3ui8do37j830nojyp7r6ypgiv2yisw7jw6lbx0q16gmxuyrpllmxlvld579xaihs3fqawsqd9vso8txr465idup89t6jdykrpm8x2rksi0o2qpigorro5fljpuu4e28cwi7kmjfkurqqjx\", \"i7aeo3fitg2phncinwj0t89to0t69kweyiv2civydcd1jehtr00ix1l7961cbjlqcolck2sy1ujtiewj1cn9jkczcu0ac1fairzg8t2jt8q7lqd2s3pnihu56q\", \"htrrvryiivswb14iri8pdgcuwzpcwwfbjfgdm8s1mefuhv1tq1\", \"91mg2r6khmz8drw6w5ux2elvupsjruko21tsj3rocm4thz7wf7mt8j5tf9ub9lav792nwe3i\", \"wt5bltrk9w0ynhc8uyqqachvt1s3d\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ga9ws7w13wdkzr7zuhhlfvw4m2g1nedfbcs4dh11sbo8y699as2ec3kkd45o2qcvhs47i4o2h1k0yc45bj2\",\n      \"description\" : \"Id ut error et qui. Soluta ab at ipsa consequatur maxime omnis. Velit sed rerum et nemo est voluptatem et. Dolorem blanditiis dicta.\",\n      \"location\" : \"sl882iyye7pzhjxci4hm1zfndnjko2qcm7mpyvy5cntwi4j5usvb021ie87rgzg1m69utg\",\n      \"title\" : \"Voluptatibus non necessitatibus inventore iure voluptate ut.\"\n    },\n    \"role\" : \"rlj0dae0sjl6ziigr02k5txtrfm5lzefygaioyiw9m99qkakahog5s\",\n    \"members\" : [ \"s6faixrqqg4f8907s762uzascnhhs8emgafs3aafqnzahebrl1jvtsvb14igvvb9as252n5p9qz0w1u8l8hwxzl17d624qqxuc57zezk0kr5vyi36j1d9t4eu478id7l43ecfs1o8\", \"55j3o7ymzvx1be0juog15r22y99r5ljl5r5b0jgenodxn2u64w3l0snqunitddkbf7d472ddybsir2q0r8lawbjjm5kujnle30v7sx7hch1crndh98yx8z4wfbu\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bzskywgle5jmalp70keyedopfww6b0259oz3z2w7bydfotg6vhhu20fesyh83teci8mwuwj05ixvi5qig4y9xh\",\n      \"description\" : \"Nulla ut nam tenetur sint nesciunt eaque et. Quae ut omnis ratione et est odio incidunt. Quaerat quaerat id. Et qui dicta. Quisquam eos quo sequi.\",\n      \"location\" : \"hyrt5f0dj3tqck3bwfebafuhj8r5d0oxdrcl6tni438iel0csriii79xijwmtmsf9a1sieejb33w05f3rfr3gzvv2ty5brk0np8kmqkggfr6va5bcsmrft8kl4fwj1x0lqngxibazzuiuga0xjxwfki0c1y9yyqch6cc3dggo6ymtdl7w5igs4ji0bzabhw\",\n      \"title\" : \"Ut provident nihil ratione nobis nam porro amet.\"\n    },\n    \"role\" : \"o1qeq3yliy2q5nedmnmcsjsf10lqbirat4r2dbo2t1030ui2bqq8axaoui5bg3ic0v7rznroewzd\",\n    \"members\" : [ \"kw64wo8neux5ogojqd1mofq2f21ms3ld637kvcou2ea1ckiq2emhnvfsr4xiwge8cjd2cq1p0dblk7xngvf9v884f\", \"bip5rmq16yazau\", \"or54c4ndf11gk\", \"fn8pzi5tn2tibes8d9ylr51cequ0zc27thxta322uixjq7bzaadtwubearx\", \"j4ghxqs\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"aru5hcnxhmkc2rg7xxc24kdhiwmfeasjmj0aflo34ny1ha2679nhp2yymdgqamdbus5nld74dud4j78yz95d8zcmwbtxrqdanbo41u1jef5c9\",\n      \"description\" : \"Nulla quasi debitis rem fugiat. Sapiente expedita neque autem. Repellat saepe architecto ab.\",\n      \"location\" : \"yh0hfvxao0jt2q4eplmjf6hut9ioeot4ys36o4d84kdfx5vrqlz057xt5y9fp8nv2ns9gav4epj84tknug4p0v\",\n      \"title\" : \"Et amet et voluptas ex quis.\"\n    },\n    \"role\" : \"jun5t1wl0zecqsm5c7es21nh3ce8mwfo8l2w1ilw3yzkvynci368768766iz1w0c43tn8b8x5wbhg57q4ae6xop53suax3zl9h6lxws5dkd2kl1ned5ubxunsqrf7xqzxd0bptm21qp4x6uw8bnzhj65r5rn6emf6ab90aauv7z388yby4560fyz7doa3uzfu1\",\n    \"members\" : [ \"va12vhuetymnn8yobk4dgk7uo0u2knahjv03exyc1vahbchv8c5sdxqzm6gxvj2u4igxe9m6f0cqbieotg9q121yc3bw74mj205dsnw\", \"y8kwlw9hnac1oz71wkl1p9cwifv9qf8kk4bazo9xln7so1boovd9a0lovetd2gx8n7u5nrnulb45cg6jvjtknawpfe6h6rij3\", \"z6qqkey8accjmukknozoihiynt203khl40wtqbmjigspc0imqm9sr8z56ml780vlhrjic90dhu2ud4doun24ce16fy0b2k8u9rj94kv1tmjjhyw5qbubwjdrimrl0xn1og5vutdfwfm23egy8tprk8qwfemz32l9phbmcefh4mq5zllu2ncj7k\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8350vi77b1dwef4s4zw3rlheow8vfvtqzj16xkk\",\n      \"description\" : \"Dolor qui et. Fugiat quibusdam ipsum rerum tenetur voluptas magnam. Earum blanditiis quisquam est voluptatem et aut voluptatem. Libero est aliquid.\",\n      \"location\" : \"zfp0rwzrqimoqmojqkb87b7xztaz5r3i5bgq9c5jbb0nuki43j2hft76nyp4w5oqm1brtogxqdl8l7cwgscz84fj7gltdu6vogd8g8tyd7kxwjsrh5pwu9y0h6c3fmp2dszxlr8x\",\n      \"title\" : \"Aspernatur possimus est.\"\n    },\n    \"role\" : \"621dp6s6uiuv0b7o3yycft3agtplyyyvrg2cqkutv89nd9qx761n8dnn5m1a2c8fes\",\n    \"members\" : [ \"nhybtauk7i21bk395x4vv9z3dyvs80vflzsej6x7huzjnnonsdxm8zcpcpg0fpkrpe0hw8fo6byy2ymdiv7zircck5csbcwk8dl9fahez14kwmo3hd6v4f64qbzo5xfog90n5a7aui84j986dczinpaax6g8x45yni8laiqn\", \"6zss3rs6c38o0hx3r81zs43bo9cbfisrxraww4uwph5nya2xv8jrhrehkr7vsadhwoq2lhjgzx3lvmjt0vkwp12lnhj8lyshlly6l8wnn6km2olpbolx8yl0jr2bfb5j9cscyt05s9bvvsfhxxh\", \"1594xfv8fkme6enbudjs6yufqlfhl5w1xi9jgtvsaiw51zeb2kvd9vnxhwo6dbakjnxmgza11ool929xjwsoyn1jornf1k2nb32noqsba04v2m7enuofedf41kqcpo4iloy0ggcgr36odrp9jmjck9e86rod07r\", \"thn3mv9ebt2nmju2cc6fq71vlsagm3214ky\", \"5l9ff3qumwhur599sfxw4fgyxoyaypu93gfimxy\", \"0q1xtum6u8dvfmh3xmdj9znvfup9wvej26n5lrsc3ghe6n2m\", \"6zzek5nam0nq5jmjdsgsag8ykjc27se41lj1q3s5ygkjxphkdkmfyp2mypk6lfmcehhxc2b82oozye3oylx1j0gwqwdxp5kav852amdtq8cc7s\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"t4irx8gkafnhj9erj13nqg0usksqgqhz8ejdf9begzaox17wsicex6kt3yabyf5aijhbxx\",\n      \"description\" : \"Porro qui voluptas amet eos animi sequi temporibus. Tempore sunt temporibus porro velit. Aliquid consectetur accusantium ipsam delectus hic doloribus est. Excepturi saepe enim incidunt quasi aut ut.\",\n      \"location\" : \"5qnk06jy0vjeblv9drg24jig8arn1wxcmt2ksf660kawu80nvtw7qfmqfvprsjoum3o740bwbd8irtnelossalkxrt0rbljufgjgxw48mbxf5hc03s0ud5y1te1iain8rgy7fozgz0ujlvnaywtzmmeabhz5wp2jpqas1nuivxf\",\n      \"title\" : \"Dolor et molestiae fugit sit.\"\n    },\n    \"role\" : \"r6ba6ywtoeh02qpu9\",\n    \"members\" : [ \"3qo723yw0ccr144mzcjqv0itmnnno4u240m12m4rdceqkxpbeplxb1\", \"1e93awjfgzjgyms\", \"9skx0jk784qwh4v6zklyjeglqi1d7i5s7fdjile0x2\", \"wq8knx4xfmrwi72p3oy4tuyrmvftpv5zvi9nec2xgyzsi979ilbwhlugxngsu8hzf5ewon15hmtuqu2n9bmbs3634g0n11lzlf4abth4ohljogzh3ukpg85vobhxsipph4btcrb7d9nlpdroxmpms57pgd5c\", \"5eqbc4b66zz2ym4c6dfjqalkex0a0rj1z47gwjrmv34eefqae4y6zn2r3mu6j7hz34vj3vadqu1eys09uqgi2ky7hsjvy50voh7om5i0orrmsfhzir76fgjs0lvajz4pi03ge91tcrhdapmawckitdlma0drzqtq6o6m1f9digdk1yxlnkmgadeaa66wm5s0\", \"i6s2u4g3fo6rhv3voc3ngtvwb50m9q3hj72wxaldv5msn6rawxy2y2nle5yrzf7ifmmec8taelqrtv4ywz5duf4zvi4czd5ia4pd2w0y945v0q032i8x4mi25hc11i5wzkyl4k6iojvdbbov550hrd03yh6have7cbp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ng0mscau3leadyyrvj7tkc3rkzdz2md36yrej0fa0p0zupabqcigyiseddsnx26wasdzoo36iypb865b88ajjmboynk304l52bsti4lmjmaphy1glkmibzpfvyyrs018cohh6wpuhcdd84nu475g6yhhs0gssojxy2sy6jw259noyuylqw5dtmggw3ve8irq5p\",\n      \"description\" : \"Et maiores perferendis possimus et alias. Facere ut eaque incidunt facere repellat. Pariatur fugiat dolores nam natus. Error mollitia praesentium ut autem facilis dolore voluptates.\",\n      \"location\" : \"hleta9q0ppv3mmh3e3sc3xnsm17tsopqd8acurfvlrh0epxlgs6nfbxhe3qvyuxrywnchw87axtvfrvy2tfqr4teup9cqi9h925p08k6ypgksxexa9bzyj3b75ty17vfk3pkfaw64pas1bp7tqfsa6n3f9p1jt92ptmsdm18wrxqgcp\",\n      \"title\" : \"Molestiae et earum quia dolorum.\"\n    },\n    \"role\" : \"a0fcduewoy2fsmx360r58ye79kkt2axbp4s9shdfa2xgvkfj9547jly9ia9ov8n6p8eekvkkbcyqvk5xk445pxz2kvuywam0vvsslvgj7q8mkdn1ed5\",\n    \"members\" : [ \"7kkddnjwb685sjqpo9t593cqb4bhsknemf8hj02mv73ue8crb8vd4peoohqa687ykj0eo97let4p5v6hlwzx6qgey1xsjrxavyspvzfudw13xnc9rzovepvrpv6qfhsytdtw902pafk67hmvkj94ke\", \"4xfu6wmqw10lkcr448g7\", \"13oce\", \"at4hux6pigkdditgtv1tag54escjietq7qavr5upinaksxxb53yescorucy7f46qfm7o6zm87a5vveb1u1tw7x3ewf72qmu2yisxij3wf293vi3p8jmwb1v48oscvh2g8g29kc4i45eb3dcdvrxa583ry3bofwmqh67hij3e4t9k76bf3oqswz8x1d\", \"39lkk87knn4ex0zo9e1x7wf48aefhgwzd6ycq8lussbn9h2adet4xwvqrlrilsmvbj13o3cc2akd21ccyxjxd6igpotk4axgd8gfj49t15rskttd2a0dnctk91ftjhkjn9t0ywbgwpdp81w\", \"bv4bfmfy5gibuvoillu1i5qfu3jqppoypdgum0k86w9kqmqecq12oomu5h4r0rhcxa3xzg8sbkum543cpox8hnrgwlg782gclncj5rji\", \"jv40xp45pq0mhyuvv71ldcjnrb6ki107a0js7gj3in9hzmorr4mojtw84tjr6hd0j3f2bh5p2bbeve71nhy8xsvctpk1vefj3w4gotyr6m\", \"35jkvg2s9t2r2ub3t5w1xy2gnlbga3j5xiwh1vtqx1bhocvrrbe6yoal96uygdbxre06yyw8x82wsr4laqc1sdklspq\" ]\n  } ],\n  \"etag\" : \"reprehenderit\",\n  \"version\" : 2057082146\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28c78a43-e209-416c-ae55-2c480863efc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.492798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.registrationPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "9dda6165-4b8e-436e-b7b7-c569e7fd3352",
    "name" : "Creates a service, and returns the new service.",
    "request" : {
      "urlPath" : "/v1beta1/u4436ypi8ktl3nq3aa47y9tm3v2yt9ca8alnk0ugitqe0gqava5trmo7ipfzqa6uqiun2okgap4se6o1jvzwwluczze03b4ho8jnpjqnzbmkym2g974mbypydr4v8rx9rgb4efw1mh/services",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"endpoints\" : [ {\n    \"metadata\" : { },\n    \"address\" : \"5160yvdbyf47p1uvixnq4tp6mnqdfmmzyygzn6rj6uifmi59auol707458wjdj9qt7dehmekly102atry8f5gr4ie71c53vuk8zhlx5gtephf\",\n    \"createTime\" : \"2022-11-05T10:16:36.491294Z\",\n    \"port\" : 41214290,\n    \"name\" : \"Ricardo Moore\",\n    \"updateTime\" : \"2022-05-06T08:58:36.491364Z\",\n    \"network\" : \"rtoiebts46vwt65dlk5uoqpigyhre168ufezlb6fopck8vjx48owr29xv819zf29\"\n  } ],\n  \"metadata\" : { },\n  \"createTime\" : \"2023-03-06T09:22:36.491405Z\",\n  \"name\" : \"Cyril Strosin V\",\n  \"updateTime\" : \"2022-04-25T12:17:36.491468Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dda6165-4b8e-436e-b7b7-c569e7fd3352",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.491566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.create",
          "schema" : {
            "description" : "An individual service. A service contains a name and optional metadata. A service must exist before endpoints can be added to it.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The timestamp when the service was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "endpoints" : {
                "description" : "Output only. Endpoints associated with this service. Returned on LookupService.ResolveService. Control plane clients should use RegistrationService.ListEndpoints.",
                "items" : {
                  "$ref" : "#/components/schemas/Endpoint"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the service. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the service in the format `projects/*/locations/*/namespaces/*/services/*`.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the service was last updated. Note: endpoints being created/deleted/updated within the service are not considered service updates for the purpose of this timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "5b7f52a6-37a3-4c16-b317-e95194e763e9",
    "name" : "Lists all services belonging to a namespace.",
    "request" : {
      "urlPath" : "/v1beta1/4r00njawverkop3juknpw3r7ey9k09d27f/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"tyn5buhvurfakbv7ixplscqfvulcbofh1bju67hdnffkj165ravp5vpnk5sghj9gfusy5h88oepy1ecquhgioxwvkqn9nufnw0j5u0kx01u08w8mvw9pqj7ur0q\",\n  \"services\" : [ {\n    \"endpoints\" : [ {\n      \"metadata\" : { },\n      \"address\" : \"fdybh88ec0zqhuc6rho7vvbgqlf\",\n      \"createTime\" : \"2022-11-18T08:56:36.49004Z\",\n      \"port\" : 1185373007,\n      \"name\" : \"Malisa Fahey\",\n      \"updateTime\" : \"2022-10-22T09:29:36.490112Z\",\n      \"network\" : \"m477oempwfyejd3y82et2sxkxc888g3juuihf61jzsy6pe4eqlo1otzsqgglat6suj9wu955a0rx8vg4pz59oolu51ffbkk4d1h689ex2e1z06un1e5dma2fyyyevfy\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"7kvu2tgwvlzrgj91ov1isbuectz7zdz37zsvavpbnxzvor4tbm391uomjj57phgja33pl8ehx6fcskrravmfuqtvvg1vgcv66fv0ukqvvhwc3p4gy0nodjz6slcb1syjxku0\",\n      \"createTime\" : \"2022-08-26T12:11:36.49017Z\",\n      \"port\" : 182650187,\n      \"name\" : \"Greta Ondricka\",\n      \"updateTime\" : \"2022-11-28T09:29:36.490246Z\",\n      \"network\" : \"qe1xv7eqr6orctrv01l5vmt76vpjce4xcfkc2lg8nect1bhhw4nq2w529rciiitofge8eb4yin6tciegyh5ywvhc4c7cztgpqn9a4l2zqg3rt5vwsmimpf7batfjteg8bna5y67p0y87cdftoicay6kot\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"3j487u2qngwk9lfoyd2hi77zw0d4g5kd4envztsxrvj7filt9godd8n2xnyqdu490vjuqy75qf4mox08jhnf911hjczsgg4hr8r850us13l2ejta37gmu2pkosnzmv7q44bhqw1pkvk60czng6cfxmlru59t235c53ba3i5fbr7vf3zvlmts1eauqlvxszn3gm3e01eb\",\n      \"createTime\" : \"2022-06-15T11:16:36.490304Z\",\n      \"port\" : 1907503698,\n      \"name\" : \"Gregg Krajcik\",\n      \"updateTime\" : \"2022-09-28T12:03:36.490376Z\",\n      \"network\" : \"2q8pn6fbp0e3r9ocmujjec1v5or9zx8untr0ndbvnl56pl5rxiic4gqbtgtlbnnbg8elg3rkz2sgcjffh\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"o47bhg0jtrps4br2eufepl78tdutoa4qriisqkax0ikxoali07nq352m2q9py5q76z18l7vtcow12c6501xm0hpltend69h11q89qyzntxdj0nfk27iimqp88b8mrrdpr0i4t3s0ub3cligape098hijxtkk9z6qp99lbnwuwn2gtwn\",\n      \"createTime\" : \"2022-04-26T12:19:36.490437Z\",\n      \"port\" : 1542007190,\n      \"name\" : \"Angla Wehner Jr.\",\n      \"updateTime\" : \"2022-10-02T11:06:36.490774Z\",\n      \"network\" : \"ray064ho2fmqdrbruoq4p648qzqpsfi6qi2s9nkh21nua3d5kiypeuo2w5eupwjuo8kf16vtuclm5izo7th3hvy27lk27nzilou296oqp5\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"ge5x6ulq51248d5uw18htmahazqqcttygk100ljgdsbufr3\",\n      \"createTime\" : \"2022-07-01T11:58:36.490832Z\",\n      \"port\" : 254693193,\n      \"name\" : \"Jonelle Gusikowski Sr.\",\n      \"updateTime\" : \"2022-03-19T12:10:36.490907Z\",\n      \"network\" : \"qxp17ke5nejfk\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"gfat55bkne9dbbd8191yxmvwlrd3urer5wn14uwdwl352u7czrg82mhi6frl0yotnsw6ezhuqoqr2msi5lgokojb3dry2rj7hi8uw3xzrb9hm93pd4xivf9a5qh69qb98o3riiipaigoah46lk3q7\",\n      \"createTime\" : \"2022-03-31T09:30:36.49096Z\",\n      \"port\" : 2081848643,\n      \"name\" : \"Jasper Kilback\",\n      \"updateTime\" : \"2022-11-03T12:11:36.491037Z\",\n      \"network\" : \"m09pszgxjoomew091c72kvi1bd6jumf4w8y505oa7zp2djlcumla9c9htvhnonmda4h96xvhkxk3v8i8ur1w29x7m1gqo9i18qb23r5o20nl9k7unavcohuobvqcx8xa6syinf\"\n    } ],\n    \"metadata\" : { },\n    \"createTime\" : \"2022-07-17T11:28:36.491085Z\",\n    \"name\" : \"Mrs. Claudine Stroman\",\n    \"updateTime\" : \"2022-12-08T11:11:36.491154Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b7f52a6-37a3-4c16-b317-e95194e763e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.491239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.list",
          "schema" : {
            "description" : "The response message for RegistrationService.ListServices.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "services" : {
                "description" : "The list of services.",
                "items" : {
                  "$ref" : "#/components/schemas/Service"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b2c9e35b-45fc-411f-874a-30864859096f",
    "name" : "Creates a namespace, and returns the new namespace.",
    "request" : {
      "urlPath" : "/v1beta1/9px2ekpq/namespaces",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-04-16T12:09:36.489817Z\",\n  \"name\" : \"Aurore Schultz\",\n  \"updateTime\" : \"2022-11-28T10:55:36.489877Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2c9e35b-45fc-411f-874a-30864859096f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.489962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.create",
          "schema" : {
            "description" : "A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The timestamp when the namespace was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the namespace in the format `projects/*/locations/*/namespaces/*`.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the namespace was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "b39c5278-2706-4e72-9eab-d41e40e179b7",
    "name" : "Lists all namespaces.",
    "request" : {
      "urlPath" : "/v1beta1/gzrgduj054v0bezte6j36gvf72fq88ov2pm0kij89sx8o6s4bljjrftngv0ze36i42fw91k9wgeap6zd61ytggpm4bhb99v9pmq17kovkddu/namespaces",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bwhall7kcaflwx7e1phem06xlpa1zfbyuontcw72gyay1hwsndxoztii15nytd6kvdcfsldnfk6rws0f0wwjaz34bqn0pdjg5oc4jb5f7hbsnaytxjve7j0kcgpodqxixcc6j00ajf00s6w4dld5a0osi9ydfr8u2hw4qqgko9eo5d1aofwaep5lonmoohsgl74cl\",\n  \"namespaces\" : [ {\n    \"createTime\" : \"2023-01-09T10:49:36.489351Z\",\n    \"name\" : \"Miss Marcus Nader\",\n    \"updateTime\" : \"2022-09-11T09:08:36.489423Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-07T09:22:36.489455Z\",\n    \"name\" : \"Jacob Morissette PhD\",\n    \"updateTime\" : \"2023-02-02T10:18:36.489524Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-10-23T09:37:36.489555Z\",\n    \"name\" : \"Vince Willms Sr.\",\n    \"updateTime\" : \"2022-06-11T09:06:36.48962Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-02-01T09:24:36.489651Z\",\n    \"name\" : \"Vince Walter\",\n    \"updateTime\" : \"2022-12-26T08:49:36.489716Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b39c5278-2706-4e72-9eab-d41e40e179b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.489785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.list",
          "schema" : {
            "description" : "The response message for RegistrationService.ListNamespaces.",
            "properties" : {
              "namespaces" : {
                "description" : "The list of namespaces.",
                "items" : {
                  "$ref" : "#/components/schemas/Namespace"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "17daca12-9803-471e-9911-a712f290a797",
    "name" : "Creates an endpoint, and returns the new endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/iditb97za8y41fn5bzw0r5zdi8kh1pwvpp9zmdx62wt8nvkkxm6m3kcc4fhb5/endpoints",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"address\" : \"wjjbsksb9fx5t6pcolkwjgh9ce6t58qx04eobqxy50pf1fg4yhz9hmzawkp4wug3uqb9ii0qsshognem6iosbx8ubnrfo1ji3tfjrkh0j3du1mub2alncv1yzaj939d9j32ywz7vmc9mh0oympjckd19dysb36cp2\",\n  \"createTime\" : \"2022-09-01T09:06:36.489105Z\",\n  \"port\" : 151515804,\n  \"name\" : \"Graham Johnson V\",\n  \"updateTime\" : \"2023-02-01T11:15:36.489174Z\",\n  \"network\" : \"rrhehp1tvztvd7rv3oo3kwfv9b3nrx4m3qvlvs91e1hqqc3l6b6cyv79n0sigw7pn3y5uwxf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17daca12-9803-471e-9911-a712f290a797",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.489285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.create",
          "schema" : {
            "description" : "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            "properties" : {
              "address" : {
                "description" : "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the endpoint was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the endpoint in the format `projects/*/locations/*/namespaces/*/services/*/endpoints/*`.",
                "type" : "string"
              },
              "network" : {
                "description" : "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects//locations/global/networks/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type" : "string"
              },
              "port" : {
                "description" : "Optional. Service Directory rejects values outside of `[0, 65535]`.",
                "format" : "int32",
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the endpoint was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "05773260-94ab-45f4-ac4e-8d92fe8530b6",
    "name" : "Lists all endpoints.",
    "request" : {
      "urlPath" : "/v1beta1/4093dz8selp86pl3d8tyso3t6dkqpfwud3h3kolmq7eowbrz82lh7ljz72c10t8gf6q23qpy4ppj1xuvxyksmj1zb60qhpurxwwsofxmsfaaup8ntrudr4wwr83s/endpoints",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"endpoints\" : [ {\n    \"metadata\" : { },\n    \"address\" : \"ezsi40adylo8pf1hbdg39ail480hfhuap48bvu4ltz4hmbandh9jkn8lch7gs4ytb8rv7e33004senyl5ygb7w2m40ip9ecmdj3c2ddfs5unye29mfhvq35j2s7ezhngvsu4rctyp1lg0upphpgni6wleak\",\n    \"createTime\" : \"2022-05-28T11:31:36.48827Z\",\n    \"port\" : 186006009,\n    \"name\" : \"Ms. Brigitte Wilderman\",\n    \"updateTime\" : \"2022-07-11T09:05:36.488344Z\",\n    \"network\" : \"hq1j5v9ef4zt8e5oqc6bpsh7pjpmllqefn81s5xu30qcek7gmwsutn15dbkszhy4hfczlqivkpnhwjr2j9ps4bjqz5w5d0mbyn7d4re19lzj53ji1ol8oi7mwqd1d1xd3tq05knkfn13cflshgl7zyx9\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"2obd6hxd3lvfce5838c\",\n    \"createTime\" : \"2022-12-03T09:54:36.488397Z\",\n    \"port\" : 462232192,\n    \"name\" : \"Michael Hauck\",\n    \"updateTime\" : \"2022-10-13T10:29:36.488467Z\",\n    \"network\" : \"fjvfy0inrrbnhl5wwlt98p7js2ku6lq1\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"lj7jmovwj0q38a3z7qz9pfv331u6260xdchb8xrtb6n5hwenfolbxn88jzv5aq499tjcf0tsb0dtg2gz4w58zaci1o0vsnkip2n9yt0yp59ngj03gn1j4jfp\",\n    \"createTime\" : \"2022-07-16T08:33:36.488518Z\",\n    \"port\" : 833280416,\n    \"name\" : \"Napoleon Weber\",\n    \"updateTime\" : \"2022-05-03T09:02:36.488587Z\",\n    \"network\" : \"xy34wkoamtnovf1eytipymlrv9i0x66xnrul1f1kgagoa3z2jia1ahxmq9i8uetsj\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"5tox86wkgkfoaprz3fafvr09wcisls9o28qylaho3ocfdy8nj1grusboaph5jh1rhsxv4xf1mq8mzwp6bhp4umq9ytzw3qnbva93ikntfey29fgl79x0f30hjqyest1hrtqiy2xro5mzvn2ev\",\n    \"createTime\" : \"2022-08-25T12:08:36.488638Z\",\n    \"port\" : 1161820650,\n    \"name\" : \"Mercy Beer\",\n    \"updateTime\" : \"2023-01-13T09:54:36.488707Z\",\n    \"network\" : \"ffy3uo8crtqlpzjqpxphxx00j207w52ettpkyht1621zgbykj980xfz3anq5go02rd71v2ypqh8zc7brj2s5ossvgqzrbvx4anyq14c\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"hcapgpsu4ww3043fuqloty6bh0si5ai01qkauc0uw49s7izcxjjafdk27obs38nh9jelmnt1ghzxwdumauy0lfmfvjcllal93dz4kwh0501uc284nz6xrjgxx20g4zh0daouf8if1zs4ndhw6bk2t52x1ja\",\n    \"createTime\" : \"2023-03-03T10:31:36.48876Z\",\n    \"port\" : 1161402802,\n    \"name\" : \"Felipe Steuber\",\n    \"updateTime\" : \"2022-09-27T10:22:36.48883Z\",\n    \"network\" : \"z748feps8zhz7l60vz\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"cn3sfxi8f72cov9si7l9wlfw8eoacuklkujbw4pyxkqnwgjlwaoy6a3yyna8ort9dmnsx1vcqbidmx4xl4hsyfz01pak0wrjjwi4dzjschjrht52aan74ovw9fxhjb7nfytamb8fuodpov8fmf42k1okd93\",\n    \"createTime\" : \"2022-09-13T10:42:36.488884Z\",\n    \"port\" : 959364220,\n    \"name\" : \"Sydney Gerhold\",\n    \"updateTime\" : \"2022-12-07T12:06:36.488952Z\",\n    \"network\" : \"kqe8mhl2x3mr6nd9rnptw\"\n  } ],\n  \"nextPageToken\" : \"ysguzqhrlzl81hlhmw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05773260-94ab-45f4-ac4e-8d92fe8530b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.489055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.list",
          "schema" : {
            "description" : "The response message for RegistrationService.ListEndpoints.",
            "properties" : {
              "endpoints" : {
                "description" : "The list of endpoints.",
                "items" : {
                  "$ref" : "#/components/schemas/Endpoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f0b157d7-1867-4a08-9bdc-8144cafd6311",
    "name" : "Returns a service and its associated endpoints. Resolving a service is not consi...",
    "request" : {
      "urlPath" : "/v1beta1/Karri+Kassulke:resolve",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service\" : {\n    \"endpoints\" : [ {\n      \"metadata\" : { },\n      \"address\" : \"kuoevudot76cc097qvy1blngwpwto2llrk9ulc13wjybugnga3fxy3oevhaspn01uv09qgo1cj0pcn42dbd9i2kd69y88p6ldwx4dqlzp128pex0hz7yqpy6ivryc98f3v017iu4b273t79b7ug9ys7xylpemu6by0y9jdgha\",\n      \"createTime\" : \"2022-11-09T08:41:36.487818Z\",\n      \"port\" : 1441942605,\n      \"name\" : \"Leigh Rippin\",\n      \"updateTime\" : \"2022-12-04T08:40:36.487895Z\",\n      \"network\" : \"ni7lkpffrkykwpsyzuifmkh5rqus3anpmvm7bfgbvt146saeu2\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"l9pncxumx40v0sf4sjiux07jdckue0te9c00pd17iokmcvgtzlyuyyvft5bcwdfqh3ejdy4e0y8kgzolparh7inrvd83neezpzj4wzd0kuvswlatlxgcpm92dwnukeoemnmq2pjnhe2jb1v7o76qrk7m7f3ibbf1sj4dbwmwgc59j7t0hn50nlcy3x6e13iq\",\n      \"createTime\" : \"2022-03-22T11:38:36.48795Z\",\n      \"port\" : 770578083,\n      \"name\" : \"Demetria Daugherty\",\n      \"updateTime\" : \"2022-04-10T11:07:36.48802Z\",\n      \"network\" : \"vdkkapjboybskllznzxtef7t492nr338zd58ws012bkbgisy5xclotte5i03urzm0ij8bh9pt4g1y\"\n    } ],\n    \"metadata\" : { },\n    \"createTime\" : \"2022-07-08T10:16:36.488067Z\",\n    \"name\" : \"Hoyt Wiza\",\n    \"updateTime\" : \"2022-08-30T09:33:36.488136Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0b157d7-1867-4a08-9bdc-8144cafd6311",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.488215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.resolve",
          "schema" : {
            "description" : "The response message for LookupService.ResolveService.",
            "properties" : {
              "service" : {
                "$ref" : "#/components/schemas/Service"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "09f07009-e130-45c5-a1bf-9a378c09b4db",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Hong+Anderson/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"s0lx2nec085evwvboakh5f33nzgqukrbctjltj7tdp8yvngkhbbnb7xowfkvscvtj7ku\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Ms. Milford Barton\",\n    \"locationId\" : \"t0yx\",\n    \"name\" : \"Delisa McGlynn IV\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Basil Kuhic\",\n    \"locationId\" : \"j0p4\",\n    \"name\" : \"Dr. Holly Langworth\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Marti Johns\",\n    \"locationId\" : \"9uuw\",\n    \"name\" : \"Newton Beier\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Davis Stamm PhD\",\n    \"locationId\" : \"d6h6\",\n    \"name\" : \"Grazyna Schulist III\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Peggie Flatley\",\n    \"locationId\" : \"w2c7\",\n    \"name\" : \"Lin Lindgren\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Remona Tremblay I\",\n    \"locationId\" : \"270p\",\n    \"name\" : \"Julee Hahn\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09f07009-e130-45c5-a1bf-9a378c09b4db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.487736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "59ac6d77-c400-432f-acdc-bf10ae5478a9",
    "name" : "Updates an endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/Ronny+Schimmel",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"address\" : \"dosv79r4cde4fod2459mfsg39u8esxw2fnc12uyv8av2ef5rdp4px6088r87ebhrn16579grvzfw15sx2njf7f8n1ad62ib7qoa74jgn2q2g3ee9val2bmdmzpn6lrmj\",\n  \"createTime\" : \"2022-03-21T12:13:36.486294Z\",\n  \"port\" : 2101679830,\n  \"name\" : \"Merlin Mraz\",\n  \"updateTime\" : \"2022-09-10T11:06:36.486365Z\",\n  \"network\" : \"bidevob2hdlziujny9c81ptqms1ye3xo6m1htgbq88x8ba9xhrvd5fzihhmur6xy7csxv61zzxfsulyld5jkji5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59ac6d77-c400-432f-acdc-bf10ae5478a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.48651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.patch",
          "schema" : {
            "description" : "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            "properties" : {
              "address" : {
                "description" : "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the endpoint was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the endpoint in the format `projects/*/locations/*/namespaces/*/services/*/endpoints/*`.",
                "type" : "string"
              },
              "network" : {
                "description" : "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects//locations/global/networks/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type" : "string"
              },
              "port" : {
                "description" : "Optional. Service Directory rejects values outside of `[0, 65535]`.",
                "format" : "int32",
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the endpoint was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0660b4e9-09bb-418d-8da2-f6ac6bcbe872",
    "name" : "Gets an endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/Yan+Considine+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"address\" : \"3kd4go286ryguaguur3t34rb5iep9vcb3f2ssrpzttrowsoop7ejlztwee7k4ex5ezduukwc8863l4ripb1ainyiwmth7w19gn9rp3en71r1cyc86hvl7tj8h26q3f\",\n  \"createTime\" : \"2022-03-18T08:26:36.485975Z\",\n  \"port\" : 1776329275,\n  \"name\" : \"Denny Herzog\",\n  \"updateTime\" : \"2022-08-29T11:04:36.486064Z\",\n  \"network\" : \"qjqjey63klekpgj5mgt150rwomlad38kmi486z4du2a8yg5v8epo0qmjtgmoc8xvzpva5l1d1qcdc7nf4rfqsqy0e1y159wprtqwmltlgvjghwo1zw4583j06jtefjl8431mizbyxicw2n6dnv339etbpx4mzpl2dxdclyhsfr2xid8ve5lbiibdvn69dwuo6o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0660b4e9-09bb-418d-8da2-f6ac6bcbe872",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.486237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.get",
          "schema" : {
            "description" : "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            "properties" : {
              "address" : {
                "description" : "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the endpoint was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the endpoint in the format `projects/*/locations/*/namespaces/*/services/*/endpoints/*`.",
                "type" : "string"
              },
              "network" : {
                "description" : "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects//locations/global/networks/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type" : "string"
              },
              "port" : {
                "description" : "Optional. Service Directory rejects values outside of `[0, 65535]`.",
                "format" : "int32",
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the endpoint was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "37fcdccb-ac6f-4c00-80bc-445ef5ad953a",
    "name" : "Deletes an endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Bradford+Bradtke",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37fcdccb-ac6f-4c00-80bc-445ef5ad953a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:36.485874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}