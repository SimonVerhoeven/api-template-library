{
  "mappings" : [ {
    "id" : "d1155d94-fcb9-4b47-a593-92f74ac2a786",
    "name" : "Tests IAM permissions for a resource (namespace, service or service workload onl...",
    "request" : {
      "urlPath" : "/v1beta1/4a7c90erd6odnaqivstnxe3ty15ycn3thao4zdy97uiujxhhfzus6jfmba8kclrr3m67dv0vmu6gc2nykriefrsjetu707k5h7619ukr7mxyke4ys8mxqjcj1m6k06qv8cj6l35tt1yfh088id9pg5k7vxujn:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"qysy4ye7eaueunx8hzbg403t9dxo9xugg2f3f16wl91c22r36lm3xqnbw59e7pkeqbeen34ciubbztb\", \"zbw808ty9sy1xe5jm85zgou66zvjauc3wb1zjkezsbdf0iuhsqy3w4v018na42oulfhzcs8us3\", \"abhmd405e98obucczzzph4pq1zzmcagjlwcg37p2r16j08o0eylx3dvbp41dx8lwenyqin6ydzpvrvh3wptm8lwo6lmn6e6aiwgkakg5sdd0b0fdllmi0rft106\", \"16ow36gjqdngbyjc7vg0g5sux6evysjjhdrk9mp49t2eff74vanbu4f00d\", \"3m6ssgpqqa35hgh\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1155d94-fcb9-4b47-a593-92f74ac2a786",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.427479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.registrationPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "fc602cc0-facf-4d8a-89b6-ec27471561c6",
    "name" : "Sets the IAM Policy for a resource",
    "request" : {
      "urlPath" : "/v1beta1/1c6o4occor2j9ypnm19i95szmk0droy2cfpy4le78cuxj4pbs7awsc7lskx0juhawk66g83s7pc6xr5mg1nydwgm5mi7dijmqs0nbq9row9x9db4c6orotrsjc7rrfdz994hqqaobb8utiptvcf8sho188hzzm1stxxp9cb3xoptqzw9d:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"e5fof5fppdx6iz2wqyfz72sxzpxi8hfq8o6651av7d05kitep5rw5m30e1q5ssf6ljrfvedtfhhszi0tvhlxrk495vse6yakgiojwu02ly4jyf0kn73wfsh3nc98vnvd3ozx4zaudwduwhc4i6njcisi1\",\n      \"description\" : \"Est totam quos deleniti. Vel incidunt at omnis quia saepe qui. Sint omnis voluptatem.\",\n      \"location\" : \"s7ojqb0v12wwm9izo8h0iekbipsrzsce41zxoq5c7jnm3n\",\n      \"title\" : \"Corrupti quibusdam et rerum voluptatibus aut nihil.\"\n    },\n    \"role\" : \"52lv1u6hwvut6vp1nstmy0ok6sfrzd4hhyoekqe8lj3pgtjfb5y7yii2pxtsxl6vm1z0b3aufbvwb8qumb68sexlo4nu1gajo80h5fdfjr8fxgl9oo0xjg9qf3o3v6lmbba1xsschoiag604kuiov0fzdkl9nbuvid4vp86cdi357ggnb9i7ga6nrnf16ne6\",\n    \"members\" : [ \"c4j2xyxw6kxeb4u5lmaxhcr1yerz4zud4v8b9gm3hlzzuxch5y9ohe8v2qnsoy1fi1nlfzkcjk3scnmlml8ced4oai87pciypbm5710ncimeunusaca3brta4r1pwpbt7rreejik0f71ojhtqqjqlmxgroz1tx9ar89u4ly7ntigk8jiuoj4f01yb9lcrgjwpz5a8e\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hz6uy97chclwbe6o7wu4uggk1jhkfe9ekxta5s51d0kfu8ei2tbstoxmod8lrtua0l44\",\n      \"description\" : \"Debitis voluptatibus non corporis. Dolorem dolor aliquid. Non quam perferendis dolor quaerat aut dolor. Occaecati quia eos nam ex doloremque minus aperiam.\",\n      \"location\" : \"oxchyxxuxiotla1ect7xf0t6lknq\",\n      \"title\" : \"Vero quod dolores tenetur saepe dolores.\"\n    },\n    \"role\" : \"1ev0uqnhqz356xhbh4hid2lbkqemwwsih3ph5pcoami98uu3elprv2xpibz9r9xgxcdmcbkeoii\",\n    \"members\" : [ \"g9e0mm6dgu2x0geepareho9ohx2mzxc4n2ynmpk7fp5vn42mppirvl82kfaaaw0wk5l662eyynbe8yxwl8he0j7vgxgmyv590x6z0p2ilftfsj9cer1c4ounn9z1ujzdfzisw20ckqoi5n46n5vprm4vew5pj8oy4ityo932272fpayfhrld1oliwwscj\", \"wq6l8i2zj6ne1ajrltgkky0rm0yc0njvcrncexzfnskwc5lb43la7dkr4ouxrkvckbmhrtndlur1748uf5u7ohzrb4y7kauyqpaz\", \"jq4tilm0fp2u57f77w8c9n3qz2k342cd1\", \"yllzrns9ltew4bgkz4f6si88ddri4t\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"90dz272r185vf1m0ach8519lrn5ul7y41le5x0kl9kcl9w2d3avntc9y2ppyboqhahjub992k5tozkfj1a1bm8hk9tw3n8sgkdyi962izy465534jjtbxzb0v8fr130ty49opj32towf4rh2v9olw4nwta6k5xv85jdx59aoo2r1ey2ga5evt3gmu6\",\n      \"description\" : \"Velit deleniti omnis est inventore ut expedita omnis. Et aliquam cumque. Iure hic quia. Placeat perspiciatis aperiam nisi rerum cumque culpa optio.\",\n      \"location\" : \"m0j0nwlmgpyr9ruucl2zd5h7aulh0s3v03nsucng915mccwahew3nu7sq2ercrz4i45ohoqakd95r1soy8so8t40lullzgl4e4bosri0444mej8fdvlvda26wxmh8fb7en4ciytjrvgz\",\n      \"title\" : \"Quisquam tenetur voluptatem itaque eligendi magni vel.\"\n    },\n    \"role\" : \"gm8ou8x4hjti5eifs4q5\",\n    \"members\" : [ \"rob77a9k1dz2049o9i805ub7id8ofct1eny5pw6gxxx7jex7ujdyymonr9m0lfhdci3j9kgbcqg2ykmmqakjb8av14njh50solg7xk9de18305fivvtqpvb1xwrb3g1h7udfr328sqo6b3uyw7e5ojqg9rhyvyqtkfd1v6rxt4tb5a2euiiqsletbl9\", \"m4namke5rphe2jpz6alo6ocvjn9h2lxpyi6b4dwrggsjtmizuit1gendoiv49nqc3dcbn\", \"ga32pkek41604uxf808uvv2ofrkwtu4g7roxa23rb0kc732gqg88t\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o1vj8wf5zbr7yvrn9m0c6xko61n98npk8u23df5a8dynh5imwtqg08parhz6v5\",\n      \"description\" : \"Ut magnam amet est ea consequatur numquam in. Velit inventore consequuntur dolorum. Ut quisquam natus dicta.\",\n      \"location\" : \"y3z0b9sv88tjrhqxz23xejas7b5yxcmt6ci4alqf84rp31ku3bhag0btwwakszs2nx3v37rmi7476lbovhrx1w5apood7001md8jez73fo0zggd4l92imh03aywosa20m\",\n      \"title\" : \"Ea et fuga ipsam eos.\"\n    },\n    \"role\" : \"ur68a40mbkle0wuvgyzhphashiw3gvb66ch7sukujnboq9syuxycz834xowxo\",\n    \"members\" : [ \"ffbn7v\", \"r6m6zoerp3rx2ugx14z9up7ayahpzou3sa9kp0e75si0j3q37cbpyi0yykd2m2bq948aly58q7vksibv74ub7xexdezyy4mg6qkov5iqk0pthwtpy6sfk55ic7ixjv7er18blhnonskvph2gngsx\", \"yb4jbktndw5dwbz1hxwep8zwgj7e21l7al2pbs8rgyll3aanus3vmxugutyo8q527pipeu3t8inii5lwletv9aygb8dq64waujoy1jaofxw2y35ksxuyxfxk8dwdtnqi5k7cb7lx\", \"6w60q5irdxh2y9kzaj2moy695zwvk13yvqw2mvcr6fcv7lqjjjpcqvmde19bjzbs5i9h2o794o8jtim4l0mm1q5w59icxgj117gb62nqpjqerk8jh823z47li1qith4ihrvm25gswhmsb8g7lz9leb\", \"wlcmxciyrztkokk6r2inttag20qdilnoe8nx5kiij47ttdzwkd4tpw8ouvcfm801fk9exkuncmq1nzqdvfb3u9av5iwmydqyk5inle516iwytc94c8ujyjamqh151cjcd\", \"61cy9m576t59kr78zkqd9uzc8crhzl4vxvqjtholo11it2tn7u1h2kq2gqmcza21jfjje306o7qkhfrtetq8f43y4uva3b61yp\", \"7uc2mzrwiefglb5d9grtfrkae84kdv3xg1tg1fy3d1k0hsueq2byt3w8clzsz9b5q1141zkoystb2z523t1hiophicpf1yc5bpapgbtq6kwgxvts4m5kp0jt9e2iiajix0f7wslqxdc7dok\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"nj69m9s8s6ncgnke5q0o0phwv5s9nl49kbg1drsdfikvcivltd6od3cc0j59cyvkf23obuxolay277rhdhaca5as46pxv0m4q15n9neybelm0r49fb0btnfwt8gehi4lfyf9i63lk6tr\",\n      \"description\" : \"Assumenda et explicabo omnis reiciendis sit recusandae. Dolores sapiente sit rem doloribus velit vel neque. Vitae modi laborum sit. Quis assumenda soluta dolorum at quibusdam voluptatum.\",\n      \"location\" : \"eyo27z56b7918bisc\",\n      \"title\" : \"Itaque eum harum cumque soluta.\"\n    },\n    \"role\" : \"1b3bybcyiyvys6ldsooqm65m0rlqaho9xq22dv7xs9dmh2faywcm72ro6kb1bo41pj91srn6ocnb3m0dqcelkf\",\n    \"members\" : [ \"ts3dy2npome36a56hoyqk63mjfzcor2jl2l9epkfgi06\", \"as3d6i55bqncf47doa4e58snupanpjbaphaa0tqx4405yp7fvu9ytvns62cnw9bih67jews542sj65c7ql21a1l8vzv7yvyys3twod2xarwdvavocinldtcmgwbtrt5t7xu12m5qkc6wl6\", \"oa8sgjzg8i3pvt5e2t9ivoxlry8f4qv64dom0bzbd7ah5iol2wys41ypkja4tdim2putj4uouebhuhvvoyuiwrttn07j3xr\", \"v7lr6x1eru98ohmze8afr40c1a0oyrogonybu7xni4ol3027qskp8vmuynhhuaeggsu4h4ev4hfv1kv86vg6mw29tkv2cv77my7qbx6q53jgvrqyjxiq06kq2kpzz2zsed69jtvxxjrm07ls8lxxwgc4r95cojfk4ompy4w0pkcqmbpm54djggqo60fg3\", \"7g623z1f634m3f55lv62xo48b3qux8yvcg6mkkx9bt5qyq0nv1jrwfj5ulw52bx9s9lee901g5x9aqsfvqxmln78qwca\", \"wbee3khxs7lxe8ug3y\", \"8zpmru0oz2xtq789oi70cd7n9ha7aa1ayfty2u\", \"xbfev3vsli5y6ztzl6j69w0idfk4uf86izbhm19y1o5rk4wx\" ]\n  } ],\n  \"etag\" : \"harum\",\n  \"version\" : 711065850\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc602cc0-facf-4d8a-89b6-ec27471561c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.427366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.registrationPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "396c21a7-430b-4076-886c-9ba8c9880915",
    "name" : "Gets the IAM Policy for a resource",
    "request" : {
      "urlPath" : "/v1beta1/lxzf9s016zepy3xk9vqkgcelju7x4cg4qmlqmp8vi0qgcxqcakdx4rsu57frb:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"cygfhvyvpm3vi0qy6k57vif5ivq8ycmeo042hq268q3xsbzfmec6quwzffg2zp2nk64potw5cabgf32mk15v6v\",\n      \"description\" : \"Omnis ab aut rerum. Rerum ut aliquam accusamus voluptatem aut quia. In quibusdam consequatur dicta dolores alias ut.\",\n      \"location\" : \"s5184ohu3qv60wpw8yu2md47onxyalzwk3pdfjuw9sph2q65sdoibqk0yx6nqoresgq93b5wkn15mnrxyg1ar238rhfuundsdv94g5fylhn4neyfaoacdhrs4agb6mjzmhdhdvyk\",\n      \"title\" : \"Qui cum amet id enim dolorem aut.\"\n    },\n    \"role\" : \"7d5sp5ccfsn4zm341xbde2rjx8q4z86mfgzxba8meynoz00wzz2gnjayhi90134njfmks43r3c54jsd\",\n    \"members\" : [ \"82fq3558rlat8ytl668thxo0ddvipyro3sy9jak554kl6070np4yc0tyskzdet0q5210ycc1a70xf\", \"npf8ci40i02apo07lbpn85mjq7ojm100u3zs0zrxzknm5jz6ybrnn7xnuf4b6zor7qoea7jv0i2611h2w1xknl9cgnkkb7mezc8jcdn2c9tldva4jhitnkh17m12r08sdvldldgd38unhgv4mn7m5vp8cj7txukyuxny9ocpf1p9lkn1uz1v0a1ubwahci5gq7k8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"sro5ynwsabbwbmq6kxodhqv8999hbwii25f6byzqes08p1jtudovwo7b4z6x7go9gvojhfoi63nmsby0\",\n      \"description\" : \"Maxime optio et. Porro amet aut porro cupiditate perspiciatis eveniet et. Facilis dolore ut rerum corporis dolores. Qui reiciendis voluptatem. Expedita tempora rem consequatur provident numquam et.\",\n      \"location\" : \"d5wy7jb54kxn63xymi6evxuskctlyp92kp37mxfe2hqtl0xk743m2djw1hs9y4t1shlkr5ele2qw3p8l3ybllu1s1wjkf7c95gut6rs3gdukol7ej3tdg7cc6uci4d9rs7t9q09f4nmpg4f21l3jf4o1nzjrr70\",\n      \"title\" : \"Nesciunt aut praesentium nostrum ipsa.\"\n    },\n    \"role\" : \"ge1r048h11jzvz27ucqk\",\n    \"members\" : [ \"7y7q4p5a69ghi2htuqfvsru8z5u2tvnvnip47behnyptdrkqfl67h2aa5foduot8qoziuvae5tq5clyhdizk4ub\", \"452mnz2tnoq7arzav3rjqrcrtx1ei7uxci4hqz8crp235acptd9s3cgez1g3jxl65y2a92qwca72pbya\", \"ov8ij9mwmgnpaihg2ou1body9q5uej1umq4dtts40jfrqe9fv1thcdk0m9zbu6iiucu354oolztxa60skf7umb7k9mi2vrt5tjpnx1riigp1a9vb2jpechmf1rmu3xt02abl0wsk7ml127tr09fjwrxhnbyml5ezyc2mi6fnjlzo6l7hepootx5mfajw09855\", \"mbli23whlce31j5yl708xajnr01rcfvcy0audaqjx1h81cfgiwo2ji0al4kwo5uexmbos0s81o6jurvj88v9b8hwtk7j3x4rvmgfqjgjej8mwfu070orxws0vqi6pxv0kjmtspgmqkcnf4i6sowpcmrmob826sy01ul9m0alonxbmud9lba7\", \"wtx903jhw1sdy88cxijiowwnob3kp68gcz80snmragv14mivxdwb7rxxbakn295eeorjvaae0repxrzh26i5ruwj0qj9xdh1rtimlaa7tqz9nq5a4vf0hgy1fpa9nxpl641knzaiai126tk5ual68qzzfrcoz2leh7kl8vrsnuo0sh1wuii4gkdsd2p1dwwz6xvp5w\", \"c7uy5mfzni5f8ksk0010a7af8wxpgp40ghq8qoxgrnsl2nj7cd5g1iamitzpfy8a1wcv2rwewuiajbgdep6kq1plve6z0jzlyulg160nbajxp5vq77czkav4gnrgvjbo45pum6xea4p6qx1dy8i2mq8vwra68g7l6sjmrnr6wr2qcbgk4j5oidsb45u\", \"mtowyheb1zrlrmy6qfiyi9pky4woyhcfgrvm11whwopvrdbg2cj2w7nxg7d25c5jjcne3ijb7dl3ylx7x2zuetlw4b98pvq2440mm9kg42atz8muclilwydpv9pbizvja35kk1ixfjitciom3obuam1nftpivv1fqwgb3vpidz7bkaez5dz\" ]\n  } ],\n  \"etag\" : \"nesciunt\",\n  \"version\" : 739442992\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "396c21a7-430b-4076-886c-9ba8c9880915",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.42632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.registrationPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d53ff922-1444-4004-8882-b6cbc37ca7ee",
    "name" : "Creates a service, and returns the new service.",
    "request" : {
      "urlPath" : "/v1beta1/gwkc3xnfxeczrgwa6lzvbfkh4i70t652a83e6d70pmzpr/services",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"endpoints\" : [ {\n    \"metadata\" : { },\n    \"address\" : \"ynzqs8hb45q6x04iv4xta8fo7m2axea7dkj9ydofoz1zq7qu79alandrpj0ak6nw82xkyc9ha7dz8qzcqwdf68hp4qagol3dccyt3ru0m4qfmipd5ue4u1g6mq4v0a8i9y8keo01cr8uudt7au175jaqx184odcjfpyfnwfawak5w8msywja8yru47ka\",\n    \"createTime\" : \"2022-06-29T09:52:56.425178Z\",\n    \"port\" : 1717837273,\n    \"name\" : \"Williemae Stark\",\n    \"updateTime\" : \"2022-04-28T10:46:56.425258Z\",\n    \"network\" : \"h1qge7d9kiki\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"nym3816p3kx9aksemj07byj3cqvvz7tus97470boskcrvjed952jm28ste6u3nqkf9bhz2t0ghjvz43blrti9q8c9ua4jn7fduqfx1827\",\n    \"createTime\" : \"2022-06-24T10:11:56.42531Z\",\n    \"port\" : 1105060064,\n    \"name\" : \"Dan Greenfelder\",\n    \"updateTime\" : \"2022-05-26T09:18:56.4254Z\",\n    \"network\" : \"6axiep2q1q8zt4pdbprycd2q90nw05qlufis38319qvomll34dogewtg1zlg5jazy6pi3e0wq51p6i7hn41zh43wcrhjinbqq3lr9lbmorz2ienwk3fiz136qwivd4r1t9d66360vzwbahojcy933t2x2t7y6ae6l5q1h7x1b6owwb\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"3mw4n9w333z1nl9iupy414x97yn6dq4s31607wrpm5o5xjcx199v70kjgewys0l6udke4l6ip0bsurkv5xshdo0geimu4jhdsl4m3soq89grdpg5qvucqiazuu7fk27ul7dcbjqwnkjsrupiwk3fyw9t5d1eo149plfwl0ow6pokz1\",\n    \"createTime\" : \"2022-12-22T08:49:56.425457Z\",\n    \"port\" : 941749140,\n    \"name\" : \"Ricky Ferry\",\n    \"updateTime\" : \"2022-03-27T08:00:56.42554Z\",\n    \"network\" : \"w2ya3jl8dbcu8wd6n2dknrtr57q1t762c3faxmb6vg677sd\"\n  } ],\n  \"metadata\" : { },\n  \"createTime\" : \"2022-08-16T09:09:56.425584Z\",\n  \"name\" : \"Brain Goldner\",\n  \"updateTime\" : \"2022-07-19T08:35:56.425663Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d53ff922-1444-4004-8882-b6cbc37ca7ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.425766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.create",
          "schema" : {
            "description" : "An individual service. A service contains a name and optional metadata. A service must exist before endpoints can be added to it.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The timestamp when the service was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "endpoints" : {
                "description" : "Output only. Endpoints associated with this service. Returned on LookupService.ResolveService. Control plane clients should use RegistrationService.ListEndpoints.",
                "items" : {
                  "$ref" : "#/components/schemas/Endpoint"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the service. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the service in the format `projects/*/locations/*/namespaces/*/services/*`.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the service was last updated. Note: endpoints being created/deleted/updated within the service are not considered service updates for the purpose of this timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "dc431f98-84e0-4756-8589-99a1f4de50dc",
    "name" : "Lists all services belonging to a namespace.",
    "request" : {
      "urlPath" : "/v1beta1/dp21mccl8k393d7fokmx9qfgt4kdkqkau01drigygnobx6t6ihdn541ratyp5psxp0jne9o9ie0pev4asye6gg8y37tmgfibym8zc88kb04ufn3jl3o59zx31uzw4xf5t7ra047x7igq3cv3ysfkt14wvm3shvm49eeze56iyisairztjtvoue4vjg15ro/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"c2w7misabgh0allhjiffx6swv2enluu6ewdw87bu8619h8y30jsbuxljirdv5\",\n  \"services\" : [ {\n    \"endpoints\" : [ {\n      \"metadata\" : { },\n      \"address\" : \"ogv\",\n      \"createTime\" : \"2023-03-04T10:24:56.423769Z\",\n      \"port\" : 1933816179,\n      \"name\" : \"Dillon Greenholt\",\n      \"updateTime\" : \"2023-02-20T10:29:56.423863Z\",\n      \"network\" : \"p2y2r7wdm6iayrpnn4vmcpr0daj8v04f6ill2khozhrygpztkhr6k7064bkh\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"tvgex8cqhl3ukxiekh0swdhu6rfmapfz12p42mi03zok450kmvrg7wd7ifwz262pz34w1ifhtrvk\",\n      \"createTime\" : \"2022-10-31T11:30:56.423924Z\",\n      \"port\" : 2143460469,\n      \"name\" : \"Merlin Ebert\",\n      \"updateTime\" : \"2022-03-15T08:23:56.424017Z\",\n      \"network\" : \"in9il3igzy8dbv6xwnors71psni2tg0zvhajl9z7dss3lbdovqnc55uhi80wugqjdmlp4zd9jscv7xzeg\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"c5l8tbvh6a3673exph8vmdr40fxef5s6zm\",\n      \"createTime\" : \"2022-04-17T11:34:56.424075Z\",\n      \"port\" : 1846534573,\n      \"name\" : \"Buena Leffler II\",\n      \"updateTime\" : \"2022-04-20T11:49:56.424168Z\",\n      \"network\" : \"wunlp5beej8s9bn5ieqe95l\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"qvn6gxwyc16mxfltabknh6s57tid06wi95q1ipi2r59you1lvxjby16ghjemr0gc6tbx41g1evjovapd6sfjdjl0a3kaodxgrg2t1qsc5itcft92qvflehoexdi2zukurlg6q0wapr5hbyovv3b6w9092oe297hq64o83gqa\",\n      \"createTime\" : \"2022-05-06T10:08:56.424226Z\",\n      \"port\" : 1653956024,\n      \"name\" : \"Mrs. Luke Johns\",\n      \"updateTime\" : \"2022-03-17T08:57:56.42431Z\",\n      \"network\" : \"j40imbsn\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"7cbza7qbabl2smosgj89afnmeky5poqc4ykpg0yhdqcbt6p0c2w2h2m2ov4jo9691jne6f10hge8755j7lqgfg19mi6wb6ve2fv6xamhijmxj6kkcad30u1sn49y9z58ollpd39fgp\",\n      \"createTime\" : \"2022-10-18T10:21:56.424368Z\",\n      \"port\" : 1698673609,\n      \"name\" : \"Lovetta Kessler\",\n      \"updateTime\" : \"2022-09-20T11:18:56.424456Z\",\n      \"network\" : \"1ozvgtol2f4ttm9snrqntqjayo68mwyyma0swalinnysksu6wd\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"aesp9lnlc3w646cs8kglu2fdqt8d01ro91uaig6ate0nsyzg0wgdq4uiyp06ilkkaulqvy50t0pdeabxkon22fels7r11rn4aedp\",\n      \"createTime\" : \"2022-08-15T09:53:56.424513Z\",\n      \"port\" : 169741996,\n      \"name\" : \"Zack Senger II\",\n      \"updateTime\" : \"2022-10-15T08:03:56.424606Z\",\n      \"network\" : \"ykg3dx9sgmnmfrud2qq2xd97a1qu1ybtgbcdpq9s5p26fwp8in9dwpy1oyqvii7rjva58t0apnrwzpa2po3mktpju56k30pm769ubfsa2vz\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"h1lwv8li0zuhwfs6vejh6o79\",\n      \"createTime\" : \"2022-07-01T09:25:56.424662Z\",\n      \"port\" : 916820219,\n      \"name\" : \"Ellsworth Schneider\",\n      \"updateTime\" : \"2023-03-05T09:37:56.424751Z\",\n      \"network\" : \"gid735novwcelsn7rq5jsbv19jnelx29n7z3cl6f54v62m2tgdts6n302wl1pev24tql5h5qbzp85uilbsvsm43h66eo3l4i1l8lqalihtr6oa8u7y79wshdkgz8c0cp5foryjnrf1za845d8pbtcjfj8nw2s6tgpao2mn6fmw1t0rbxrislpff3jbccabm\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"gg5no3krz3spy2ou89\",\n      \"createTime\" : \"2022-10-15T10:35:56.42481Z\",\n      \"port\" : 1048555049,\n      \"name\" : \"Miss Lulu O'Reilly\",\n      \"updateTime\" : \"2022-07-09T08:15:56.4249Z\",\n      \"network\" : \"ysfwzbrnxdevyu43eg9orw35zxvawfnlaazew26aell3jvu7i63ybtu5wnoh36hx343uhndpt1le38d8odq0z6eokmn54x7ooqnnkl8o4t8w8zu25tq1pz0k345idhvvcip2mqar8adsa1md\"\n    } ],\n    \"metadata\" : { },\n    \"createTime\" : \"2022-12-26T09:38:56.424949Z\",\n    \"name\" : \"Dr. Curt Goodwin\",\n    \"updateTime\" : \"2022-12-23T09:25:56.425033Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc431f98-84e0-4756-8589-99a1f4de50dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.425124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.list",
          "schema" : {
            "description" : "The response message for RegistrationService.ListServices.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "services" : {
                "description" : "The list of services.",
                "items" : {
                  "$ref" : "#/components/schemas/Service"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d7664ff2-3463-4845-bf3a-7f38d06f1f22",
    "name" : "Creates a namespace, and returns the new namespace.",
    "request" : {
      "urlPath" : "/v1beta1/na3xzp72fw15sug2lv84qbttcm9xnp1ohvcykwgwgr3gxsj6oxge8qexiz2hlyg15e7mpcrwg0c5h0tpulmmffruhs7fddxbfhnj0znqsr7mh41fhlpvb6/namespaces",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-12-10T10:32:56.4235Z\",\n  \"name\" : \"Nell Schuppe\",\n  \"updateTime\" : \"2022-05-16T09:54:56.42359Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7664ff2-3463-4845-bf3a-7f38d06f1f22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.423683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.create",
          "schema" : {
            "description" : "A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The timestamp when the namespace was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the namespace in the format `projects/*/locations/*/namespaces/*`.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the namespace was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "fddfea68-633f-444d-81b6-b51ae9148f0a",
    "name" : "Lists all namespaces.",
    "request" : {
      "urlPath" : "/v1beta1/qye9duawp54b18ieu97i0p57gt2kktf7bhairsqs/namespaces",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"t40bkasl7uuatvyukfqscv4uw48h0hg5icq04zmni9tukqruq7sg3q62iu65v022j64nb10l2qcxk110eo0ssj641kkrdh7azezgy\",\n  \"namespaces\" : [ {\n    \"createTime\" : \"2023-01-31T10:52:56.422926Z\",\n    \"name\" : \"Rhonda Senger DVM\",\n    \"updateTime\" : \"2022-04-08T09:15:56.423021Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-10T11:23:56.42306Z\",\n    \"name\" : \"Claude Botsford\",\n    \"updateTime\" : \"2023-03-09T10:48:56.423141Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-06-30T11:02:56.423178Z\",\n    \"name\" : \"Hang Medhurst\",\n    \"updateTime\" : \"2022-09-01T10:02:56.423261Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-09-17T11:16:56.423299Z\",\n    \"name\" : \"Mrs. Tyson Lehner\",\n    \"updateTime\" : \"2022-10-22T09:26:56.423389Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fddfea68-633f-444d-81b6-b51ae9148f0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.423464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.list",
          "schema" : {
            "description" : "The response message for RegistrationService.ListNamespaces.",
            "properties" : {
              "namespaces" : {
                "description" : "The list of namespaces.",
                "items" : {
                  "$ref" : "#/components/schemas/Namespace"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "e1b77d0a-9d8f-409b-ac4e-4e258049a5d6",
    "name" : "Creates an endpoint, and returns the new endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/oh1lghin4af65epejhap8hwjltse0cf5akh01zd1e2dmwbiwhduximie3o7nddtng3q6x0g3pjes9mm3wj8v7fci4ri7uwbqid/endpoints",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"address\" : \"42h6kzhe1wb2i8m\",\n  \"createTime\" : \"2022-12-28T08:42:56.422628Z\",\n  \"port\" : 2122660226,\n  \"name\" : \"Jerry Wolff DVM\",\n  \"updateTime\" : \"2022-04-15T07:57:56.422718Z\",\n  \"network\" : \"pobdy0pt97ljy49fpnbc3d8jtwoblm8541igypvjz15ofwgxmkflm68ccaowx42dhcwwl2j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1b77d0a-9d8f-409b-ac4e-4e258049a5d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.422833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.create",
          "schema" : {
            "description" : "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            "properties" : {
              "address" : {
                "description" : "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the endpoint was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the endpoint in the format `projects/*/locations/*/namespaces/*/services/*/endpoints/*`.",
                "type" : "string"
              },
              "network" : {
                "description" : "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects//locations/global/networks/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type" : "string"
              },
              "port" : {
                "description" : "Optional. Service Directory rejects values outside of `[0, 65535]`.",
                "format" : "int32",
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the endpoint was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b4be8ad0-7056-45e2-95bd-893eae141377",
    "name" : "Lists all endpoints.",
    "request" : {
      "urlPath" : "/v1beta1/aalviywxqqnsbn7uqbkbonep/endpoints",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"endpoints\" : [ {\n    \"metadata\" : { },\n    \"address\" : \"vwzfykjeo3n7mblsz3eh15m6hwgam956mhbykpxmafuq6nmg5u4m1iqhs2vf398i3nne38dtasyf9pwpf80a10skkovlwuesr\",\n    \"createTime\" : \"2022-08-31T11:33:56.421757Z\",\n    \"port\" : 748189769,\n    \"name\" : \"Stacee Konopelski\",\n    \"updateTime\" : \"2022-07-23T08:28:56.421846Z\",\n    \"network\" : \"onhkf6eu71ep2s55h4k4jp5kxyqxkz2v27kfq5uu4qpnaxcyfdfzt8jw0d7zh8pso3zb056rmry2qz09qspkjxyk5xt8jkg656xr4w22c4eb056q6smoxrw2tco6yfdc2sckt739bex51plu89\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"1z611ii8\",\n    \"createTime\" : \"2023-01-11T10:04:56.421907Z\",\n    \"port\" : 250941198,\n    \"name\" : \"Margret Kub\",\n    \"updateTime\" : \"2022-08-01T11:22:56.421994Z\",\n    \"network\" : \"ha94vgkbh0md1bh8ozuv83qswnfggd4qx3dhdlukoa7lmv5els8pfo5jh0fo3fp9vd72yq2beuznbk08186qeuzyetcjr03a04u7dbj8o5pkry21qwf4yvte8msd8wlnmdaj2oz7kyxj35msrbk4u1md0g117zp\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"995urrdr8cz8z01faqvjregvsmdwkf\",\n    \"createTime\" : \"2022-09-14T10:25:56.422061Z\",\n    \"port\" : 704118115,\n    \"name\" : \"Bernie Koepp\",\n    \"updateTime\" : \"2022-08-26T07:56:56.422153Z\",\n    \"network\" : \"45mew63o0wd0vfhpxx00wzpz5fyxwf7so844776nz06j39988a0hwn8fhn7mmgrssszj8jf114kl5i13qni5jgca30\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"sgl64ljy5ju74ulo4sj91vnaukvzcp1yqus5gpzucprlc78px92vyznk0noa64hrmkejbv4nuk2bc70ous66cs2mslx0ytvu5s9g9f5zd69xl52yskgbzwfgxqsws2ud7k8py07t31yghaqwm9hh4zrrd4fz5s8p3ffx7ni0h4rjjyngenjw5zh5qc\",\n    \"createTime\" : \"2022-12-03T10:24:56.422216Z\",\n    \"port\" : 1374858116,\n    \"name\" : \"Melodi Krajcik V\",\n    \"updateTime\" : \"2023-02-19T10:50:56.422311Z\",\n    \"network\" : \"2p24uh5j845zrb9c1swvgu6tncvnwrkyvzz65g0foussialkec46ara8zwyw3nx4lu49w8bb9fo\"\n  }, {\n    \"metadata\" : { },\n    \"address\" : \"omfd8umsikb1fflgxoh5scd7b7pdqeqhjkydp1534oxdor6h6t8ad0xu3040r54e7tj8amieffmp6ph6le3gsio0633e3r2jykxmwg58omhd6hj0rg\",\n    \"createTime\" : \"2023-01-21T10:52:56.422372Z\",\n    \"port\" : 533509456,\n    \"name\" : \"Mr. Suzanna Crist\",\n    \"updateTime\" : \"2022-10-24T08:24:56.422466Z\",\n    \"network\" : \"7420im49sun4szuj6tvrm0p9srsl70cya0chxcriobi9fluveu7gg0qhg5cmf7d6hntg6elil0l9pf93o3u5i4d92pjdw1cfvo6senh82h532p4a8dq1kmnmbrxseszl1svazab44160rbmw9056qg2ubjakump4zyzmvx4mbx00a9z\"\n  } ],\n  \"nextPageToken\" : \"sh8bcrvosayj0m9y28quedjnc6uep4njhe19f7zo6el25go3rjakdhr0x5ikb4pc3xhne90impwq22pmujwkdfbn12ha4afylqsxh7nvswbf7cd3d4i9ry74pce7j25i8vv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4be8ad0-7056-45e2-95bd-893eae141377",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.422576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.list",
          "schema" : {
            "description" : "The response message for RegistrationService.ListEndpoints.",
            "properties" : {
              "endpoints" : {
                "description" : "The list of endpoints.",
                "items" : {
                  "$ref" : "#/components/schemas/Endpoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "efbe72eb-413a-4577-b386-d76b2ec93eb8",
    "name" : "Returns a service and its associated endpoints. Resolving a service is not consi...",
    "request" : {
      "urlPath" : "/v1beta1/Kraig+Mante:resolve",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service\" : {\n    \"endpoints\" : [ {\n      \"metadata\" : { },\n      \"address\" : \"2zp3v3fn28fe2iridyq7p512azga7f6ejtbvp32cqk7o8bflzlf3q4gzf842ouam3\",\n      \"createTime\" : \"2022-04-27T08:04:56.420387Z\",\n      \"port\" : 1542537977,\n      \"name\" : \"Miss Milissa Heidenreich\",\n      \"updateTime\" : \"2022-08-28T09:31:56.420481Z\",\n      \"network\" : \"05yujlt944zy1y8ul3sp8agzwkpmi1u88bqvqge03b9ol9xlp5805n5sh9s5lo08e6ejo0g7j0mpxh1uvby8hb9z1buh4aerczf0mwn774v8jyv0d1v\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"tckmvrn2a434ufrhwwvd38fmxp08sxl28w3hic7any67qwbnh1m6j6decj63m17y3zixkrnzlt5n4zx2os63qbc3efkzs9xm26t7gw3nc41jrlgzcczn30tjrhz35218ms26nyzvnbxdjvnkzyunyx416ikc6ldqx6rkg7agcbtuivjn00qr86pah6c9243z8f\",\n      \"createTime\" : \"2023-01-05T10:49:56.420547Z\",\n      \"port\" : 2044650488,\n      \"name\" : \"Giuseppe Brekke DDS\",\n      \"updateTime\" : \"2022-04-18T11:00:56.420647Z\",\n      \"network\" : \"8t22t8qchww0mxrkxc8nv2c6iui1jtatanvs6g45rjvdua2fviq1ufanc06myeztgy2gg9gn67sd805r3ggrxf6aypemtald7m3oko3cnahb1jrbi82kb823f20fttxvwozr5055in0scz5okkw4sz2ql8y5ku2xk7sq73lnrqz71n7fdb94sz3may26\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"k3jeevhr5uht62p9lr96f2lecxjrhwqptlfx7702v8ejny8iuir5nxfvbmb6w0grblszadeu3aed90i654kk92pwtd0zvpjqsfmcen10dr0rpgzs68x0rni0vetjld39qpio6nef345tr2w5qcdsbbgjbd7koqdwwx0fbsdgnpxbz3n0fhla2y2mf1pf6zz8\",\n      \"createTime\" : \"2022-04-29T11:16:56.420714Z\",\n      \"port\" : 1274003743,\n      \"name\" : \"Eli Kiehn\",\n      \"updateTime\" : \"2022-06-28T08:41:56.420804Z\",\n      \"network\" : \"z4cjw32jgwq2h19rd0r9ftd048180tzickkp1d9qqk90mrsudgx9nagp8p14fugmomq3g6s1xjwujstq4c4tr81njzn274x6thice1gg\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"xlymy918ybpkyh0rv0sy8ik\",\n      \"createTime\" : \"2022-09-25T10:47:56.420865Z\",\n      \"port\" : 2132101117,\n      \"name\" : \"Fabian Nader\",\n      \"updateTime\" : \"2022-12-22T09:02:56.42096Z\",\n      \"network\" : \"xkjw471lcf9gfu5j51pacaaqd50i3cubosnjfhe7pabbt1t\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"vjyzkx1c01yt3w450a8j2ctwyngsgg9bp33nn0mc8p4f6qxwweamyneh0u8p1srln9ffassj9kinem4q2u282dmrtx2si149a9wg28ns0txzo7wtrfgck8c9q6rrm483hrk4k4tx0dltd21\",\n      \"createTime\" : \"2022-06-22T11:37:56.421022Z\",\n      \"port\" : 248592111,\n      \"name\" : \"Elias Gerhold\",\n      \"updateTime\" : \"2022-10-27T10:31:56.421116Z\",\n      \"network\" : \"l9xffmpuir0ml78omiicuafao3reue74dvct2ctvwmzk6e17zpab4alkgxo8ieej43f387f3vwezmsb5hkkw46jnihb88bwmqjiotdppt7nlvlzf09dmwiehxse65d66metoq434vec5g5wj3z7xe147iorjbj0j\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"p40idflpfs1wn2nggj7ssvdgdh6l9glvnxmk126qrznwh5ehin\",\n      \"createTime\" : \"2022-10-10T09:02:56.421178Z\",\n      \"port\" : 1342750623,\n      \"name\" : \"Pearle Ebert MD\",\n      \"updateTime\" : \"2023-03-05T09:11:56.42127Z\",\n      \"network\" : \"vxzyq0idyzts6xxd3xayn1yg0rmalpkqk6awth4wweqn1vhtrtkfylfg8qqmgdoaa9jkq8tuf3qcz6l340pflmwq5yby8chql02x7gkpt6p0e59qxtvaqdu2tdxq11c\"\n    }, {\n      \"metadata\" : { },\n      \"address\" : \"6jwozyjl1u8n4tp2jd2aovo6gwb\",\n      \"createTime\" : \"2022-08-31T09:42:56.421331Z\",\n      \"port\" : 386521007,\n      \"name\" : \"Ernest Kihn\",\n      \"updateTime\" : \"2022-04-05T10:10:56.421423Z\",\n      \"network\" : \"a564jx7jjatau4tzvmgkyayruet\"\n    } ],\n    \"metadata\" : { },\n    \"createTime\" : \"2022-08-11T11:10:56.42149Z\",\n    \"name\" : \"Rosie Cole\",\n    \"updateTime\" : \"2022-12-27T11:39:56.421583Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efbe72eb-413a-4577-b386-d76b2ec93eb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.42169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.resolve",
          "schema" : {
            "description" : "The response message for LookupService.ResolveService.",
            "properties" : {
              "service" : {
                "$ref" : "#/components/schemas/Service"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "d2d07a0c-acdf-4909-92c6-e43696dd290c",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Zonia+Boyer/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ygbv4k1upz5rl4wnl5tnmzozel1orexuuic999k2e65icie2v1lpgsfjbazoqtt27o791mg7wqh03a1o0fd4zvxr3eapevdjofdy0cl3vvdkecfw2sldz57nemfe15yolu192b4cs683d0j\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Barbera Kozey\",\n    \"locationId\" : \"r9f3\",\n    \"name\" : \"Dixie Feest\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2d07a0c-acdf-4909-92c6-e43696dd290c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.420314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "9341e12d-16cf-469a-a604-093d3eeb07c4",
    "name" : "Updates an endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/Wiley+O%27Kon",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"address\" : \"ytaudjtdqclqp6l5zoa2nty96pbhefuyx5ye4hl5gxphchbd51yireb0ufi4qykj7loz\",\n  \"createTime\" : \"2022-07-09T09:35:56.419647Z\",\n  \"port\" : 853901340,\n  \"name\" : \"Judson Veum\",\n  \"updateTime\" : \"2023-03-05T10:53:56.419733Z\",\n  \"network\" : \"cl2zyqqaccgyzhdm87e67ns8na6fwcsgdq3jezjg7guvcyjll53xxfpr2pd4z2i3aqlh7r9cfs6iv7rgjpfidz5rvsf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9341e12d-16cf-469a-a604-093d3eeb07c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.419884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.patch",
          "schema" : {
            "description" : "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            "properties" : {
              "address" : {
                "description" : "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the endpoint was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the endpoint in the format `projects/*/locations/*/namespaces/*/services/*/endpoints/*`.",
                "type" : "string"
              },
              "network" : {
                "description" : "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects//locations/global/networks/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type" : "string"
              },
              "port" : {
                "description" : "Optional. Service Directory rejects values outside of `[0, 65535]`.",
                "format" : "int32",
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the endpoint was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "4f446a4f-af2a-4238-825f-e0ebc9ef3d91",
    "name" : "Gets an endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/Emelina+Crooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"address\" : \"wzm6kckrx03i3r6ed1kwa9w5sq3ra31o0q91297qyl8lfx8d3ndgdyo5w9la4rl2llkoz0d86s9xnizol9ffxh6z5oi93qsrxl2gvbsp1s2of7k3o\",\n  \"createTime\" : \"2022-10-13T08:49:56.419279Z\",\n  \"port\" : 298792733,\n  \"name\" : \"Janis Leuschke\",\n  \"updateTime\" : \"2022-04-30T08:24:56.419388Z\",\n  \"network\" : \"kknbyp1qnhim2fsdrkpc840ny3w03h40ia2y7h58tvb8mc5gtllzjtxpwvdha6ze9843mkgrpyjhdunlyutuu4zlavofy14ukosp6f6uqtx5ikv7dlh4kcdfo8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f446a4f-af2a-4238-825f-e0ebc9ef3d91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.419586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.get",
          "schema" : {
            "description" : "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
            "properties" : {
              "address" : {
                "description" : "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the endpoint was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read/write to the same location in Service Directory.",
                "type" : "object"
              },
              "name" : {
                "description" : "Immutable. The resource name for the endpoint in the format `projects/*/locations/*/namespaces/*/services/*/endpoints/*`.",
                "type" : "string"
              },
              "network" : {
                "description" : "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects//locations/global/networks/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
                "type" : "string"
              },
              "port" : {
                "description" : "Optional. Service Directory rejects values outside of `[0, 65535]`.",
                "format" : "int32",
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the endpoint was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3efe4257-9ff6-45de-bd69-690d783b0118",
    "name" : "Deletes an endpoint.",
    "request" : {
      "urlPath" : "/v1beta1/Jake+O%27Reilly",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3efe4257-9ff6-45de-bd69-690d783b0118",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.419153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicedirectory.projects.locations.namespaces.services.endpoints.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}