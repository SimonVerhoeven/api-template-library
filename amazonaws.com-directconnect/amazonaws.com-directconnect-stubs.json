{
  "mappings" : [ {
    "id" : "e8804c2e-a595-4321-b152-20ada5ea95d1",
    "name" : "<p>Updates the specified attributes of the specified virtual private interface.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateVirtualInterfaceAttributes",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8804c2e-a595-4321-b152-20ada5ea95d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.456916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateVirtualInterfaceAttributes"
        }
      }
    }
  }, {
    "id" : "a62554be-2f18-43b8-a3ec-add0b21dbe15",
    "name" : "<p>Updates the specified attributes of the specified virtual private interface.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateVirtualInterfaceAttributes",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a62554be-2f18-43b8-a3ec-add0b21dbe15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.456891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateVirtualInterfaceAttributes"
        }
      }
    }
  }, {
    "id" : "8b733b78-56e9-49d4-bc14-45803af384dd",
    "name" : "<p>Updates the specified attributes of the specified virtual private interface.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateVirtualInterfaceAttributes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ownerAccount\" : { },\n  \"bgpPeers\" : { },\n  \"virtualInterfaceState\" : { },\n  \"awsDeviceV2\" : { },\n  \"virtualInterfaceId\" : { },\n  \"virtualGatewayId\" : { },\n  \"vlan\" : { },\n  \"jumboFrameCapable\" : { },\n  \"addressFamily\" : { },\n  \"customerAddress\" : { },\n  \"routeFilterPrefixes\" : { },\n  \"amazonSideAsn\" : { },\n  \"authKey\" : { },\n  \"virtualInterfaceType\" : { },\n  \"directConnectGatewayId\" : { },\n  \"mtu\" : { },\n  \"tags\" : { },\n  \"siteLinkEnabled\" : { },\n  \"customerRouterConfig\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"asn\" : { },\n  \"virtualInterfaceName\" : { },\n  \"amazonAddress\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b733b78-56e9-49d4-bc14-45803af384dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.456854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateVirtualInterfaceAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the virtual interface."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID of the virtual interface."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "virtualInterfaceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceType"
                }, {
                  "description" : "The type of virtual interface. The possible values are <code>private</code> and <code>public</code>."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "asn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ASN"
                }, {
                  "description" : "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
                } ]
              },
              "amazonSideAsn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LongAsn"
                }, {
                  "description" : "The autonomous system number (ASN) for the Amazon side of the connection."
                } ]
              },
              "authKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPAuthKey"
                }, {
                  "description" : "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
                } ]
              },
              "amazonAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonAddress"
                }, {
                  "description" : "The IP address assigned to the Amazon interface."
                } ]
              },
              "customerAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerAddress"
                }, {
                  "description" : "The IP address assigned to the customer interface."
                } ]
              },
              "addressFamily" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AddressFamily"
                }, {
                  "description" : "The address family for the BGP peer."
                } ]
              },
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              },
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "mtu" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MTU"
                }, {
                  "description" : "The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "virtualGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayId"
                }, {
                  "description" : "The ID of the virtual private gateway. Applies only to private virtual interfaces."
                } ]
              },
              "directConnectGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayId"
                }, {
                  "description" : "The ID of the Direct Connect gateway."
                } ]
              },
              "routeFilterPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouteFilterPrefixList"
                }, {
                  "description" : "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
                } ]
              },
              "bgpPeers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPPeerList"
                }, {
                  "description" : "The BGP peers configured on this virtual interface."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the virtual interface is located."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the virtual interface."
                } ]
              },
              "siteLinkEnabled" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SiteLinkEnabled"
                }, {
                  "description" : "Indicates whether SiteLink is enabled."
                } ]
              }
            },
            "description" : "Information about a virtual interface."
          }
        }
      }
    }
  }, {
    "id" : "3d455a81-0247-478b-8c9d-b6bb504e2871",
    "name" : "<p>Updates the attributes of the specified link aggregation group (LAG).</p> <p>...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d455a81-0247-478b-8c9d-b6bb504e2871",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateLag"
        }
      }
    }
  }, {
    "id" : "a86250d8-5d18-430c-8327-4cb28d84a5a9",
    "name" : "<p>Updates the attributes of the specified link aggregation group (LAG).</p> <p>...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a86250d8-5d18-430c-8327-4cb28d84a5a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.456117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateLag"
        }
      }
    }
  }, {
    "id" : "9b9d4614-8ae6-4518-bbb7-e6f55f1c4d51",
    "name" : "<p>Updates the attributes of the specified link aggregation group (LAG).</p> <p>...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"minimumLinks\" : { },\n  \"allowsHostedConnections\" : { },\n  \"awsDevice\" : { },\n  \"macSecCapable\" : { },\n  \"connectionsBandwidth\" : { },\n  \"lagName\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"numberOfConnections\" : { },\n  \"lagState\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"connections\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b9d4614-8ae6-4518-bbb7-e6f55f1c4d51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.456082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateLag",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connectionsBandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps. "
                } ]
              },
              "numberOfConnections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Count"
                }, {
                  "description" : "The number of physical dedicated connections bundled by the LAG, up to a maximum of 10."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the LAG."
                } ]
              },
              "lagName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagName"
                }, {
                  "description" : "The name of the LAG."
                } ]
              },
              "lagState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagState"
                }, {
                  "description" : "<p>The state of the LAG. The following are the possible values:</p> <ul> <li> <p> <code>requested</code>: The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.</p> </li> <li> <p> <code>pending</code>: The LAG has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is established and the LAG is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The LAG is being deleted.</p> </li> <li> <p> <code>deleted</code>: The LAG is deleted.</p> </li> <li> <p> <code>unknown</code>: The state of the LAG is not available.</p> </li> </ul>"
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the LAG."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "minimumLinks" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Count"
                }, {
                  "description" : "The minimum number of physical dedicated connections that must be operational for the LAG itself to be operational."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint that hosts the LAG."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that hosts the LAG."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "connections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionList"
                }, {
                  "description" : "The connections bundled by the LAG."
                } ]
              },
              "allowsHostedConnections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BooleanFlag"
                }, {
                  "description" : "Indicates whether the LAG can host other connections."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the LAG."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the LAG."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the LAG supports MAC Security (MACsec)."
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The LAG MAC Security (MACsec) encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the LAG."
                } ]
              }
            },
            "description" : "Information about a link aggregation group (LAG)."
          }
        }
      }
    }
  }, {
    "id" : "e53f38c8-bcf7-4497-bc5b-bd09365aeede",
    "name" : "<p>Updates the specified attributes of the Direct Connect gateway association.</...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e53f38c8-bcf7-4497-bc5b-bd09365aeede",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDirectConnectGatewayAssociation"
        }
      }
    }
  }, {
    "id" : "3874e7ae-1de5-4dd5-9476-ca534c213feb",
    "name" : "<p>Updates the specified attributes of the Direct Connect gateway association.</...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3874e7ae-1de5-4dd5-9476-ca534c213feb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDirectConnectGatewayAssociation"
        }
      }
    }
  }, {
    "id" : "37f5d4aa-5294-4b18-ba68-2667368e2aee",
    "name" : "<p>Updates the specified attributes of the Direct Connect gateway association.</...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociation\" : {\n    \"associatedGateway\" : {\n      \"id\" : { },\n      \"type\" : { },\n      \"ownerAccount\" : { },\n      \"region\" : { }\n    },\n    \"virtualGatewayId\" : { },\n    \"directConnectGatewayOwnerAccount\" : { },\n    \"virtualGatewayOwnerAccount\" : { },\n    \"virtualGatewayRegion\" : { },\n    \"associationState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"allowedPrefixesToDirectConnectGateway\" : { },\n    \"associationId\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37f5d4aa-5294-4b18-ba68-2667368e2aee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDirectConnectGatewayAssociation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociation" : {
                "$ref" : "#/components/schemas/DirectConnectGatewayAssociation"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "dbff39d5-2309-4300-86cd-8cb7f8248645",
    "name" : "Updates the name of a current Direct Connect gateway.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbff39d5-2309-4300-86cd-8cb7f8248645",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDirectConnectGateway"
        }
      }
    }
  }, {
    "id" : "da8ff871-7454-4c56-8b81-a08ee5cb7ee9",
    "name" : "Updates the name of a current Direct Connect gateway.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da8ff871-7454-4c56-8b81-a08ee5cb7ee9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDirectConnectGateway"
        }
      }
    }
  }, {
    "id" : "1c7a613d-c8e9-407d-8007-9d20c46cffff",
    "name" : "Updates the name of a current Direct Connect gateway.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGateway\" : {\n    \"amazonSideAsn\" : { },\n    \"directConnectGatewayName\" : { },\n    \"directConnectGatewayState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"ownerAccount\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c7a613d-c8e9-407d-8007-9d20c46cffff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateDirectConnectGateway",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGateway" : {
                "$ref" : "#/components/schemas/DirectConnectGateway"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6392248b-1925-44b5-a41f-a8f8f3093eca",
    "name" : "<p>Updates the Direct Connect dedicated connection configuration.</p> <p>You can...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6392248b-1925-44b5-a41f-a8f8f3093eca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConnection"
        }
      }
    }
  }, {
    "id" : "67ca37ef-8d10-40f0-ad02-356b97ea24de",
    "name" : "<p>Updates the Direct Connect dedicated connection configuration.</p> <p>You can...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67ca37ef-8d10-40f0-ad02-356b97ea24de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.455275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConnection"
        }
      }
    }
  }, {
    "id" : "07a9b4b3-5dda-4770-adf9-cecc8cf66e8e",
    "name" : "<p>Updates the Direct Connect dedicated connection configuration.</p> <p>You can...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UpdateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07a9b4b3-5dda-4770-adf9-cecc8cf66e8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConnection",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "dd7c4362-1e1e-4fb7-827e-4051c6227e62",
    "name" : "Removes one or more tags from the specified Direct Connect resource.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UntagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd7c4362-1e1e-4fb7-827e-4051c6227e62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "783d1ec0-fab5-406f-ad40-8f0a5144064a",
    "name" : "Removes one or more tags from the specified Direct Connect resource.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UntagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "783d1ec0-fab5-406f-ad40-8f0a5144064a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "b5e469fe-c369-40e0-a925-fdf221646185",
    "name" : "Removes one or more tags from the specified Direct Connect resource.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.UntagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e469fe-c369-40e0-a925-fdf221646185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "99271a89-2444-49c9-a078-b9bc12458789",
    "name" : "<p>Adds the specified tags to the specified Direct Connect resource. Each resour...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.TagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99271a89-2444-49c9-a078-b9bc12458789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "7d384c94-de31-4e82-ae4d-e40612494f67",
    "name" : "<p>Adds the specified tags to the specified Direct Connect resource. Each resour...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.TagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d384c94-de31-4e82-ae4d-e40612494f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "75a2feec-e166-443e-af5b-3ba5ab70a9a9",
    "name" : "<p>Adds the specified tags to the specified Direct Connect resource. Each resour...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.TagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75a2feec-e166-443e-af5b-3ba5ab70a9a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "2a90f797-0139-43fe-a79c-3360527ca375",
    "name" : "<p>Adds the specified tags to the specified Direct Connect resource. Each resour...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.TagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a90f797-0139-43fe-a79c-3360527ca375",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "dadf5c7b-4adf-47e9-928b-bc7758ae0b7e",
    "name" : "<p>Adds the specified tags to the specified Direct Connect resource. Each resour...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.TagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dadf5c7b-4adf-47e9-928b-bc7758ae0b7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3acf2add-23d9-4eb1-8ec6-3802e90fa118",
    "name" : "Stops the virtual interface failover test.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.StopBgpFailoverTest",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3acf2add-23d9-4eb1-8ec6-3802e90fa118",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StopBgpFailoverTest"
        }
      }
    }
  }, {
    "id" : "143cb556-1ccb-4f78-9bb0-5c7b4c21b45b",
    "name" : "Stops the virtual interface failover test.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.StopBgpFailoverTest",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "143cb556-1ccb-4f78-9bb0-5c7b4c21b45b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StopBgpFailoverTest"
        }
      }
    }
  }, {
    "id" : "d9f2a7fd-ff96-46e7-8634-fbb0672148f0",
    "name" : "Stops the virtual interface failover test.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.StopBgpFailoverTest",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceTest\" : {\n    \"virtualInterfaceId\" : { },\n    \"testId\" : { },\n    \"startTime\" : { },\n    \"testDurationInMinutes\" : { },\n    \"endTime\" : { },\n    \"bgpPeers\" : { },\n    \"ownerAccount\" : { },\n    \"status\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9f2a7fd-ff96-46e7-8634-fbb0672148f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StopBgpFailoverTest",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceTest" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceTestHistory"
                }, {
                  "description" : "Information about the virtual interface failover test."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3fc32e8c-96a5-4e6d-a6ea-413f71fcf0c5",
    "name" : "<p>Starts the virtual interface failover test that verifies your configuration m...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.StartBgpFailoverTest",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fc32e8c-96a5-4e6d-a6ea-413f71fcf0c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartBgpFailoverTest"
        }
      }
    }
  }, {
    "id" : "b1d0af4a-0fa7-4564-92cf-4a501b0e1dab",
    "name" : "<p>Starts the virtual interface failover test that verifies your configuration m...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.StartBgpFailoverTest",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1d0af4a-0fa7-4564-92cf-4a501b0e1dab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartBgpFailoverTest"
        }
      }
    }
  }, {
    "id" : "10ac7e7e-2b53-4568-af10-a952c9e222f8",
    "name" : "<p>Starts the virtual interface failover test that verifies your configuration m...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.StartBgpFailoverTest",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceTest\" : {\n    \"virtualInterfaceId\" : { },\n    \"testId\" : { },\n    \"startTime\" : { },\n    \"testDurationInMinutes\" : { },\n    \"endTime\" : { },\n    \"bgpPeers\" : { },\n    \"ownerAccount\" : { },\n    \"status\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10ac7e7e-2b53-4568-af10-a952c9e222f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartBgpFailoverTest",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceTest" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceTestHistory"
                }, {
                  "description" : "Information about the virtual interface failover test."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6531a487-428f-4946-9839-bc614f0d88ee",
    "name" : "Lists the virtual interface failover test history.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ListVirtualInterfaceTestHistory",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6531a487-428f-4946-9839-bc614f0d88ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListVirtualInterfaceTestHistory"
        }
      }
    }
  }, {
    "id" : "bbad0007-cdfd-4bab-92c2-fb801a43657a",
    "name" : "Lists the virtual interface failover test history.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ListVirtualInterfaceTestHistory",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbad0007-cdfd-4bab-92c2-fb801a43657a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListVirtualInterfaceTestHistory"
        }
      }
    }
  }, {
    "id" : "eaeae372-101d-4eb0-a3d8-47b8ce389238",
    "name" : "Lists the virtual interface failover test history.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ListVirtualInterfaceTestHistory",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceTestHistory\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eaeae372-101d-4eb0-a3d8-47b8ce389238",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListVirtualInterfaceTestHistory",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceTestHistory" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceTestHistoryList"
                }, {
                  "description" : "The ID of the tested virtual interface."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PaginationToken"
                }, {
                  "description" : "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5dd6e32e-a5a6-4c51-b1ab-302f12f7eb2e",
    "name" : "Removes the association between a MAC Security (MACsec) security key and an Dire...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DisassociateMacSecKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dd6e32e-a5a6-4c51-b1ab-302f12f7eb2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisassociateMacSecKey"
        }
      }
    }
  }, {
    "id" : "4341a546-13c8-45d9-be3e-cf1973edbb76",
    "name" : "Removes the association between a MAC Security (MACsec) security key and an Dire...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DisassociateMacSecKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4341a546-13c8-45d9-be3e-cf1973edbb76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisassociateMacSecKey"
        }
      }
    }
  }, {
    "id" : "1c75920d-7518-4aba-bc2e-1a57de6c35f3",
    "name" : "Removes the association between a MAC Security (MACsec) security key and an Dire...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DisassociateMacSecKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connectionId\" : { },\n  \"macSecKeys\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c75920d-7518-4aba-bc2e-1a57de6c35f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.454027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisassociateMacSecKey",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx)."
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys no longer associated with the dedicated connection."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "aab14db3-f974-442f-bcbe-4a6c46e2d409",
    "name" : "<p>Disassociates a connection from a link aggregation group (LAG). The connectio...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DisassociateConnectionFromLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aab14db3-f974-442f-bcbe-4a6c46e2d409",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisassociateConnectionFromLag"
        }
      }
    }
  }, {
    "id" : "ac76fe1d-65b0-4d05-a5cb-f5f5b2b9ce86",
    "name" : "<p>Disassociates a connection from a link aggregation group (LAG). The connectio...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DisassociateConnectionFromLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac76fe1d-65b0-4d05-a5cb-f5f5b2b9ce86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisassociateConnectionFromLag"
        }
      }
    }
  }, {
    "id" : "56002425-6528-49ef-a95b-728786416f31",
    "name" : "<p>Disassociates a connection from a link aggregation group (LAG). The connectio...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DisassociateConnectionFromLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56002425-6528-49ef-a95b-728786416f31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisassociateConnectionFromLag",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "8bd75b8b-701f-494c-ac97-eeb0cb1703eb",
    "name" : "<p>Displays all virtual interfaces for an Amazon Web Services account. Virtual i...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeVirtualInterfaces",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bd75b8b-701f-494c-ac97-eeb0cb1703eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeVirtualInterfaces"
        }
      }
    }
  }, {
    "id" : "8125f5dd-d3ea-4dcf-b2ad-449cef43fa81",
    "name" : "<p>Displays all virtual interfaces for an Amazon Web Services account. Virtual i...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeVirtualInterfaces",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8125f5dd-d3ea-4dcf-b2ad-449cef43fa81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeVirtualInterfaces"
        }
      }
    }
  }, {
    "id" : "9e031e69-c321-4c05-9aac-daa82515c62e",
    "name" : "<p>Displays all virtual interfaces for an Amazon Web Services account. Virtual i...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeVirtualInterfaces",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaces\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e031e69-c321-4c05-9aac-daa82515c62e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeVirtualInterfaces",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaces" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceList"
                }, {
                  "description" : "The virtual interfaces"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0a365bdf-9d2c-4d59-842e-85485d24fee6",
    "name" : "<p>Lists the virtual private gateways owned by the Amazon Web Services account.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeVirtualGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a365bdf-9d2c-4d59-842e-85485d24fee6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeVirtualGateways"
        }
      }
    }
  }, {
    "id" : "ab3c0ddb-2526-4a4a-aaaa-4a25f2be4a70",
    "name" : "<p>Lists the virtual private gateways owned by the Amazon Web Services account.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeVirtualGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab3c0ddb-2526-4a4a-aaaa-4a25f2be4a70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeVirtualGateways"
        }
      }
    }
  }, {
    "id" : "432950c5-cc29-471e-9b4f-a36555a1c6bc",
    "name" : "<p>Lists the virtual private gateways owned by the Amazon Web Services account.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeVirtualGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualGateways\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "432950c5-cc29-471e-9b4f-a36555a1c6bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeVirtualGateways",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualGateways" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayList"
                }, {
                  "description" : "The virtual private gateways."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d241abed-9e5f-4438-8a18-7578f452411e",
    "name" : "Describes the tags associated with the specified Direct Connect resources.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeTags",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d241abed-9e5f-4438-8a18-7578f452411e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeTags"
        }
      }
    }
  }, {
    "id" : "047f3d1d-eca6-4377-a2df-d829e12f7ff8",
    "name" : "Describes the tags associated with the specified Direct Connect resources.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeTags",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "047f3d1d-eca6-4377-a2df-d829e12f7ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeTags"
        }
      }
    }
  }, {
    "id" : "6b0c9ae4-3a51-46f2-8716-62bad54104bf",
    "name" : "Describes the tags associated with the specified Direct Connect resources.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeTags",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resourceTags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b0c9ae4-3a51-46f2-8716-62bad54104bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeTags",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceTags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResourceTagList"
                }, {
                  "description" : "Information about the tags."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "91991585-a161-4074-af59-5326c0020361",
    "name" : " Details about the router. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeRouterConfiguration",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91991585-a161-4074-af59-5326c0020361",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.453016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeRouterConfiguration"
        }
      }
    }
  }, {
    "id" : "6a65dba4-5ad3-45cd-925e-48693170c3e1",
    "name" : " Details about the router. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeRouterConfiguration",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a65dba4-5ad3-45cd-925e-48693170c3e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeRouterConfiguration"
        }
      }
    }
  }, {
    "id" : "5b588fa0-d4a9-4c3b-9026-80dd42af4722",
    "name" : " Details about the router. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeRouterConfiguration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceId\" : { },\n  \"router\" : {\n    \"software\" : { },\n    \"xsltTemplateName\" : { },\n    \"vendor\" : { },\n    \"routerTypeIdentifier\" : { },\n    \"xsltTemplateNameForMacSec\" : { },\n    \"platform\" : { }\n  },\n  \"customerRouterConfig\" : { },\n  \"virtualInterfaceName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b588fa0-d4a9-4c3b-9026-80dd42af4722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeRouterConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "router" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterType"
                }, {
                  "description" : "The details about the router."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID assigned to the virtual interface."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "Provides the details about a virtual interface's router."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "07c2964d-f118-4a92-8a81-b3bec2a41304",
    "name" : "Lists the Direct Connect locations in the current Amazon Web Services Region. Th...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLocations",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07c2964d-f118-4a92-8a81-b3bec2a41304",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLocations"
        }
      }
    }
  }, {
    "id" : "804651a8-7d11-4751-be08-346b60eec52b",
    "name" : "Lists the Direct Connect locations in the current Amazon Web Services Region. Th...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLocations",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "804651a8-7d11-4751-be08-346b60eec52b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLocations"
        }
      }
    }
  }, {
    "id" : "7d853caf-c759-4b68-a1fc-8d640ee4b698",
    "name" : "Lists the Direct Connect locations in the current Amazon Web Services Region. Th...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLocations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"locations\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d853caf-c759-4b68-a1fc-8d640ee4b698",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLocations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "locations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationList"
                }, {
                  "description" : "The locations."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "8162e0fc-2fd0-46d1-ab06-a61603947118",
    "name" : "<p>Gets the LOA-CFA for a connection, interconnect, or link aggregation group (L...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8162e0fc-2fd0-46d1-ab06-a61603947118",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLoa"
        }
      }
    }
  }, {
    "id" : "648e2307-ea4d-46c1-aee8-5fe8f8b93510",
    "name" : "<p>Gets the LOA-CFA for a connection, interconnect, or link aggregation group (L...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "648e2307-ea4d-46c1-aee8-5fe8f8b93510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLoa"
        }
      }
    }
  }, {
    "id" : "4ec46399-df9f-4724-ad01-a4929bf18333",
    "name" : "<p>Gets the LOA-CFA for a connection, interconnect, or link aggregation group (L...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"loaContent\" : { },\n  \"loaContentType\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ec46399-df9f-4724-ad01-a4929bf18333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLoa",
          "schema" : {
            "type" : "object",
            "properties" : {
              "loaContent" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaContent"
                }, {
                  "description" : "The binary contents of the LOA-CFA document."
                } ]
              },
              "loaContentType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaContentType"
                }, {
                  "description" : "The standard media type for the LOA-CFA document. The only supported value is application/pdf."
                } ]
              }
            },
            "description" : "Information about a Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection."
          }
        }
      }
    }
  }, {
    "id" : "f51f4ba2-2ca7-4091-a7f8-e715db4b0a6a",
    "name" : "Describes all your link aggregation groups (LAG) or the specified LAG.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLags",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f51f4ba2-2ca7-4091-a7f8-e715db4b0a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLags"
        }
      }
    }
  }, {
    "id" : "a019c376-a115-428a-ab0b-789724b2abb2",
    "name" : "Describes all your link aggregation groups (LAG) or the specified LAG.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLags",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a019c376-a115-428a-ab0b-789724b2abb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLags"
        }
      }
    }
  }, {
    "id" : "7217f83e-01c7-404f-808d-30217f7d9ab5",
    "name" : "Describes all your link aggregation groups (LAG) or the specified LAG.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeLags",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7217f83e-01c7-404f-808d-30217f7d9ab5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeLags",
          "schema" : {
            "type" : "object",
            "properties" : {
              "lags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagList"
                }, {
                  "description" : "The LAGs."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "457ad03c-0323-497f-bc67-be085c084d2b",
    "name" : "Lists the interconnects owned by the Amazon Web Services account or only the spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeInterconnects",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "457ad03c-0323-497f-bc67-be085c084d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeInterconnects"
        }
      }
    }
  }, {
    "id" : "e44c2869-b01b-4431-beb8-a546a8c46252",
    "name" : "Lists the interconnects owned by the Amazon Web Services account or only the spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeInterconnects",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e44c2869-b01b-4431-beb8-a546a8c46252",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeInterconnects"
        }
      }
    }
  }, {
    "id" : "17b51ca7-1765-4f64-8178-6927c0c54416",
    "name" : "Lists the interconnects owned by the Amazon Web Services account or only the spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeInterconnects",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"interconnects\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17b51ca7-1765-4f64-8178-6927c0c54416",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeInterconnects",
          "schema" : {
            "type" : "object",
            "properties" : {
              "interconnects" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InterconnectList"
                }, {
                  "description" : "The interconnects."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5fedb561-5358-451a-a35d-033a972558e1",
    "name" : "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for the s...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeInterconnectLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fedb561-5358-451a-a35d-033a972558e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeInterconnectLoa"
        }
      }
    }
  }, {
    "id" : "82acce46-faee-41c2-ab2a-ed0875ccba91",
    "name" : "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for the s...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeInterconnectLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82acce46-faee-41c2-ab2a-ed0875ccba91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeInterconnectLoa"
        }
      }
    }
  }, {
    "id" : "ed46d705-e9e7-4d7f-a2f3-e941f589bc7f",
    "name" : "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for the s...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeInterconnectLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"loa\" : {\n    \"loaContent\" : { },\n    \"loaContentType\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed46d705-e9e7-4d7f-a2f3-e941f589bc7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeInterconnectLoa",
          "schema" : {
            "type" : "object",
            "properties" : {
              "loa" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Loa"
                }, {
                  "description" : "The Letter of Authorization - Connecting Facility Assignment (LOA-CFA)."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ce86de1a-693f-409c-a474-2b12438fe8b4",
    "name" : "<p>Lists the hosted connections that have been provisioned on the specified inte...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeHostedConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce86de1a-693f-409c-a474-2b12438fe8b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeHostedConnections"
        }
      }
    }
  }, {
    "id" : "127c3317-3a00-4ffa-afc4-7bcaf87ff4f7",
    "name" : "<p>Lists the hosted connections that have been provisioned on the specified inte...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeHostedConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "127c3317-3a00-4ffa-afc4-7bcaf87ff4f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeHostedConnections"
        }
      }
    }
  }, {
    "id" : "718cafab-61dd-44d9-a73f-0341f5deb75a",
    "name" : "<p>Lists the hosted connections that have been provisioned on the specified inte...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeHostedConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connections\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "718cafab-61dd-44d9-a73f-0341f5deb75a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeHostedConnections",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionList"
                }, {
                  "description" : "The connections."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9e351915-4328-4b0d-be00-1bd9b1c7e754",
    "name" : "Lists all your Direct Connect gateways or only the specified Direct Connect gate...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e351915-4328-4b0d-be00-1bd9b1c7e754",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGateways"
        }
      }
    }
  }, {
    "id" : "5110b4b1-b11a-430b-ad39-b4405b80d1e0",
    "name" : "Lists all your Direct Connect gateways or only the specified Direct Connect gate...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5110b4b1-b11a-430b-ad39-b4405b80d1e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGateways"
        }
      }
    }
  }, {
    "id" : "24c66aec-4aaf-41a0-9965-61603b458f82",
    "name" : "Lists all your Direct Connect gateways or only the specified Direct Connect gate...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGateways",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"directConnectGateways\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24c66aec-4aaf-41a0-9965-61603b458f82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.452039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGateways",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGateways" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayList"
                }, {
                  "description" : "The Direct Connect gateways."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PaginationToken"
                }, {
                  "description" : "The token to retrieve the next page."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e9604d66-7bc7-4bd6-bd41-a7c3f478b373",
    "name" : "Lists the attachments between your Direct Connect gateways and virtual interface...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAttachments",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9604d66-7bc7-4bd6-bd41-a7c3f478b373",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAttachments"
        }
      }
    }
  }, {
    "id" : "a2c05417-66d7-4c27-aa37-2670206449f0",
    "name" : "Lists the attachments between your Direct Connect gateways and virtual interface...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAttachments",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2c05417-66d7-4c27-aa37-2670206449f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAttachments"
        }
      }
    }
  }, {
    "id" : "5e1a9243-5a91-4789-95fb-a96969f5bea9",
    "name" : "Lists the attachments between your Direct Connect gateways and virtual interface...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAttachments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAttachments\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e1a9243-5a91-4789-95fb-a96969f5bea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAttachments",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAttachments" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAttachmentList"
                }, {
                  "description" : "The attachments."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PaginationToken"
                }, {
                  "description" : "The token to retrieve the next page."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d45ba529-3a57-4093-a656-46dc4ef21ec8",
    "name" : "<p>Lists the associations between your Direct Connect gateways and virtual priva...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociations",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d45ba529-3a57-4093-a656-46dc4ef21ec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAssociations"
        }
      }
    }
  }, {
    "id" : "8b4b5c65-495d-45b3-8a63-266e000538a4",
    "name" : "<p>Lists the associations between your Direct Connect gateways and virtual priva...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociations",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b4b5c65-495d-45b3-8a63-266e000538a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAssociations"
        }
      }
    }
  }, {
    "id" : "23cd839a-2af0-4ddb-b892-57c413d91c72",
    "name" : "<p>Lists the associations between your Direct Connect gateways and virtual priva...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"directConnectGatewayAssociations\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23cd839a-2af0-4ddb-b892-57c413d91c72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAssociations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAssociationList"
                }, {
                  "description" : "Information about the associations."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PaginationToken"
                }, {
                  "description" : "The token to retrieve the next page."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6735ac7d-5121-4cba-9671-d0e93efb23cc",
    "name" : "Describes one or more association proposals for connection between a virtual pri...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociationProposals",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6735ac7d-5121-4cba-9671-d0e93efb23cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAssociationProposals"
        }
      }
    }
  }, {
    "id" : "db67be68-e1f1-441b-ba22-f692a0d3d69d",
    "name" : "Describes one or more association proposals for connection between a virtual pri...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociationProposals",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db67be68-e1f1-441b-ba22-f692a0d3d69d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAssociationProposals"
        }
      }
    }
  }, {
    "id" : "fc1a57c8-4d12-4f1f-9e45-ec1cb843787a",
    "name" : "Describes one or more association proposals for connection between a virtual pri...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociationProposals",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociationProposals\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc1a57c8-4d12-4f1f-9e45-ec1cb843787a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeDirectConnectGatewayAssociationProposals",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociationProposals" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAssociationProposalList"
                }, {
                  "description" : "Describes the Direct Connect gateway association proposals."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PaginationToken"
                }, {
                  "description" : "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b1b91bac-aba7-4d50-bfe4-c6053e01a350",
    "name" : "Get and view a list of customer agreements, along with their signed status and w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeCustomerMetadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1b91bac-aba7-4d50-bfe4-c6053e01a350",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeCustomerMetadata"
        }
      }
    }
  }, {
    "id" : "6e591c1e-fdf1-424d-a75d-353936ec929d",
    "name" : "Get and view a list of customer agreements, along with their signed status and w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeCustomerMetadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e591c1e-fdf1-424d-a75d-353936ec929d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeCustomerMetadata"
        }
      }
    }
  }, {
    "id" : "e706ad0a-dc77-4b24-acfe-83db9f94cadd",
    "name" : "Get and view a list of customer agreements, along with their signed status and w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeCustomerMetadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nniPartnerType\" : { },\n  \"agreements\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e706ad0a-dc77-4b24-acfe-83db9f94cadd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeCustomerMetadata",
          "schema" : {
            "type" : "object",
            "properties" : {
              "agreements" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AgreementList"
                }, {
                  "description" : "The list of customer agreements."
                } ]
              },
              "nniPartnerType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NniPartnerType"
                }, {
                  "description" : "<p>The type of network-to-network interface (NNI) partner. The partner type will be one of the following:</p> <ul> <li> <p>V1: This partner can only allocate 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps subgigabit connections.</p> </li> <li> <p>V2: This partner can only allocate 1GB, 2GB, 5GB, or 10GB hosted connections.</p> </li> <li> <p>nonPartner: The customer is not a partner.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f5771653-2a35-42b9-9d21-fbe04c9b2899",
    "name" : "<p>Deprecated. Use <a>DescribeHostedConnections</a> instead.</p> <p>Lists the co...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnectionsOnInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5771653-2a35-42b9-9d21-fbe04c9b2899",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnectionsOnInterconnect"
        }
      }
    }
  }, {
    "id" : "43fea357-0e3f-47d5-952a-034510bacc2f",
    "name" : "<p>Deprecated. Use <a>DescribeHostedConnections</a> instead.</p> <p>Lists the co...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnectionsOnInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43fea357-0e3f-47d5-952a-034510bacc2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnectionsOnInterconnect"
        }
      }
    }
  }, {
    "id" : "8fcb1e12-e2c4-47cc-b19b-5c554e0123b9",
    "name" : "<p>Deprecated. Use <a>DescribeHostedConnections</a> instead.</p> <p>Lists the co...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnectionsOnInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connections\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fcb1e12-e2c4-47cc-b19b-5c554e0123b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnectionsOnInterconnect",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionList"
                }, {
                  "description" : "The connections."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d21b8217-2c92-41de-bce3-34a7c88a552d",
    "name" : "Displays the specified connection or all connections in this Region.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d21b8217-2c92-41de-bce3-34a7c88a552d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnections"
        }
      }
    }
  }, {
    "id" : "19bd3f7e-79f2-4804-84ed-2aaec4e4166a",
    "name" : "Displays the specified connection or all connections in this Region.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19bd3f7e-79f2-4804-84ed-2aaec4e4166a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnections"
        }
      }
    }
  }, {
    "id" : "87f61663-5b69-4f64-8d9f-67f0c2e314a5",
    "name" : "Displays the specified connection or all connections in this Region.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connections\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87f61663-5b69-4f64-8d9f-67f0c2e314a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnections",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionList"
                }, {
                  "description" : "The connections."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4e366799-f6d4-4079-a2ed-2700d859704b",
    "name" : "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for a con...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnectionLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e366799-f6d4-4079-a2ed-2700d859704b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnectionLoa"
        }
      }
    }
  }, {
    "id" : "c4a912c4-3c99-45af-8db6-8f855cb9075a",
    "name" : "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for a con...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnectionLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4a912c4-3c99-45af-8db6-8f855cb9075a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnectionLoa"
        }
      }
    }
  }, {
    "id" : "78c30a31-437d-4bcd-8a82-fb07a97da879",
    "name" : "<p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA for a con...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DescribeConnectionLoa",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"loa\" : {\n    \"loaContent\" : { },\n    \"loaContentType\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78c30a31-437d-4bcd-8a82-fb07a97da879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.4511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DescribeConnectionLoa",
          "schema" : {
            "type" : "object",
            "properties" : {
              "loa" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Loa"
                }, {
                  "description" : "The Letter of Authorization - Connecting Facility Assignment (LOA-CFA)."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "061d4c4c-6c7c-4b67-b849-4926841b1e51",
    "name" : "Deletes a virtual interface.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "061d4c4c-6c7c-4b67-b849-4926841b1e51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.451016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteVirtualInterface"
        }
      }
    }
  }, {
    "id" : "b04c46a2-ebfb-42de-bc6c-398ac3f46651",
    "name" : "Deletes a virtual interface.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b04c46a2-ebfb-42de-bc6c-398ac3f46651",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteVirtualInterface"
        }
      }
    }
  }, {
    "id" : "a0f120d8-3b3b-4254-af8a-c81c37451391",
    "name" : "Deletes a virtual interface.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceState\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0f120d8-3b3b-4254-af8a-c81c37451391",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4d4f12c9-0db0-4dc3-bd6a-6266255e061c",
    "name" : "Deletes the specified link aggregation group (LAG). You cannot delete a LAG if i...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d4f12c9-0db0-4dc3-bd6a-6266255e061c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteLag"
        }
      }
    }
  }, {
    "id" : "aeb0da87-73d0-4923-8a37-1e3164520183",
    "name" : "Deletes the specified link aggregation group (LAG). You cannot delete a LAG if i...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeb0da87-73d0-4923-8a37-1e3164520183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteLag"
        }
      }
    }
  }, {
    "id" : "b9b8d8d6-a630-4da2-b8fb-b18c5921c835",
    "name" : "Deletes the specified link aggregation group (LAG). You cannot delete a LAG if i...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"minimumLinks\" : { },\n  \"allowsHostedConnections\" : { },\n  \"awsDevice\" : { },\n  \"macSecCapable\" : { },\n  \"connectionsBandwidth\" : { },\n  \"lagName\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"numberOfConnections\" : { },\n  \"lagState\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"connections\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9b8d8d6-a630-4da2-b8fb-b18c5921c835",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteLag",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connectionsBandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps. "
                } ]
              },
              "numberOfConnections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Count"
                }, {
                  "description" : "The number of physical dedicated connections bundled by the LAG, up to a maximum of 10."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the LAG."
                } ]
              },
              "lagName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagName"
                }, {
                  "description" : "The name of the LAG."
                } ]
              },
              "lagState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagState"
                }, {
                  "description" : "<p>The state of the LAG. The following are the possible values:</p> <ul> <li> <p> <code>requested</code>: The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.</p> </li> <li> <p> <code>pending</code>: The LAG has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is established and the LAG is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The LAG is being deleted.</p> </li> <li> <p> <code>deleted</code>: The LAG is deleted.</p> </li> <li> <p> <code>unknown</code>: The state of the LAG is not available.</p> </li> </ul>"
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the LAG."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "minimumLinks" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Count"
                }, {
                  "description" : "The minimum number of physical dedicated connections that must be operational for the LAG itself to be operational."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint that hosts the LAG."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that hosts the LAG."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "connections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionList"
                }, {
                  "description" : "The connections bundled by the LAG."
                } ]
              },
              "allowsHostedConnections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BooleanFlag"
                }, {
                  "description" : "Indicates whether the LAG can host other connections."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the LAG."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the LAG."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the LAG supports MAC Security (MACsec)."
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The LAG MAC Security (MACsec) encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the LAG."
                } ]
              }
            },
            "description" : "Information about a link aggregation group (LAG)."
          }
        }
      }
    }
  }, {
    "id" : "7b2fddb9-cfd4-4a8c-95ec-3b215484d873",
    "name" : "<p>Deletes the specified interconnect.</p> <note> <p>Intended for use by Direct ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b2fddb9-cfd4-4a8c-95ec-3b215484d873",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.45037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteInterconnect"
        }
      }
    }
  }, {
    "id" : "f23ef562-9c0c-43f2-9edc-a9bf21b3e456",
    "name" : "<p>Deletes the specified interconnect.</p> <note> <p>Intended for use by Direct ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f23ef562-9c0c-43f2-9edc-a9bf21b3e456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteInterconnect"
        }
      }
    }
  }, {
    "id" : "d48adda3-60e1-4123-8a09-12a42823ac27",
    "name" : "<p>Deletes the specified interconnect.</p> <note> <p>Intended for use by Direct ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"interconnectState\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d48adda3-60e1-4123-8a09-12a42823ac27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteInterconnect",
          "schema" : {
            "type" : "object",
            "properties" : {
              "interconnectState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InterconnectState"
                }, {
                  "description" : "<p>The state of the interconnect. The following are the possible values:</p> <ul> <li> <p> <code>requested</code>: The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The interconnect is approved, and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up, and the interconnect is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The interconnect is being deleted.</p> </li> <li> <p> <code>deleted</code>: The interconnect is deleted.</p> </li> <li> <p> <code>unknown</code>: The state of the interconnect is not available.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3eaa1429-4410-4cc6-bafe-4048da5f4746",
    "name" : "Deletes the association proposal request between the specified Direct Connect ga...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3eaa1429-4410-4cc6-bafe-4048da5f4746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450256Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGatewayAssociationProposal"
        }
      }
    }
  }, {
    "id" : "8686c746-1537-4ee4-9f64-b087ece7faa1",
    "name" : "Deletes the association proposal request between the specified Direct Connect ga...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8686c746-1537-4ee4-9f64-b087ece7faa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGatewayAssociationProposal"
        }
      }
    }
  }, {
    "id" : "10ca87e8-f78d-47f4-9b11-1fc1dac0a374",
    "name" : "Deletes the association proposal request between the specified Direct Connect ga...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociationProposal\" : {\n    \"associatedGateway\" : {\n      \"id\" : { },\n      \"type\" : { },\n      \"ownerAccount\" : { },\n      \"region\" : { }\n    },\n    \"existingAllowedPrefixesToDirectConnectGateway\" : { },\n    \"directConnectGatewayOwnerAccount\" : { },\n    \"proposalState\" : { },\n    \"requestedAllowedPrefixesToDirectConnectGateway\" : { },\n    \"directConnectGatewayId\" : { },\n    \"proposalId\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10ca87e8-f78d-47f4-9b11-1fc1dac0a374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGatewayAssociationProposal",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociationProposal" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAssociationProposal"
                }, {
                  "description" : "The ID of the associated gateway."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "72b031b7-4753-4011-bfed-33c84f2ae219",
    "name" : "<p>Deletes the association between the specified Direct Connect gateway and virt...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72b031b7-4753-4011-bfed-33c84f2ae219",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGatewayAssociation"
        }
      }
    }
  }, {
    "id" : "fa80041e-1298-48d6-ac4f-d613c6c347e5",
    "name" : "<p>Deletes the association between the specified Direct Connect gateway and virt...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa80041e-1298-48d6-ac4f-d613c6c347e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGatewayAssociation"
        }
      }
    }
  }, {
    "id" : "f624c17c-63bc-49a2-8032-bd5cbd437315",
    "name" : "<p>Deletes the association between the specified Direct Connect gateway and virt...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociation\" : {\n    \"associatedGateway\" : {\n      \"id\" : { },\n      \"type\" : { },\n      \"ownerAccount\" : { },\n      \"region\" : { }\n    },\n    \"virtualGatewayId\" : { },\n    \"directConnectGatewayOwnerAccount\" : { },\n    \"virtualGatewayOwnerAccount\" : { },\n    \"virtualGatewayRegion\" : { },\n    \"associationState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"allowedPrefixesToDirectConnectGateway\" : { },\n    \"associationId\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f624c17c-63bc-49a2-8032-bd5cbd437315",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.450041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGatewayAssociation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociation" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAssociation"
                }, {
                  "description" : "Information about the deleted association."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "58c47f71-325a-435d-b65a-75b6ee25535c",
    "name" : "Deletes the specified Direct Connect gateway. You must first delete all virtual ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58c47f71-325a-435d-b65a-75b6ee25535c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGateway"
        }
      }
    }
  }, {
    "id" : "92ec02fb-4fb4-4f42-a511-4ab11719efe9",
    "name" : "Deletes the specified Direct Connect gateway. You must first delete all virtual ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92ec02fb-4fb4-4f42-a511-4ab11719efe9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.449885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGateway"
        }
      }
    }
  }, {
    "id" : "9c768680-3cbf-4649-be2b-bc79b89261f7",
    "name" : "Deletes the specified Direct Connect gateway. You must first delete all virtual ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGateway\" : {\n    \"amazonSideAsn\" : { },\n    \"directConnectGatewayName\" : { },\n    \"directConnectGatewayState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"ownerAccount\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c768680-3cbf-4649-be2b-bc79b89261f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteDirectConnectGateway",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGateway" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGateway"
                }, {
                  "description" : "The Direct Connect gateway."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e2b1cc17-4cd3-4c54-a97e-a891f6dc038f",
    "name" : "<p>Deletes the specified connection.</p> <p>Deleting a connection only stops the...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2b1cc17-4cd3-4c54-a97e-a891f6dc038f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConnection"
        }
      }
    }
  }, {
    "id" : "33422857-df8a-4f66-9813-080f93f23d00",
    "name" : "<p>Deletes the specified connection.</p> <p>Deleting a connection only stops the...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33422857-df8a-4f66-9813-080f93f23d00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.449746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConnection"
        }
      }
    }
  }, {
    "id" : "76bf3bfe-9ab6-41f4-9c31-6d61faf9d171",
    "name" : "<p>Deletes the specified connection.</p> <p>Deleting a connection only stops the...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76bf3bfe-9ab6-41f4-9c31-6d61faf9d171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConnection",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "920f89c2-97a8-455c-b9f4-b8c189b48b73",
    "name" : "<p>Deletes the specified BGP peer on the specified virtual interface with the sp...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteBGPPeer",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "920f89c2-97a8-455c-b9f4-b8c189b48b73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.449192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBGPPeer"
        }
      }
    }
  }, {
    "id" : "847d0725-e8aa-4128-b739-53e9e9612bab",
    "name" : "<p>Deletes the specified BGP peer on the specified virtual interface with the sp...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteBGPPeer",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "847d0725-e8aa-4128-b739-53e9e9612bab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.449169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBGPPeer"
        }
      }
    }
  }, {
    "id" : "704961f4-9b60-4cb1-b0cc-c622c9fcfc9d",
    "name" : "<p>Deletes the specified BGP peer on the specified virtual interface with the sp...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.DeleteBGPPeer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterface\" : {\n    \"ownerAccount\" : { },\n    \"bgpPeers\" : { },\n    \"virtualInterfaceState\" : { },\n    \"awsDeviceV2\" : { },\n    \"virtualInterfaceId\" : { },\n    \"virtualGatewayId\" : { },\n    \"vlan\" : { },\n    \"jumboFrameCapable\" : { },\n    \"addressFamily\" : { },\n    \"customerAddress\" : { },\n    \"routeFilterPrefixes\" : { },\n    \"amazonSideAsn\" : { },\n    \"authKey\" : { },\n    \"virtualInterfaceType\" : { },\n    \"directConnectGatewayId\" : { },\n    \"mtu\" : { },\n    \"tags\" : { },\n    \"siteLinkEnabled\" : { },\n    \"customerRouterConfig\" : { },\n    \"connectionId\" : { },\n    \"location\" : { },\n    \"region\" : { },\n    \"awsLogicalDeviceId\" : { },\n    \"asn\" : { },\n    \"virtualInterfaceName\" : { },\n    \"amazonAddress\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "704961f4-9b60-4cb1-b0cc-c622c9fcfc9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.449144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBGPPeer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterface" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterface"
                }, {
                  "description" : "The virtual interface."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "442fca5b-b3be-4239-bf44-5a7715388190",
    "name" : "<p>Creates a transit virtual interface. A transit virtual interface should be us...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "442fca5b-b3be-4239-bf44-5a7715388190",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.449012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "a25b98e3-fe11-405b-b03c-d9d8cf2a63fd",
    "name" : "<p>Creates a transit virtual interface. A transit virtual interface should be us...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a25b98e3-fe11-405b-b03c-d9d8cf2a63fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "0e50049a-873e-4776-a805-e64538d31fc5",
    "name" : "<p>Creates a transit virtual interface. A transit virtual interface should be us...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e50049a-873e-4776-a805-e64538d31fc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "0933ab97-8e13-4c76-9aef-c8548749a06c",
    "name" : "<p>Creates a transit virtual interface. A transit virtual interface should be us...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0933ab97-8e13-4c76-9aef-c8548749a06c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "69688b1d-8040-41d2-8071-7478539821b8",
    "name" : "<p>Creates a transit virtual interface. A transit virtual interface should be us...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterface\" : {\n    \"ownerAccount\" : { },\n    \"bgpPeers\" : { },\n    \"virtualInterfaceState\" : { },\n    \"awsDeviceV2\" : { },\n    \"virtualInterfaceId\" : { },\n    \"virtualGatewayId\" : { },\n    \"vlan\" : { },\n    \"jumboFrameCapable\" : { },\n    \"addressFamily\" : { },\n    \"customerAddress\" : { },\n    \"routeFilterPrefixes\" : { },\n    \"amazonSideAsn\" : { },\n    \"authKey\" : { },\n    \"virtualInterfaceType\" : { },\n    \"directConnectGatewayId\" : { },\n    \"mtu\" : { },\n    \"tags\" : { },\n    \"siteLinkEnabled\" : { },\n    \"customerRouterConfig\" : { },\n    \"connectionId\" : { },\n    \"location\" : { },\n    \"region\" : { },\n    \"awsLogicalDeviceId\" : { },\n    \"asn\" : { },\n    \"virtualInterfaceName\" : { },\n    \"amazonAddress\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69688b1d-8040-41d2-8071-7478539821b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateTransitVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterface" : {
                "$ref" : "#/components/schemas/VirtualInterface"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "05f15784-ad1f-48b9-8fd0-b979a801eec2",
    "name" : "<p>Creates a public virtual interface. A virtual interface is the VLAN that tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05f15784-ad1f-48b9-8fd0-b979a801eec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "aa878ae5-d64e-43ab-aa17-53e886a47e3c",
    "name" : "<p>Creates a public virtual interface. A virtual interface is the VLAN that tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa878ae5-d64e-43ab-aa17-53e886a47e3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "5582b0f0-3615-41de-99f8-5d2f41ff5fc0",
    "name" : "<p>Creates a public virtual interface. A virtual interface is the VLAN that tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5582b0f0-3615-41de-99f8-5d2f41ff5fc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "3c1d0d26-2ef2-4708-878e-07befb29133a",
    "name" : "<p>Creates a public virtual interface. A virtual interface is the VLAN that tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c1d0d26-2ef2-4708-878e-07befb29133a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "21dbcf94-578b-4d55-8f42-aec8aa574dc8",
    "name" : "<p>Creates a public virtual interface. A virtual interface is the VLAN that tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ownerAccount\" : { },\n  \"bgpPeers\" : { },\n  \"virtualInterfaceState\" : { },\n  \"awsDeviceV2\" : { },\n  \"virtualInterfaceId\" : { },\n  \"virtualGatewayId\" : { },\n  \"vlan\" : { },\n  \"jumboFrameCapable\" : { },\n  \"addressFamily\" : { },\n  \"customerAddress\" : { },\n  \"routeFilterPrefixes\" : { },\n  \"amazonSideAsn\" : { },\n  \"authKey\" : { },\n  \"virtualInterfaceType\" : { },\n  \"directConnectGatewayId\" : { },\n  \"mtu\" : { },\n  \"tags\" : { },\n  \"siteLinkEnabled\" : { },\n  \"customerRouterConfig\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"asn\" : { },\n  \"virtualInterfaceName\" : { },\n  \"amazonAddress\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21dbcf94-578b-4d55-8f42-aec8aa574dc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePublicVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the virtual interface."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID of the virtual interface."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "virtualInterfaceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceType"
                }, {
                  "description" : "The type of virtual interface. The possible values are <code>private</code> and <code>public</code>."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "asn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ASN"
                }, {
                  "description" : "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
                } ]
              },
              "amazonSideAsn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LongAsn"
                }, {
                  "description" : "The autonomous system number (ASN) for the Amazon side of the connection."
                } ]
              },
              "authKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPAuthKey"
                }, {
                  "description" : "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
                } ]
              },
              "amazonAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonAddress"
                }, {
                  "description" : "The IP address assigned to the Amazon interface."
                } ]
              },
              "customerAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerAddress"
                }, {
                  "description" : "The IP address assigned to the customer interface."
                } ]
              },
              "addressFamily" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AddressFamily"
                }, {
                  "description" : "The address family for the BGP peer."
                } ]
              },
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              },
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "mtu" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MTU"
                }, {
                  "description" : "The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "virtualGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayId"
                }, {
                  "description" : "The ID of the virtual private gateway. Applies only to private virtual interfaces."
                } ]
              },
              "directConnectGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayId"
                }, {
                  "description" : "The ID of the Direct Connect gateway."
                } ]
              },
              "routeFilterPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouteFilterPrefixList"
                }, {
                  "description" : "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
                } ]
              },
              "bgpPeers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPPeerList"
                }, {
                  "description" : "The BGP peers configured on this virtual interface."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the virtual interface is located."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the virtual interface."
                } ]
              },
              "siteLinkEnabled" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SiteLinkEnabled"
                }, {
                  "description" : "Indicates whether SiteLink is enabled."
                } ]
              }
            },
            "description" : "Information about a virtual interface."
          }
        }
      }
    }
  }, {
    "id" : "dad30543-f137-42f1-b876-ba33ea0e3c15",
    "name" : "<p>Creates a private virtual interface. A virtual interface is the VLAN that tra...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dad30543-f137-42f1-b876-ba33ea0e3c15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "3542be26-eaa1-405a-85ea-142fbce15a16",
    "name" : "<p>Creates a private virtual interface. A virtual interface is the VLAN that tra...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3542be26-eaa1-405a-85ea-142fbce15a16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "25f7c22e-2104-4628-8a4e-70caceee70dc",
    "name" : "<p>Creates a private virtual interface. A virtual interface is the VLAN that tra...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25f7c22e-2104-4628-8a4e-70caceee70dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "56b547dc-74f7-4b27-bdb6-ee585ff50d1e",
    "name" : "<p>Creates a private virtual interface. A virtual interface is the VLAN that tra...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56b547dc-74f7-4b27-bdb6-ee585ff50d1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "69859d79-341b-4720-8a4d-3f664a4ff74c",
    "name" : "<p>Creates a private virtual interface. A virtual interface is the VLAN that tra...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ownerAccount\" : { },\n  \"bgpPeers\" : { },\n  \"virtualInterfaceState\" : { },\n  \"awsDeviceV2\" : { },\n  \"virtualInterfaceId\" : { },\n  \"virtualGatewayId\" : { },\n  \"vlan\" : { },\n  \"jumboFrameCapable\" : { },\n  \"addressFamily\" : { },\n  \"customerAddress\" : { },\n  \"routeFilterPrefixes\" : { },\n  \"amazonSideAsn\" : { },\n  \"authKey\" : { },\n  \"virtualInterfaceType\" : { },\n  \"directConnectGatewayId\" : { },\n  \"mtu\" : { },\n  \"tags\" : { },\n  \"siteLinkEnabled\" : { },\n  \"customerRouterConfig\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"asn\" : { },\n  \"virtualInterfaceName\" : { },\n  \"amazonAddress\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69859d79-341b-4720-8a4d-3f664a4ff74c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.448109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePrivateVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the virtual interface."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID of the virtual interface."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "virtualInterfaceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceType"
                }, {
                  "description" : "The type of virtual interface. The possible values are <code>private</code> and <code>public</code>."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "asn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ASN"
                }, {
                  "description" : "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
                } ]
              },
              "amazonSideAsn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LongAsn"
                }, {
                  "description" : "The autonomous system number (ASN) for the Amazon side of the connection."
                } ]
              },
              "authKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPAuthKey"
                }, {
                  "description" : "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
                } ]
              },
              "amazonAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonAddress"
                }, {
                  "description" : "The IP address assigned to the Amazon interface."
                } ]
              },
              "customerAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerAddress"
                }, {
                  "description" : "The IP address assigned to the customer interface."
                } ]
              },
              "addressFamily" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AddressFamily"
                }, {
                  "description" : "The address family for the BGP peer."
                } ]
              },
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              },
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "mtu" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MTU"
                }, {
                  "description" : "The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "virtualGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayId"
                }, {
                  "description" : "The ID of the virtual private gateway. Applies only to private virtual interfaces."
                } ]
              },
              "directConnectGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayId"
                }, {
                  "description" : "The ID of the Direct Connect gateway."
                } ]
              },
              "routeFilterPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouteFilterPrefixList"
                }, {
                  "description" : "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
                } ]
              },
              "bgpPeers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPPeerList"
                }, {
                  "description" : "The BGP peers configured on this virtual interface."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the virtual interface is located."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the virtual interface."
                } ]
              },
              "siteLinkEnabled" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SiteLinkEnabled"
                }, {
                  "description" : "Indicates whether SiteLink is enabled."
                } ]
              }
            },
            "description" : "Information about a virtual interface."
          }
        }
      }
    }
  }, {
    "id" : "7e3cc00b-eaec-435e-a86f-27b00c81a14d",
    "name" : "<p>Creates a link aggregation group (LAG) with the specified number of bundled p...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e3cc00b-eaec-435e-a86f-27b00c81a14d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.447517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLag"
        }
      }
    }
  }, {
    "id" : "0c80243d-9729-4471-9d26-2ae286f6450e",
    "name" : "<p>Creates a link aggregation group (LAG) with the specified number of bundled p...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c80243d-9729-4471-9d26-2ae286f6450e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.447495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLag"
        }
      }
    }
  }, {
    "id" : "e4320508-7433-4d37-bf77-1dc2d3385c70",
    "name" : "<p>Creates a link aggregation group (LAG) with the specified number of bundled p...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4320508-7433-4d37-bf77-1dc2d3385c70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.447472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLag"
        }
      }
    }
  }, {
    "id" : "ba4ecd91-0b18-451f-8865-54aa1f225175",
    "name" : "<p>Creates a link aggregation group (LAG) with the specified number of bundled p...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba4ecd91-0b18-451f-8865-54aa1f225175",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.447449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLag"
        }
      }
    }
  }, {
    "id" : "d605b162-d0e7-4c79-a155-b718de637a4a",
    "name" : "<p>Creates a link aggregation group (LAG) with the specified number of bundled p...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"minimumLinks\" : { },\n  \"allowsHostedConnections\" : { },\n  \"awsDevice\" : { },\n  \"macSecCapable\" : { },\n  \"connectionsBandwidth\" : { },\n  \"lagName\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"numberOfConnections\" : { },\n  \"lagState\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"connections\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d605b162-d0e7-4c79-a155-b718de637a4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.447415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateLag",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connectionsBandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps. "
                } ]
              },
              "numberOfConnections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Count"
                }, {
                  "description" : "The number of physical dedicated connections bundled by the LAG, up to a maximum of 10."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the LAG."
                } ]
              },
              "lagName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagName"
                }, {
                  "description" : "The name of the LAG."
                } ]
              },
              "lagState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagState"
                }, {
                  "description" : "<p>The state of the LAG. The following are the possible values:</p> <ul> <li> <p> <code>requested</code>: The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.</p> </li> <li> <p> <code>pending</code>: The LAG has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is established and the LAG is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The LAG is being deleted.</p> </li> <li> <p> <code>deleted</code>: The LAG is deleted.</p> </li> <li> <p> <code>unknown</code>: The state of the LAG is not available.</p> </li> </ul>"
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the LAG."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "minimumLinks" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Count"
                }, {
                  "description" : "The minimum number of physical dedicated connections that must be operational for the LAG itself to be operational."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint that hosts the LAG."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that hosts the LAG."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "connections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionList"
                }, {
                  "description" : "The connections bundled by the LAG."
                } ]
              },
              "allowsHostedConnections" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BooleanFlag"
                }, {
                  "description" : "Indicates whether the LAG can host other connections."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the LAG."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the LAG."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the LAG supports MAC Security (MACsec)."
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The LAG MAC Security (MACsec) encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the LAG."
                } ]
              }
            },
            "description" : "Information about a link aggregation group (LAG)."
          }
        }
      }
    }
  }, {
    "id" : "05b67d16-ce48-4bbb-809f-9e1fb3677ec6",
    "name" : "<p>Creates an interconnect between an Direct Connect Partner's network and a spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05b67d16-ce48-4bbb-809f-9e1fb3677ec6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateInterconnect"
        }
      }
    }
  }, {
    "id" : "984753c3-e41c-45fa-a4ee-5bb7a04e38d8",
    "name" : "<p>Creates an interconnect between an Direct Connect Partner's network and a spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "984753c3-e41c-45fa-a4ee-5bb7a04e38d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateInterconnect"
        }
      }
    }
  }, {
    "id" : "2191fa1b-1683-4807-877f-e5e74eb60b61",
    "name" : "<p>Creates an interconnect between an Direct Connect Partner's network and a spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2191fa1b-1683-4807-877f-e5e74eb60b61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateInterconnect"
        }
      }
    }
  }, {
    "id" : "c979cd8c-9d72-4b5a-a168-f71b01c4af36",
    "name" : "<p>Creates an interconnect between an Direct Connect Partner's network and a spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c979cd8c-9d72-4b5a-a168-f71b01c4af36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateInterconnect"
        }
      }
    }
  }, {
    "id" : "986b0c04-ff66-49e7-aea2-54af8033f9cd",
    "name" : "<p>Creates an interconnect between an Direct Connect Partner's network and a spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"interconnectId\" : { },\n  \"bandwidth\" : { },\n  \"awsDevice\" : { },\n  \"interconnectState\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"jumboFrameCapable\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"interconnectName\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "986b0c04-ff66-49e7-aea2-54af8033f9cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateInterconnect",
          "schema" : {
            "type" : "object",
            "properties" : {
              "interconnectId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InterconnectId"
                }, {
                  "description" : "The ID of the interconnect."
                } ]
              },
              "interconnectName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InterconnectName"
                }, {
                  "description" : "The name of the interconnect."
                } ]
              },
              "interconnectState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InterconnectState"
                }, {
                  "description" : "<p>The state of the interconnect. The following are the possible values:</p> <ul> <li> <p> <code>requested</code>: The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The interconnect is approved, and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up, and the interconnect is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The interconnect is being deleted.</p> </li> <li> <p> <code>deleted</code>: The interconnect is deleted.</p> </li> <li> <p> <code>unknown</code>: The state of the interconnect is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the interconnect supports a secondary BGP in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the interconnect."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the interconnect."
                } ]
              }
            },
            "description" : "Information about an interconnect."
          }
        }
      }
    }
  }, {
    "id" : "11a54e81-d449-4927-a1b1-bcacc84d5ea6",
    "name" : "<p>Creates a proposal to associate the specified virtual private gateway or tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11a54e81-d449-4927-a1b1-bcacc84d5ea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGatewayAssociationProposal"
        }
      }
    }
  }, {
    "id" : "c6a4d7b6-35f8-45c9-87c2-78f4678d0a89",
    "name" : "<p>Creates a proposal to associate the specified virtual private gateway or tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6a4d7b6-35f8-45c9-87c2-78f4678d0a89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGatewayAssociationProposal"
        }
      }
    }
  }, {
    "id" : "9c85c059-ec31-4e37-a8ad-541c774de367",
    "name" : "<p>Creates a proposal to associate the specified virtual private gateway or tran...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociationProposal\" : {\n    \"associatedGateway\" : {\n      \"id\" : { },\n      \"type\" : { },\n      \"ownerAccount\" : { },\n      \"region\" : { }\n    },\n    \"existingAllowedPrefixesToDirectConnectGateway\" : { },\n    \"directConnectGatewayOwnerAccount\" : { },\n    \"proposalState\" : { },\n    \"requestedAllowedPrefixesToDirectConnectGateway\" : { },\n    \"directConnectGatewayId\" : { },\n    \"proposalId\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c85c059-ec31-4e37-a8ad-541c774de367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGatewayAssociationProposal",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociationProposal" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAssociationProposal"
                }, {
                  "description" : "Information about the Direct Connect gateway proposal."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "92c11121-2618-4aba-9590-03e7df0c3963",
    "name" : "Creates an association between a Direct Connect gateway and a virtual private ga...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92c11121-2618-4aba-9590-03e7df0c3963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGatewayAssociation"
        }
      }
    }
  }, {
    "id" : "d27cc1ef-1417-4c56-9559-8a962efb9d70",
    "name" : "Creates an association between a Direct Connect gateway and a virtual private ga...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d27cc1ef-1417-4c56-9559-8a962efb9d70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGatewayAssociation"
        }
      }
    }
  }, {
    "id" : "2a58b1bd-a1ef-41ef-8cbe-d46aee39f2a7",
    "name" : "Creates an association between a Direct Connect gateway and a virtual private ga...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociation\" : {\n    \"associatedGateway\" : {\n      \"id\" : { },\n      \"type\" : { },\n      \"ownerAccount\" : { },\n      \"region\" : { }\n    },\n    \"virtualGatewayId\" : { },\n    \"directConnectGatewayOwnerAccount\" : { },\n    \"virtualGatewayOwnerAccount\" : { },\n    \"virtualGatewayRegion\" : { },\n    \"associationState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"allowedPrefixesToDirectConnectGateway\" : { },\n    \"associationId\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a58b1bd-a1ef-41ef-8cbe-d46aee39f2a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.446084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGatewayAssociation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociation" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayAssociation"
                }, {
                  "description" : "The association to be created."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "eee9e5e7-5ac3-47ad-9467-0d977abfbce6",
    "name" : "Creates a Direct Connect gateway, which is an intermediate object that enables y...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eee9e5e7-5ac3-47ad-9467-0d977abfbce6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGateway"
        }
      }
    }
  }, {
    "id" : "6ca4d2d2-76b9-40f7-955b-1f1ef75ccf90",
    "name" : "Creates a Direct Connect gateway, which is an intermediate object that enables y...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ca4d2d2-76b9-40f7-955b-1f1ef75ccf90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGateway"
        }
      }
    }
  }, {
    "id" : "ea9ef2fd-1795-4ef3-9cdb-4e235f1cbebb",
    "name" : "Creates a Direct Connect gateway, which is an intermediate object that enables y...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateDirectConnectGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGateway\" : {\n    \"amazonSideAsn\" : { },\n    \"directConnectGatewayName\" : { },\n    \"directConnectGatewayState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"ownerAccount\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea9ef2fd-1795-4ef3-9cdb-4e235f1cbebb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDirectConnectGateway",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGateway" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGateway"
                }, {
                  "description" : "The Direct Connect gateway."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "bed8da41-bcf4-465f-b1b2-d644a6bdc3bf",
    "name" : "<p>Creates a connection between a customer network and a specific Direct Connect...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bed8da41-bcf4-465f-b1b2-d644a6bdc3bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConnection"
        }
      }
    }
  }, {
    "id" : "245de225-0a5b-463e-972f-f42b97061c08",
    "name" : "<p>Creates a connection between a customer network and a specific Direct Connect...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "245de225-0a5b-463e-972f-f42b97061c08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConnection"
        }
      }
    }
  }, {
    "id" : "f9d9dcdd-54ae-4ad8-b55c-2542cbb6ecfc",
    "name" : "<p>Creates a connection between a customer network and a specific Direct Connect...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9d9dcdd-54ae-4ad8-b55c-2542cbb6ecfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.4457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConnection"
        }
      }
    }
  }, {
    "id" : "de60662d-296f-4374-90f9-bf6abeb0bd00",
    "name" : "<p>Creates a connection between a customer network and a specific Direct Connect...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de60662d-296f-4374-90f9-bf6abeb0bd00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConnection"
        }
      }
    }
  }, {
    "id" : "e4115e14-e80a-4f41-8474-3004464fb666",
    "name" : "<p>Creates a connection between a customer network and a specific Direct Connect...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4115e14-e80a-4f41-8474-3004464fb666",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConnection",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "d0564055-99ed-4c82-b3fe-5e6a9015e99d",
    "name" : "<p>Creates a BGP peer on the specified virtual interface.</p> <p>You must create...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateBGPPeer",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0564055-99ed-4c82-b3fe-5e6a9015e99d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBGPPeer"
        }
      }
    }
  }, {
    "id" : "0a2f5f45-2cc2-4661-8127-3db51ee2c900",
    "name" : "<p>Creates a BGP peer on the specified virtual interface.</p> <p>You must create...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateBGPPeer",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a2f5f45-2cc2-4661-8127-3db51ee2c900",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBGPPeer"
        }
      }
    }
  }, {
    "id" : "a3a2d56d-38f3-4525-9094-7e83769cc520",
    "name" : "<p>Creates a BGP peer on the specified virtual interface.</p> <p>You must create...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.CreateBGPPeer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterface\" : {\n    \"ownerAccount\" : { },\n    \"bgpPeers\" : { },\n    \"virtualInterfaceState\" : { },\n    \"awsDeviceV2\" : { },\n    \"virtualInterfaceId\" : { },\n    \"virtualGatewayId\" : { },\n    \"vlan\" : { },\n    \"jumboFrameCapable\" : { },\n    \"addressFamily\" : { },\n    \"customerAddress\" : { },\n    \"routeFilterPrefixes\" : { },\n    \"amazonSideAsn\" : { },\n    \"authKey\" : { },\n    \"virtualInterfaceType\" : { },\n    \"directConnectGatewayId\" : { },\n    \"mtu\" : { },\n    \"tags\" : { },\n    \"siteLinkEnabled\" : { },\n    \"customerRouterConfig\" : { },\n    \"connectionId\" : { },\n    \"location\" : { },\n    \"region\" : { },\n    \"awsLogicalDeviceId\" : { },\n    \"asn\" : { },\n    \"virtualInterfaceName\" : { },\n    \"amazonAddress\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3a2d56d-38f3-4525-9094-7e83769cc520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.445022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBGPPeer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterface" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterface"
                }, {
                  "description" : "The virtual interface."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "60f8e542-38de-4ff2-93eb-778c097666bf",
    "name" : "<p>Accepts ownership of a transit virtual interface created by another Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60f8e542-38de-4ff2-93eb-778c097666bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "46567c82-4563-433b-a291-d72e82b6a8ab",
    "name" : "<p>Accepts ownership of a transit virtual interface created by another Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46567c82-4563-433b-a291-d72e82b6a8ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "20ba13cb-bad8-4f4a-9856-12cbb3078f17",
    "name" : "<p>Accepts ownership of a transit virtual interface created by another Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceState\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20ba13cb-bad8-4f4a-9856-12cbb3078f17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmTransitVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "42ee20bf-51e0-4fc2-aaf5-de38e4e5e52b",
    "name" : "<p>Accepts ownership of a public virtual interface created by another Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmPublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42ee20bf-51e0-4fc2-aaf5-de38e4e5e52b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmPublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "2c01a09f-3782-4e12-b797-dd50a4fe1609",
    "name" : "<p>Accepts ownership of a public virtual interface created by another Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmPublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c01a09f-3782-4e12-b797-dd50a4fe1609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmPublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "5aeb33b9-d0f0-4e41-9b18-eb6f39cfc7b4",
    "name" : "<p>Accepts ownership of a public virtual interface created by another Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmPublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceState\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5aeb33b9-d0f0-4e41-9b18-eb6f39cfc7b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmPublicVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7c178e5d-fce6-4899-8736-3d1682b8cb08",
    "name" : "<p>Accepts ownership of a private virtual interface created by another Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmPrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c178e5d-fce6-4899-8736-3d1682b8cb08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmPrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "768ebe0e-3d06-4fa6-80d4-91cf5fca85fc",
    "name" : "<p>Accepts ownership of a private virtual interface created by another Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmPrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "768ebe0e-3d06-4fa6-80d4-91cf5fca85fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmPrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "9ce81197-f7b8-44e0-8a59-cfdbcd9273c4",
    "name" : "<p>Accepts ownership of a private virtual interface created by another Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmPrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterfaceState\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ce81197-f7b8-44e0-8a59-cfdbcd9273c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmPrivateVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e75184e5-eac4-44df-92c9-d858c7d107f4",
    "name" : " The confirmation of the terms of agreement when creating the connection/link ag...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmCustomerAgreement",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e75184e5-eac4-44df-92c9-d858c7d107f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmCustomerAgreement"
        }
      }
    }
  }, {
    "id" : "986cc51d-cd4e-4600-a4df-220e5aa29762",
    "name" : " The confirmation of the terms of agreement when creating the connection/link ag...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmCustomerAgreement",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "986cc51d-cd4e-4600-a4df-220e5aa29762",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmCustomerAgreement"
        }
      }
    }
  }, {
    "id" : "c97f817f-d858-4638-9418-f590ebd0d27e",
    "name" : " The confirmation of the terms of agreement when creating the connection/link ag...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmCustomerAgreement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c97f817f-d858-4638-9418-f590ebd0d27e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmCustomerAgreement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Status"
                }, {
                  "description" : " The status of the customer agreement when the connection was created. This will be either <code>signed</code> or <code>unsigned</code>. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b1d92d29-d115-4a71-8a19-16e86f42524d",
    "name" : "<p>Confirms the creation of the specified hosted connection on an interconnect.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1d92d29-d115-4a71-8a19-16e86f42524d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmConnection"
        }
      }
    }
  }, {
    "id" : "0196c861-48ab-4196-a50a-db6c0409a7ee",
    "name" : "<p>Confirms the creation of the specified hosted connection on an interconnect.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0196c861-48ab-4196-a50a-db6c0409a7ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmConnection"
        }
      }
    }
  }, {
    "id" : "d0b169df-d540-4175-ac75-7c69b9235324",
    "name" : "<p>Confirms the creation of the specified hosted connection on an interconnect.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.ConfirmConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connectionState\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0b169df-d540-4175-ac75-7c69b9235324",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConfirmConnection",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b810aa3e-ca9f-4b2e-893f-c551bc78ca25",
    "name" : "<p>Associates a virtual interface with a specified link aggregation group (LAG) ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b810aa3e-ca9f-4b2e-893f-c551bc78ca25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "782e2e11-573c-4e01-a5c2-214cd132185b",
    "name" : "<p>Associates a virtual interface with a specified link aggregation group (LAG) ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "782e2e11-573c-4e01-a5c2-214cd132185b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "d66eec59-55eb-4196-a7fc-d666a3b50d9b",
    "name" : "<p>Associates a virtual interface with a specified link aggregation group (LAG) ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ownerAccount\" : { },\n  \"bgpPeers\" : { },\n  \"virtualInterfaceState\" : { },\n  \"awsDeviceV2\" : { },\n  \"virtualInterfaceId\" : { },\n  \"virtualGatewayId\" : { },\n  \"vlan\" : { },\n  \"jumboFrameCapable\" : { },\n  \"addressFamily\" : { },\n  \"customerAddress\" : { },\n  \"routeFilterPrefixes\" : { },\n  \"amazonSideAsn\" : { },\n  \"authKey\" : { },\n  \"virtualInterfaceType\" : { },\n  \"directConnectGatewayId\" : { },\n  \"mtu\" : { },\n  \"tags\" : { },\n  \"siteLinkEnabled\" : { },\n  \"customerRouterConfig\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"asn\" : { },\n  \"virtualInterfaceName\" : { },\n  \"amazonAddress\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d66eec59-55eb-4196-a7fc-d666a3b50d9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.444169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the virtual interface."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID of the virtual interface."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "virtualInterfaceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceType"
                }, {
                  "description" : "The type of virtual interface. The possible values are <code>private</code> and <code>public</code>."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "asn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ASN"
                }, {
                  "description" : "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
                } ]
              },
              "amazonSideAsn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LongAsn"
                }, {
                  "description" : "The autonomous system number (ASN) for the Amazon side of the connection."
                } ]
              },
              "authKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPAuthKey"
                }, {
                  "description" : "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
                } ]
              },
              "amazonAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonAddress"
                }, {
                  "description" : "The IP address assigned to the Amazon interface."
                } ]
              },
              "customerAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerAddress"
                }, {
                  "description" : "The IP address assigned to the customer interface."
                } ]
              },
              "addressFamily" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AddressFamily"
                }, {
                  "description" : "The address family for the BGP peer."
                } ]
              },
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              },
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "mtu" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MTU"
                }, {
                  "description" : "The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "virtualGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayId"
                }, {
                  "description" : "The ID of the virtual private gateway. Applies only to private virtual interfaces."
                } ]
              },
              "directConnectGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayId"
                }, {
                  "description" : "The ID of the Direct Connect gateway."
                } ]
              },
              "routeFilterPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouteFilterPrefixList"
                }, {
                  "description" : "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
                } ]
              },
              "bgpPeers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPPeerList"
                }, {
                  "description" : "The BGP peers configured on this virtual interface."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the virtual interface is located."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the virtual interface."
                } ]
              },
              "siteLinkEnabled" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SiteLinkEnabled"
                }, {
                  "description" : "Indicates whether SiteLink is enabled."
                } ]
              }
            },
            "description" : "Information about a virtual interface."
          }
        }
      }
    }
  }, {
    "id" : "e10b795f-8bbd-4b41-905c-c799f5d53324",
    "name" : "<p>Associates a MAC Security (MACsec) Connection Key Name (CKN)/ Connectivity As...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateMacSecKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e10b795f-8bbd-4b41-905c-c799f5d53324",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.443512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateMacSecKey"
        }
      }
    }
  }, {
    "id" : "5c4b792d-e960-4bd0-a39d-bd95461518c8",
    "name" : "<p>Associates a MAC Security (MACsec) Connection Key Name (CKN)/ Connectivity As...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateMacSecKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c4b792d-e960-4bd0-a39d-bd95461518c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.443487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateMacSecKey"
        }
      }
    }
  }, {
    "id" : "65cc74b7-e088-4e19-98e3-32ceecbf76fc",
    "name" : "<p>Associates a MAC Security (MACsec) Connection Key Name (CKN)/ Connectivity As...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateMacSecKey",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connectionId\" : { },\n  \"macSecKeys\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65cc74b7-e088-4e19-98e3-32ceecbf76fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.443459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateMacSecKey",
          "schema" : {
            "type" : "object",
            "properties" : {
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx)."
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the dedicated connection."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5aa7df29-93f0-49aa-99d1-9b2859485514",
    "name" : "<p>Associates a hosted connection and its virtual interfaces with a link aggrega...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5aa7df29-93f0-49aa-99d1-9b2859485514",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.443358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateHostedConnection"
        }
      }
    }
  }, {
    "id" : "ec045ef5-c7c7-4b9d-b88c-b22d2b7d1591",
    "name" : "<p>Associates a hosted connection and its virtual interfaces with a link aggrega...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec045ef5-c7c7-4b9d-b88c-b22d2b7d1591",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.443332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateHostedConnection"
        }
      }
    }
  }, {
    "id" : "7c022afb-04db-4049-b134-63c2d1b0c515",
    "name" : "<p>Associates a hosted connection and its virtual interfaces with a link aggrega...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c022afb-04db-4049-b134-63c2d1b0c515",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.443292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateHostedConnection",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "b7e629e8-6c9b-4d57-9163-8acc72436571",
    "name" : "<p>Associates an existing connection with a link aggregation group (LAG). The co...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateConnectionWithLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7e629e8-6c9b-4d57-9163-8acc72436571",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateConnectionWithLag"
        }
      }
    }
  }, {
    "id" : "b922f97e-00aa-40fc-b310-62104cee1fa2",
    "name" : "<p>Associates an existing connection with a link aggregation group (LAG). The co...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateConnectionWithLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b922f97e-00aa-40fc-b310-62104cee1fa2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateConnectionWithLag"
        }
      }
    }
  }, {
    "id" : "8ceb3f51-96ff-4cc5-89d2-c4efa56f9bd7",
    "name" : "<p>Associates an existing connection with a link aggregation group (LAG). The co...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AssociateConnectionWithLag",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ceb3f51-96ff-4cc5-89d2-c4efa56f9bd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AssociateConnectionWithLag",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "b441e94a-5d6e-4918-949f-19e8b37f1297",
    "name" : "<p>Provisions a transit virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b441e94a-5d6e-4918-949f-19e8b37f1297",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "908dde79-84b4-4d88-8cfd-c1bb16bde9d1",
    "name" : "<p>Provisions a transit virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "908dde79-84b4-4d88-8cfd-c1bb16bde9d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "4463c936-ad44-41b6-8c04-e9f113ba2c44",
    "name" : "<p>Provisions a transit virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4463c936-ad44-41b6-8c04-e9f113ba2c44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "146e9d1c-e4a2-459c-b3ca-13c78675a5c8",
    "name" : "<p>Provisions a transit virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "146e9d1c-e4a2-459c-b3ca-13c78675a5c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateTransitVirtualInterface"
        }
      }
    }
  }, {
    "id" : "a9815140-6d77-471d-9779-512efebf8429",
    "name" : "<p>Provisions a transit virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"virtualInterface\" : {\n    \"ownerAccount\" : { },\n    \"bgpPeers\" : { },\n    \"virtualInterfaceState\" : { },\n    \"awsDeviceV2\" : { },\n    \"virtualInterfaceId\" : { },\n    \"virtualGatewayId\" : { },\n    \"vlan\" : { },\n    \"jumboFrameCapable\" : { },\n    \"addressFamily\" : { },\n    \"customerAddress\" : { },\n    \"routeFilterPrefixes\" : { },\n    \"amazonSideAsn\" : { },\n    \"authKey\" : { },\n    \"virtualInterfaceType\" : { },\n    \"directConnectGatewayId\" : { },\n    \"mtu\" : { },\n    \"tags\" : { },\n    \"siteLinkEnabled\" : { },\n    \"customerRouterConfig\" : { },\n    \"connectionId\" : { },\n    \"location\" : { },\n    \"region\" : { },\n    \"awsLogicalDeviceId\" : { },\n    \"asn\" : { },\n    \"virtualInterfaceName\" : { },\n    \"amazonAddress\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9815140-6d77-471d-9779-512efebf8429",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateTransitVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "virtualInterface" : {
                "$ref" : "#/components/schemas/VirtualInterface"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "109a7fef-f103-4a10-ac70-df7709ecfd06",
    "name" : "<p>Provisions a public virtual interface to be owned by the specified Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "109a7fef-f103-4a10-ac70-df7709ecfd06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.442003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "ab0b2b8f-545e-49c4-bd09-c1ebe0f657f6",
    "name" : "<p>Provisions a public virtual interface to be owned by the specified Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab0b2b8f-545e-49c4-bd09-c1ebe0f657f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "bfe47859-daf0-4f32-9485-c0a2b4962a6a",
    "name" : "<p>Provisions a public virtual interface to be owned by the specified Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfe47859-daf0-4f32-9485-c0a2b4962a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "559413ab-12f6-4dc2-896a-fbd264064cd2",
    "name" : "<p>Provisions a public virtual interface to be owned by the specified Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "559413ab-12f6-4dc2-896a-fbd264064cd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePublicVirtualInterface"
        }
      }
    }
  }, {
    "id" : "244f6e74-c34b-489f-9934-4677e4f6055d",
    "name" : "<p>Provisions a public virtual interface to be owned by the specified Amazon Web...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ownerAccount\" : { },\n  \"bgpPeers\" : { },\n  \"virtualInterfaceState\" : { },\n  \"awsDeviceV2\" : { },\n  \"virtualInterfaceId\" : { },\n  \"virtualGatewayId\" : { },\n  \"vlan\" : { },\n  \"jumboFrameCapable\" : { },\n  \"addressFamily\" : { },\n  \"customerAddress\" : { },\n  \"routeFilterPrefixes\" : { },\n  \"amazonSideAsn\" : { },\n  \"authKey\" : { },\n  \"virtualInterfaceType\" : { },\n  \"directConnectGatewayId\" : { },\n  \"mtu\" : { },\n  \"tags\" : { },\n  \"siteLinkEnabled\" : { },\n  \"customerRouterConfig\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"asn\" : { },\n  \"virtualInterfaceName\" : { },\n  \"amazonAddress\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "244f6e74-c34b-489f-9934-4677e4f6055d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePublicVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the virtual interface."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID of the virtual interface."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "virtualInterfaceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceType"
                }, {
                  "description" : "The type of virtual interface. The possible values are <code>private</code> and <code>public</code>."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "asn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ASN"
                }, {
                  "description" : "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
                } ]
              },
              "amazonSideAsn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LongAsn"
                }, {
                  "description" : "The autonomous system number (ASN) for the Amazon side of the connection."
                } ]
              },
              "authKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPAuthKey"
                }, {
                  "description" : "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
                } ]
              },
              "amazonAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonAddress"
                }, {
                  "description" : "The IP address assigned to the Amazon interface."
                } ]
              },
              "customerAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerAddress"
                }, {
                  "description" : "The IP address assigned to the customer interface."
                } ]
              },
              "addressFamily" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AddressFamily"
                }, {
                  "description" : "The address family for the BGP peer."
                } ]
              },
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              },
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "mtu" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MTU"
                }, {
                  "description" : "The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "virtualGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayId"
                }, {
                  "description" : "The ID of the virtual private gateway. Applies only to private virtual interfaces."
                } ]
              },
              "directConnectGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayId"
                }, {
                  "description" : "The ID of the Direct Connect gateway."
                } ]
              },
              "routeFilterPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouteFilterPrefixList"
                }, {
                  "description" : "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
                } ]
              },
              "bgpPeers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPPeerList"
                }, {
                  "description" : "The BGP peers configured on this virtual interface."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the virtual interface is located."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the virtual interface."
                } ]
              },
              "siteLinkEnabled" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SiteLinkEnabled"
                }, {
                  "description" : "Indicates whether SiteLink is enabled."
                } ]
              }
            },
            "description" : "Information about a virtual interface."
          }
        }
      }
    }
  }, {
    "id" : "bb4cdfa9-1a81-4c6f-b6c5-8410daa231f1",
    "name" : "<p>Provisions a private virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb4cdfa9-1a81-4c6f-b6c5-8410daa231f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "aa7068fc-76ff-418b-9112-b80894630c80",
    "name" : "<p>Provisions a private virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa7068fc-76ff-418b-9112-b80894630c80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "832672bd-bf6e-4ec2-ae86-c8aa7d841581",
    "name" : "<p>Provisions a private virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "832672bd-bf6e-4ec2-ae86-c8aa7d841581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "0f328dd1-0da7-48c8-992a-6661061439c2",
    "name" : "<p>Provisions a private virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f328dd1-0da7-48c8-992a-6661061439c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.44126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePrivateVirtualInterface"
        }
      }
    }
  }, {
    "id" : "cb446144-a3b1-46a9-9e94-19ae27a816fa",
    "name" : "<p>Provisions a private virtual interface to be owned by the specified Amazon We...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ownerAccount\" : { },\n  \"bgpPeers\" : { },\n  \"virtualInterfaceState\" : { },\n  \"awsDeviceV2\" : { },\n  \"virtualInterfaceId\" : { },\n  \"virtualGatewayId\" : { },\n  \"vlan\" : { },\n  \"jumboFrameCapable\" : { },\n  \"addressFamily\" : { },\n  \"customerAddress\" : { },\n  \"routeFilterPrefixes\" : { },\n  \"amazonSideAsn\" : { },\n  \"authKey\" : { },\n  \"virtualInterfaceType\" : { },\n  \"directConnectGatewayId\" : { },\n  \"mtu\" : { },\n  \"tags\" : { },\n  \"siteLinkEnabled\" : { },\n  \"customerRouterConfig\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"asn\" : { },\n  \"virtualInterfaceName\" : { },\n  \"amazonAddress\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb446144-a3b1-46a9-9e94-19ae27a816fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.441209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocatePrivateVirtualInterface",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the virtual interface."
                } ]
              },
              "virtualInterfaceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceId"
                }, {
                  "description" : "The ID of the virtual interface."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "virtualInterfaceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceType"
                }, {
                  "description" : "The type of virtual interface. The possible values are <code>private</code> and <code>public</code>."
                } ]
              },
              "virtualInterfaceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceName"
                }, {
                  "description" : "The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-)."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "asn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ASN"
                }, {
                  "description" : "<p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p> <p>The valid values are 1-2147483647.</p>"
                } ]
              },
              "amazonSideAsn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LongAsn"
                }, {
                  "description" : "The autonomous system number (ASN) for the Amazon side of the connection."
                } ]
              },
              "authKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPAuthKey"
                }, {
                  "description" : "The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters."
                } ]
              },
              "amazonAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonAddress"
                }, {
                  "description" : "The IP address assigned to the Amazon interface."
                } ]
              },
              "customerAddress" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomerAddress"
                }, {
                  "description" : "The IP address assigned to the customer interface."
                } ]
              },
              "addressFamily" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AddressFamily"
                }, {
                  "description" : "The address family for the BGP peer."
                } ]
              },
              "virtualInterfaceState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualInterfaceState"
                }, {
                  "description" : "<p>The state of the virtual interface. The following are the possible values:</p> <ul> <li> <p> <code>confirming</code>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p> </li> <li> <p> <code>verifying</code>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</p> </li> <li> <p> <code>pending</code>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p> </li> <li> <p> <code>available</code>: A virtual interface that is able to forward traffic.</p> </li> <li> <p> <code>down</code>: A virtual interface that is BGP down.</p> </li> <li> <p> <code>deleting</code>: A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p> </li> <li> <p> <code>deleted</code>: A virtual interface that cannot forward traffic.</p> </li> <li> <p> <code>rejected</code>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the <code>Confirming</code> state is deleted by the virtual interface owner, the virtual interface enters the <code>Rejected</code> state.</p> </li> <li> <p> <code>unknown</code>: The state of the virtual interface is not available.</p> </li> </ul>"
                } ]
              },
              "customerRouterConfig" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouterConfig"
                }, {
                  "description" : "The customer router configuration."
                } ]
              },
              "mtu" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MTU"
                }, {
                  "description" : "The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "virtualGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VirtualGatewayId"
                }, {
                  "description" : "The ID of the virtual private gateway. Applies only to private virtual interfaces."
                } ]
              },
              "directConnectGatewayId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DirectConnectGatewayId"
                }, {
                  "description" : "The ID of the Direct Connect gateway."
                } ]
              },
              "routeFilterPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RouteFilterPrefixList"
                }, {
                  "description" : "The routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces."
                } ]
              },
              "bgpPeers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BGPPeerList"
                }, {
                  "description" : "The BGP peers configured on this virtual interface."
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the virtual interface is located."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the virtual interface."
                } ]
              },
              "siteLinkEnabled" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SiteLinkEnabled"
                }, {
                  "description" : "Indicates whether SiteLink is enabled."
                } ]
              }
            },
            "description" : "Information about a virtual interface."
          }
        }
      }
    }
  }, {
    "id" : "17277090-9fb5-457e-a046-646c91697b6b",
    "name" : "<p>Creates a hosted connection on the specified interconnect or a link aggregati...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17277090-9fb5-457e-a046-646c91697b6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.440404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateHostedConnection"
        }
      }
    }
  }, {
    "id" : "dc40fb18-246f-44f6-8ac6-efca8660336b",
    "name" : "<p>Creates a hosted connection on the specified interconnect or a link aggregati...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc40fb18-246f-44f6-8ac6-efca8660336b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.440378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateHostedConnection"
        }
      }
    }
  }, {
    "id" : "c44aa8f1-a571-44d3-b9e5-8003c3752734",
    "name" : "<p>Creates a hosted connection on the specified interconnect or a link aggregati...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c44aa8f1-a571-44d3-b9e5-8003c3752734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.440354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateHostedConnection"
        }
      }
    }
  }, {
    "id" : "d623cfe2-0677-4c05-af2f-dcb5afaa97f8",
    "name" : "<p>Creates a hosted connection on the specified interconnect or a link aggregati...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d623cfe2-0677-4c05-af2f-dcb5afaa97f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.440325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateHostedConnection"
        }
      }
    }
  }, {
    "id" : "fd391d95-1d4e-4472-a8ac-a9d3a54ea198",
    "name" : "<p>Creates a hosted connection on the specified interconnect or a link aggregati...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateHostedConnection",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd391d95-1d4e-4472-a8ac-a9d3a54ea198",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.440277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateHostedConnection",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "c133c44d-9489-437f-a539-95a0ecf4915f",
    "name" : "<p>Deprecated. Use <a>AllocateHostedConnection</a> instead.</p> <p>Creates a hos...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateConnectionOnInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c133c44d-9489-437f-a539-95a0ecf4915f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.439829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateConnectionOnInterconnect"
        }
      }
    }
  }, {
    "id" : "bdd139cb-b177-4494-8fb6-4ba54d2bca86",
    "name" : "<p>Deprecated. Use <a>AllocateHostedConnection</a> instead.</p> <p>Creates a hos...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateConnectionOnInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdd139cb-b177-4494-8fb6-4ba54d2bca86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.439801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateConnectionOnInterconnect"
        }
      }
    }
  }, {
    "id" : "f0ac1555-072a-4b1d-b2c3-cf8d4c322722",
    "name" : "<p>Deprecated. Use <a>AllocateHostedConnection</a> instead.</p> <p>Creates a hos...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AllocateConnectionOnInterconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"portEncryptionStatus\" : { },\n  \"bandwidth\" : { },\n  \"partnerName\" : { },\n  \"awsDevice\" : { },\n  \"connectionState\" : { },\n  \"macSecCapable\" : { },\n  \"macSecKeys\" : { },\n  \"ownerAccount\" : { },\n  \"loaIssueTime\" : { },\n  \"awsDeviceV2\" : { },\n  \"tags\" : { },\n  \"lagId\" : { },\n  \"vlan\" : { },\n  \"encryptionMode\" : { },\n  \"jumboFrameCapable\" : { },\n  \"connectionId\" : { },\n  \"location\" : { },\n  \"connectionName\" : { },\n  \"region\" : { },\n  \"awsLogicalDeviceId\" : { },\n  \"hasLogicalRedundancy\" : { },\n  \"providerName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0ac1555-072a-4b1d-b2c3-cf8d4c322722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.43975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AllocateConnectionOnInterconnect",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ownerAccount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnerAccount"
                }, {
                  "description" : "The ID of the Amazon Web Services account that owns the connection."
                } ]
              },
              "connectionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionId"
                }, {
                  "description" : "The ID of the connection."
                } ]
              },
              "connectionName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionName"
                }, {
                  "description" : "The name of the connection."
                } ]
              },
              "connectionState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConnectionState"
                }, {
                  "description" : "<p>The state of the connection. The following are the possible values:</p> <ul> <li> <p> <code>ordering</code>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p> </li> <li> <p> <code>requested</code>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p> </li> <li> <p> <code>pending</code>: The connection has been approved and is being initialized.</p> </li> <li> <p> <code>available</code>: The network link is up and the connection is ready for use.</p> </li> <li> <p> <code>down</code>: The network link is down.</p> </li> <li> <p> <code>deleting</code>: The connection is being deleted.</p> </li> <li> <p> <code>deleted</code>: The connection has been deleted.</p> </li> <li> <p> <code>rejected</code>: A hosted connection in the <code>ordering</code> state enters the <code>rejected</code> state if it is deleted by the customer.</p> </li> <li> <p> <code>unknown</code>: The state of the connection is not available.</p> </li> </ul>"
                } ]
              },
              "region" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Region"
                }, {
                  "description" : "The Amazon Web Services Region where the connection is located."
                } ]
              },
              "location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocationCode"
                }, {
                  "description" : "The location of the connection."
                } ]
              },
              "bandwidth" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Bandwidth"
                }, {
                  "description" : "The bandwidth of the connection."
                } ]
              },
              "vlan" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VLAN"
                }, {
                  "description" : "The ID of the VLAN."
                } ]
              },
              "partnerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartnerName"
                }, {
                  "description" : "The name of the Direct Connect service provider associated with the connection."
                } ]
              },
              "loaIssueTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LoaIssueTime"
                }, {
                  "description" : "The time of the most recent call to <a>DescribeLoa</a> for this connection."
                } ]
              },
              "lagId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LagId"
                }, {
                  "description" : "The ID of the LAG."
                } ]
              },
              "awsDevice" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDevice"
                }, {
                  "description" : "The Direct Connect endpoint on which the physical connection terminates."
                } ]
              },
              "jumboFrameCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/JumboFrameCapable"
                }, {
                  "description" : "Indicates whether jumbo frames (9001 MTU) are supported."
                } ]
              },
              "awsDeviceV2" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsDeviceV2"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the physical connection."
                } ]
              },
              "awsLogicalDeviceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AwsLogicalDeviceId"
                }, {
                  "description" : "The Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection."
                } ]
              },
              "hasLogicalRedundancy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/HasLogicalRedundancy"
                }, {
                  "description" : "Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6)."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with the connection."
                } ]
              },
              "providerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ProviderName"
                }, {
                  "description" : "The name of the service provider associated with the connection."
                } ]
              },
              "macSecCapable" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecCapable"
                }, {
                  "description" : "Indicates whether the connection supports MAC Security (MACsec)."
                } ]
              },
              "portEncryptionStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PortEncryptionStatus"
                }, {
                  "description" : "<p>The MAC Security (MACsec) port link status of the connection.</p> <p>The valid values are <code>Encryption Up</code>, which means that there is an active Connection Key Name, or <code>Encryption Down</code>.</p>"
                } ]
              },
              "encryptionMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionMode"
                }, {
                  "description" : "<p>The MAC Security (MACsec) connection encryption mode.</p> <p>The valid values are <code>no_encrypt</code>, <code>should_encrypt</code>, and <code>must_encrypt</code>.</p>"
                } ]
              },
              "macSecKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MacSecKeyList"
                }, {
                  "description" : "The MAC Security (MACsec) security keys associated with the connection."
                } ]
              }
            },
            "description" : "Information about an Direct Connect connection."
          }
        }
      }
    }
  }, {
    "id" : "804f3de5-bc9d-4587-b2dc-d5f4f59c688b",
    "name" : "Accepts a proposal request to attach a virtual private gateway or transit gatewa...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AcceptDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "804f3de5-bc9d-4587-b2dc-d5f4f59c688b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.43904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AcceptDirectConnectGatewayAssociationProposal"
        }
      }
    }
  }, {
    "id" : "8fca8de2-6535-4257-8ded-926ad9cb0e02",
    "name" : "Accepts a proposal request to attach a virtual private gateway or transit gatewa...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AcceptDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fca8de2-6535-4257-8ded-926ad9cb0e02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.439008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AcceptDirectConnectGatewayAssociationProposal"
        }
      }
    }
  }, {
    "id" : "606e2996-6eee-49b0-a2a3-507cbbfb519d",
    "name" : "Accepts a proposal request to attach a virtual private gateway or transit gatewa...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=OvertureService.AcceptDirectConnectGatewayAssociationProposal",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directConnectGatewayAssociation\" : {\n    \"associatedGateway\" : {\n      \"id\" : { },\n      \"type\" : { },\n      \"ownerAccount\" : { },\n      \"region\" : { }\n    },\n    \"virtualGatewayId\" : { },\n    \"directConnectGatewayOwnerAccount\" : { },\n    \"virtualGatewayOwnerAccount\" : { },\n    \"virtualGatewayRegion\" : { },\n    \"associationState\" : { },\n    \"stateChangeError\" : { },\n    \"directConnectGatewayId\" : { },\n    \"allowedPrefixesToDirectConnectGateway\" : { },\n    \"associationId\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "606e2996-6eee-49b0-a2a3-507cbbfb519d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:21.438951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AcceptDirectConnectGatewayAssociationProposal",
          "schema" : {
            "type" : "object",
            "properties" : {
              "directConnectGatewayAssociation" : {
                "$ref" : "#/components/schemas/DirectConnectGatewayAssociation"
              }
            }
          }
        }
      }
    }
  } ]
}