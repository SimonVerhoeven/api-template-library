{
  "mappings" : [ {
    "id" : "4a49c781-5353-428e-93f2-f4cb742efb8a",
    "name" : "Request Redelivery of the Order - 500",
    "request" : {
      "urlPath" : "/hwfe8jr52gly5mr2fn66fc7y6sokt8aoxkbyfzd0jr1eiknf31z47ehxrcimn628yk30hz8o2hrqhnl2exawe0y7tkwttu27kt7m/orders/587o/queries/attempteddelivery/resolution/redeliverorder",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4a49c781-5353-428e-93f2-f4cb742efb8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.3964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e8d57360-dd7e-42c5-8072-09fcec2d9f20",
    "name" : "Request Redelivery of the Order - 404",
    "request" : {
      "urlPath" : "/zdmwzafyf8rtny3qimog4vqv5xxykwmkj42rabbq/orders/lc9k/queries/attempteddelivery/resolution/redeliverorder",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e8d57360-dd7e-42c5-8072-09fcec2d9f20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.396311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "09ee7553-0e11-40fb-92b6-efb8908a05a1",
    "name" : "Request Redelivery of the Order - 401",
    "request" : {
      "urlPath" : "/1m7k0em58matijrckwx6njfvkb8z7bac23gf8hpkhicjbor0vpm2uqkwoetc69xukpu5acdtkc6lpg5zh9tr8ewxvkyk5xnv7bwmxqar9f2mfd8serzcpirpvh2sdftdfampymfm88m8ixm0znnvmk4wimhj/orders/673e/queries/attempteddelivery/resolution/redeliverorder",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "09ee7553-0e11-40fb-92b6-efb8908a05a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.396224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "18cd23e1-6825-4805-80d1-228d9c58d662",
    "name" : "Request Redelivery of the Order - 400",
    "request" : {
      "urlPath" : "/w5etkgku498zhhyh5zolz0y9ypumlpimtg4escdaxkfwavwzlgriccedn4n47apjyz6uu367hd3thlkvkb1u3ux813nk113wgvl1d17t6b8d72663pdofpqzvx6m4e/orders/sbnz/queries/attempteddelivery/resolution/redeliverorder",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "18cd23e1-6825-4805-80d1-228d9c58d662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.396135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "19e44265-e730-4a63-91be-2ce4901226ad",
    "name" : "Request Redelivery of the Order - 200",
    "request" : {
      "urlPath" : "/c8fkry49nswgue1p5hv5lu6wgxyc1iusk90rmqiduk3se70t1p5jhmz58khj0ig1s950kl131nng9oi526xox22af0j7ccs8wspvfkb8xqc9j44glfjd13lvcfgglc9wsdyodxsfp0xuwdp6q5065asd9m3x7jfaz86a/orders/p9c5/queries/attempteddelivery/resolution/redeliverorder",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "19e44265-e730-4a63-91be-2ce4901226ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.396052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2c85083c-59a8-427e-82a4-b728cad5b24d",
    "name" : "Delivery Attempt Failed - 500",
    "request" : {
      "urlPath" : "/h47cf16vw4pq6t2opfdqi/orders/52jn/queries/attempteddelivery",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2c85083c-59a8-427e-82a4-b728cad5b24d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "604f1630-167a-4ff9-8029-c0cc882e5fbf",
    "name" : "Delivery Attempt Failed - 404",
    "request" : {
      "urlPath" : "/h2y2l5hknu325n3hygbfegzay0zn9isbp7k9hpiunrc9wx9asf3qrad5gz7x21vn92cd49mbjn424d2bre74m6oe4isb277i83yae34cbb3pcibk6ywt6l37e0ec8993ey6j9pyb7i62dms9r6hg3cwe1mud0zyq7sxdbgay0tv/orders/x89u/queries/attempteddelivery",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "604f1630-167a-4ff9-8029-c0cc882e5fbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b583670f-7c96-4324-a353-c8bc0f5b57bc",
    "name" : "Delivery Attempt Failed - 401",
    "request" : {
      "urlPath" : "/v8cws43ff8ewblq5/orders/2fov/queries/attempteddelivery",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b583670f-7c96-4324-a353-c8bc0f5b57bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "5a401e1f-65e6-455d-91e8-ee8b1056036e",
    "name" : "Delivery Attempt Failed - 400",
    "request" : {
      "urlPath" : "/9xiyu0a8ttoh945cjvnbtl5s2h598m9b1x5mrxuji2du90j6wb60whix6ky5zv29lxw8a1v69o3l3ok2glv18uf8dv6a1jbvm1g4mgwv64exn/orders/1550/queries/attempteddelivery",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5a401e1f-65e6-455d-91e8-ee8b1056036e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "f71fa207-a02a-49a2-915c-4f4a57ae15ed",
    "name" : "Delivery Attempt Failed - 200",
    "request" : {
      "urlPath" : "/2kqwxk50odq3wfrhk9gsrq3ehnsecxc41o9pkv4fp5kr1xuw9alnt1bsqby5aongli17a4en6yf41m1o8d1lcs02arjea7ce5c51muzj2ebri54fqg2t/orders/b0e8/queries/attempteddelivery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f71fa207-a02a-49a2-915c-4f4a57ae15ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "c4ca96a1-5269-417b-b971-9993cf2af583",
    "name" : "Delete Offline Event - 500",
    "request" : {
      "urlPath" : "/v1/8cqpxzgwc5d34upe16l4xde7hmwnhact2f0weg0q21ekwf7813hfdiikuyo0kmnkiv70yjq6nppk074rqe9yatzjtt8hhnjihbp7atuugr88knx/restaurants/g1gv/event/offline",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c4ca96a1-5269-417b-b971-9993cf2af583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "44f56fa3-b289-4642-aed7-aec56390c327",
    "name" : "Delete Offline Event (application/json)",
    "request" : {
      "urlPath" : "/v1/ai6goyeqo4d05ibrrww2vst9ywvey42kh32msz78xhy36qdn53of9n336lwl6d1b0pfytxu9279k15eaxcfqlvov615sostsqz9tmjapkapuk4luzfdnvzxkssi661xzx1v1fn87vqwlt7zh3xp3scdp0avgjfaoj3f60ekgnjtd/restaurants/r2j4/event/offline",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "[ {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44f56fa3-b289-4642-aed7-aec56390c327",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.39541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ValidationError"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "da12524c-9293-4c10-8a19-0d251fd4ec76",
    "name" : "Delete Offline Event - 202",
    "request" : {
      "urlPath" : "/v1/ufun4fnyjjqanq01o7o8pyc3lazk/restaurants/7g09/event/offline",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "da12524c-9293-4c10-8a19-0d251fd4ec76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "87d987a8-b5a9-4af6-aedb-e2f64e9dda8b",
    "name" : "Delete Offline Event - 200",
    "request" : {
      "urlPath" : "/v1/s4lxasxtiyozz1is6hkuwh11b5c48jqn1nhej7is6ij0cdxxo4p0x86ws9covjkki6dasbhroksnmf7f9ax/restaurants/hkqm/event/offline",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "87d987a8-b5a9-4af6-aedb-e2f64e9dda8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "8eac2c87-2f59-4f6e-9f96-e70b2cbca1c7",
    "name" : "Create Offline Event - 500",
    "request" : {
      "urlPath" : "/v1/5taroejzg6oi44e8d7fzcfyxnrn6zs4bkwcqs69i2jrm6r5a7d4hxjs79eho3izaq2104swnch2qxoii90sx0r4to2v350ixuo76q78uyirrgc4ex0py07rq1132m786po9vwww7jvgbbr8c96cw/restaurants/event/offline",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "8eac2c87-2f59-4f6e-9f96-e70b2cbca1c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "17fd65c8-fb06-4b2c-85dc-1c353f4d5ed5",
    "name" : "Create Offline Event (application/json)",
    "request" : {
      "urlPath" : "/v1/0bc7xtblmachauc0ryt7vfk8kfi8kbvtvulzv3rcu4qc0j1zwatuwxvuxbml6rnhya0n10hdmnhhz74i2b7owxysmqaefp7kxu8/restaurants/event/offline",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "[ {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n}, {\n  \"attemptedValue\" : null,\n  \"customState\" : null,\n  \"errorCode\" : \"NotEmptyValidator\",\n  \"errorMessage\" : \"TestProperty is empty\",\n  \"formattedMessageArguments\" : [ ],\n  \"formattedMessagePlaceHolderValues\" : {\n    \"PropertyName\" : \"User Role\",\n    \"PropertyValue\" : null\n  },\n  \"propertyName\" : \"TestProperty\",\n  \"resourceName\" : null,\n  \"severity\" : 0\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17fd65c8-fb06-4b2c-85dc-1c353f4d5ed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.395042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ValidationError"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "4f871062-b569-45f6-bfa2-d606c7150f71",
    "name" : "Create Offline Event (application/json)",
    "request" : {
      "urlPath" : "/v1/1eey0ig0erl4s007t2n7rtf794b5ccifqi5vcfny027odg0rrghekiot1e1iv88m6erasef5zw6ocw5tbr094sft13m0m813rd5y8by3z0xxcvrw5vlrehsj7poi565kvbd8pu1mcjca20649dvxvvez0f56v0fcc1x7zuclef4lhc1xboeraoei4q4h4/restaurants/event/offline",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"restaurantEventId\" : \"03bff206-d136-405f-b789-95190e9711a4\",\n  \"restaurantIds\" : \"12345\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f871062-b569-45f6-bfa2-d606c7150f71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : {
              "restaurantEventId" : "03bff206-d136-405f-b789-95190e9711a4",
              "restaurantIds" : "12345"
            },
            "properties" : {
              "restaurantEventId" : {
                "description" : "The ID of the offline event created",
                "type" : "string"
              },
              "restaurantIds" : {
                "description" : "A CSV of the restaurant IDs added to the offline event",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b71dd919-dc62-42c1-9090-22689c07d609",
    "name" : "Send to POS failed - 200",
    "request" : {
      "urlPath" : "/send-to-pos-failed",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b71dd919-dc62-42c1-9090-22689c07d609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "f3b58e9e-34c6-4524-a20a-26e6db2f94cf",
    "name" : "Search restaurants",
    "request" : {
      "urlPath" : "/search/restaurants/3i16d18bze7m6zppjtmkadsix1bmtvc3efx5adodklp5nft87",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "zqfrx73n5nx407viyi2a8u99arwv7l0shgsxpz8e9xrvst8d70mts11gxgdecgxt63l5v1cy72t6b9y1fukzh2"
        },
        "latlong" : {
          "equalTo" : "cp3ncaym9yha3trkp4bsknhda05izbmx"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3b58e9e-34c6-4524-a20a-26e6db2f94cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Service Unavailable",
            "properties" : {
              "fault" : {
                "properties" : {
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d926f7b-ba2c-44bf-a58e-477ddd43d996",
    "name" : "Search restaurants",
    "request" : {
      "urlPath" : "/search/restaurants/vm1ply9cdfssiosp2ot7ntq0iu57lc4ha4r3jf6khn2dllozewi5k2rbrijynr4e4nkabcvfgohgofh32jpddoic12w6zcnxhvx6vkgef7",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "s55ecb"
        },
        "latlong" : {
          "equalTo" : "sk2995cli9l3do8z1jlkwkvreb4m38h4opdrglbmyr3d86ffqj3ahz3tsidzwvi4003q3voa2859jnuqxz1u7gbsv283biw1myui99t9mp2znawi5wb2ng0kd8wbhdwtwbcybokw2ti6wqj399qscrfa43ivhsizh9h6doy1ew2b1wlfz6tgnth0eg0eky1z0zrgas"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d926f7b-ba2c-44bf-a58e-477ddd43d996",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5521fee5-7faf-4a6d-90c6-468cd0b8e0ba",
    "name" : "Search restaurants",
    "request" : {
      "urlPath" : "/search/restaurants/nwqpw7jhm3wc7fokfrabz84wa59o0j1wkdjg9xxctsw77238zn7uspxtyx4bupd688hvkmyrwk6j28hxl2brqhfgaxypvf3j9kf2uw6c5tic4o8sp3di9l5jd9o3livd6dmm",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "ofw4jy4v68xiyo7aby8gxezm40rd70"
        },
        "latlong" : {
          "equalTo" : "3ar2so5q58g4qzvrhf0g7192nxiv44bybg1vwiyo7hejl0pwh42m8r2ud57r7p8yg26q1pzhkubd6ydddii0p7xcz3dxuh01gacnqiq0cbse84z6te5yrk4masxvtfd9q2ijwo5z0z43"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"errorCode\" : \"422\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5521fee5-7faf-4a6d-90c6-468cd0b8e0ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc4b1181-d8c1-409c-839f-95aa97d264ab",
    "name" : "Search restaurants",
    "request" : {
      "urlPath" : "/search/restaurants/35ef7sl5i6d8dfxvrppub9y9mljbk9nhqgclyy4w2w3lcwbtjwr4su04oujq9kpykcl0xkmhc5pj0aiuq",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "dpvghwddpob9sj3w0eymmd81zmx0m24nnx3njh5fwnm2d2qg1ohro7mxedsl85lgqzrzbu9bccz88qey6faml"
        },
        "latlong" : {
          "equalTo" : "mndircjygbiagh5api944cbjy19mihkiaxc"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"errorCode\" : \"401\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc4b1181-d8c1-409c-839f-95aa97d264ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "60c336b3-60e1-463f-8f64-2619c1219b13",
    "name" : "Search restaurants",
    "request" : {
      "urlPath" : "/search/restaurants/iyn1zx341inhdqm8r4m2bv4wmena1fo7ux0bc0c8yz5qn2wnv2htyn82b55ia2lpnneevu03wlj7whtl725janxncecdwjcke50gjyg9hvxxg0",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "wb4uykxdyt8m8s3gduml8r80wrryws6me8v761ji385min396px0h8ii1qdhh5rjzqat9556g4prppq28mr9o43l5wj507op4kr7mce1vte1yo3v5mnh6qjxzhxzr7e6"
        },
        "latlong" : {
          "equalTo" : "2aql7r8ews5azx6cway5un5pcu07l7sukc54y4p8vzd88nwmtg8r27am41fslc0sokvmhz819rjt2kkp5qjika85o"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Validation failed on one or more fields\",\n    \"errorCode\" : 400,\n    \"fields\" : [ \"latlong\" ]\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60c336b3-60e1-463f-8f64-2619c1219b13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b0bde25-a477-4485-8127-638b938b2d21",
    "name" : "Search restaurants",
    "request" : {
      "urlPath" : "/search/restaurants/sfsl01s0s2wzyldl3c5hl4jqiuv6c",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "g6xuga5cht1f991hmve7gybb8ypd6v95x0237vlrglabdwsbu1wbnkmzgnm6grbph234ri6iz8j2y1pm6aw3lamby8x7mj5l0jyb4w4vx5suxyl88u8xiwk2qm94clo6t0wya3k17xdgntn4m6lua2qkfdfou4v3941et9t5l76gzo4qdm3me8o"
        },
        "latlong" : {
          "equalTo" : "laerex3l100i7azaej7nufalbdph5yo0bkmjvf2ve7iuczd5mtoqcfu1rzggshkvr5pmeesnmazsocsezu2v1v3qws9ef"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"restaurants\" : [ {\n    \"isSponsored\" : true,\n    \"products\" : [ {\n      \"fullName\" : \"Chicken Korma\",\n      \"price\" : 799,\n      \"productId\" : \"289347\"\n    }, {\n      \"fullName\" : \"Chicken Madras\",\n      \"price\" : 699,\n      \"productId\" : \"563454\"\n    } ],\n    \"restaurantId\" : \"110230\"\n  }, {\n    \"isSponsored\" : false,\n    \"products\" : [ {\n      \"fullName\" : \"BBQ Chicken Pizza\",\n      \"price\" : 1099,\n      \"productId\" : \"67832\"\n    }, {\n      \"fullName\" : \"Chicken Burger\",\n      \"price\" : 899,\n      \"productId\" : \"23567\"\n    } ],\n    \"restaurantId\" : \"229390\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b0bde25-a477-4485-8127-638b938b2d21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : {
              "restaurants" : [ {
                "isSponsored" : true,
                "products" : [ {
                  "fullName" : "Chicken Korma",
                  "price" : 799,
                  "productId" : "289347"
                }, {
                  "fullName" : "Chicken Madras",
                  "price" : 699,
                  "productId" : "563454"
                } ],
                "restaurantId" : "110230"
              }, {
                "isSponsored" : false,
                "products" : [ {
                  "fullName" : "BBQ Chicken Pizza",
                  "price" : 1099,
                  "productId" : "67832"
                }, {
                  "fullName" : "Chicken Burger",
                  "price" : 899,
                  "productId" : "23567"
                } ],
                "restaurantId" : "229390"
              } ]
            },
            "properties" : {
              "restaurants" : {
                "description" : "Ordered list of restaurants",
                "items" : {
                  "$ref" : "#/components/schemas/RestaurantSearchResponseItem"
                },
                "type" : "array",
                "uniqueItems" : false
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "29cb4f96-e1e4-4aa1-88ea-e9dee12343c4",
    "name" : "Get auto-completed search terms",
    "request" : {
      "urlPath" : "/search/autocomplete/o69m15luqugozvuqg",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "y8tobd48ghblgo8fu3xhlwv1myqzci5y2l78ri5rz8ugexqxo7js8o72lxva73o2yxtkz692c03c1fsc8wwgle98hi5f1zicc8p6lf5omk2sbara3nc92uobcaea1uj4in2vz7sib8vrmaaxlj6v"
        },
        "latlong" : {
          "equalTo" : "clq0y7fzenh9k3qj8v4vc66bz4z2f9z3oyrqwq6l0kfcdccxp7wfwlcuunflb9s02euhgmg15aw8d852"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29cb4f96-e1e4-4aa1-88ea-e9dee12343c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Service Unavailable",
            "properties" : {
              "fault" : {
                "properties" : {
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "30dbb87c-0799-45bd-b8f4-3f03aad8ef28",
    "name" : "Get auto-completed search terms",
    "request" : {
      "urlPath" : "/search/autocomplete/3cdkauzp3ejbcmpx4lrynfkmdlmi",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "3ldg1qlfs5q5auv7d1ca7ghirnejrxy4h0e88esebqlu9ilf2nrsacluog63x1ukn6jm01eowgyugbtp9hketoqqli8sonoycisybgbz50v5tsavqdm58h3y0aledogl5pp709q9r4dj"
        },
        "latlong" : {
          "equalTo" : "vqgbzz1dokb3qporv0m5iyxqmzx8bl1xy58v34h7hwyf1c1632sfdovly641wp32jisfnnn48be7demeuv71jhupipuwduv9ag49fbn868fauq1h5j1viek6nxv84bv7tvn9vtt0vvx9kxo1r2z7gif9kpmq1dpmr4fkz1te1lvb7j6hwhganvm89h0ay403dil"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30dbb87c-0799-45bd-b8f4-3f03aad8ef28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.394084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79b2e07b-8d81-4d2a-8145-f7b344a256ba",
    "name" : "Get auto-completed search terms",
    "request" : {
      "urlPath" : "/search/autocomplete/47voac17dik9ym57np0sagfmrqp2gynq40qhz3xe3fpl6guwc3el0smpcudhw48l1pg8fm4q036ltfx2iqtfej2gmj4yadcs8b9d4pe04hw4vso3f55hd8kxpxt46infk79hpukurftiwrjdcwqb8sfdg0402z",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "053iso4hr17qwob4xnnqsv5ef5ax5wtin4mgfe8myafyezaid11bxpi1he"
        },
        "latlong" : {
          "equalTo" : "isddbplbspxhut8fv50x4npyuff126uf5uqcx48dqpt71jtxvvaktdnboko34ghpjiz08hne98u6q1ewbq0oqzyrjeg49va3zommfisguve51jvlwl"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"errorCode\" : \"401\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79b2e07b-8d81-4d2a-8145-f7b344a256ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d406591b-18d8-4691-a13e-ce47b1875225",
    "name" : "Get auto-completed search terms",
    "request" : {
      "urlPath" : "/search/autocomplete/ka180sgt3mlqv344v0gdh57qknu2kxj",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "i8312esxm0gphrw7nknmn9u22ndzazorf16bmc71b9fzxcgwdh2o7dbrv8ua0n0y3mler4tfk8d5qgx5spg6axdktpkzefbeihjg5tw9pswty67ysz1g5cw"
        },
        "latlong" : {
          "equalTo" : "x6dvijofb96adxde52dlqannhrkui51i0xnib9opn9kqa2v4ftfii"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Validation failed on one or more fields\",\n    \"errorCode\" : 400,\n    \"fields\" : [ \"latlong\" ]\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d406591b-18d8-4691-a13e-ce47b1875225",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist the you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        },
                        "fields" : {
                          "description" : "An array of invalid query fields",
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d803fa3a-d608-44f0-8115-a3f2dec2036e",
    "name" : "Get auto-completed search terms",
    "request" : {
      "urlPath" : "/search/autocomplete/8fzs84wnj5umk1y7bjzmpunsk0mmjf067vysgp70b2t8klf8fqulw2uupkqbwnr5q6eonqljoextwlypaiwp7c5l8",
      "method" : "GET",
      "queryParameters" : {
        "searchTerm" : {
          "equalTo" : "0j1zf098fgt40q7kckyt3gziva2g8w4d6byivt4ill9o2zzh617nenmhumb96l0yuw9sb70jq0rnw510"
        },
        "latlong" : {
          "equalTo" : "ohqs7mdl9sum"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"terms\" : [ {\n    \"classification\" : \"Restaurant\",\n    \"term\" : \"Pizza Palace\"\n  }, {\n    \"classification\" : \"Cuisine\",\n    \"term\" : \"Pizza\"\n  }, {\n    \"classification\" : \"Dish\",\n    \"term\" : \"Large Hawaiian\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d803fa3a-d608-44f0-8115-a3f2dec2036e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : {
              "terms" : [ {
                "classification" : "Restaurant",
                "term" : "Pizza Palace"
              }, {
                "classification" : "Cuisine",
                "term" : "Pizza"
              }, {
                "classification" : "Dish",
                "term" : "Large Hawaiian"
              } ]
            },
            "properties" : {
              "terms" : {
                "description" : "Ordered list of suggested term completions",
                "items" : {
                  "$ref" : "#/components/schemas/AutoCompleteSearchResponseItem"
                },
                "maxItems" : 10,
                "type" : "array",
                "uniqueItems" : false
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8aab977f-65bd-400a-a3a2-87c5f97af5fb",
    "name" : "Create or update service times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/wfxr38q3iz2rw9j8r4eo2zbf2uj04y3ihz10p2kbmayasbyk6q4j048o8qmgomtaitz6kw5abo106tsdz431tntremmox4sgkfnychwey8rwadtfnw9j1kvk7j7h5xxir3xi12upnqka0lelqwno4aq3kr1ua1rjnrxpkeitpucj5935/9q85/servicetimes",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8aab977f-65bd-400a-a3a2-87c5f97af5fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putRestaurantServiceTimes",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b01ea63b-895b-48c3-95c4-9d00975a12ea",
    "name" : "Create or update service times - 403",
    "request" : {
      "urlPath" : "/restaurants/r89kt5c695t5pi2x1kssajvktnrn7yvpqk6b3ssrk7bl2crl3zk21v3bbyt9mjre8jzlx1s2mph1fk1by7n2ah93ngdtakr3tu8ui3dnc39y4fw92hs2w4pa8z9zhtjml/519d/servicetimes",
      "method" : "PUT"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b01ea63b-895b-48c3-95c4-9d00975a12ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putRestaurantServiceTimes"
        }
      }
    }
  }, {
    "id" : "579a75b3-0b2b-4595-8ef8-9922950e1c30",
    "name" : "Create or update service times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/lrb0gyqzsyjwwaen/240k/servicetimes",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The value of \\\"end\\\" must be greater than \\\"start\\\", or \\\"00:00:00\\\"\",\n    \"errorCode\" : \"ERR1234\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "579a75b3-0b2b-4595-8ef8-9922950e1c30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putRestaurantServiceTimes",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9d7dff9-e50a-48c3-91c3-331b30cdea3a",
    "name" : "Create or update service times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/0b8rndxie4tb3ud2nzn93yk3h2/y1d6/servicetimes",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desiredServiceTimes\" : {\n    \"friday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"monday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"saturday\" : {\n      \"collection\" : [ {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"12:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"12:00:00\"\n      } ]\n    },\n    \"sunday\" : {\n      \"collection\" : [ {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"12:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"12:00:00\"\n      } ]\n    },\n    \"thursday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"tuesday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"wednesday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9d7dff9-e50a-48c3-91c3-331b30cdea3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.393153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putRestaurantServiceTimes",
          "schema" : {
            "example" : {
              "desiredServiceTimes" : {
                "friday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "monday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "saturday" : {
                  "collection" : [ {
                    "end" : "23:00:00",
                    "start" : "12:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "00:00:00",
                    "start" : "12:00:00"
                  } ]
                },
                "sunday" : {
                  "collection" : [ {
                    "end" : "23:00:00",
                    "start" : "12:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "00:00:00",
                    "start" : "12:00:00"
                  } ]
                },
                "thursday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "tuesday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "wednesday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                }
              }
            },
            "properties" : {
              "serviceTimes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ServiceTimesDays"
                } ],
                "description" : "The desired times at which a restaurant is in service",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "27755fe1-438a-4b33-bba3-e00d149315be",
    "name" : "Get service times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/tl37ujzhz/vz5b/servicetimes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27755fe1-438a-4b33-bba3-e00d149315be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.392989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getRestaurantServiceTimes",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bec4102a-a9bc-4b70-bfeb-5b3f92c2c66d",
    "name" : "Get service times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/nd2r7flp7fr8cg6923hge3h9jeeifip9n3fon24781zhxa9g49iz1obe9ual1td0bmpvqtf6qh8ir67kbntqizl4uom09zl322b85t82z1kpmyqenc3u5ph1pims7fo1tl2qtdtu53gjuwo1wo055gdtrdw59b8ai5ujfh86zvjlurjlrhr8s5fvj8n41ncq7/h7fu/servicetimes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order not found\",\n    \"errorCode\" : \"ERR1234\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bec4102a-a9bc-4b70-bfeb-5b3f92c2c66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.392842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getRestaurantServiceTimes",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "29619c2a-9160-4eef-b376-18f854caecfd",
    "name" : "Get service times - 403",
    "request" : {
      "urlPath" : "/restaurants/wgg3yacdv0bhienpc9b4n05keal1q8ccqq6b4xpzk78kcvs4kgv3vpivezdkgzvlwkslfskdu38bcd3v8uvmzc0otsnwuhcwoq5f8k5mz55ue8mnmpijiqtbqv8z6fxao0hk357w1rvt41f4dutitiy8lq7diszj7eplnu8tirwxcw4u4me9k93mnbtc3tbahsk4tzfa/46lx/servicetimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "29619c2a-9160-4eef-b376-18f854caecfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.392697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getRestaurantServiceTimes"
        }
      }
    }
  }, {
    "id" : "fe7341a4-4a1c-4ece-9ca7-76213802192e",
    "name" : "Get service times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/zhhpbvgcrzdepqsf2fqnuzh0d9ox2c6m3s5ruoprrnihb6g29p3ab9ga41svhrv436f60ebwx8rrsrvkut4i2nfsaxpue/584c/servicetimes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desiredServiceTimes\" : {\n    \"friday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"monday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"saturday\" : {\n      \"collection\" : [ {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"12:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"12:00:00\"\n      } ]\n    },\n    \"sunday\" : {\n      \"collection\" : [ {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"12:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"12:00:00\"\n      } ]\n    },\n    \"thursday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"tuesday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    },\n    \"wednesday\" : {\n      \"collection\" : [ {\n        \"end\" : \"14:00:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"23:00:00\",\n        \"start\" : \"17:00:00\"\n      } ],\n      \"delivery\" : [ {\n        \"end\" : \"13:30:00\",\n        \"start\" : \"12:00:00\"\n      }, {\n        \"end\" : \"00:00:00\",\n        \"start\" : \"18:00:00\"\n      } ]\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe7341a4-4a1c-4ece-9ca7-76213802192e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.392575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getRestaurantServiceTimes",
          "schema" : {
            "example" : {
              "desiredServiceTimes" : {
                "friday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "monday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "saturday" : {
                  "collection" : [ {
                    "end" : "23:00:00",
                    "start" : "12:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "00:00:00",
                    "start" : "12:00:00"
                  } ]
                },
                "sunday" : {
                  "collection" : [ {
                    "end" : "23:00:00",
                    "start" : "12:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "00:00:00",
                    "start" : "12:00:00"
                  } ]
                },
                "thursday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "tuesday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                },
                "wednesday" : {
                  "collection" : [ {
                    "end" : "14:00:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "23:00:00",
                    "start" : "17:00:00"
                  } ],
                  "delivery" : [ {
                    "end" : "13:30:00",
                    "start" : "12:00:00"
                  }, {
                    "end" : "00:00:00",
                    "start" : "18:00:00"
                  } ]
                }
              }
            },
            "properties" : {
              "serviceTimes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ServiceTimesDays"
                } ],
                "description" : "The desired times at which a restaurant is in service",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "146e7b87-336c-40a3-b1e3-028035c25135",
    "name" : "Update the restaurant's delivery and collection lead times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/gztyu5jb9je8p11r9v5sin2elfyv4g03jeu87osdt8i93c4vhgczh0o4kvfu16gc12iqaoyhszxneatal9xdtlqy87yobk01588tjz1xfpw60i5za9u2v6wn7s3q24c3kcyh48/ylyq/ordertimes/Monday/Collection",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"7foi\",\n    \"faultId\" : \"0o21\",\n    \"errors\" : [ {\n      \"description\" : \"Internal Server Error\"\n    }, {\n      \"description\" : \"Internal Server Error\"\n    }, {\n      \"description\" : \"Internal Server Error\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "146e7b87-336c-40a3-b1e3-028035c25135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.392365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateOrderTime",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2e1f38c5-04ee-40b3-a7a8-3f5dfbafa80e",
    "name" : "Update the restaurant's delivery and collection lead times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/29mkz59k2kf89dz5s98s0t60mily7hwnuuzar80wz2og7um5l3tg66c1lps9tzhc39xx3ueeu7jzty7k0867ujc94pc193ayeup5vzhyrnc94mp6faaej8610ewdwkuxuxnnjuvgee4c7yvn93x0uma9os01hbwwr69emsy3n52qj1/295z/ordertimes/Tuesday/Collection",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e1f38c5-04ee-40b3-a7a8-3f5dfbafa80e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.39199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateOrderTime",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "25a7664a-58e7-436c-b2f9-1ed3a93f3714",
    "name" : "Update the restaurant's delivery and collection lead times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/hxk75oal7tcwc3pmj5vf2t1yvps00yvjvxngckoz1i3cxd1cwx/0n28/ordertimes/Wednesday/Collection",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized. The client did not provide an authentication token or the token was invalid.\",\n    \"errorCode\" : \"ERR401\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25a7664a-58e7-436c-b2f9-1ed3a93f3714",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.391832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateOrderTime",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a895a3be-3fca-43de-86be-cc26bae07ad8",
    "name" : "Update the restaurant's delivery and collection lead times (application/json)",
    "request" : {
      "urlPath" : "/restaurants/j0984t8uc2vbv4lnwx5chtkwiv1o9eqba86i7i8gbm3h9jzgo2lexenbl1vfimyetrl/482b/ordertimes/Friday/Collection",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Bad Request\",\n    \"errorCode\" : \"ERR400\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a895a3be-3fca-43de-86be-cc26bae07ad8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.391675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateOrderTime",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "924bb82c-ad2c-49d0-addd-856c375794ea",
    "name" : "Update the restaurant's delivery and collection lead times - 204",
    "request" : {
      "urlPath" : "/restaurants/uqvsv7k08vc7hiuu3c0bq4kkwk865irtsqqs37basoxcgv12kk62e15mh7n76tv650bwkybm79m280ntlyom1b1pkrj57eb9wq3l288p9ebyaumxftmyef0trqxxn6/358q/ordertimes/Thursday/Delivery",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "924bb82c-ad2c-49d0-addd-856c375794ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.39152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateOrderTime"
        }
      }
    }
  }, {
    "id" : "fc0a1c1a-96e5-42f5-9066-cae6140b1fc3",
    "name" : "Get the restaurant's delivery and collection lead times",
    "request" : {
      "urlPath" : "/restaurants/5phjpze1thoxvt8pqz0vg1k6y6w0il3vdypbdx20ecu7e193r8cm8vyfo0eo2nidjdhsid3qif5vvn4m33epsxshikzx72epnoaemi9wx5adwf1dbzr44a4wqqhm0xekwhkxcwpmabda4y51avztdbsihxy33sbiiq3t7ouw9/795g/ordertimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"2zl2\",\n    \"faultId\" : \"kf64\",\n    \"errors\" : [ {\n      \"description\" : \"Internal Server Error\"\n    }, {\n      \"description\" : \"Internal Server Error\"\n    }, {\n      \"description\" : \"Internal Server Error\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc0a1c1a-96e5-42f5-9066-cae6140b1fc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.391389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetOrderTimes",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a763713-7628-448b-b898-18720042bbe8",
    "name" : "Get the restaurant's delivery and collection lead times",
    "request" : {
      "urlPath" : "/restaurants/bszhwvficb4wn812h1z7pyjxnx2za44f6rvubl9t7ydb9rxth6yaqoafswwm8mq85amcr06xqa7/283g/ordertimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The restaurant still uses deprecated approach of Lunch and Night menus\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a763713-7628-448b-b898-18720042bbe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.39105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetOrderTimes",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "27237ae9-b92a-46a5-81ef-11540882433b",
    "name" : "Get the restaurant's delivery and collection lead times",
    "request" : {
      "urlPath" : "/restaurants/hrcvcs02bcfo1q90muzdcp7ifkqmskcce60j39pfb183fnz0t1v0y5c94t61rx8tkk0e26d89brjkaew/wd19/ordertimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized. The client did not provide an authentication token or the token was invalid.\",\n    \"errorCode\" : \"ERR401\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27237ae9-b92a-46a5-81ef-11540882433b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.390911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetOrderTimes",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b7112c9b-9ab8-419d-bab0-cdb27a92c0df",
    "name" : "Get the restaurant's delivery and collection lead times",
    "request" : {
      "urlPath" : "/restaurants/4cnvl5ywwkm2tn232uxfyph7snzpoc28ewyc0fwaolgbu3i34sh1kruvaq5bngvhyhp87/bf81/ordertimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"dayOfWeek\" : \"Sunday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Monday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Tuesday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Wednesday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Thursday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Friday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Saturday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Delivery\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Sunday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Monday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Tuesday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Wednesday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Thursday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Friday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n}, {\n  \"dayOfWeek\" : \"Saturday\",\n  \"lowerBoundMinutes\" : 35,\n  \"serviceType\" : \"Collection\",\n  \"upperBoundMinutes\" : 50\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7112c9b-9ab8-419d-bab0-cdb27a92c0df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.39076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetOrderTimes",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/orderTime"
            },
            "maxItems" : 14,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    }
  }, {
    "id" : "e30616a5-795d-4b45-8d53-8055654994a8",
    "name" : "Create or update a menu (application/json)",
    "request" : {
      "urlPath" : "/restaurants/1e51zcr5lpeya2xo3k3tr6s0jyagni1jtqvzc8yguao7uksc826rjvl6a52fwvisd5x5dayd357e0ilrs3l/1rtj/menu",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 391684211,\n  \"codeText\" : \"c22umbet2wkc4ozt8pf9zadd9iizs7sh1hi8bxqe1rge9zvu0l0fgxa9h6aq8ji0hyefxdg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e30616a5-795d-4b45-8d53-8055654994a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.390609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putMenuForIngestion",
          "schema" : {
            "properties" : {
              "code" : {
                "format" : "int32",
                "type" : "integer"
              },
              "codeText" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4c031c14-4371-4b49-9dd7-37d94cb8465a",
    "name" : "Create or update a menu - 403",
    "request" : {
      "urlPath" : "/restaurants/7zbybfwvnfu1ibegamohkew1fsl02xa7aa0dh4881wpw4pd2m42nxhs8l7gixucrwikvxhtmjecqlholj3t612l9t11i0e36qic9rzlrpp0ylappi8e7htp86vwtsyf4uxvuj5u07e8xjthihz55lvts/uc80/menu",
      "method" : "PUT"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4c031c14-4371-4b49-9dd7-37d94cb8465a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.390451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putMenuForIngestion"
        }
      }
    }
  }, {
    "id" : "1718d920-a8f0-4e99-a914-dc7defb10ffb",
    "name" : "Create or update a menu - 401",
    "request" : {
      "urlPath" : "/restaurants/4i4xsunnxl8z7aslzpvrkniyucoxj77u1ul0ggmrwcfcy9io4gpp8n1c5j10tknktlj8tnys7ki7dhtew1vgc4rtlwmvo72jcr214hqiy7zv1/0zzc/menu",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1718d920-a8f0-4e99-a914-dc7defb10ffb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.390352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putMenuForIngestion"
        }
      }
    }
  }, {
    "id" : "4be18a57-391c-4489-ab88-4e4733ccdeb6",
    "name" : "Create or update a menu (application/json)",
    "request" : {
      "urlPath" : "/restaurants/88pxghppjzb4ztkinuj5279lg6qjo2e26k46wd4ckn9kh61633mns81bizi0b9gx17na2oo9nr8m13i5t9n0vd3tey652ecq25fz2i3hed1vldd00vd6xkcfd6wfj0lsch1y0m1nlcy74isuhmej48ymqnl/30uc/menu",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"26y8\",\n    \"faultId\" : \"653l\",\n    \"errors\" : [ {\n      \"description\" : \"A sunt quos similique non. Ut unde quis. Iste non ut est. Voluptate tempora dolorum hic dolores. Debitis sed at.\",\n      \"errorCode\" : \"tosfrookkxsbmgr4trf72\"\n    }, {\n      \"description\" : \"Temporibus voluptatum ab ut et. Perspiciatis cupiditate quis facere eos asperiores. Sit et ut dolorem sed. Qui est voluptatum debitis aut. Voluptates rerum unde vel eum vel.\",\n      \"errorCode\" : \"idnxqwa7gctp3ehvgr2dconk0vm9azdkyum6vjklswfim7y1nlnrtgrh79kk1md1qme1qayfypibqczkloje8fwwpxi8m309nh3sl2bg1mjshf0iithxwrm4uk72iwt7154t7pwxqk6017h1qs31hauy099yrkssn7fp0k0k1mrhp40cowvijjf9htmwf\"\n    }, {\n      \"description\" : \"Ea est molestiae. Ullam sit porro illo consequatur ipsam ut libero. Nam laudantium iusto. Ea ut minus beatae sit aut.\",\n      \"errorCode\" : \"5h2r4nwfh9appj37zqho5ou7nqg59ceago7x6d6mfnji9u93w7dt3q3kjl8799vuog2p1kqyn8kq39irkng5gqwvzkete0qhl24bu6kx8zjwbx7da2kh97xojjw8z6im6sndjsi97f6k\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4be18a57-391c-4489-ab88-4e4733ccdeb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.390216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putMenuForIngestion",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8de1c067-292f-486e-87b2-44b57bb10ab8",
    "name" : "Create or update a menu (application/json)",
    "request" : {
      "urlPath" : "/restaurants/mf2o7by1wssveqh0s2m4keulwtt9k82s49ixzeoss2gqy1wun53262wptu46els22xdrdun3pb978dfhpwutrzljv0hb5aep5c1trr2kffbh12oeibzisj043edjsyn2c8kvy8arb9m0j/315q/menu",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"correlationId\" : \"64bef5ee-7265-47f8-9aee-28bc74f00b13\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8de1c067-292f-486e-87b2-44b57bb10ab8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.38957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "putMenuForIngestion",
          "schema" : {
            "example" : {
              "correlationId" : "64bef5ee-7265-47f8-9aee-28bc74f00b13"
            },
            "properties" : {
              "correlationId" : {
                "description" : "An ID for the asynchronous operation to ingest the menu",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d3f2b499-34be-4336-983d-e7007a9c976f",
    "name" : "Get the latest version of the restaurant's full menu (application/json)",
    "request" : {
      "urlPath" : "/restaurants/th25xikv3o6mrzuwyctnv01jh9uaibalp4rqaq7numc6ibqg3k8eggv1y7zq2h9pyn2osi9n6e4krc1tk/1r13/menu",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"code\" : 1321333317,\n  \"codeText\" : \"tyfdmavv8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3f2b499-34be-4336-983d-e7007a9c976f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.389434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "format" : "int32",
                "type" : "integer"
              },
              "codeText" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "25b4853a-6c4f-4106-8d8a-1a461b2fe788",
    "name" : "Get the latest version of the restaurant's full menu - 403",
    "request" : {
      "urlPath" : "/restaurants/4dtzo5qei2d8dufbvdpmujdmml3rouvmp8fzoe36ld0nxll4rpa7auotx5bal4av98sj0p4lxv0uvgkvl2xv0k1xgl8kdm1inqd7tgejb/8bb0/menu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "25b4853a-6c4f-4106-8d8a-1a461b2fe788",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.389261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b7abc814-85d7-455e-bba2-7b4916489f6f",
    "name" : "Get the latest version of the restaurant's full menu - 401",
    "request" : {
      "urlPath" : "/restaurants/jtibpqm3oi1l3o6n6xbwbckkb62ggwygciitc44ajv3g/k073/menu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b7abc814-85d7-455e-bba2-7b4916489f6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.389166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "aa607f00-1f56-4c0b-98c9-a302d6d7b2e7",
    "name" : "Get the latest version of the restaurant's full menu - 400",
    "request" : {
      "urlPath" : "/restaurants/gm5o9c21coowy6okqlg3a5y3icnizp8vk9yto0ecfl1v2xenax7j9w5xxu59hwn2rmppbvhzb50z80tkrlmoabxteu2j4k59n1wp8sw5dt9rcrvpd1bk74fwrb3r2bh63zwcy99g3074e5xorpicq19gjtnedr77wfc34cefpmm5x/b9kv/menu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "aa607f00-1f56-4c0b-98c9-a302d6d7b2e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.389076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "79815b49-d1eb-4ea3-af4d-c02faa65dfa2",
    "name" : "Get the latest version of the restaurant's full menu (application/json)",
    "request" : {
      "urlPath" : "/restaurants/4fv315v5hic00wpgri6jgc9p2c4iriib5uhr1fs1v43aq0otzogwi8bm92wi7ah7g7gu2xwpkaf63mgsbukurgaa2t1yah35a37o89rht7l6110jwwn24lqjkt9vo5z36tf/ngzr/menu",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 301,
      "body" : "{\n  \"categories\" : [ {\n    \"description\" : \"\",\n    \"id\" : \"3\",\n    \"itemIds\" : [ \"65143901\" ],\n    \"name\" : \"Starters\"\n  }, {\n    \"description\" : \"\",\n    \"id\" : \"4\",\n    \"itemIds\" : [ \"23435309\", \"33445308\" ],\n    \"name\" : \"Deals\"\n  }, {\n    \"description\" : \"\",\n    \"id\" : \"5\",\n    \"itemIds\" : [ \"8547130\", \"8547140\" ],\n    \"name\" : \"Pizzas\"\n  }, {\n    \"description\" : \"\",\n    \"id\" : \"6\",\n    \"itemIds\" : [ \"6537130\", \"6537140\" ],\n    \"name\" : \"Drinks\"\n  } ],\n  \"currency\" : \"GBP\",\n  \"description\" : \"My excellent menu\",\n  \"items\" : [ {\n    \"dealGroups\" : [ {\n      \"dealItemVariations\" : [ {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"1577341\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      } ],\n      \"id\" : \"23435309-1\",\n      \"name\" : \"Choose your base\",\n      \"numberOfChoices\" : 1\n    }, {\n      \"dealItemVariations\" : [ {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"8547121\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      }, {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"3547157\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      }, {\n        \"additionPrice\" : 50,\n        \"dealItemVariationId\" : \"8548153\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      } ],\n      \"id\" : \"23435309-2\",\n      \"name\" : \"Choose your halves\",\n      \"numberOfChoices\" : 2\n    } ],\n    \"description\" : \"Choose each half.\",\n    \"id\" : \"23435309\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ ],\n    \"name\" : \"Half-and-half Pizza\",\n    \"type\" : \"deal\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\" ],\n      \"basePrice\" : 3099,\n      \"dealGroupsIds\" : [ \"23435309-1\", \"23435309-2\" ],\n      \"dealOnly\" : false,\n      \"id\" : \"23435309\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"\",\n      \"type\" : \"noVariation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ {\n      \"dealItemVariations\" : [ {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"9750011\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      }, {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"9750021\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      }, {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"23435309\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      } ],\n      \"id\" : \"33445308-1\",\n      \"name\" : \"Choose your pizza\",\n      \"numberOfChoices\" : 1\n    }, {\n      \"dealItemVariations\" : [ {\n        \"additionPrice\" : 13,\n        \"dealItemVariationId\" : \"6537130\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      }, {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"6537140\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      }, {\n        \"additionPrice\" : 0,\n        \"dealItemVariationId\" : \"7739164\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0\n      } ],\n      \"id\" : \"33445308-2\",\n      \"name\" : \"Choose your drink\",\n      \"numberOfChoices\" : 1\n    } ],\n    \"description\" : \"Choose a 14 inch Pizza (including half-and-half) and any drink. Note: Alcohol is only available for collection.\",\n    \"id\" : \"33445308\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ ],\n    \"name\" : \"14 inch Pizza & A Drink For 1\",\n    \"type\" : \"deal\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\" ],\n      \"basePrice\" : 3099,\n      \"dealGroupsIds\" : [ \"33445308-1\", \"33445308-2\" ],\n      \"dealOnly\" : false,\n      \"id\" : \"33445308\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"\",\n      \"type\" : \"noVariation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"65143901\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ {\n      \"id\" : \"65143901-req-1\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 1,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 0,\n        \"id\" : \"834502\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Pitta Bread\"\n      }, {\n        \"additionPrice\" : 0,\n        \"id\" : \"835700\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Sourdough\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"835601\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Wholemeal\"\n      } ],\n      \"name\" : \"Choose your bread\"\n    }, {\n      \"id\" : \"65143901-req-2\",\n      \"maxChoices\" : 2,\n      \"minChoices\" : 2,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 0,\n        \"id\" : \"835340\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Tzatziki\"\n      }, {\n        \"additionPrice\" : 0,\n        \"id\" : \"835341\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Taramasalata\"\n      }, {\n        \"additionPrice\" : 0,\n        \"id\" : \"825344\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Hummus\"\n      }, {\n        \"additionPrice\" : 0,\n        \"id\" : \"825346\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Onion\"\n      } ],\n      \"name\" : \"Choose your dips\"\n    } ],\n    \"name\" : \"Flat Bread and Dips (Pick any 2 Dips)\",\n    \"requireOtherProducts\" : false,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 650,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"65143901\",\n      \"kitchenNumber\" : \"90\",\n      \"modifierGroupsIds\" : [ \"65143901-req-1\", \"65143901-req-2\" ],\n      \"name\" : \"\",\n      \"type\" : \"noVariation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"1577341\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ {\n      \"id\" : \"1577341-req-1\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 1,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 0,\n        \"id\" : \"854500\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Classic Crust\"\n      }, {\n        \"additionPrice\" : 200,\n        \"id\" : \"854600\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Stuffed Crust\"\n      } ],\n      \"name\" : \"Crust\"\n    } ],\n    \"name\" : \"Base\",\n    \"requireOtherProducts\" : true,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 200,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : true,\n      \"id\" : \"1577341\",\n      \"modifierGroupsIds\" : [ \"1577341-req-1\" ],\n      \"name\" : \"\",\n      \"type\" : \"noVariation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"8547130\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ {\n      \"id\" : \"8547130-req-1\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 1,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 0,\n        \"id\" : \"854500\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Classic Crust\"\n      }, {\n        \"additionPrice\" : 200,\n        \"id\" : \"854600\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Stuffed Crust\"\n      } ],\n      \"name\" : \"Choose your crust\"\n    }, {\n      \"id\" : \"8547130-opt-1\",\n      \"maxChoices\" : 10,\n      \"minChoices\" : 0,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 50,\n        \"id\" : \"1000\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Mozzarella Cheese\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1001\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Ham\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1002\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Red Onion\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1003\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Pepperoni\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1004\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Olives\"\n      } ],\n      \"name\" : \"Any extra toppings?\"\n    } ],\n    \"name\" : \"Margherita\",\n    \"requireOtherProducts\" : true,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 500,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : true,\n      \"id\" : \"8547121\",\n      \"kitchenNumber\" : \"100\",\n      \"modifierGroupsIds\" : [ \"8547130-opt-1\" ],\n      \"name\" : \"Half\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 1000,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"8547130\",\n      \"kitchenNumber\" : \"100\",\n      \"modifierGroupsIds\" : [ \"8547130-req-1\", \"8547130-opt-1\" ],\n      \"name\" : \"12 inch\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"1-lunch-delivery-weekday\", \"2-lunch-collection-weekday\", \"3-dinner-delivery-weekday\", \"4-dinner-collection-weekday\" ],\n      \"basePrice\" : 1200,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : true,\n      \"id\" : \"8543123\",\n      \"kitchenNumber\" : \"200\",\n      \"modifierGroupsIds\" : [ \"8547130-req-1\", \"8547130-opt-1\" ],\n      \"name\" : \"14 inch\",\n      \"type\" : \"variation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"8547140\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ {\n      \"id\" : \"8547140-req-1\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 1,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 0,\n        \"id\" : \"854500\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Classic Crust\"\n      }, {\n        \"additionPrice\" : 200,\n        \"id\" : \"854600\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Stuffed Crust\"\n      } ],\n      \"name\" : \"Choose your crust\"\n    }, {\n      \"id\" : \"8547140-opt-1\",\n      \"maxChoices\" : 10,\n      \"minChoices\" : 0,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 50,\n        \"id\" : \"1000\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Mozzarella Cheese\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1001\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Ham\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1002\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Red Onion\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1003\",\n        \"maxChoices\" : 4,\n        \"minChoices\" : 2,\n        \"name\" : \"Pepperoni\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1004\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Olives\"\n      } ],\n      \"name\" : \"Any extra toppings?\"\n    }, {\n      \"id\" : \"9755052-req-1\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 1,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 0,\n        \"id\" : \"854500\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Classic Crust\"\n      }, {\n        \"additionPrice\" : 250,\n        \"id\" : \"854600\",\n        \"maxChoices\" : 1,\n        \"minChoices\" : 0,\n        \"name\" : \"Stuffed Crust\"\n      } ],\n      \"name\" : \"Choose your crust\"\n    }, {\n      \"id\" : \"9755052-opt-1\",\n      \"maxChoices\" : 10,\n      \"minChoices\" : 0,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 70,\n        \"id\" : \"1000\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Mozzarella Cheese\"\n      }, {\n        \"additionPrice\" : 70,\n        \"id\" : \"1001\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Ham\"\n      }, {\n        \"additionPrice\" : 70,\n        \"id\" : \"1002\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Red Onion\"\n      }, {\n        \"additionPrice\" : 70,\n        \"id\" : \"1003\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Pepperoni\"\n      }, {\n        \"additionPrice\" : 70,\n        \"id\" : \"1004\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Olives\"\n      } ],\n      \"name\" : \"Any extra toppings?\"\n    } ],\n    \"name\" : \"Double Pepperoni\",\n    \"requireOtherProducts\" : false,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 500,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : true,\n      \"id\" : \"8548153\",\n      \"kitchenNumber\" : \"100\",\n      \"modifierGroupsIds\" : [ \"8547140-opt-1\" ],\n      \"name\" : \"Half\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 1000,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"8547140\",\n      \"kitchenNumber\" : \"100\",\n      \"modifierGroupsIds\" : [ \"8547140-req-1\", \"8547140-opt-1\" ],\n      \"name\" : \"12 inch\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 1200,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : true,\n      \"id\" : \"9750021\",\n      \"kitchenNumber\" : \"200\",\n      \"modifierGroupsIds\" : [ \"8547140-req-1\", \"8547140-opt-1\" ],\n      \"name\" : \"14 inch\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"2-lunch-collection\", \"4-dinner-collection\" ],\n      \"basePrice\" : 1200,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"9755052\",\n      \"kitchenNumber\" : \"200\",\n      \"modifierGroupsIds\" : [ \"9755052-req-1\", \"9755052-opt-1\" ],\n      \"name\" : \"18 inch\",\n      \"type\" : \"variation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"3547157\",\n    \"labels\" : [ \"vegetarian\" ],\n    \"modifierGroups\" : [ {\n      \"id\" : \"8547140-opt-1\",\n      \"maxChoices\" : 10,\n      \"minChoices\" : 0,\n      \"modifiers\" : [ {\n        \"additionPrice\" : 50,\n        \"id\" : \"1000\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Mozzarella Cheese\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1001\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Ham\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1002\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 1,\n        \"name\" : \"Red Onion\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1003\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 0,\n        \"name\" : \"Pepperoni\"\n      }, {\n        \"additionPrice\" : 50,\n        \"id\" : \"1004\",\n        \"maxChoices\" : 2,\n        \"minChoices\" : 1,\n        \"name\" : \"Olives\"\n      } ],\n      \"name\" : \"Any extra toppings?\"\n    } ],\n    \"name\" : \"Vegetarian\",\n    \"requireOtherProducts\" : false,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 500,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : true,\n      \"id\" : \"3547157\",\n      \"kitchenNumber\" : \"121\",\n      \"modifierGroupsIds\" : [ \"8547140-opt-1\" ],\n      \"name\" : \"\",\n      \"type\" : \"noVariation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"6537130\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ ],\n    \"name\" : \"Coca-Cola\",\n    \"requireOtherProducts\" : true,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 100,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"6537130\",\n      \"kitchenNumber\" : \"300\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"0.33L\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 300,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"9750011\",\n      \"kitchenNumber\" : \"400\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"1.5L\",\n      \"type\" : \"variation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"6537140\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ ],\n    \"name\" : \"Diet Coke\",\n    \"requireOtherProducts\" : true,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 100,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"6537140\",\n      \"kitchenNumber\" : \"300\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"0.33L\",\n      \"type\" : \"variation\"\n    }, {\n      \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n      \"basePrice\" : 300,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"9750312\",\n      \"kitchenNumber\" : \"400\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"1.5L\",\n      \"type\" : \"variation\"\n    } ]\n  }, {\n    \"dealGroups\" : [ ],\n    \"description\" : \"\",\n    \"id\" : \"7739164\",\n    \"labels\" : [ ],\n    \"modifierGroups\" : [ ],\n    \"name\" : \"Bottle of Lager\",\n    \"requireOtherProducts\" : true,\n    \"type\" : \"menuItem\",\n    \"variations\" : [ {\n      \"availabilityIds\" : [ \"2-lunch-collection\", \"4-dinner-collection\" ],\n      \"basePrice\" : 300,\n      \"dealGroupsIds\" : [ ],\n      \"dealOnly\" : false,\n      \"id\" : \"7739164\",\n      \"kitchenNumber\" : \"700\",\n      \"modifierGroupsIds\" : [ ],\n      \"name\" : \"\",\n      \"type\" : \"noVariation\"\n    } ]\n  } ],\n  \"name\" : \"My Restaurant\",\n  \"restaurantId\" : \"100059\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79815b49-d1eb-4ea3-af4d-c02faa65dfa2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.388909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MenuBase"
            }, {
              "properties" : {
                "availabilities" : {
                  "description" : "A set of availabilities that can later be referenced by individual menu items.",
                  "items" : {
                    "$ref" : "#/components/schemas/Availability"
                  },
                  "type" : "array"
                },
                "categories" : {
                  "description" : "A set of categories that appear on the menu.",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  },
                  "type" : "array"
                },
                "items" : {
                  "description" : "All of the menu items within the menu.",
                  "items" : {
                    "$ref" : "#/components/schemas/MenuItem"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "categories" : [ {
                "description" : "",
                "id" : "3",
                "itemIds" : [ "65143901" ],
                "name" : "Starters"
              }, {
                "description" : "",
                "id" : "4",
                "itemIds" : [ "23435309", "33445308" ],
                "name" : "Deals"
              }, {
                "description" : "",
                "id" : "5",
                "itemIds" : [ "8547130", "8547140" ],
                "name" : "Pizzas"
              }, {
                "description" : "",
                "id" : "6",
                "itemIds" : [ "6537130", "6537140" ],
                "name" : "Drinks"
              } ],
              "currency" : "GBP",
              "description" : "My excellent menu",
              "items" : [ {
                "dealGroups" : [ {
                  "dealItemVariations" : [ {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "1577341",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  } ],
                  "id" : "23435309-1",
                  "name" : "Choose your base",
                  "numberOfChoices" : 1
                }, {
                  "dealItemVariations" : [ {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "8547121",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  }, {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "3547157",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  }, {
                    "additionPrice" : 50,
                    "dealItemVariationId" : "8548153",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  } ],
                  "id" : "23435309-2",
                  "name" : "Choose your halves",
                  "numberOfChoices" : 2
                } ],
                "description" : "Choose each half.",
                "id" : "23435309",
                "labels" : [ ],
                "modifierGroups" : [ ],
                "name" : "Half-and-half Pizza",
                "type" : "deal",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery" ],
                  "basePrice" : 3099,
                  "dealGroupsIds" : [ "23435309-1", "23435309-2" ],
                  "dealOnly" : false,
                  "id" : "23435309",
                  "modifierGroupsIds" : [ ],
                  "name" : "",
                  "type" : "noVariation"
                } ]
              }, {
                "dealGroups" : [ {
                  "dealItemVariations" : [ {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "9750011",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  }, {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "9750021",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  }, {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "23435309",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  } ],
                  "id" : "33445308-1",
                  "name" : "Choose your pizza",
                  "numberOfChoices" : 1
                }, {
                  "dealItemVariations" : [ {
                    "additionPrice" : 13,
                    "dealItemVariationId" : "6537130",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  }, {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "6537140",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  }, {
                    "additionPrice" : 0,
                    "dealItemVariationId" : "7739164",
                    "maxChoices" : 1,
                    "minChoices" : 0
                  } ],
                  "id" : "33445308-2",
                  "name" : "Choose your drink",
                  "numberOfChoices" : 1
                } ],
                "description" : "Choose a 14 inch Pizza (including half-and-half) and any drink. Note: Alcohol is only available for collection.",
                "id" : "33445308",
                "labels" : [ ],
                "modifierGroups" : [ ],
                "name" : "14 inch Pizza & A Drink For 1",
                "type" : "deal",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery" ],
                  "basePrice" : 3099,
                  "dealGroupsIds" : [ "33445308-1", "33445308-2" ],
                  "dealOnly" : false,
                  "id" : "33445308",
                  "modifierGroupsIds" : [ ],
                  "name" : "",
                  "type" : "noVariation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "65143901",
                "labels" : [ ],
                "modifierGroups" : [ {
                  "id" : "65143901-req-1",
                  "maxChoices" : 1,
                  "minChoices" : 1,
                  "modifiers" : [ {
                    "additionPrice" : 0,
                    "id" : "834502",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Pitta Bread"
                  }, {
                    "additionPrice" : 0,
                    "id" : "835700",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Sourdough"
                  }, {
                    "additionPrice" : 50,
                    "id" : "835601",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Wholemeal"
                  } ],
                  "name" : "Choose your bread"
                }, {
                  "id" : "65143901-req-2",
                  "maxChoices" : 2,
                  "minChoices" : 2,
                  "modifiers" : [ {
                    "additionPrice" : 0,
                    "id" : "835340",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Tzatziki"
                  }, {
                    "additionPrice" : 0,
                    "id" : "835341",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Taramasalata"
                  }, {
                    "additionPrice" : 0,
                    "id" : "825344",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Hummus"
                  }, {
                    "additionPrice" : 0,
                    "id" : "825346",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Onion"
                  } ],
                  "name" : "Choose your dips"
                } ],
                "name" : "Flat Bread and Dips (Pick any 2 Dips)",
                "requireOtherProducts" : false,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 650,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "65143901",
                  "kitchenNumber" : "90",
                  "modifierGroupsIds" : [ "65143901-req-1", "65143901-req-2" ],
                  "name" : "",
                  "type" : "noVariation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "1577341",
                "labels" : [ ],
                "modifierGroups" : [ {
                  "id" : "1577341-req-1",
                  "maxChoices" : 1,
                  "minChoices" : 1,
                  "modifiers" : [ {
                    "additionPrice" : 0,
                    "id" : "854500",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Classic Crust"
                  }, {
                    "additionPrice" : 200,
                    "id" : "854600",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Stuffed Crust"
                  } ],
                  "name" : "Crust"
                } ],
                "name" : "Base",
                "requireOtherProducts" : true,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 200,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : true,
                  "id" : "1577341",
                  "modifierGroupsIds" : [ "1577341-req-1" ],
                  "name" : "",
                  "type" : "noVariation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "8547130",
                "labels" : [ ],
                "modifierGroups" : [ {
                  "id" : "8547130-req-1",
                  "maxChoices" : 1,
                  "minChoices" : 1,
                  "modifiers" : [ {
                    "additionPrice" : 0,
                    "id" : "854500",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Classic Crust"
                  }, {
                    "additionPrice" : 200,
                    "id" : "854600",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Stuffed Crust"
                  } ],
                  "name" : "Choose your crust"
                }, {
                  "id" : "8547130-opt-1",
                  "maxChoices" : 10,
                  "minChoices" : 0,
                  "modifiers" : [ {
                    "additionPrice" : 50,
                    "id" : "1000",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Mozzarella Cheese"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1001",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Ham"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1002",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Red Onion"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1003",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Pepperoni"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1004",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Olives"
                  } ],
                  "name" : "Any extra toppings?"
                } ],
                "name" : "Margherita",
                "requireOtherProducts" : true,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 500,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : true,
                  "id" : "8547121",
                  "kitchenNumber" : "100",
                  "modifierGroupsIds" : [ "8547130-opt-1" ],
                  "name" : "Half",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 1000,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "8547130",
                  "kitchenNumber" : "100",
                  "modifierGroupsIds" : [ "8547130-req-1", "8547130-opt-1" ],
                  "name" : "12 inch",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "1-lunch-delivery-weekday", "2-lunch-collection-weekday", "3-dinner-delivery-weekday", "4-dinner-collection-weekday" ],
                  "basePrice" : 1200,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : true,
                  "id" : "8543123",
                  "kitchenNumber" : "200",
                  "modifierGroupsIds" : [ "8547130-req-1", "8547130-opt-1" ],
                  "name" : "14 inch",
                  "type" : "variation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "8547140",
                "labels" : [ ],
                "modifierGroups" : [ {
                  "id" : "8547140-req-1",
                  "maxChoices" : 1,
                  "minChoices" : 1,
                  "modifiers" : [ {
                    "additionPrice" : 0,
                    "id" : "854500",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Classic Crust"
                  }, {
                    "additionPrice" : 200,
                    "id" : "854600",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Stuffed Crust"
                  } ],
                  "name" : "Choose your crust"
                }, {
                  "id" : "8547140-opt-1",
                  "maxChoices" : 10,
                  "minChoices" : 0,
                  "modifiers" : [ {
                    "additionPrice" : 50,
                    "id" : "1000",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Mozzarella Cheese"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1001",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Ham"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1002",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Red Onion"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1003",
                    "maxChoices" : 4,
                    "minChoices" : 2,
                    "name" : "Pepperoni"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1004",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Olives"
                  } ],
                  "name" : "Any extra toppings?"
                }, {
                  "id" : "9755052-req-1",
                  "maxChoices" : 1,
                  "minChoices" : 1,
                  "modifiers" : [ {
                    "additionPrice" : 0,
                    "id" : "854500",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Classic Crust"
                  }, {
                    "additionPrice" : 250,
                    "id" : "854600",
                    "maxChoices" : 1,
                    "minChoices" : 0,
                    "name" : "Stuffed Crust"
                  } ],
                  "name" : "Choose your crust"
                }, {
                  "id" : "9755052-opt-1",
                  "maxChoices" : 10,
                  "minChoices" : 0,
                  "modifiers" : [ {
                    "additionPrice" : 70,
                    "id" : "1000",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Mozzarella Cheese"
                  }, {
                    "additionPrice" : 70,
                    "id" : "1001",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Ham"
                  }, {
                    "additionPrice" : 70,
                    "id" : "1002",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Red Onion"
                  }, {
                    "additionPrice" : 70,
                    "id" : "1003",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Pepperoni"
                  }, {
                    "additionPrice" : 70,
                    "id" : "1004",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Olives"
                  } ],
                  "name" : "Any extra toppings?"
                } ],
                "name" : "Double Pepperoni",
                "requireOtherProducts" : false,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 500,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : true,
                  "id" : "8548153",
                  "kitchenNumber" : "100",
                  "modifierGroupsIds" : [ "8547140-opt-1" ],
                  "name" : "Half",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 1000,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "8547140",
                  "kitchenNumber" : "100",
                  "modifierGroupsIds" : [ "8547140-req-1", "8547140-opt-1" ],
                  "name" : "12 inch",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 1200,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : true,
                  "id" : "9750021",
                  "kitchenNumber" : "200",
                  "modifierGroupsIds" : [ "8547140-req-1", "8547140-opt-1" ],
                  "name" : "14 inch",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "2-lunch-collection", "4-dinner-collection" ],
                  "basePrice" : 1200,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "9755052",
                  "kitchenNumber" : "200",
                  "modifierGroupsIds" : [ "9755052-req-1", "9755052-opt-1" ],
                  "name" : "18 inch",
                  "type" : "variation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "3547157",
                "labels" : [ "vegetarian" ],
                "modifierGroups" : [ {
                  "id" : "8547140-opt-1",
                  "maxChoices" : 10,
                  "minChoices" : 0,
                  "modifiers" : [ {
                    "additionPrice" : 50,
                    "id" : "1000",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Mozzarella Cheese"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1001",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Ham"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1002",
                    "maxChoices" : 2,
                    "minChoices" : 1,
                    "name" : "Red Onion"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1003",
                    "maxChoices" : 2,
                    "minChoices" : 0,
                    "name" : "Pepperoni"
                  }, {
                    "additionPrice" : 50,
                    "id" : "1004",
                    "maxChoices" : 2,
                    "minChoices" : 1,
                    "name" : "Olives"
                  } ],
                  "name" : "Any extra toppings?"
                } ],
                "name" : "Vegetarian",
                "requireOtherProducts" : false,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 500,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : true,
                  "id" : "3547157",
                  "kitchenNumber" : "121",
                  "modifierGroupsIds" : [ "8547140-opt-1" ],
                  "name" : "",
                  "type" : "noVariation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "6537130",
                "labels" : [ ],
                "modifierGroups" : [ ],
                "name" : "Coca-Cola",
                "requireOtherProducts" : true,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 100,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "6537130",
                  "kitchenNumber" : "300",
                  "modifierGroupsIds" : [ ],
                  "name" : "0.33L",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 300,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "9750011",
                  "kitchenNumber" : "400",
                  "modifierGroupsIds" : [ ],
                  "name" : "1.5L",
                  "type" : "variation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "6537140",
                "labels" : [ ],
                "modifierGroups" : [ ],
                "name" : "Diet Coke",
                "requireOtherProducts" : true,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 100,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "6537140",
                  "kitchenNumber" : "300",
                  "modifierGroupsIds" : [ ],
                  "name" : "0.33L",
                  "type" : "variation"
                }, {
                  "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                  "basePrice" : 300,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "9750312",
                  "kitchenNumber" : "400",
                  "modifierGroupsIds" : [ ],
                  "name" : "1.5L",
                  "type" : "variation"
                } ]
              }, {
                "dealGroups" : [ ],
                "description" : "",
                "id" : "7739164",
                "labels" : [ ],
                "modifierGroups" : [ ],
                "name" : "Bottle of Lager",
                "requireOtherProducts" : true,
                "type" : "menuItem",
                "variations" : [ {
                  "availabilityIds" : [ "2-lunch-collection", "4-dinner-collection" ],
                  "basePrice" : 300,
                  "dealGroupsIds" : [ ],
                  "dealOnly" : false,
                  "id" : "7739164",
                  "kitchenNumber" : "700",
                  "modifierGroupsIds" : [ ],
                  "name" : "",
                  "type" : "noVariation"
                } ]
              } ],
              "name" : "My Restaurant",
              "restaurantId" : "100059"
            }
          }
        }
      }
    }
  }, {
    "id" : "4f35c329-867d-472c-a67c-02c21c586e09",
    "name" : "Create or Update Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/ffmr09ztgnhid5k3cfknhrwxac07yfktv4rc5t1cnnby8uhr7ge20alvs483dytwy32xxllmxrpckpt8/32i9/fees",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f35c329-867d-472c-a67c-02c21c586e09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.388465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0b5ff147-faf1-44ad-a22f-163ee37d9306",
    "name" : "Create or Update Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/9ll1co1uup5inrvcrif8bn/7lzo/fees",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The requested resource does not exist on this server\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b5ff147-faf1-44ad-a22f-163ee37d9306",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.388336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f04d34ba-4fc0-49dc-9adf-d64723b57640",
    "name" : "Create or Update Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/kw7wrc89x5yl0px0f8sdl5oumb4mxe2usswaps77y5tcb8ay880i6m395uvm0dvkch0mmnoej4pyj8kunwqatyp35iqfi74ib9egcrxd86zjwtczwbznanb4watwuxljt5kw1zbcqmr2dk6lx2jj0vrb68yj65y8ns/06q1/fees",
      "method" : "PUT"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You do not have permission to access this resource\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f04d34ba-4fc0-49dc-9adf-d64723b57640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.388213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37b5bb66-628f-4c66-8dab-622c0daf5d0e",
    "name" : "Create or Update Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/yzu9pcpp8bjnpuuvp0b675a7qfyz7sl2i1loy9opofdhgozmqbzckgf29je33bw9ueerk7zvagqk9dls337g9zh9oam1vb1vo2q2dwes7pfku2ml3p3y5204341r0gstreswzvfri4b9dhwe2l86yl84j808m7t5jm1ru0bg3f/s32r/fees",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Authorization required\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37b5bb66-628f-4c66-8dab-622c0daf5d0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.388086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae709cd8-f3d6-4657-b0cf-542c500b3df8",
    "name" : "Create or Update Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/bvrb9h3z4djyizzt0h5r3xbgtqro4kkayd1gh0ms7gj7iupmts0cz8v8q9cr1tns7qulnmr3vfuyptzvu5gmfigjf6aubytspb956288ublyqfxjez06vlt496mkht4us4refhcwf8r73sv72v58n/kt41/fees",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The supplied tenant is not supported\",\n    \"errorCode\" : \"UnsupportedTenant\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae709cd8-f3d6-4657-b0cf-542c500b3df8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "befc0942-563f-4c25-80cb-ff8e157941dc",
    "name" : "Create or Update Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/ve253vi6okxdn3yc6hlujc2ntz9re6dsu6vjn6ioeppymg64sl6nrteauzl7cuw1cpf3hz4s92r5rxdsndqj4gbswxs4vcc857r46shv1ypccmrbg98z17ooa03trtlcvjjf0fkbqpcx5rglrqfuycaz2hoo0j0poyz0pel7zcod8/3lge/fees",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bagFee\" : {\n    \"description\" : \"A charge for bags in delivery\",\n    \"serviceTypes\" : {\n      \"collection\" : {\n        \"amount\" : 5\n      },\n      \"default\" : {\n        \"amount\" : 0\n      },\n      \"delivery\" : {\n        \"amount\" : 10\n      }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "befc0942-563f-4c25-80cb-ff8e157941dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An object encapsulating all possible fees which a restaurant can apply to itself",
            "example" : {
              "bagFee" : {
                "description" : "A charge for bags in delivery",
                "serviceTypes" : {
                  "collection" : {
                    "amount" : 5
                  },
                  "default" : {
                    "amount" : 0
                  },
                  "delivery" : {
                    "amount" : 10
                  }
                }
              }
            },
            "properties" : {
              "bagFee" : {
                "$ref" : "#/components/schemas/Fee"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a41df77f-9a28-41d8-807d-ea27cd0cacb8",
    "name" : "Get Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/zjptosmw4u1f179nrxh38oshv7ok8u06oy7dwvbod2arf69rmtn8fdpeoakbgsvam1vhsr19rg7kar3clkd3t6kk9ol88iwqyg0scp625jqibzuj3q3855exrezbmrmtrw/z601/fees",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a41df77f-9a28-41d8-807d-ea27cd0cacb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32998e0f-3b85-405d-852f-f94e5e4182f8",
    "name" : "Get Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/xnp8df97pub74wipgef1a6wwkcu1g0jwyt1rla7fqg57h10ods5e616qrwb5uy2c1862/0y3e/fees",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The requested resource does not exist on this server\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32998e0f-3b85-405d-852f-f94e5e4182f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.38755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ed9e307-8580-438f-9229-1afda6de1eac",
    "name" : "Get Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/82e8at5ul7inqzl1fbtlg84xh6damnlziu7lp89eh/lp9r/fees",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You do not have permission to access this resource\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ed9e307-8580-438f-9229-1afda6de1eac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4c9bab40-9ccc-4533-b335-1c9ce6e782f8",
    "name" : "Get Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/1dt9eh82vfqz3wswdrlc73sn4uy9akyapfw3tbbi2anmhdhcj226q4sm649qlml/1t9v/fees",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Authorization required\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c9bab40-9ccc-4533-b335-1c9ce6e782f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d215ab48-9ecc-4754-b8dc-193e2b48d044",
    "name" : "Get Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/zelki3y6umko19k9eapfkfpb2yg06zxfl/bju8/fees",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The supplied tenant is not supported\",\n    \"errorCode\" : \"UnsupportedTenant\"\n  } ],\n  \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n  \"traceId\" : \"0HLOCKDKQPKIU\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d215ab48-9ecc-4754-b8dc-193e2b48d044",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02fa543c-53d6-457d-8141-89525d8bc3c8",
    "name" : "Get Restaurant Fees",
    "request" : {
      "urlPath" : "/restaurants/geo50wig00cboed0dmv0awzw8xg8meyv4uzuv3qft6k27c43pq2f115a4fze6u6l16k1u73gw13s5b5/2659/fees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bagFee\" : {\n    \"description\" : \"A charge for bags in delivery\",\n    \"serviceTypes\" : {\n      \"collection\" : {\n        \"amount\" : 5\n      },\n      \"default\" : {\n        \"amount\" : 0\n      },\n      \"delivery\" : {\n        \"amount\" : 10\n      }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02fa543c-53d6-457d-8141-89525d8bc3c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.387022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An object encapsulating all possible fees which a restaurant can apply to itself",
            "example" : {
              "bagFee" : {
                "description" : "A charge for bags in delivery",
                "serviceTypes" : {
                  "collection" : {
                    "amount" : 5
                  },
                  "default" : {
                    "amount" : 0
                  },
                  "delivery" : {
                    "amount" : 10
                  }
                }
              }
            },
            "properties" : {
              "bagFee" : {
                "$ref" : "#/components/schemas/Fee"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d00c7af2-d38a-4647-81ec-70bd292031d1",
    "name" : "Add reason and comments to the response (application/json)",
    "request" : {
      "urlPath" : "/restaurants/98vlemlee33zgu0fi2burhtg9rh94/2709/customerclaims/jud7/restaurantresponse/justification",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d00c7af2-d38a-4647-81ec-70bd292031d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.386876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "90fe2f24-de8f-4c1f-a387-1cf02665e97b",
    "name" : "Add reason and comments to the response (application/json)",
    "request" : {
      "urlPath" : "/restaurants/0g9zgf89j5zxm8qg166cjao2vzkdbdmw96sazt8injukk2mvtv2i8nlpcuom8d0sbzb0kuonako0mta068jk6u4yyb2tyscr7lownxf9c0fzauq3i9lzw59mp86kmv6eka0e10/xake/customerclaims/b31w/restaurantresponse/justification",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"59v7\",\n    \"faultId\" : \"vmxc\",\n    \"errors\" : [ {\n      \"description\" : \"Aut rerum ut et voluptatem distinctio tempora. Rerum repudiandae aliquam nam a quia et voluptas. Omnis similique molestias nihil enim. Ipsam mollitia rerum accusamus quaerat animi ab. Enim facilis qui\",\n      \"errorCode\" : \"p67h78f1sgrd2\"\n    }, {\n      \"description\" : \"Aut autem sunt illum qui commodi officiis. Beatae dolor aut cupiditate adipisci suscipit nobis nesciunt. Autem sint ut accusantium cum harum et. Dolore error error.\",\n      \"errorCode\" : \"strgbhg2zyjab72b4zoarrsmyjyrhhkfhpj9q550dhn09c9o4n9zae5hpssb0inr99ekjr2d1dggxv8\"\n    }, {\n      \"description\" : \"Tempore iure velit aut. Vero error dolorem. Pariatur modi et quas fugit consequatur enim et. Voluptatibus qui ex animi omnis. Sunt autem ut sequi.\",\n      \"errorCode\" : \"4ia0zr4xdnegorped4b5h1cvbktcffbodl1uqw80sw0d52rot03fk2pcw25glvmfcvu02szywqdr18odsl36rmvr9aeac5nb4tqedydind7yfmutigcce3ytbccz3fip96p8dyfo95zas7spn9drtbv0t2gvbnvs4rilf4n1c5vn1vl5w7jorkg7vaqp\"\n    }, {\n      \"description\" : \"Omnis commodi rerum. Architecto veritatis quos sunt id. Maxime quasi similique in architecto a alias officiis. A tenetur saepe.\",\n      \"errorCode\" : \"xhqgxww\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90fe2f24-de8f-4c1f-a387-1cf02665e97b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.386675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41a06007-2a7b-4b12-9402-899f253bd932",
    "name" : "Add reason and comments to the response (application/json)",
    "request" : {
      "urlPath" : "/restaurants/w8yb1t232vwj9vnz0ewsy0p6ehskdn0sklqys9rwv8ep8geyrp3qahyq4d65t85qnm40groscs2lyfu5qmdg7942sltjxupa0h74djpqkdt1m4bj3i2m2sw72o8hyzvw14bdkbxu9c10sowth9q5dnqoq0v9fd4n5s09cdxhdt4y99/562n/customerclaims/3yx5/restaurantresponse/justification",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"s40m\",\n    \"faultId\" : \"sr1g\",\n    \"errors\" : [ {\n      \"description\" : \"Quaerat consequatur officia et. Illum sint magni ducimus voluptatem autem deserunt explicabo. Beatae consequatur aspernatur cumque quas quia sunt.\",\n      \"errorCode\" : \"3tlrdal0qcsxnvg88n3gz8dql7z75d3n5e7h6ha282y8afx8wjrs2qejamo63uee4ahkkytokovxs9hdv4xf5kbjzjkmpbget0gn1xaqr9580mrvuxvtg4o8w61qptja8ul8zhbvknhaoag19kfqngci77tyqrq44qq34uawk\"\n    }, {\n      \"description\" : \"Velit provident ut enim. Quia earum necessitatibus. Sint repudiandae voluptas consectetur est fugiat. Ut sapiente odio aut sed maiores tempore. Animi occaecati beatae quos rem voluptates id.\",\n      \"errorCode\" : \"9lsc3f9utvq116gfct3aobfvxxzyseaogi5g918dmmpxm2f3sggx92zw2dxae4bm2r4kt\"\n    }, {\n      \"description\" : \"Quibusdam est quibusdam aliquam. Ratione delectus ut quas nobis consectetur enim. Impedit mollitia sint odio qui. Maxime vel beatae quod ipsum cupiditate ipsa earum. Officia numquam dolorem consequatu\",\n      \"errorCode\" : \"dyd1cu9lloesqq51nfdg6ravjrl479mujr1ltkzj2l8pnjqs1qw65mylecv2et4aovojnhwi8\"\n    }, {\n      \"description\" : \"Vel dolor veritatis asperiores asperiores. Enim unde praesentium iure dolor aut. Repellat reiciendis optio quisquam quis suscipit dolores. Voluptatem doloremque rerum neque hic voluptatem voluptas lab\",\n      \"errorCode\" : \"i4gci6enc59f8zsgwj84043bndmzeb1sobf180c1jkw5mfcncpzfoqryr4cspgrk2twogeprkgly75pe6oure9y7\"\n    }, {\n      \"description\" : \"Ut magnam unde et suscipit. Et quia occaecati et iste blanditiis architecto. Doloribus non atque voluptatem non necessitatibus aut. Ut id incidunt facere ipsam corporis.\",\n      \"errorCode\" : \"pcjp9xsgd\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41a06007-2a7b-4b12-9402-899f253bd932",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.386158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95c86958-869b-4e99-88ac-bb62dd51c888",
    "name" : "Add reason and comments to the response (application/json)",
    "request" : {
      "urlPath" : "/restaurants/7zxv4raseljo/u6t9/customerclaims/5152/restaurantresponse/justification",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95c86958-869b-4e99-88ac-bb62dd51c888",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.38555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3446b16a-7822-40b2-9a37-cc0278768c66",
    "name" : "Add reason and comments to the response (application/json)",
    "request" : {
      "urlPath" : "/restaurants/dx98df5tpy0wc33e2il67pos1aji4c5zevloraxo/6957/customerclaims/l609/restaurantresponse/justification",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized. The client did not provide an authentication token or the token was invalid.\",\n    \"errorCode\" : \"ERR401\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3446b16a-7822-40b2-9a37-cc0278768c66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.385356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "46c542ca-6f41-4cd4-a24e-477af2c04e64",
    "name" : "Add reason and comments to the response (application/json)",
    "request" : {
      "urlPath" : "/restaurants/j0mtpyj3gjauuf9fkawlydtrnvepo1hduwsenjtn4bvadaz5t9hvwn6pr0fvjrpxa2hqv3aw9oyk3vt1zcmcyrh256txejzpkkb4oggm5m4blgtj3xfnsx26978iimxiql3twgtxarg7x2qrxz34y9ds0evjz4ui4l1wd4rh81bmb4wcnfrtsuby5cfn5c/az59/customerclaims/4681/restaurantresponse/justification",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Bad Request. Reason doesn't match any of the predefined values\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46c542ca-6f41-4cd4-a24e-477af2c04e64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.385166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b79f344-be80-40b0-80c7-67c54406b2c6",
    "name" : "Add reason and comments to the response - 204",
    "request" : {
      "urlPath" : "/restaurants/nahkk90awl4tttwnsp4giwc26bab3xy1grebjdrkk4j9xf8p35hwndcqisg9ud6136clzwpnr5k6a5c4z5x2z2180ba16abo1omj0x6pl677l78srlj9l8o48rzxy13vx4ydmprofasd6sk1s2g2njrq188apux/otod/customerclaims/fb51/restaurantresponse/justification",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5b79f344-be80-40b0-80c7-67c54406b2c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.384977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "0d76fecf-e0be-44fa-b5f2-93a4ab266596",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/y2di2jbiol1hnwo47de61uwmmw4v44syzg7bftn1b6x2jtyq6qucg6z8u1zlsf341he6h0i5aoi9jyfudtghlobnzt2/c00i/customerclaims/3k5b/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d76fecf-e0be-44fa-b5f2-93a4ab266596",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.384806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "579d0b2d-f23d-4eac-8393-eb6b00d02930",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/ks88z2e8esgharnoe2cpnv0qvugfc3eyapbppkaa8wnfyo993uj3pr94ubrl5veowlja4zqg42jbt1ttjdzcyphmgxxv2junmye8ryishco718m15xmfd23x5k5b7f159x49wxvjgth9wlspu9/1c90/customerclaims/pydf/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The claim you are attempting to update does not contain the items from the request\",\n    \"errorCode\" : \"WrongItems\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "579d0b2d-f23d-4eac-8393-eb6b00d02930",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.384605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "495305e6-a5b7-4b98-b68f-144fc22e5ab2",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/bjv4bajzqxgscwhi68devvjrz1gds4ton85lzlc75l309ntbkqtif0a8oagp85lrlzd5tkqr4cto06ugf0ayrqk3dl59vc93d13izexdms2u8ihku7z21hl6kmvfe5l0svxumoxen03cyiaklo9mp/9hpz/customerclaims/hdq9/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The claim you are attempting to resolve is has been resolved\",\n    \"errorCode\" : \"AlreadyResolved\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "495305e6-a5b7-4b98-b68f-144fc22e5ab2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.384408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c5e9d472-df59-4b79-8e75-64c83cc4cebe",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/ddc2d26qoq614jt4c/e9o3/customerclaims/7611/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"1i26\",\n    \"faultId\" : \"2bk2\",\n    \"errors\" : [ {\n      \"description\" : \"Illo quia et numquam non sequi doloribus. Expedita quia dolore odit et et. Repudiandae veritatis qui delectus blanditiis voluptates aut. Sed culpa corporis vitae. Temporibus blanditiis officia sapient\",\n      \"errorCode\" : \"7upglyqqq83cwoxfmnwpu2xpds2go8q\"\n    }, {\n      \"description\" : \"Molestiae eum enim veniam enim. Iusto in quo. Accusamus dolorem consectetur dolore recusandae reprehenderit labore alias. Quia consequuntur aut numquam consequatur sed voluptatem.\",\n      \"errorCode\" : \"zad\"\n    }, {\n      \"description\" : \"At consequatur omnis et deserunt et omnis. Qui enim est. Voluptatibus sit natus nobis. Numquam atque dicta dolores et a.\",\n      \"errorCode\" : \"x8huezsq1h4e3q7w4eco95gmosryh8hk9\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5e9d472-df59-4b79-8e75-64c83cc4cebe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.384216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8c3c817f-ead7-4ced-91d3-c8e8b3b16e47",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/4hryil6n8piq5waxt8oogm558k2tfjapuuad679ylhhbpoz2cymd4m7uzr13rigmb951iyweuz232ontx7z66811fu16ulvbs6c3a4/c10u/customerclaims/mihz/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c3c817f-ead7-4ced-91d3-c8e8b3b16e47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.383724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9c380f4c-5c86-4968-99bc-2ca423cb6d7c",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/17wqre3kbtn21qdvu9ypiyd4s0579sqp2afc5dpsj67de9eoygbo67ne1eirn3/v515/customerclaims/5g6s/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized. The client did not provide an authentication token or the token was invalid.\",\n    \"errorCode\" : \"ERR401\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c380f4c-5c86-4968-99bc-2ca423cb6d7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.383533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a6a0937e-b1f8-45a5-b195-7ef7e69ca5c6",
    "name" : "Submit a restaurant response for the claim (application/json)",
    "request" : {
      "urlPath" : "/restaurants/mlvm9818y9sogrxevlbaltrj12qi1w9a6uxuv43umzrkc7tr0wpnqww0ig900a65dw070zcw2zvdn37dh15qkgwf52my9thi16h1o6ihs8/s4wi/customerclaims/r8u8/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Bad Request. Incorrect decision\",\n    \"errorCode\" : \"IncorrectDecision\"\n  }, {\n    \"description\" : \"Bad Request. Missing decision\",\n    \"errorCode\" : \"MissingDecision\"\n  }, {\n    \"description\" : \"Bad Request. The request you are sending is missing some items for the claim you are trying to resolve\",\n    \"errorCode\" : \"MissingItems\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6a0937e-b1f8-45a5-b195-7ef7e69ca5c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.383336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "58ca828e-5040-4a79-a736-d520eb532de1",
    "name" : "Submit a restaurant response for the claim - 201",
    "request" : {
      "urlPath" : "/restaurants/e14dv29/48l9/customerclaims/pbf7/restaurantresponse",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "58ca828e-5040-4a79-a736-d520eb532de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.383149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "99327ffc-f9e1-4e8e-89e2-4f6f44bb415a",
    "name" : "Get order claim",
    "request" : {
      "urlPath" : "/restaurants/7gl81tg81a9c4q2uzucur6xs9df6ldf8s61xl3lu5cf3d6s45c8mo6hujp6egv5obh34s7kywicxn/24l9/customerclaims/6koh",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99327ffc-f9e1-4e8e-89e2-4f6f44bb415a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.382981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73430d8e-a6fa-448f-99ae-12841962272d",
    "name" : "Get order claim",
    "request" : {
      "urlPath" : "/restaurants/vekd8zwjx7y42qi1odg2gdzz/bh50/customerclaims/4lz6",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"fault\" : {\n    \"traceId\" : \"67q8\",\n    \"faultId\" : \"v3y2\",\n    \"errors\" : [ {\n      \"description\" : \"Magnam vel maxime. Quo corrupti nesciunt. Fugit dolorem sit error autem mollitia autem. Libero veritatis odit sunt. Placeat inventore illum omnis placeat praesentium dolorem voluptatibus.\",\n      \"errorCode\" : \"porkuzm22myzazqnxbmaistowqs911u8997ras2um1ja32r1qfhyuaxqcg2iqmod9tt3csj4yjom0yhuc0bximvwekub3ayacxlvw882vyn07a7sw7xjinrsbqhntgnn2\"\n    }, {\n      \"description\" : \"Qui nobis vero nihil et aut. Neque velit eos quas. Laudantium quos consequatur.\",\n      \"errorCode\" : \"8wv3bavlnlwj2y5d8pcirt1ecybk4i7c6e93m8ai7nnm6yq51rs2z5j3dnpohtipa03ghj0pbl7791fn169lijas7c8flrqy45d2kpl0t0puo08\"\n    }, {\n      \"description\" : \"Animi tenetur adipisci eligendi delectus veritatis fugiat. Quasi architecto sit. Id a commodi est sunt ut earum at. Harum et vel eos quas sunt non repellendus.\",\n      \"errorCode\" : \"9u1dc32uo2fx7fp5x8a6kld6j5d7e8svctkuvf\"\n    }, {\n      \"description\" : \"Quia in molestiae quos rem exercitationem. Quia aut optio. Hic ea facere fugit. Eos ipsum cum officiis vitae.\",\n      \"errorCode\" : \"jko\"\n    }, {\n      \"description\" : \"Dolor enim ab ut modi ut quia. Maiores nesciunt qui qui praesentium ab. Earum enim placeat. Dolorem qui non omnis dolor. Cumque occaecati voluptas.\",\n      \"errorCode\" : \"dk6x7v081bg65sfxi0dd21hm5z82j7k4f5t988flw47ip3ki31afhey88uuayapwhi6lb7k1ql1jgthmszoe\"\n    }, {\n      \"description\" : \"Necessitatibus est quia quisquam sint in nulla odit. Provident sit sequi quis exercitationem. Quasi architecto rerum et aut velit. Eum est ut mollitia voluptatem.\",\n      \"errorCode\" : \"zegnaghyuzevunq9isc077fupexh3fspquyuxrzryg92up0wmrgtrrsxcu1qyaoe9cp5eyll51z6ufjdkqjgmxwv1s13b4vvj6x61kzghijw0abjs3y\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73430d8e-a6fa-448f-99ae-12841962272d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.382778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0a3f2a04-ef0f-49a8-b40c-a3831e7def48",
    "name" : "Get order claim",
    "request" : {
      "urlPath" : "/restaurants/acbnfv0c6o3nqrv0tup28iux15qge71ufn72ar8lforab0a8kbwog1m72770qoifs72d176sd93cx7vskmbu2zy9289xpyw65qvee01apbqo20264nnj08t7m4qmundlbin5ud/42xx/customerclaims/zao2",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a3f2a04-ef0f-49a8-b40c-a3831e7def48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.382127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a39d923d-718f-4f0c-91db-a0caf9a4b8c0",
    "name" : "Get order claim",
    "request" : {
      "urlPath" : "/restaurants/w2tp6y4wzcqnw3u0yx5l6ezmv2f468pugib4clqvgl3s6na1azlt7cfdvjt7h7y47vbrsjp4oinnyyg90wvczq2k1sdbcvrm8e7fyvl601v7xr5aqepy29w2weyybkx9kfdb0cihgiwei80ysi1bdfmz5c69vuyry5zljsmhfmk2t4utg75mmljksbw7ql/s0l7/customerclaims/a4o5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized. The client did not provide an authentication token or the token was invalid.\",\n    \"errorCode\" : \"ERR401\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a39d923d-718f-4f0c-91db-a0caf9a4b8c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.381935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ecc217a-d822-4d86-bbd1-dcffc2000db2",
    "name" : "Get order claim",
    "request" : {
      "urlPath" : "/restaurants/r0va1a2of73cqc1l8suwd35nyodhmmrwe1cob0e8sl4b3w3iqs4xmq8rmb322ycwwpzpkmoycm4gz936kzxf4frwz/5lp8/customerclaims/4638",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"affectedItems\" : [ {\n    \"additionalContext\" : \"Potato skin was damaged\",\n    \"decision\" : \"Rejected\",\n    \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n    \"name\" : \"Potato skin\",\n    \"quantity\" : 1,\n    \"reference\" : \"productid%4t56574596\",\n    \"totalClaimed\" : 1900,\n    \"unitPrice\" : 2000\n  }, {\n    \"additionalContext\" : \"Pizza was damaged too\",\n    \"decision\" : \"Accepted\",\n    \"id\" : \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n    \"name\" : \"Pizza\",\n    \"quantity\" : 1,\n    \"reference\" : \"productid%t5y6574596\",\n    \"totalClaimed\" : 1900,\n    \"unitPrice\" : 2000\n  } ],\n  \"currency\" : \"GBP\",\n  \"expirationDate\" : \"2020-05-22T14:22:11.1053368+00:00\",\n  \"friendlyOrderReference\" : \"451226580\",\n  \"id\" : \"2f749442-a62a-abcd-8623-04202878e034\",\n  \"issueType\" : \"Damaged\",\n  \"orderId\" : \"r23tqoxdoeupdx9w8evorw\",\n  \"resolution\" : {\n    \"decision\" : \"PartiallyAccepted\",\n    \"resolvedChannel\" : \"PartnerCentre\",\n    \"resolvedDate\" : \"2020-05-28T06:40:48.1053368+00:00\",\n    \"totalClaimedAccepted\" : 1900\n  },\n  \"restaurantResponse\" : {\n    \"decision\" : \"PartiallyAccepted\",\n    \"items\" : [ {\n      \"decision\" : \"Rejected\",\n      \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n    }, {\n      \"decision\" : \"Accepted\",\n      \"id\" : \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n    } ],\n    \"justification\" : {\n      \"comments\" : \"The food was packed properly\",\n      \"reason\" : \"Other\"\n    }\n  },\n  \"state\" : \"Closed\",\n  \"submittedDate\" : \"2020-05-20T14:22:11.1053368+00:00\",\n  \"totalClaimed\" : 3800\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ecc217a-d822-4d86-bbd1-dcffc2000db2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.381732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Claim information",
            "example" : {
              "affectedItems" : [ {
                "additionalContext" : "Potato skin was damaged",
                "decision" : "Rejected",
                "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                "name" : "Potato skin",
                "quantity" : 1,
                "reference" : "productid%4t56574596",
                "totalClaimed" : 1900,
                "unitPrice" : 2000
              }, {
                "additionalContext" : "Pizza was damaged too",
                "decision" : "Accepted",
                "id" : "123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                "name" : "Pizza",
                "quantity" : 1,
                "reference" : "productid%t5y6574596",
                "totalClaimed" : 1900,
                "unitPrice" : 2000
              } ],
              "currency" : "GBP",
              "expirationDate" : "2020-05-22T14:22:11.1053368+00:00",
              "friendlyOrderReference" : "451226580",
              "id" : "2f749442-a62a-abcd-8623-04202878e034",
              "issueType" : "Damaged",
              "orderId" : "r23tqoxdoeupdx9w8evorw",
              "resolution" : {
                "decision" : "PartiallyAccepted",
                "resolvedChannel" : "PartnerCentre",
                "resolvedDate" : "2020-05-28T06:40:48.1053368+00:00",
                "totalClaimedAccepted" : 1900
              },
              "restaurantResponse" : {
                "decision" : "PartiallyAccepted",
                "items" : [ {
                  "decision" : "Rejected",
                  "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1"
                }, {
                  "decision" : "Accepted",
                  "id" : "123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1"
                } ],
                "justification" : {
                  "comments" : "The food was packed properly",
                  "reason" : "Other"
                }
              },
              "state" : "Closed",
              "submittedDate" : "2020-05-20T14:22:11.1053368+00:00",
              "totalClaimed" : 3800
            },
            "properties" : {
              "affectedItems" : {
                "description" : "Information about the claimed items",
                "items" : {
                  "$ref" : "#/components/schemas/Item"
                },
                "nullable" : true,
                "type" : "array"
              },
              "currency" : {
                "description" : "Name of currency in ISO 4217 format",
                "type" : "string"
              },
              "expirationDate" : {
                "description" : "Date when the claim will be accepted automatically in case the owner of the restaurant ignores it",
                "format" : "date-time",
                "type" : "string"
              },
              "friendlyOrderReference" : {
                "description" : "Just Eat friendly order reference",
                "type" : "string"
              },
              "id" : {
                "description" : "Claim identifier",
                "type" : "string"
              },
              "issueType" : {
                "description" : "Type of claim",
                "enum" : [ "Missing", "Damaged", "Cold", "LateOrder", "FoodNotArrived" ],
                "type" : "string"
              },
              "orderId" : {
                "description" : "Just Eat order identifier",
                "type" : "string"
              },
              "resolution" : {
                "$ref" : "#/components/schemas/ClaimResolution"
              },
              "restaurantResponse" : {
                "$ref" : "#/components/schemas/OrderClaimRestaurantResponse"
              },
              "state" : {
                "description" : "Indicates whether a decision about the claim was made",
                "enum" : [ "Open", "Closed" ],
                "type" : "string"
              },
              "submittedDate" : {
                "description" : "Date when the claim was submitted",
                "format" : "date-time",
                "type" : "string"
              },
              "totalClaimed" : {
                "description" : "Total claimed money in smallest unit of relevant currency",
                "type" : "number"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "22e0931e-48c9-407b-aa37-398fc5506ec0",
    "name" : "Get claims",
    "request" : {
      "urlPath" : "/restaurants/vmvchnfy9ndoh950b4ot1sw697kqxzqvoo10r4jxi0l1nynrdnoeu4d1v0q8m9d5np0ckcfa2hmwkt1c7feghbp1jifw6k8zl5myh4c4zit3moaoed28lm78xbf2fbfaih9dlv9dbfcydhgfxbwii90bcy7b7vtyxzkq8nvvu5opfcf5qbohk8/9697/customerclaims",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22e0931e-48c9-407b-aa37-398fc5506ec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.381427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9fad2ee1-9294-476a-98ed-37668aad8127",
    "name" : "Get claims",
    "request" : {
      "urlPath" : "/restaurants/b3h7e6sv7mehe0a2y0vrmwkb/a633/customerclaims",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fad2ee1-9294-476a-98ed-37668aad8127",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.381283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c752bc3e-6b4b-44d2-909f-2e89742374c3",
    "name" : "Get claims",
    "request" : {
      "urlPath" : "/restaurants/1ity4kyfthe/5c6w/customerclaims",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized. The client did not provide an authentication token or the token was invalid.\",\n    \"errorCode\" : \"ERR401\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c752bc3e-6b4b-44d2-909f-2e89742374c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.381154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57f04ddb-3e65-44f0-b1ed-07ca3a66af36",
    "name" : "Get claims",
    "request" : {
      "urlPath" : "/restaurants/ekxxrx0a3e9qmlduiusnywfskcsh5/3203/customerclaims",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Bad Request. End date limiter should have date-time format.\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57f04ddb-3e65-44f0-b1ed-07ca3a66af36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.381024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b899d538-aaac-41e3-86ac-95eab1f94933",
    "name" : "Get claims",
    "request" : {
      "urlPath" : "/restaurants/udk1od0s77s4rnpgz2v48tsusxmda9jsjeg4rumr6ce3x53ucgdhb5phab40ejmqy55unerqkh5m50cijayxdiq6u3yxn7jr43fzbcu2u162zm6idcx6lb5xnwz1b8ijcbxsxut53kcbv/h072/customerclaims",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"claims\" : [ {\n    \"currency\" : \"GBP\",\n    \"expirationDate\" : \"2020-05-22T14:22:11.1053368+00:00\",\n    \"friendlyOrderReference\" : \"954226580\",\n    \"id\" : \"z2749442-a62a-abcd-8623-04202878e034\",\n    \"issueType\" : \"LateOrder\",\n    \"orderId\" : \"z27tqoxdoeupdx9w8evorw\",\n    \"resolution\" : {\n      \"decision\" : \"Accepted\",\n      \"resolvedChannel\" : \"OrderPad\",\n      \"resolvedDate\" : \"2020-05-28T06:40:48.1053368+00:00\",\n      \"totalClaimedAccepted\" : 4000\n    },\n    \"restaurantResponse\" : {\n      \"decision\" : \"Accepted\",\n      \"justification\" : null\n    },\n    \"state\" : \"Closed\",\n    \"submittedDate\" : \"2020-05-20T14:22:11.1053368+00:00\",\n    \"totalClaimed\" : 4000\n  }, {\n    \"affectedItems\" : [ {\n      \"additionalContext\" : null,\n      \"decision\" : \"NotDecided\",\n      \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\" : \"Potato skin\",\n      \"quantity\" : 1,\n      \"reference\" : \"productid%4t56574596\",\n      \"totalClaimed\" : 1900,\n      \"unitPrice\" : 2000\n    }, {\n      \"additionalContext\" : null,\n      \"decision\" : \"NotDecided\",\n      \"id\" : \"123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\" : \"Pizza\",\n      \"quantity\" : 1,\n      \"reference\" : \"productid%t5y6574596\",\n      \"totalClaimed\" : 1900,\n      \"unitPrice\" : 2000\n    } ],\n    \"currency\" : \"GBP\",\n    \"expirationDate\" : \"2020-05-22T14:22:11.1053368+00:00\",\n    \"friendlyOrderReference\" : \"451226580\",\n    \"id\" : \"2f749442-a62a-abcd-8623-04202878e034\",\n    \"issueType\" : \"Damaged\",\n    \"orderId\" : \"r23tqoxdoeupdx9w8evorw\",\n    \"resolution\" : null,\n    \"restaurantResponse\" : null,\n    \"state\" : \"Open\",\n    \"submittedDate\" : \"2020-05-20T14:22:11.1053368+00:00\",\n    \"totalClaimed\" : 3800\n  }, {\n    \"affectedItems\" : [ {\n      \"additionalContext\" : \"Potato skin was cold\",\n      \"decision\" : \"Rejected\",\n      \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\" : \"Potato skin\",\n      \"quantity\" : 1,\n      \"reference\" : \"productid%4t56574596\",\n      \"totalClaimed\" : 1900,\n      \"unitPrice\" : 2000\n    } ],\n    \"currency\" : \"GBP\",\n    \"expirationDate\" : \"2020-05-22T14:22:11.1053368+00:00\",\n    \"friendlyOrderReference\" : \"151226580\",\n    \"id\" : \"1f749442-a62a-abcd-8623-04202878e034\",\n    \"issueType\" : \"Cold\",\n    \"orderId\" : \"a23tqoxdoeupdx9w8evorw\",\n    \"resolution\" : {\n      \"decision\" : \"Rejected\",\n      \"resolvedChannel\" : \"PartnerCentre\",\n      \"resolvedDate\" : \"2020-05-28T06:40:48.1053368+00:00\",\n      \"totalClaimedAccepted\" : 0\n    },\n    \"restaurantResponse\" : {\n      \"items\" : [ {\n        \"decision\" : \"Rejected\",\n        \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      } ],\n      \"justification\" : {\n        \"comments\" : null,\n        \"reason\" : \"OrderWasHot\"\n      }\n    },\n    \"state\" : \"Closed\",\n    \"submittedDate\" : \"2020-05-20T14:22:11.1053368+00:00\",\n    \"totalClaimed\" : 1900\n  }, {\n    \"affectedItems\" : [ {\n      \"additionalContext\" : \"Potato skin was cold\",\n      \"decision\" : \"Accepted\",\n      \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\" : \"Potato skin\",\n      \"quantity\" : 1,\n      \"reference\" : \"productid%4t56574596\",\n      \"totalClaimed\" : 1900,\n      \"unitPrice\" : 2000\n    } ],\n    \"currency\" : \"GBP\",\n    \"expirationDate\" : \"2020-05-22T14:22:11.1053368+00:00\",\n    \"friendlyOrderReference\" : \"951226580\",\n    \"id\" : \"zf749442-a62a-abcd-8623-04202878e034\",\n    \"issueType\" : \"Cold\",\n    \"orderId\" : \"z23tqoxdoeupdx9w8evorw\",\n    \"resolution\" : {\n      \"decision\" : \"Accepted\",\n      \"resolvedChannel\" : \"OrderPad\",\n      \"resolvedDate\" : \"2020-05-28T06:40:48.1053368+00:00\",\n      \"totalClaimedAccepted\" : 1900\n    },\n    \"restaurantResponse\" : {\n      \"items\" : [ {\n        \"decision\" : \"Accepted\",\n        \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      } ],\n      \"justification\" : null\n    },\n    \"state\" : \"Closed\",\n    \"submittedDate\" : \"2020-05-20T14:22:11.1053368+00:00\",\n    \"totalClaimed\" : 1900\n  }, {\n    \"affectedItems\" : [ {\n      \"additionalContext\" : \"Potato skin was cold\",\n      \"decision\" : \"Accepted\",\n      \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\",\n      \"name\" : \"Potato skin\",\n      \"quantity\" : 1,\n      \"reference\" : \"productid%4t56574596\",\n      \"totalClaimed\" : 1900,\n      \"unitPrice\" : 2000\n    }, {\n      \"additionalContext\" : \"Meat was terribly cold\",\n      \"decision\" : \"Rejected\",\n      \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\",\n      \"name\" : \"Meat\",\n      \"quantity\" : 1,\n      \"reference\" : \"productid%4t56574593\",\n      \"totalClaimed\" : 2900,\n      \"unitPrice\" : 3000\n    } ],\n    \"currency\" : \"GBP\",\n    \"expirationDate\" : \"2020-05-22T14:22:11.1053368+00:00\",\n    \"friendlyOrderReference\" : \"951226588\",\n    \"id\" : \"zf749442-a62a-abcd-8623-04202878e038\",\n    \"issueType\" : \"Cold\",\n    \"orderId\" : \"z23tqoxdoeupdx9w8evorz\",\n    \"resolution\" : {\n      \"decision\" : \"PartiallyAccepted\",\n      \"resolvedChannel\" : \"OrderPad\",\n      \"resolvedDate\" : \"2020-05-28T06:40:48.1053368+00:00\",\n      \"totalClaimedAccepted\" : 1900\n    },\n    \"restaurantResponse\" : {\n      \"items\" : [ {\n        \"decision\" : \"Accepted\",\n        \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\"\n      }, {\n        \"decision\" : \"Rejected\",\n        \"id\" : \"NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\"\n      } ],\n      \"justification\" : null\n    },\n    \"state\" : \"Closed\",\n    \"submittedDate\" : \"2020-05-20T14:22:11.1053368+00:00\",\n    \"totalClaimed\" : 1900\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b899d538-aaac-41e3-86ac-95eab1f94933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.380857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Response containing claims for a restaurant which match the given filter",
            "example" : {
              "claims" : [ {
                "currency" : "GBP",
                "expirationDate" : "2020-05-22T14:22:11.1053368+00:00",
                "friendlyOrderReference" : "954226580",
                "id" : "z2749442-a62a-abcd-8623-04202878e034",
                "issueType" : "LateOrder",
                "orderId" : "z27tqoxdoeupdx9w8evorw",
                "resolution" : {
                  "decision" : "Accepted",
                  "resolvedChannel" : "OrderPad",
                  "resolvedDate" : "2020-05-28T06:40:48.1053368+00:00",
                  "totalClaimedAccepted" : 4000
                },
                "restaurantResponse" : {
                  "decision" : "Accepted"
                },
                "state" : "Closed",
                "submittedDate" : "2020-05-20T14:22:11.1053368+00:00",
                "totalClaimed" : 4000
              }, {
                "affectedItems" : [ {
                  "decision" : "NotDecided",
                  "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                  "name" : "Potato skin",
                  "quantity" : 1,
                  "reference" : "productid%4t56574596",
                  "totalClaimed" : 1900,
                  "unitPrice" : 2000
                }, {
                  "decision" : "NotDecided",
                  "id" : "123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                  "name" : "Pizza",
                  "quantity" : 1,
                  "reference" : "productid%t5y6574596",
                  "totalClaimed" : 1900,
                  "unitPrice" : 2000
                } ],
                "currency" : "GBP",
                "expirationDate" : "2020-05-22T14:22:11.1053368+00:00",
                "friendlyOrderReference" : "451226580",
                "id" : "2f749442-a62a-abcd-8623-04202878e034",
                "issueType" : "Damaged",
                "orderId" : "r23tqoxdoeupdx9w8evorw",
                "state" : "Open",
                "submittedDate" : "2020-05-20T14:22:11.1053368+00:00",
                "totalClaimed" : 3800
              }, {
                "affectedItems" : [ {
                  "additionalContext" : "Potato skin was cold",
                  "decision" : "Rejected",
                  "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                  "name" : "Potato skin",
                  "quantity" : 1,
                  "reference" : "productid%4t56574596",
                  "totalClaimed" : 1900,
                  "unitPrice" : 2000
                } ],
                "currency" : "GBP",
                "expirationDate" : "2020-05-22T14:22:11.1053368+00:00",
                "friendlyOrderReference" : "151226580",
                "id" : "1f749442-a62a-abcd-8623-04202878e034",
                "issueType" : "Cold",
                "orderId" : "a23tqoxdoeupdx9w8evorw",
                "resolution" : {
                  "decision" : "Rejected",
                  "resolvedChannel" : "PartnerCentre",
                  "resolvedDate" : "2020-05-28T06:40:48.1053368+00:00",
                  "totalClaimedAccepted" : 0
                },
                "restaurantResponse" : {
                  "items" : [ {
                    "decision" : "Rejected",
                    "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1"
                  } ],
                  "justification" : {
                    "reason" : "OrderWasHot"
                  }
                },
                "state" : "Closed",
                "submittedDate" : "2020-05-20T14:22:11.1053368+00:00",
                "totalClaimed" : 1900
              }, {
                "affectedItems" : [ {
                  "additionalContext" : "Potato skin was cold",
                  "decision" : "Accepted",
                  "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                  "name" : "Potato skin",
                  "quantity" : 1,
                  "reference" : "productid%4t56574596",
                  "totalClaimed" : 1900,
                  "unitPrice" : 2000
                } ],
                "currency" : "GBP",
                "expirationDate" : "2020-05-22T14:22:11.1053368+00:00",
                "friendlyOrderReference" : "951226580",
                "id" : "zf749442-a62a-abcd-8623-04202878e034",
                "issueType" : "Cold",
                "orderId" : "z23tqoxdoeupdx9w8evorw",
                "resolution" : {
                  "decision" : "Accepted",
                  "resolvedChannel" : "OrderPad",
                  "resolvedDate" : "2020-05-28T06:40:48.1053368+00:00",
                  "totalClaimedAccepted" : 1900
                },
                "restaurantResponse" : {
                  "items" : [ {
                    "decision" : "Accepted",
                    "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1"
                  } ]
                },
                "state" : "Closed",
                "submittedDate" : "2020-05-20T14:22:11.1053368+00:00",
                "totalClaimed" : 1900
              }, {
                "affectedItems" : [ {
                  "additionalContext" : "Potato skin was cold",
                  "decision" : "Accepted",
                  "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1",
                  "name" : "Potato skin",
                  "quantity" : 1,
                  "reference" : "productid%4t56574596",
                  "totalClaimed" : 1900,
                  "unitPrice" : 2000
                }, {
                  "additionalContext" : "Meat was terribly cold",
                  "decision" : "Rejected",
                  "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3",
                  "name" : "Meat",
                  "quantity" : 1,
                  "reference" : "productid%4t56574593",
                  "totalClaimed" : 2900,
                  "unitPrice" : 3000
                } ],
                "currency" : "GBP",
                "expirationDate" : "2020-05-22T14:22:11.1053368+00:00",
                "friendlyOrderReference" : "951226588",
                "id" : "zf749442-a62a-abcd-8623-04202878e038",
                "issueType" : "Cold",
                "orderId" : "z23tqoxdoeupdx9w8evorz",
                "resolution" : {
                  "decision" : "PartiallyAccepted",
                  "resolvedChannel" : "OrderPad",
                  "resolvedDate" : "2020-05-28T06:40:48.1053368+00:00",
                  "totalClaimedAccepted" : 1900
                },
                "restaurantResponse" : {
                  "items" : [ {
                    "decision" : "Accepted",
                    "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1"
                  }, {
                    "decision" : "Rejected",
                    "id" : "NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3"
                  } ]
                },
                "state" : "Closed",
                "submittedDate" : "2020-05-20T14:22:11.1053368+00:00",
                "totalClaimed" : 1900
              } ]
            },
            "properties" : {
              "claims" : {
                "description" : "Array with claims",
                "items" : {
                  "$ref" : "#/components/schemas/OrderClaim"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3491f392-9278-402f-99a0-baba4ef9c766",
    "name" : "Get all menu item variations",
    "request" : {
      "urlPath" : "/restaurants/ape0y7i9ukh9rzz883/o35u/catalogue/items/8a3t/variations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "661367027"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3491f392-9278-402f-99a0-baba4ef9c766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.380613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2b2f9bb0-6bbb-42f2-aa12-0b3f176106a8",
    "name" : "Get all menu item variations",
    "request" : {
      "urlPath" : "/restaurants/zu6zf7s6symjz3zqlfzzacfpiwy2clmfqhk4dzoquq10p354ay8bm304htif2sn0e9u43e2sl9v2c1n96xnkbuofrvw5jgussiv71ei58qr28jbreiotngtvepq1b0mprpoons8h423fd7f96rvzcrep9v2r6l3k8xhb8c8t78sqn2uz4n3hjp7z11cifzxdq6q/3gu6/catalogue/items/90wt/variations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "477351960"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk and itemId:534685 not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b2f9bb0-6bbb-42f2-aa12-0b3f176106a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.380403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "69d1ad3c-ab76-49b0-a66f-e9447b3aca67",
    "name" : "Get all menu item variations",
    "request" : {
      "urlPath" : "/restaurants/29ptvjl2ksi91uavqrv5ehggnygox7v5une4c39rv0whvtadlzalu3xqg327ilk89xta0qsgdplloz51dsmtj86gcqzw587my7xqc88r2bljy8gu5gdmen3wtsmluonsehskeb7p4yvt78bdu942x1p6f5m86mwl9jwk/8ny7/catalogue/items/w13k/variations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "54713065"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69d1ad3c-ab76-49b0-a66f-e9447b3aca67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.380195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dce773a9-c76d-4047-b394-dfcd8d001955",
    "name" : "Get all menu item variations",
    "request" : {
      "urlPath" : "/restaurants/2viy242tqmamja2ao0wpof8djeyi4nt5iykxvngpj9t9h66k8/6q14/catalogue/items/22ei/variations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "779106616"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  },\n  \"variations\" : [ {\n    \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n    \"basePrice\" : 500,\n    \"dealGroupsIds\" : [ ],\n    \"dealOnly\" : true,\n    \"id\" : \"8547121\",\n    \"kitchenNumber\" : \"100\",\n    \"modifierGroupsIds\" : [ \"8547130-opt-1\" ],\n    \"name\" : \"Half\",\n    \"type\" : \"variation\"\n  }, {\n    \"availabilityIds\" : [ \"1-lunch-delivery\", \"2-lunch-collection\", \"3-dinner-delivery\", \"4-dinner-collection\" ],\n    \"basePrice\" : 1000,\n    \"dealGroupsIds\" : [ ],\n    \"dealOnly\" : false,\n    \"id\" : \"8547130\",\n    \"kitchenNumber\" : \"100\",\n    \"modifierGroupsIds\" : [ \"8547130-req-1\", \"8547130-opt-1\" ],\n    \"name\" : \"12 inch\",\n    \"type\" : \"variation\"\n  }, {\n    \"availabilityIds\" : [ \"1-lunch-delivery-weekday\", \"2-lunch-collection-weekday\", \"3-dinner-delivery-weekday\", \"4-dinner-collection-weekday\" ],\n    \"basePrice\" : 1200,\n    \"dealGroupsIds\" : [ ],\n    \"dealOnly\" : true,\n    \"id\" : \"8543123\",\n    \"kitchenNumber\" : \"200\",\n    \"modifierGroupsIds\" : [ \"8547130-req-1\", \"8547130-opt-1\" ],\n    \"name\" : \"14 inch\",\n    \"type\" : \"variation\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dce773a9-c76d-4047-b394-dfcd8d001955",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.379981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "variations" : {
                  "description" : "List of variations for the given menu item on the given restaurant's menu",
                  "items" : {
                    "$ref" : "#/components/schemas/Variation"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              },
              "variations" : [ {
                "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                "basePrice" : 500,
                "dealGroupsIds" : [ ],
                "dealOnly" : true,
                "id" : "8547121",
                "kitchenNumber" : "100",
                "modifierGroupsIds" : [ "8547130-opt-1" ],
                "name" : "Half",
                "type" : "variation"
              }, {
                "availabilityIds" : [ "1-lunch-delivery", "2-lunch-collection", "3-dinner-delivery", "4-dinner-collection" ],
                "basePrice" : 1000,
                "dealGroupsIds" : [ ],
                "dealOnly" : false,
                "id" : "8547130",
                "kitchenNumber" : "100",
                "modifierGroupsIds" : [ "8547130-req-1", "8547130-opt-1" ],
                "name" : "12 inch",
                "type" : "variation"
              }, {
                "availabilityIds" : [ "1-lunch-delivery-weekday", "2-lunch-collection-weekday", "3-dinner-delivery-weekday", "4-dinner-collection-weekday" ],
                "basePrice" : 1200,
                "dealGroupsIds" : [ ],
                "dealOnly" : true,
                "id" : "8543123",
                "kitchenNumber" : "200",
                "modifierGroupsIds" : [ "8547130-req-1", "8547130-opt-1" ],
                "name" : "14 inch",
                "type" : "variation"
              } ]
            }
          }
        }
      }
    }
  }, {
    "id" : "5e33ce51-cb86-4447-bdfc-bef4da09a47d",
    "name" : "Get all menu item modifier groups",
    "request" : {
      "urlPath" : "/restaurants/bqyndxb5x4hajngu8hk5ktb0llqw9umc9vcu0x7vf4ik9ye2at5isfdrrcs8f5dtlr5i7ywzoinkkln44d3mfdqg6r4o6cluz4d3s6ffinvaynut8su5qfz9mji40t17siwldrrxr6odanbgcam/8d8v/catalogue/items/t3ik/modifiergroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1457305014"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e33ce51-cb86-4447-bdfc-bef4da09a47d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.379727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7df613ea-caf1-433f-b168-3c2e61101670",
    "name" : "Get all menu item modifier groups",
    "request" : {
      "urlPath" : "/restaurants/o58e4e3jpv9h09v09417d7p20fu3cba0g94at35vodi2m7efcyjmujkqwsorpc9hw3kd0natj2lj7wezi1edww37vz9t7ei0osb1965p33l6blkx9dvo2d2oo4gjurcbzwzjcran/hmzx/catalogue/items/pe9l/modifiergroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "77120815"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk and itemId:534685 not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7df613ea-caf1-433f-b168-3c2e61101670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.379522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b7f2cdec-22d8-4837-9294-64bfdfb13627",
    "name" : "Get all menu item modifier groups",
    "request" : {
      "urlPath" : "/restaurants/vdp06rpwz0c8ntcnvxodt5sylv2pcxq7ys14cd55p7yvafgfhugrz1/69nj/catalogue/items/5t50/modifiergroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1771527066"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7f2cdec-22d8-4837-9294-64bfdfb13627",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.379323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "adcb38bf-abaf-41d4-9d07-3792d31898ed",
    "name" : "Get all menu item modifier groups",
    "request" : {
      "urlPath" : "/restaurants/kf5qw0h4pqk404ufs5xmnz6v4m9girkmpjj3c7j0cly9x0jm72ffr2c6cqa9hsg0pt8wa7ruy77rsfww4urrjduk6j1u4d1e38onhyolsbhg1ouw9lg1i9r95ky/q296/catalogue/items/65q3/modifiergroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1989753514"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modifierGroups\" : [ {\n    \"id\" : \"8547130-req-1\",\n    \"maxChoices\" : 1,\n    \"minChoices\" : 1,\n    \"modifiers\" : [ {\n      \"additionPrice\" : 0,\n      \"id\" : \"854500\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 0,\n      \"name\" : \"Classic Crust\"\n    }, {\n      \"additionPrice\" : 200,\n      \"id\" : \"854600\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 0,\n      \"name\" : \"Stuffed Crust\"\n    } ],\n    \"name\" : \"Choose your crust\"\n  }, {\n    \"id\" : \"8547130-opt-1\",\n    \"maxChoices\" : 10,\n    \"minChoices\" : 0,\n    \"modifiers\" : [ {\n      \"additionPrice\" : 50,\n      \"id\" : \"1000\",\n      \"maxChoices\" : 2,\n      \"minChoices\" : 0,\n      \"name\" : \"Mozzarella Cheese\"\n    }, {\n      \"additionPrice\" : 50,\n      \"id\" : \"1001\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 0,\n      \"name\" : \"Ham\"\n    }, {\n      \"additionPrice\" : 50,\n      \"id\" : \"1002\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 0,\n      \"name\" : \"Red Onion\"\n    }, {\n      \"additionPrice\" : 50,\n      \"id\" : \"1003\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 0,\n      \"name\" : \"Pepperoni\"\n    }, {\n      \"additionPrice\" : 50,\n      \"id\" : \"1004\",\n      \"maxChoices\" : 1,\n      \"minChoices\" : 0,\n      \"name\" : \"Olives\"\n    } ],\n    \"name\" : \"Any extra toppings?\"\n  } ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adcb38bf-abaf-41d4-9d07-3792d31898ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.37911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "modifierGroups" : {
                  "description" : "List of modifier groups for the given menu item on the given restaurant's menu",
                  "items" : {
                    "$ref" : "#/components/schemas/MenuModifierGroup"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "modifierGroups" : [ {
                "id" : "8547130-req-1",
                "maxChoices" : 1,
                "minChoices" : 1,
                "modifiers" : [ {
                  "additionPrice" : 0,
                  "id" : "854500",
                  "maxChoices" : 1,
                  "minChoices" : 0,
                  "name" : "Classic Crust"
                }, {
                  "additionPrice" : 200,
                  "id" : "854600",
                  "maxChoices" : 1,
                  "minChoices" : 0,
                  "name" : "Stuffed Crust"
                } ],
                "name" : "Choose your crust"
              }, {
                "id" : "8547130-opt-1",
                "maxChoices" : 10,
                "minChoices" : 0,
                "modifiers" : [ {
                  "additionPrice" : 50,
                  "id" : "1000",
                  "maxChoices" : 2,
                  "minChoices" : 0,
                  "name" : "Mozzarella Cheese"
                }, {
                  "additionPrice" : 50,
                  "id" : "1001",
                  "maxChoices" : 1,
                  "minChoices" : 0,
                  "name" : "Ham"
                }, {
                  "additionPrice" : 50,
                  "id" : "1002",
                  "maxChoices" : 1,
                  "minChoices" : 0,
                  "name" : "Red Onion"
                }, {
                  "additionPrice" : 50,
                  "id" : "1003",
                  "maxChoices" : 1,
                  "minChoices" : 0,
                  "name" : "Pepperoni"
                }, {
                  "additionPrice" : 50,
                  "id" : "1004",
                  "maxChoices" : 1,
                  "minChoices" : 0,
                  "name" : "Olives"
                } ],
                "name" : "Any extra toppings?"
              } ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4bc208b1-1691-4491-84c5-8926fb2cdf30",
    "name" : "Get all deal item variations for a deal group",
    "request" : {
      "urlPath" : "/restaurants/fvlni1c59wgkjkm6f/813z/catalogue/items/0o5f/dealgroups/68t8/dealitemvariations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "651745033"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bc208b1-1691-4491-84c5-8926fb2cdf30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.378855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f0222b4-1ea5-4295-a0b6-83594a274809",
    "name" : "Get all deal item variations for a deal group",
    "request" : {
      "urlPath" : "/restaurants/tgpbuttbp8g4azces984zn5w4m19xt5nwnem8ua4r7wdw00te4udeq02t3vf9le15bb2ybokpcmofpk4/12dy/catalogue/items/54sb/dealgroups/qc2t/dealitemvariations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "833330948"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk for itemId:534685 and dealGroupId:463847 not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f0222b4-1ea5-4295-a0b6-83594a274809",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.378586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "75a5ff82-3a91-462a-b860-1b2122bb82ad",
    "name" : "Get all deal item variations for a deal group",
    "request" : {
      "urlPath" : "/restaurants/hx91alznc884017flgthixld3nkl4u0tunzcsdo6v1mi6pgaq6ut6o71n9gcb1ghwu0lj0i5einwwfo5l8j5nj73v8o9o8ft5vzdqddgzd4xltplyd1jwa9v9925qhza6qoxm3xawb8vlawxp3/npj1/catalogue/items/2e3s/dealgroups/84ve/dealitemvariations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "126973613"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75a5ff82-3a91-462a-b860-1b2122bb82ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.378322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4434df8-27d6-4904-9f4c-106f799bfe63",
    "name" : "Get all deal item variations for a deal group",
    "request" : {
      "urlPath" : "/restaurants/8ce7aa2k6p6yyi32ueck0poro1jyqqk71py24lz78lzx9ldqmogtsvxen0k2/65kj/catalogue/items/3h2o/dealgroups/z349/dealitemvariations",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "999528248"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dealItemVariations\" : [ {\n    \"additionPrice\" : 50,\n    \"dealItemVariationId\" : \"8548153\",\n    \"maxChoices\" : 1,\n    \"minChoices\" : 0\n  }, {\n    \"additionPrice\" : 100,\n    \"dealItemVariationId\" : \"8548153\",\n    \"maxChoices\" : 2,\n    \"minChoices\" : 1\n  } ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4434df8-27d6-4904-9f4c-106f799bfe63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.378046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "dealItemVariations" : {
                  "description" : "List of deal item variations which form the specified deal group",
                  "items" : {
                    "$ref" : "#/components/schemas/DealItemVariation"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "dealItemVariations" : [ {
                "additionPrice" : 50,
                "dealItemVariationId" : "8548153",
                "maxChoices" : 1,
                "minChoices" : 0
              }, {
                "additionPrice" : 100,
                "dealItemVariationId" : "8548153",
                "maxChoices" : 2,
                "minChoices" : 1
              } ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "dbf23e8e-4913-4a9b-b744-bdc5d6b78fff",
    "name" : "Get all menu item deal groups",
    "request" : {
      "urlPath" : "/restaurants/ybyk0d4jz4n2lfc3zgt1wxll9qpq17jfcb9n4pqcr4i44avwcusrt22fjc2p35bjl9hi22bpcnys2k2ofwq72csgcvneb4xq37yh783ry7j/3dfz/catalogue/items/30k2/dealgroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "429737193"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbf23e8e-4913-4a9b-b744-bdc5d6b78fff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.377751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ca8db75d-3c96-401e-a585-c58c068659ce",
    "name" : "Get all menu item deal groups",
    "request" : {
      "urlPath" : "/restaurants/ggq6rdp8daiv4lwx4zsmnynyy776ju2m13mc6fzpg8vd8ib09jcu02x8dptl0kpc3a7jtvqpgfm1g7gvjy3oefqueqevppho71xeoevbgj6iqwkmbj9tfl7maivkovxissk1z3llpt5glcuot1qkyrc3huppoeyqggghrjpyfreg5g7zh2m1f2c1ngyl/q9wv/catalogue/items/0e07/dealgroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1549303369"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk and itemId:534685 not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca8db75d-3c96-401e-a585-c58c068659ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.377548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "30b4100a-d372-428c-98d1-0be1a5b50686",
    "name" : "Get all menu item deal groups",
    "request" : {
      "urlPath" : "/restaurants/d1y7cxj92gnt54f7pbyk1bvkkr0satlvu8m6gxy1crctlwkx5geh2mne2x6wcyfhmj774wwd66z2zkjwuw/s00a/catalogue/items/rc9o/dealgroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1339706931"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30b4100a-d372-428c-98d1-0be1a5b50686",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.377343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc7c2982-ebbd-4f38-9540-b32f4d40ae62",
    "name" : "Get all menu item deal groups",
    "request" : {
      "urlPath" : "/restaurants/jq2154x2ncl0y8yhdz4g/z7l5/catalogue/items/8e36/dealgroups",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "143832518"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dealGroups\" : [ {\n    \"id\" : \"23435309-1\",\n    \"name\" : \"Choose your base\",\n    \"numberOfChoices\" : 1\n  }, {\n    \"id\" : \"23435309-2\",\n    \"name\" : \"Choose your halves\",\n    \"numberOfChoices\" : 2\n  } ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc7c2982-ebbd-4f38-9540-b32f4d40ae62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.377142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "dealGroups" : {
                  "description" : "List of deal groups for the given menu item on the given restaurant's menu",
                  "items" : {
                    "$ref" : "#/components/schemas/MenuDealGroupBase"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "dealGroups" : [ {
                "id" : "23435309-1",
                "name" : "Choose your base",
                "numberOfChoices" : 1
              }, {
                "id" : "23435309-2",
                "name" : "Choose your halves",
                "numberOfChoices" : 2
              } ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "54706247-f133-42cc-9fe2-c5ada92cf9f4",
    "name" : "Get all menu items",
    "request" : {
      "urlPath" : "/restaurants/1vy0mw5xnv88wphon9qilvpov15n2xuut7vgt02qrlt7d3dwr3vw5qexfatyy5e65si9jjztg877c5i5h8spwaiwxnmgpeabt1ler0qjds4082fdo/lw0c/catalogue/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1690816723"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54706247-f133-42cc-9fe2-c5ada92cf9f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.376919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ccc92b31-65b6-4af9-97ec-8d86bf0fc4e2",
    "name" : "Get all menu items",
    "request" : {
      "urlPath" : "/restaurants/bufqkdr1cee5vfwxwmmis1xux2qtptrgd8vd1yslmjylzwtzrqwcje00swj6bk23977y7rxmjsif6mfz5zihy15xb0r4vfraeqqlsdq82vm60fltynakmnapct9j/u223/catalogue/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "403906008"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccc92b31-65b6-4af9-97ec-8d86bf0fc4e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.37677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a3849340-a170-4a65-ae34-3dc68e8db25a",
    "name" : "Get all menu items",
    "request" : {
      "urlPath" : "/restaurants/kq3wi54ozntuzjjtaee2jr7j7qrqf77skmo0c21lqvtes9avsmb5t46bspj3bjehn1gym78h4m7v9te60r2msvugkpp3awbnpt20bud56cd/869m/catalogue/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "430798240"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3849340-a170-4a65-ae34-3dc68e8db25a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.376628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7906ef74-6c2e-46da-85ad-c3ec02759c9f",
    "name" : "Get all menu items",
    "request" : {
      "urlPath" : "/restaurants/lz49rlrsul/7zzs/catalogue/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1271919763"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"items\" : [ {\n    \"description\" : \"\",\n    \"id\" : \"65143901\",\n    \"labels\" : [ ],\n    \"name\" : \"Flat Bread and Dips (Pick any 2 Dips)\",\n    \"requireOtherProducts\" : false,\n    \"type\" : \"menuItem\"\n  }, {\n    \"description\" : \"\",\n    \"id\" : \"8547130\",\n    \"labels\" : [ ],\n    \"name\" : \"Margherita\",\n    \"requireOtherProducts\" : true,\n    \"type\" : \"menuItem\"\n  } ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7906ef74-6c2e-46da-85ad-c3ec02759c9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.376482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "items" : {
                  "description" : "List of menu items for a given restaurant's menu.",
                  "items" : {
                    "$ref" : "#/components/schemas/MenuItemBase"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "items" : [ {
                "description" : "",
                "id" : "65143901",
                "labels" : [ ],
                "name" : "Flat Bread and Dips (Pick any 2 Dips)",
                "requireOtherProducts" : false,
                "type" : "menuItem"
              }, {
                "description" : "",
                "id" : "8547130",
                "labels" : [ ],
                "name" : "Margherita",
                "requireOtherProducts" : true,
                "type" : "menuItem"
              } ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "714ffb91-40ef-4aa3-9fbe-6086dfd5c284",
    "name" : "Get all category item IDs",
    "request" : {
      "urlPath" : "/restaurants/f7w9ifu3o5ctjwcnpfmq95f3xw1r4zl7csl1fak7e6tb3l48si31h6vk6m73r8snur4on9cu7mch2ra5y9wmut7y91lh49yw2bvgxoyy3peopmqc5z78zxrjkskaaoizc4w2271/jd30/catalogue/categories/26a1/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1241382174"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "714ffb91-40ef-4aa3-9fbe-6086dfd5c284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.376311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c5c9be89-c501-4a11-9980-23ac090f8258",
    "name" : "Get all category item IDs",
    "request" : {
      "urlPath" : "/restaurants/h3in8uzi9feim09gt0poig9o06studry2rmc9ojqy8onpfyhk4ywt1cl7ekx3axnk8d9mail0cj9tr465gpbi52vabj7crdtm78y1cano7rlgd4ytg14rvxt49clhr1g0/36l9/catalogue/categories/abs1/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "2021592014"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5c9be89-c501-4a11-9980-23ac090f8258",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.376107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d1ffe88d-ebbd-49ab-93e2-f0ff029ceb29",
    "name" : "Get all category item IDs",
    "request" : {
      "urlPath" : "/restaurants/bkduvr4jlm5ycejk1a0xwvahps0y4mdsr8bs1axu9rcdctkx28fes8bjwqpio1vng2l86xssrzovsiwbgop9x80njhlbcl58b/z4jg/catalogue/categories/9766/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1945083384"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1ffe88d-ebbd-49ab-93e2-f0ff029ceb29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.375906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92ee23ce-d2aa-414e-8dd3-05c2ab7a5f1c",
    "name" : "Get all category item IDs",
    "request" : {
      "urlPath" : "/restaurants/ltkpgyccrzsvrh3ozdgrsje9ms9h9weqvr2v1qk4h0vgv4vc57po12fd1zn01cohtye4yxbl5v26770v7n66bnix2r3p3fg5mxmwwvxsscsw9zthcv11s15cxutodkq96ywn9u3x8zny8fmxulbt3s6nveliysn/jz8z/catalogue/categories/d6hs/items",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "858394430"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"itemIds\" : [ \"65143901\", \"65143902\", \"65143903\", \"65143904\", \"65143905\" ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92ee23ce-d2aa-414e-8dd3-05c2ab7a5f1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.375701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "itemIds" : {
                  "description" : "List of item IDs which are assigned to the specified category",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "itemIds" : [ "65143901", "65143902", "65143903", "65143904", "65143905" ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "28948218-8ca2-4420-91a1-a65b099b9ff8",
    "name" : "Get all categories",
    "request" : {
      "urlPath" : "/restaurants/q7xnon34hut3wehuqkrugs4mbr66r3qa93y0m13meda56pf0arudiwkdglbf0bvqw64qe7rhok1uf8zvkrdb1t7ocid7lbizicxsdhw0yc3cal49wg47skzme1czch9z8p231zpphzjbd66ghfi5ypxzeffz3ufjh6u6usuvc0ewq81q3jguk4qqpfnmkip7h/pskq/catalogue/categories",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1168534458"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28948218-8ca2-4420-91a1-a65b099b9ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.37546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8f8ca1e-ad8e-457a-88bc-2a0b0cabc4da",
    "name" : "Get all categories",
    "request" : {
      "urlPath" : "/restaurants/bc4qfg324431cmlnmxiskt7yrttkee5vbf7qjg7r1nx5hhelrrcaj7vtqrb271ewaufk6ospas9sfadoqams0zbae95se3we1sv3h1brbo1yyvb4mru6il12l0a7pl6u4b7ts/ta32/catalogue/categories",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "199967894"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8f8ca1e-ad8e-457a-88bc-2a0b0cabc4da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.375315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3bb5bae3-c827-4288-8391-d9517e0d042a",
    "name" : "Get all categories",
    "request" : {
      "urlPath" : "/restaurants/facug6ijrcl/1oby/catalogue/categories",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "363956478"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bb5bae3-c827-4288-8391-d9517e0d042a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.375172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "511bdd17-3563-479a-8e7b-987991b5c499",
    "name" : "Get all categories",
    "request" : {
      "urlPath" : "/restaurants/hzglrb44nskhntpumyow0yk7x2djcyk596lw29o7smhr8fv7ofl8xp1gcrh7ed6sbanqvajek6hew1mokgd91szqfx010a6t4d97stxt/sk52/catalogue/categories",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "162895861"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"categories\" : [ {\n    \"description\" : \"Sumptuous starters\",\n    \"id\" : \"3\",\n    \"name\" : \"Starters\"\n  }, {\n    \"description\" : \"Magnificent mains\",\n    \"id\" : \"4\",\n    \"name\" : \"Mains\"\n  } ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "511bdd17-3563-479a-8e7b-987991b5c499",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.375021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "categories" : {
                  "description" : "List of categories for a given restaurant's menu.",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryBase"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "categories" : [ {
                "description" : "Sumptuous starters",
                "id" : "3",
                "name" : "Starters"
              }, {
                "description" : "Magnificent mains",
                "id" : "4",
                "name" : "Mains"
              } ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "903fbc60-57cc-4836-8702-14f2315bf2bb",
    "name" : "Get all availabilities",
    "request" : {
      "urlPath" : "/restaurants/2ehz8wiwkpucz31i0oobgy3vvc266l5wmchwj7zvqww31hzfczx7543wp2nnb8ad6gq47vbjt2wzkefy2u77dor0be7yvb74z/aov1/catalogue/availabilities",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "898473789"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "903fbc60-57cc-4836-8702-14f2315bf2bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.374862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "28f43e06-7c47-4462-8ec3-c9a7ed444858",
    "name" : "Get all availabilities",
    "request" : {
      "urlPath" : "/restaurants/rp8anls3zicjpoy8svwew5xs4poyd5faoqj3ban48jbuzf0wj5p0py86adzqf4brmv8fa873zutfpwf/6v27/catalogue/availabilities",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "2138785810"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28f43e06-7c47-4462-8ec3-c9a7ed444858",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.374715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "419a56e6-98e7-41a5-938b-4bc9d4af2886",
    "name" : "Get all availabilities",
    "request" : {
      "urlPath" : "/restaurants/n3edx8uqie5snjextufvnddlqbo0g66dqt1e0p4ebijnf9v3rkl3lyghblu0kmoyl4uy7qm7p39avg4szx0ct01c7zu22xx0blfleq6igjbg9rdf0xoewvzolhrrsqwyg6qr5ii3z0ho8juebgch8oyzajyxkp9x5o00stadu0yn7vkzfex2nvq/8918/catalogue/availabilities",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "1638931956"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid value 0 for parameter limit.\"\n  } ],\n  \"faultId\" : \"e21a9947-4352-449f-a4dc-5e69d57b0c5f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "419a56e6-98e7-41a5-938b-4bc9d4af2886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.37457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2fda024-8304-4743-aed0-55df687777a1",
    "name" : "Get all availabilities",
    "request" : {
      "urlPath" : "/restaurants/mdnapv6n5t5shwn6sq4qtg7es2dnhbcmgmkj841yo16lcn2jg3azgyrucnm07yyaztkss8zxv0z85lojx41zqcmmmdw1dfw6uhnzhdtydts85tst2gtpjqpdinpujg2jzf1u3dts31l6u9qdc9i600j7/i5ex/catalogue/availabilities",
      "method" : "GET",
      "queryParameters" : {
        "limit" : {
          "equalTo" : "361796331"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"availabilities\" : [ {\n    \"description\" : \"Menu items available for delivery during weekdays for lunch.\",\n    \"id\" : \"1-lunch-delivery\",\n    \"name\" : \"Delivery Lunch\",\n    \"serviceTypes\" : [ \"delivery\" ],\n    \"times\" : [ {\n      \"daysOfTheWeek\" : [ \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\" ],\n      \"fromDateTime\" : \"11:30:00\",\n      \"toDateTime\" : \"14:30:00\"\n    } ]\n  }, {\n    \"description\" : \"Menu items available for delivery during weekdays for dinner.\",\n    \"id\" : \"1-dinner-delivery\",\n    \"name\" : \"Delivery Dinner\",\n    \"serviceTypes\" : [ \"delivery\" ],\n    \"times\" : [ {\n      \"daysOfTheWeek\" : [ \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\" ],\n      \"fromDateTime\" : \"16:30:00\",\n      \"toDateTime\" : \"22:00:00\"\n    } ]\n  } ],\n  \"paging\" : {\n    \"cursors\" : {\n      \"after\" : \"NDMyNzQyODI3OTQw\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2fda024-8304-4743-aed0-55df687777a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.374407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PagedAfterOnlyCursorResponse"
            }, {
              "properties" : {
                "availabilities" : {
                  "description" : "List of availabilities for a given restaurant's menu.",
                  "items" : {
                    "$ref" : "#/components/schemas/Availability"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "example" : {
              "availabilities" : [ {
                "description" : "Menu items available for delivery during weekdays for lunch.",
                "id" : "1-lunch-delivery",
                "name" : "Delivery Lunch",
                "serviceTypes" : [ "delivery" ],
                "times" : [ {
                  "daysOfTheWeek" : [ "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday" ],
                  "fromDateTime" : "11:30:00",
                  "toDateTime" : "14:30:00"
                } ]
              }, {
                "description" : "Menu items available for delivery during weekdays for dinner.",
                "id" : "1-dinner-delivery",
                "name" : "Delivery Dinner",
                "serviceTypes" : [ "delivery" ],
                "times" : [ {
                  "daysOfTheWeek" : [ "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday" ],
                  "fromDateTime" : "16:30:00",
                  "toDateTime" : "22:00:00"
                } ]
              } ],
              "paging" : {
                "cursors" : {
                  "after" : "NDMyNzQyODI3OTQw"
                }
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "88c7773c-e281-473f-afbc-53d7867cb381",
    "name" : "Get product catalogue",
    "request" : {
      "urlPath" : "/restaurants/3wz1prhphelorkz71w35e16ont8hx1jmknnoq3q9jwmkunqo2mm0rib40vbx1xlv18e0jupdf2kl5loyl0mdhskmsqk9jn8zr18ogh9vljiggw9a7bjkdshfsr8bow8jv0xjn2bokpgbgnc04799is92oxassqozvlizyrqu6ajnciijgf9ocep/ncx9/catalogue",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88c7773c-e281-473f-afbc-53d7867cb381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.374212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6dbe845e-0456-4afe-81e3-570a30c85736",
    "name" : "Get product catalogue",
    "request" : {
      "urlPath" : "/restaurants/5u93s6i98kpjx5plbfg52oduh23tnim80w4626htjs4g04ths6r6og3xnxsq5see10h5w2ngub6uzot2rovabqtek55aa1r2y6hmpvrvah8p77xuzorc37p3jikiiia8ifef6ty113/11jg/catalogue",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource with identifier restaurantId:95224345321 for tenant:uk not found.\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dbe845e-0456-4afe-81e3-570a30c85736",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.374065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5047c0c6-621f-4911-a334-523ba347bfe7",
    "name" : "Get product catalogue",
    "request" : {
      "urlPath" : "/restaurants/15wfol2e5wgyxz5zass431bubil67p4pgpxa5al1n8ckaq5zc4u1ke09h9jn6vm1qptudpg6xmdzzuzoqaqhvhiqgbztn9o7a6xv30rsmdek02y5t3q7ud714kmmp4x48s4htaaoracvx2/o083/catalogue",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"currency\" : \"GBP\",\n  \"description\" : \"My excellent menu\",\n  \"name\" : \"My Restaurant\",\n  \"restaurantId\" : \"100059\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5047c0c6-621f-4911-a334-523ba347bfe7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : {
              "currency" : "GBP",
              "description" : "My excellent menu",
              "name" : "My Restaurant",
              "restaurantId" : "100059"
            },
            "properties" : {
              "currency" : {
                "description" : "The currency of the items on the menu in ISO 4217 format, i.e. GBP, EUR or AUD",
                "type" : "string"
              },
              "description" : {
                "description" : "A top level description for the menu.",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the restaurant.",
                "type" : "string"
              },
              "restaurantId" : {
                "description" : "A unique identifier at tenant level for a given restaurant.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cb5298ec-d883-4cd6-ac50-158cff120d77",
    "name" : "Set ETA for pickup - 400",
    "request" : {
      "urlPath" : "/restaurants/driver/eta",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "cb5298ec-d883-4cd6-ac50-158cff120d77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "44b81259-f14b-4e42-81cf-ead60332c7c7",
    "name" : "Set ETA for pickup (application/json)",
    "request" : {
      "urlPath" : "/restaurants/driver/eta",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"ignoredRestaurantIds\" : [ \"123\", \"456\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44b81259-f14b-4e42-81cf-ead60332c7c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : {
              "ignoredRestaurantIds" : [ "123", "456" ]
            },
            "properties" : {
              "ignoredRestaurantIds" : {
                "description" : "A list of restaurant ids that were present in a request but were ignored.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37bf9cf7-f7e5-4644-ad90-5c8c456c704d",
    "name" : "Get restaurants by postcode",
    "request" : {
      "urlPath" : "/restaurants/bypostcode/71307",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"ExceptionMessage\" : \"Object reference not set to an instance of an object.\",\n  \"ExceptionType\" : \"System.NullReferenceException\",\n  \"Message\" : \"An error has occurred.\",\n  \"StackTrace\" : \"   at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\\\\\\\Mac\\\\Home\\\\Documents\\\\GitHub\\\\SearchOrchestrator\\\\src\\\\JE.SearchOrchestrator\\\\Controllers\\\\Filters\\\\CacheControlFilter.cs:line 18\\r\\n   at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)\\r\\n--- End of stack\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37bf9cf7-f7e5-4644-ad90-5c8c456c704d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByPostcode",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "784daca0-d6c1-49a7-b8fd-9768d1800a2d",
    "name" : "Get restaurants by postcode",
    "request" : {
      "urlPath" : "/restaurants/bypostcode/38932",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"message\" : \"No API key found in request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "784daca0-d6c1-49a7-b8fd-9768d1800a2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByPostcode",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3e266d27-8ebf-44a5-be7a-f9916a2df56b",
    "name" : "Get restaurants by postcode",
    "request" : {
      "urlPath" : "/restaurants/bypostcode/72662",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"The request is invalid.\",\n  \"ModelState\" : {\n    \"Postcode\" : [ \"Invalid Postcode.\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e266d27-8ebf-44a5-be7a-f9916a2df56b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByPostcode",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ffadd11a-7f59-4327-b858-77ec1eadd00a",
    "name" : "Get restaurants by postcode",
    "request" : {
      "urlPath" : "/restaurants/bypostcode/13459",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Restaurants\" : [ {\n    \"IsOpenNowForDelivery\" : false,\n    \"DriveDistance\" : 5.999789180000987E306,\n    \"Address\" : {\n      \"FirstLine\" : \"43uvf5pzau6vx8e9gc50h4faw8ld5cyufcpxxvwp56vra\",\n      \"Latitude\" : 1.4661595855712122E307,\n      \"City\" : \"Hansenbury\",\n      \"Longitude\" : 3.44810645901005E306,\n      \"Postcode\" : \"10507\"\n    },\n    \"DriveInfoCalculated\" : true,\n    \"IsOpenNow\" : true,\n    \"Id\" : 8.736742171842141E307,\n    \"UniqueName\" : \"Alvin Christiansen\",\n    \"Url\" : \"https://web.example.mocklab.io/503006\",\n    \"DeliveryEtaMinutes\" : {\n      \"RangeLower\" : 3.367994872273953E306,\n      \"RangeUpper\" : 1.7293101994253198E308,\n      \"Approximate\" : 4.4675917673635045E307\n    },\n    \"Name\" : \"Ms. Mathew Purdy\"\n  }, {\n    \"IsOpenNowForDelivery\" : true,\n    \"DriveDistance\" : 9.749443182412965E307,\n    \"Address\" : {\n      \"FirstLine\" : \"nqdd7txsbqopb1h9r88l53o6immkomgfs20m9i8bi3ss7frkb49vrg903jzdbgr1sfiap4p2s1w82uvnoa4qpriwhjbkru6y7rrx6mk4fdo8c3izee\",\n      \"Latitude\" : 6.302237252198238E307,\n      \"City\" : \"DuBuqueport\",\n      \"Longitude\" : 1.2029657038217376E308,\n      \"Postcode\" : \"45752-1026\"\n    },\n    \"DriveInfoCalculated\" : true,\n    \"IsOpenNow\" : false,\n    \"Id\" : 1.6570928163710259E308,\n    \"UniqueName\" : \"Jodi Farrell V\",\n    \"Url\" : \"https://web.example.mocklab.io/811422\",\n    \"DeliveryEtaMinutes\" : {\n      \"RangeLower\" : 7.287878732318653E307,\n      \"RangeUpper\" : 2.7620581264254784E307,\n      \"Approximate\" : 1.0254861063932175E308\n    },\n    \"Name\" : \"Danilo Murazik PhD\"\n  }, {\n    \"IsOpenNowForDelivery\" : false,\n    \"DriveDistance\" : 1.3235138836629999E308,\n    \"Address\" : {\n      \"FirstLine\" : \"1qw7lnvnuua4rklg\",\n      \"Latitude\" : 1.5459431398142734E308,\n      \"City\" : \"Nienowport\",\n      \"Longitude\" : 1.6724686251576761E308,\n      \"Postcode\" : \"89182-0170\"\n    },\n    \"DriveInfoCalculated\" : true,\n    \"IsOpenNow\" : true,\n    \"Id\" : 1.2005760675478457E308,\n    \"UniqueName\" : \"Alica Marks\",\n    \"Url\" : \"https://web.example.mocklab.io/527437\",\n    \"DeliveryEtaMinutes\" : {\n      \"RangeLower\" : 2.1765357804902987E307,\n      \"RangeUpper\" : 6.518040012754566E307,\n      \"Approximate\" : 1.3535144253897436E308\n    },\n    \"Name\" : \"Imelda Yost\"\n  }, {\n    \"IsOpenNowForDelivery\" : false,\n    \"DriveDistance\" : 1.3439872346470584E308,\n    \"Address\" : {\n      \"FirstLine\" : \"f50mw3u70haj6mimwkw2bt12cb2uf38o7mun0gg49y3bu3fcnka7ourx11j1xvhre5p8vi6je2xpfvx4zgeqbnbw7xzaxfdv\",\n      \"Latitude\" : 1.2125043576717478E306,\n      \"City\" : \"East Bryce\",\n      \"Longitude\" : 4.836909715594441E307,\n      \"Postcode\" : \"92370\"\n    },\n    \"DriveInfoCalculated\" : true,\n    \"IsOpenNow\" : false,\n    \"Id\" : 3.8550114404502827E307,\n    \"UniqueName\" : \"Chang Carroll IV\",\n    \"Url\" : \"https://web.example.mocklab.io/801571\",\n    \"DeliveryEtaMinutes\" : {\n      \"RangeLower\" : 1.4142416685596607E308,\n      \"RangeUpper\" : 1.6739448494815863E308,\n      \"Approximate\" : 1.1079395266207046E308\n    },\n    \"Name\" : \"Mr. Darnell Rau\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffadd11a-7f59-4327-b858-77ec1eadd00a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.373486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByPostcode",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SearchResponse"
            }, {
              "$ref" : "#/components/schemas/ExternalSearchResponse"
            }, {
              "$ref" : "#/components/schemas/SearchWebResponse"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "215f695f-d0e4-47b7-939b-a70754d618b7",
    "name" : "Get restaurants by location",
    "request" : {
      "urlPath" : "/restaurants/bylatlong",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "4.603466793240734E307"
        },
        "longitude" : {
          "equalTo" : "9.702537173549552E307"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"ExceptionMessage\" : \"Object reference not set to an instance of an object.\",\n  \"ExceptionType\" : \"System.NullReferenceException\",\n  \"Message\" : \"An error has occurred.\",\n  \"StackTrace\" : \"   at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\\\\\\\Mac\\\\Home\\\\Documents\\\\GitHub\\\\SearchOrchestrator\\\\src\\\\JE.SearchOrchestrator\\\\Controllers\\\\Filters\\\\CacheControlFilter.cs:line 18\\r\\n   at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)\\r\\n--- End of stack\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "215f695f-d0e4-47b7-939b-a70754d618b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.372189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByLocation",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f5f112c-70d2-4dd9-a09c-de07353b4ca4",
    "name" : "Get restaurants by location",
    "request" : {
      "urlPath" : "/restaurants/bylatlong",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "1.5891527767941753E307"
        },
        "longitude" : {
          "equalTo" : "1.0594138610802007E308"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"message\" : \"No API key found in request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f5f112c-70d2-4dd9-a09c-de07353b4ca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.372134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByLocation",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0bf84c0-a42b-49fd-9676-0981ac3fe517",
    "name" : "Get restaurants by location",
    "request" : {
      "urlPath" : "/restaurants/bylatlong",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "1.5026615594367693E307"
        },
        "longitude" : {
          "equalTo" : "1.0631000454935913E308"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"The request is invalid.\",\n  \"ModelState\" : {\n    \"Longitude\" : [ \"The value 'nan' is not valid for Longitude.\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0bf84c0-a42b-49fd-9676-0981ac3fe517",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.372079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByLocation",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67b6076e-1829-44e9-acfb-77800351e748",
    "name" : "Get restaurants by location",
    "request" : {
      "urlPath" : "/restaurants/bylatlong",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "1.6965995015451392E308"
        },
        "longitude" : {
          "equalTo" : "2.1262937925503807E307"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Area\" : \"Fleet Street\",\n  \"CuisineSets\" : [ {\n    \"Cuisines\" : [ {\n      \"Name\" : \"Pizza\",\n      \"SeoName\" : \"pizza\"\n    } ],\n    \"Id\" : \"user_and_local_cuisines\",\n    \"Name\" : \"\",\n    \"Type\" : \"area_cuisines\"\n  } ],\n  \"Dishes\" : [ ],\n  \"MetaData\" : {\n    \"Area\" : \"Fleet Street\",\n    \"CanonicalName\" : \"ec4-fleetstreet\",\n    \"CuisineDetails\" : [ {\n      \"Name\" : \"Danish\",\n      \"SeoName\" : \"danish\",\n      \"Total\" : 171\n    } ],\n    \"District\" : \"EC4\",\n    \"Latitude\" : 0,\n    \"Longitude\" : 0,\n    \"Postcode\" : \"EC4\",\n    \"ResultCount\" : 1,\n    \"SearchedTerms\" : null,\n    \"TagDetails\" : [ {\n      \"BackgroundColour\" : \"#E6F6C5\",\n      \"Colour\" : \"#04822C\",\n      \"DisplayName\" : \"Tried and Tasted\",\n      \"Key\" : \"tried-and-tasted\",\n      \"Priority\" : 300\n    } ]\n  },\n  \"RestaurantSets\" : [ ],\n  \"Restaurants\" : [ {\n    \"Address\" : {\n      \"City\" : \"London\",\n      \"FirstLine\" : \"London\",\n      \"Latitude\" : 51.516454,\n      \"Longitude\" : -0.103137,\n      \"Postcode\" : \"EC4M 7RF\"\n    },\n    \"Badges\" : [ ],\n    \"BrandName\" : \"\",\n    \"City\" : \"London\",\n    \"CollectionMenuId\" : null,\n    \"CuisineTypes\" : [ {\n      \"Id\" : 2,\n      \"IsTopCuisine\" : false,\n      \"Name\" : \"English\",\n      \"SeoName\" : \"english\"\n    } ],\n    \"Cuisines\" : [ {\n      \"Name\" : \"English\",\n      \"SeoName\" : \"english\"\n    } ],\n    \"Deals\" : [ {\n      \"Description\" : \"20% off when you spend £20\",\n      \"DiscountPercent\" : 20,\n      \"OfferType\" : \"Percent\",\n      \"QualifyingPrice\" : 20\n    } ],\n    \"DefaultDisplayRank\" : 0,\n    \"DeliveryChargeBands\" : [ ],\n    \"DeliveryCost\" : 0.12,\n    \"DeliveryEtaMinutes\" : {\n      \"Approximate\" : null,\n      \"RangeLower\" : 10,\n      \"RangeUpper\" : 25\n    },\n    \"DeliveryMenuId\" : 224651,\n    \"DeliveryOpeningTime\" : \"2019-11-18T01:00:00Z\",\n    \"DeliveryOpeningTimeLocal\" : \"2019-11-18T01:00:00\",\n    \"DeliveryOpeningTimeUtc\" : null,\n    \"DeliveryStartTime\" : \"2019-11-18T01:00:00Z\",\n    \"DeliveryTime\" : null,\n    \"DeliveryTimeMinutes\" : null,\n    \"DeliveryWorkingTimeMinutes\" : 10,\n    \"DeliveryZipcode\" : null,\n    \"Description\" : \"\",\n    \"DriveDistance\" : 0,\n    \"DriveInfoCalculated\" : true,\n    \"HygieneRating\" : null,\n    \"Id\" : 102215,\n    \"IsBrand\" : false,\n    \"IsCloseBy\" : true,\n    \"IsCollection\" : false,\n    \"IsDelivery\" : true,\n    \"IsFreeDelivery\" : false,\n    \"IsHalal\" : false,\n    \"IsNew\" : false,\n    \"IsOpenNow\" : true,\n    \"IsOpenNowForCollection\" : false,\n    \"IsOpenNowForDelivery\" : true,\n    \"IsOpenNowForPreorder\" : false,\n    \"IsPremier\" : false,\n    \"IsSponsored\" : false,\n    \"IsTemporarilyOffline\" : false,\n    \"IsTemporaryBoost\" : false,\n    \"IsTestRestaurant\" : false,\n    \"LastUpdated\" : \"2019-09-10T10:55:58.199397\",\n    \"Latitude\" : 0,\n    \"Logo\" : [ {\n      \"StandardResolutionURL\" : \"http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif\"\n    } ],\n    \"LogoUrl\" : \"http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif\",\n    \"Longitude\" : 0,\n    \"MinimumDeliveryValue\" : 0,\n    \"Name\" : \"TEST_DP_1\",\n    \"NewnessDate\" : \"2017-05-02T14:30:21\",\n    \"NumberOfRatings\" : 0,\n    \"OfferPercent\" : 0,\n    \"Offers\" : [ {\n      \"Amount\" : 20,\n      \"MaxQualifyingValue\" : 50,\n      \"OfferId\" : \"136149\",\n      \"QualifyingValue\" : 20,\n      \"Type\" : \"Percent\"\n    } ],\n    \"OpeningTime\" : \"2019-11-19T01:00:00Z\",\n    \"OpeningTimeIso\" : \"2019-11-19T01:00:00\",\n    \"OpeningTimeLocal\" : \"2019-11-19T01:00:00\",\n    \"OpeningTimeUtc\" : null,\n    \"OpeningTimes\" : [ ],\n    \"Postcode\" : \"EC4M 7RF\",\n    \"Rating\" : {\n      \"Average\" : 0,\n      \"Count\" : 0,\n      \"StarRating\" : 0\n    },\n    \"RatingAverage\" : 0,\n    \"RatingStars\" : 0,\n    \"ReasonWhyTemporarilyOffline\" : \"\",\n    \"Score\" : 502,\n    \"ScoreMetaData\" : [ {\n      \"Key\" : \"Distance\",\n      \"Value\" : \"0\"\n    }, {\n      \"Key\" : \"SetName\",\n      \"Value\" : \"Default\"\n    } ],\n    \"SecondDateRank\" : 0,\n    \"SecondDateRanking\" : 0,\n    \"SendsOnItsWayNotifications\" : false,\n    \"ServiceableAreas\" : [ ],\n    \"ShowSmiley\" : false,\n    \"SmileyDate\" : null,\n    \"SmileyElite\" : false,\n    \"SmileyResult\" : null,\n    \"SmileyUrl\" : null,\n    \"SponsoredPosition\" : 0,\n    \"Tags\" : [ ],\n    \"UniqueName\" : \"test_dp-london-london\",\n    \"Url\" : \"https://www.just-eat.co.uk/restaurants-test_dp-london-london\"\n  } ],\n  \"ShortResultText\" : \"EC4\",\n  \"Views\" : [ ],\n  \"deliveryFees\" : {\n    \"restaurants\" : {\n      \"102215\" : {\n        \"bands\" : [ {\n          \"fee\" : 100,\n          \"minimumAmount\" : 0\n        } ],\n        \"minimumOrderValue\" : 0,\n        \"restaurantId\" : \"102215\"\n      }\n    }\n  },\n  \"promotedPlacement\" : {\n    \"filteredSearchPromotedLimit\" : 5,\n    \"rankedIds\" : [ 84335 ],\n    \"restaurants\" : {\n      \"84335\" : {\n        \"defaultPromoted\" : true,\n        \"restaurantId\" : \"84335\"\n      }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67b6076e-1829-44e9-acfb-77800351e748",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.372017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SearchByLocation",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SearchResponse"
            }, {
              "$ref" : "#/components/schemas/ExternalSearchResponse"
            }, {
              "$ref" : "#/components/schemas/SearchWebResponse"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a8c84e4e-2540-48b6-821b-7bcae3411f31",
    "name" : "Restaurant Online Status - 200",
    "request" : {
      "urlPath" : "/restaurant-online-status",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a8c84e4e-2540-48b6-821b-7bcae3411f31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a1d8e728-a08e-448b-bba0-1556ae53c454",
    "name" : "Restaurant Offline Status - 200",
    "request" : {
      "urlPath" : "/restaurant-offline-status",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a1d8e728-a08e-448b-bba0-1556ae53c454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a8cd514e-bc8b-4dd4-ad14-951bf7be001f",
    "name" : "Customer Requested Redelivery - 200",
    "request" : {
      "urlPath" : "/redelivery-requested",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a8cd514e-bc8b-4dd4-ad14-951bf7be001f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e5256f7c-0a4b-4eec-83ef-e2ae208196a2",
    "name" : "Create Compensation requests (application/json)",
    "request" : {
      "urlPath" : "/orders/66154j34s7uoofanb5pw0c6l069b61h00c65i9xnvc6ywtoalb9ebdsmwzgwmyb7j8ph3ascg0w/ad93/restaurantqueries/compensation",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5256f7c-0a4b-4eec-83ef-e2ae208196a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a8d975a-a8e9-4ca1-a1f9-28abf753e36a",
    "name" : "Create Compensation requests (application/json)",
    "request" : {
      "urlPath" : "/orders/5oo2yufp2fz08ngefrsu9rcoykxnnr8hmoh0u6bmh8o86qtj7u5gkqnyou2l4ukmlybu97lxn4s5o1dou49nr957ncsmcv5fepnc27kypq5ri6w76pxoz7n1rfjl4gy69/yw0k/restaurantqueries/compensation",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"This order is not eligible for compensation\",\n    \"errorCode\" : \"OrderNotEligible\"\n  }, {\n    \"description\" : \"A compensation request has already been requested for this order\",\n    \"errorCode\" : \"CompensationAlreadyExists\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a8d975a-a8e9-4ca1-a1f9-28abf753e36a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "13fe39cc-19b8-4b7a-913e-8c3826764def",
    "name" : "Create Compensation requests (application/json)",
    "request" : {
      "urlPath" : "/orders/pe32xl6d2yxc1uy44y6s7miwflrauuk9794d/b75r/restaurantqueries/compensation",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Resource not found\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13fe39cc-19b8-4b7a-913e-8c3826764def",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "14883b34-25fd-47d9-9a5d-ef66d76f4a0a",
    "name" : "Create Compensation requests (application/json)",
    "request" : {
      "urlPath" : "/orders/g6ctmlx1e51388sir1i6296kqt9c0ut2g170onm62kw3jlwo181zrvmajsx0xn3t8kzp25fa50kbha0h0zvmmqjtr6e93j36ty41bfip912ycxlfn9b9y0eu8u2472ppe0hhbph4auuqb9ydsgfd3g6cwhnlmb6r0t0y2woqygbdmirzkotqqhknjfj77gljb2/ovzr/restaurantqueries/compensation",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The credentials provided doesn't have permissions to perform the request\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14883b34-25fd-47d9-9a5d-ef66d76f4a0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "66b20a52-620d-46a8-b160-be6379d265a1",
    "name" : "Create Compensation requests (application/json)",
    "request" : {
      "urlPath" : "/orders/m184jfqkiu09bmuw3qoi9s4d5lo58h2rsqqax9p5wb8x8pqbauuvry5k3oflw2i9e2pnw96sbegtg/o6or/restaurantqueries/compensation",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Invalid credentials\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66b20a52-620d-46a8-b160-be6379d265a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "342e7023-9d60-46f2-b043-0773502ea1d7",
    "name" : "Create Compensation requests (application/json)",
    "request" : {
      "urlPath" : "/orders/zk7b0nrtsy9z62amkzm1splewo8zozuh2xpvgn1eylfobziwmotlm4quqr0uvt9kowjbd19xp4uuyvd0iyg5vx6hszhrnk9v7d8er7fp2m1ba6fn8hj7uuvkt1my2373a2p31v7b09tgtuschwddt2jitooq8ud6i5pbdsdabilyhck48020ah/k4mr/restaurantqueries/compensation",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The value provided in the field ReasonCode is invalid\",\n    \"errorCode\" : \"InvalidReasonCode\"\n  }, {\n    \"description\" : \"Comments field is too long, max 1000\",\n    \"errorCode\" : \"CommentsTooLong\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "342e7023-9d60-46f2-b043-0773502ea1d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.371101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "29473cac-a117-4553-af3f-52ac0e91ce3c",
    "name" : "Create Compensation requests - 201",
    "request" : {
      "urlPath" : "/orders/hdx5ool8jluakbp1u9309jldfntk7216xbe1enq7y4nb488j35ng4ijs3pam2crpczp6kbpdzlj60qm07cvwkvnsq6mkotdtk6b9gosc6z3s07al8p4jp4b8d/kqp9/restaurantqueries/compensation",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "29473cac-a117-4553-af3f-52ac0e91ce3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e9a1bf2c-29e4-4857-816b-9961cb9e6583",
    "name" : "Update late order compensation request with Restaurant response (application/json)",
    "request" : {
      "urlPath" : "/orders/948e1nc2pjav/75f2/consumerqueries/lateordercompensation/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9a1bf2c-29e4-4857-816b-9961cb9e6583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ec28c41-85b4-4908-88aa-ac0ddab1aee4",
    "name" : "Update late order compensation request with Restaurant response (application/json)",
    "request" : {
      "urlPath" : "/orders/2cuci/g2p2/consumerqueries/lateordercompensation/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Query 1234 cannot be responded to at this time\",\n    \"errorCode\" : \"Conflict\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ec28c41-85b4-4908-88aa-ac0ddab1aee4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ca273f2-7cf4-4958-b005-8b16bcc25360",
    "name" : "Update late order compensation request with Restaurant response (application/json)",
    "request" : {
      "urlPath" : "/orders/7txw8gv24i7qsca6i14dvjw1f6078wag4h5r3ec6atis3gyc1b5vzpj8s4jdmx7m2y0ao6qxh7w2l787uh6jb0ssxf6gqzzz7m8v80o4srmknm7axfwjf7465/y92q/consumerqueries/lateordercompensation/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order 1234 was not found\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ca273f2-7cf4-4958-b005-8b16bcc25360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ca0bb4d4-ece4-478a-b8ec-52dc5bf5766f",
    "name" : "Update late order compensation request with Restaurant response (application/json)",
    "request" : {
      "urlPath" : "/orders/sfkeb4fv449c8f97yb515sy89esqvwzl5fdunwcyrnxhexyqv5y/8ut8/consumerqueries/lateordercompensation/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca0bb4d4-ece4-478a-b8ec-52dc5bf5766f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed2d9f54-6047-48b9-b919-6cc0485f59fe",
    "name" : "Update late order compensation request with Restaurant response (application/json)",
    "request" : {
      "urlPath" : "/orders/9q5l52hfz36br31pboe0k0j1fe08fv56l1ruhq5y52sl4ybad59sixrlov9ukhh9xhly5af4niib373j0ka9nxjyvbyqbufqkc21oufddv9219zhs90vs3cxxbgcu61ia8mbo4xjredt2hd59wwao08uclt4dn4/1kia/consumerqueries/lateordercompensation/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"A reason is required when compensation is rejected.\",\n    \"errorCode\" : \"BadRequest\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed2d9f54-6047-48b9-b919-6cc0485f59fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7d347924-3483-419a-81c2-7072404dd537",
    "name" : "Update late order compensation request with Restaurant response - 202",
    "request" : {
      "urlPath" : "/orders/yxxt261ssyaldqytfyslpa2fyuy7awhiwqpiudouzbft4m77bqz0ddyw2vd5chrw8ahws8gkv582ygvp504d6nvgyrfhi02swn80w1ydet2f2zeokci6qjw1nbej1wdn7km0u93by1p8xnjgwqet/8n8b/consumerqueries/lateordercompensation/restaurantresponse",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "7d347924-3483-419a-81c2-7072404dd537",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "16d5c278-7684-4fef-a2b2-3e10d83ff1b7",
    "name" : "Response to Late Order Update Request (application/json)",
    "request" : {
      "urlPath" : "/orders/xl69vubnnav46f1kxd1vyz3oh659rfguh1e9zlxzzmk4ld05ut5vf0fxs6c6t44tzu0eoxv2mnzwvh4a3vt769omd2nxvlxd9ruljfxzua828g1b2lfutt74jt7wqu63plunzyef1ffk25ja551isocvched2ohy/0444/consumerqueries/lateorder/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16d5c278-7684-4fef-a2b2-3e10d83ff1b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.370077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b4d95fc-d386-4a42-8508-500ba07caa73",
    "name" : "Response to Late Order Update Request (application/json)",
    "request" : {
      "urlPath" : "/orders/2xn8okbxknld01yvafxe8vobx9poi5kkvayv97glbna4pprvdf2qnu07gb4i2gceqxxliif6bj0qgjv8y29erq6mqhyho6sg9x5gmoi0v9jafecvwlqy44j7d4wp1zogbv5/emw1/consumerqueries/lateorder/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Query 1234 cannot be responded to at this time\",\n    \"errorCode\" : \"Conflict\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b4d95fc-d386-4a42-8508-500ba07caa73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "04e7822b-5348-4041-8169-eec7be78ac93",
    "name" : "Response to Late Order Update Request (application/json)",
    "request" : {
      "urlPath" : "/orders/2yx3vslsokh6w88scqk662pb2pqyxw02gmhwl7m41smw2cbyweepcuvzvmfipdfsqn227caw830j5bqpuhb7ahmdcobl3zcadlrorn2drcrcjhdyqbiylgzes9b0mxavfkh2m7cb07ci850d4/9g5d/consumerqueries/lateorder/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order 1234 was not found\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04e7822b-5348-4041-8169-eec7be78ac93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b49437be-cdde-4c9e-a7a0-e4f935682f9e",
    "name" : "Response to Late Order Update Request (application/json)",
    "request" : {
      "urlPath" : "/orders/cdjck4a81skfzrq6se84fla5mcbfg99k5jibnmkrc6p1u79efasg15bwp0vi9871gectv9yhxeljf1l460wyq0705kpkaajdwts439pdp3ce1wbrpa0u6ed7/m9l2/consumerqueries/lateorder/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Unauthorized.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b49437be-cdde-4c9e-a7a0-e4f935682f9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "36425680-6b57-4a91-9d52-fb0e8db9c073",
    "name" : "Response to Late Order Update Request (application/json)",
    "request" : {
      "urlPath" : "/orders/jpqyrht70peceaufulpwnf6egwps6vo5g9nedfnz34uxicpefmi7f052ggbtgxnoh863dllk2ag3uipbtoneobvyvui6qx90yii02vb3p9x3w1ui5k4nggbgk3ua1gzv1swei09yhk4k/3978/consumerqueries/lateorder/restaurantresponse",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Justification notes are required for this query. Query Type:type Tenant:tenant QueryId:queryId OrderId:orderId\",\n    \"errorCode\" : \"BadRequest\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36425680-6b57-4a91-9d52-fb0e8db9c073",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "16dc61f3-16aa-434b-b369-6cfdd980a045",
    "name" : "Response to Late Order Update Request - 202",
    "request" : {
      "urlPath" : "/orders/ap0me1o9f64d7h62uajewdidp2dgqptedrus77ufd0l18430ad9n7727e85d90o74h1cs61y9zd7mm1gpylvomzz1o7i87a7/nvqf/consumerqueries/lateorder/restaurantresponse",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "16dc61f3-16aa-434b-b369-6cfdd980a045",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6b8b7411-3c56-4134-91f2-7f5f9700abcb",
    "name" : "Reject order - 409",
    "request" : {
      "urlPath" : "/orders/4zv7/reject",
      "method" : "PUT"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "6b8b7411-3c56-4134-91f2-7f5f9700abcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a5a05926-65d6-4222-8030-6d745248ca80",
    "name" : "Reject order - 404",
    "request" : {
      "urlPath" : "/orders/s24t/reject",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a5a05926-65d6-4222-8030-6d745248ca80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6a600982-1023-4ade-b4eb-58dd8e53fb6e",
    "name" : "Reject order - 200",
    "request" : {
      "urlPath" : "/orders/m8la/reject",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6a600982-1023-4ade-b4eb-58dd8e53fb6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.369105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b4bfdaaf-4ed4-4a46-8c88-5627287c4fa9",
    "name" : "Mark order as ready for collection (application/json)",
    "request" : {
      "urlPath" : "/orders/o66u/readyforcollection",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4bfdaaf-4ed4-4a46-8c88-5627287c4fa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cf844740-2883-40a5-a7ab-b91857778c5f",
    "name" : "Mark order as ready for collection (application/json)",
    "request" : {
      "urlPath" : "/orders/16o5/readyforcollection",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order cannot be marked as ready for collection because it is already marked as complete\"\n  } ],\n  \"faultId\" : \"9c63827b-6fad-46bf-9e9a-9aafec941824\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf844740-2883-40a5-a7ab-b91857778c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b899c66b-50a7-4fd6-8b7d-b64793fd2918",
    "name" : "Mark order as ready for collection (application/json)",
    "request" : {
      "urlPath" : "/orders/7p5r/readyforcollection",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order could not be found\"\n  } ],\n  \"faultId\" : \"15c27f5b-5121-4c1f-bea3-34378dff2a79\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b899c66b-50a7-4fd6-8b7d-b64793fd2918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59efb4d0-a7be-435c-b8f0-50d8284a6086",
    "name" : "Mark order as ready for collection (application/json)",
    "request" : {
      "urlPath" : "/orders/n40r/readyforcollection",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order cannot be marked as ready for collection because it is not a collection order\"\n  } ],\n  \"faultId\" : \"aa5d282c-498e-47dd-acca-d4bb811a8f9d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59efb4d0-a7be-435c-b8f0-50d8284a6086",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1833535a-9f99-4f64-ab9d-baae1e65946d",
    "name" : "Mark order as ready for collection - 204",
    "request" : {
      "urlPath" : "/orders/hzog/readyforcollection",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1833535a-9f99-4f64-ab9d-baae1e65946d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "d2dc15e6-24b8-408b-a0a6-7efcf38bcc2a",
    "name" : "Ignore order - 409",
    "request" : {
      "urlPath" : "/orders/t15x/ignore",
      "method" : "PUT"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "d2dc15e6-24b8-408b-a0a6-7efcf38bcc2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "7e54831a-4a2e-4cad-af33-58a2c5631f42",
    "name" : "Ignore order - 404",
    "request" : {
      "urlPath" : "/orders/t2dn/ignore",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7e54831a-4a2e-4cad-af33-58a2c5631f42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "babaff5e-3401-4a74-95dd-40664dc52ce8",
    "name" : "Ignore order - 200",
    "request" : {
      "urlPath" : "/orders/3qde/ignore",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "babaff5e-3401-4a74-95dd-40664dc52ce8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a9782767-f2ec-4ced-9c68-56e7d8bedb5d",
    "name" : "Update order ETA - 404",
    "request" : {
      "urlPath" : "/orders/s183/duedate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a9782767-f2ec-4ced-9c68-56e7d8bedb5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "70994471-0b7b-45c7-be78-76d4a9b2f8e3",
    "name" : "Update order ETA - 400",
    "request" : {
      "urlPath" : "/orders/ec2i/duedate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "70994471-0b7b-45c7-be78-76d4a9b2f8e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.368072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "409dcb3a-da4d-4200-beb2-64227599c24d",
    "name" : "Update order ETA - 200",
    "request" : {
      "urlPath" : "/orders/2o89/duedate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "409dcb3a-da4d-4200-beb2-64227599c24d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b18735e8-7b86-4c72-80db-c8b127948854",
    "name" : "Update order with driver on its way details - 200",
    "request" : {
      "urlPath" : "/orders/0rei/deliverystate/onitsway",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b18735e8-7b86-4c72-80db-c8b127948854",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "7fc8eab2-3023-4adb-9a53-f80060c21e19",
    "name" : "Update order with driver unassigned details (application/json)",
    "request" : {
      "urlPath" : "/orders/10eb/deliverystate/driverunassigned",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"partnerId\" : [ \"Partner id was not found or could not be parsed\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fc8eab2-3023-4adb-9a53-f80060c21e19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : true,
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2ea8ad48-86e4-49b7-b207-1f1433625def",
    "name" : "Update order with driver unassigned details - 200",
    "request" : {
      "urlPath" : "/orders/bya3/deliverystate/driverunassigned",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2ea8ad48-86e4-49b7-b207-1f1433625def",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "274d12e0-cdd7-4c45-8805-d89c9bf7afdb",
    "name" : "Update the driver's current location - 200",
    "request" : {
      "urlPath" : "/orders/j108/deliverystate/driverlocation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "274d12e0-cdd7-4c45-8805-d89c9bf7afdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6c9ba988-8f50-490b-b664-1be6749ca886",
    "name" : "Update order with driver assigned details - 200",
    "request" : {
      "urlPath" : "/orders/wal5/deliverystate/driverassigned",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6c9ba988-8f50-490b-b664-1be6749ca886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "470f0fdc-c100-4a47-b4e2-8f942d986fff",
    "name" : "Update order with delivered details - 200",
    "request" : {
      "urlPath" : "/orders/0c10/deliverystate/delivered",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "470f0fdc-c100-4a47-b4e2-8f942d986fff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2464b994-97b1-494d-a2e2-ceb9653cc422",
    "name" : "Update the driver's estimated time to arrive at the Restaurant - 200",
    "request" : {
      "urlPath" : "/orders/kp25/deliverystate/atrestauranteta",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2464b994-97b1-494d-a2e2-ceb9653cc422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "41d995bd-63a6-4612-bd75-6377ceca5e2a",
    "name" : "Update order with driver at restaurant details - 200",
    "request" : {
      "urlPath" : "/orders/nz5z/deliverystate/atrestaurant",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "41d995bd-63a6-4612-bd75-6377ceca5e2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "bb0fda87-e77c-4511-82d1-9ead01c060a4",
    "name" : "Update order with driver at delivery address details - 200",
    "request" : {
      "urlPath" : "/orders/a596/deliverystate/atdeliveryaddress",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bb0fda87-e77c-4511-82d1-9ead01c060a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "d75dbf10-850c-44e8-b96c-1e01143c48ff",
    "name" : "Complete order (application/json)",
    "request" : {
      "urlPath" : "/orders/n1zq/complete",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d75dbf10-850c-44e8-b96c-1e01143c48ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.367148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "157d6573-a196-4c63-a793-ff9a656ca2e3",
    "name" : "Complete order (application/json)",
    "request" : {
      "urlPath" : "/orders/f0nc/complete",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order cannot be marked as complete because it is already marked as cancelled\"\n  } ],\n  \"faultId\" : \"9c63827b-6fad-46bf-9e9a-9aafec941824\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "157d6573-a196-4c63-a793-ff9a656ca2e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2ceeee5f-4560-4263-9bd0-f1461f5c68c1",
    "name" : "Complete order (application/json)",
    "request" : {
      "urlPath" : "/orders/1lw2/complete",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Order could not be found\"\n  } ],\n  \"faultId\" : \"b6a1d658-dda4-41b6-a9a5-dbfb7ba7b2aa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ceeee5f-4560-4263-9bd0-f1461f5c68c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f3294618-e3eb-4a73-b747-d974cd9f5454",
    "name" : "Complete order - 204",
    "request" : {
      "urlPath" : "/orders/0qa3/complete",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f3294618-e3eb-4a73-b747-d974cd9f5454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "dec28f64-4df2-40ff-80ac-de52f4bbe86c",
    "name" : "Cancel order - 409",
    "request" : {
      "urlPath" : "/orders/oe45/cancel",
      "method" : "PUT"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "dec28f64-4df2-40ff-80ac-de52f4bbe86c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2456f983-0757-4bee-b0bd-373bbfea3592",
    "name" : "Cancel order - 404",
    "request" : {
      "urlPath" : "/orders/l1lc/cancel",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "2456f983-0757-4bee-b0bd-373bbfea3592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6ddff63d-9243-4718-bced-2ec4cf96888c",
    "name" : "Cancel order - 200",
    "request" : {
      "urlPath" : "/orders/6v7p/cancel",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6ddff63d-9243-4718-bced-2ec4cf96888c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "912d45c3-e445-43bf-80fe-5ee083c8e769",
    "name" : "Accept order - 409",
    "request" : {
      "urlPath" : "/orders/s9ur/accept",
      "method" : "PUT"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "912d45c3-e445-43bf-80fe-5ee083c8e769",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b8bfa0a8-c2af-4176-bcef-49a53813b060",
    "name" : "Accept order - 404",
    "request" : {
      "urlPath" : "/orders/1zut/accept",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b8bfa0a8-c2af-4176-bcef-49a53813b060",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "3e67fd44-d8fc-4a94-9330-c9e5b1924ffc",
    "name" : "Accept order - 200",
    "request" : {
      "urlPath" : "/orders/48ys/accept",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3e67fd44-d8fc-4a94-9330-c9e5b1924ffc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2d29a7b8-cd4d-46a1-a269-00b9fa469b99",
    "name" : "Update current driver locations (bulk upload) - 200",
    "request" : {
      "urlPath" : "/orders/deliverystate/driverlocation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2d29a7b8-cd4d-46a1-a269-00b9fa469b99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "388a707b-111d-4d03-abdd-739ab66d9553",
    "name" : "Create order (application/json)",
    "request" : {
      "urlPath" : "/orders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"OrderId\" : \"4bj9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "388a707b-111d-4d03-abdd-739ab66d9553",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "OrderId" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12300ffa-20e8-4e4b-9a5f-be292aeedafd",
    "name" : "Create order - 400",
    "request" : {
      "urlPath" : "/orders",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "12300ffa-20e8-4e4b-9a5f-be292aeedafd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.366011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "cd3bd470-8a96-47b7-a54f-4cd6d7218dc3",
    "name" : "Create order (application/json)",
    "request" : {
      "urlPath" : "/orders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"OrderId\" : \"xqw6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd3bd470-8a96-47b7-a54f-4cd6d7218dc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "OrderId" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d9cef9e7-d929-4e98-804c-cc1c4f3e3102",
    "name" : "Order time updated - 200",
    "request" : {
      "urlPath" : "/order-time-updated",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d9cef9e7-d929-4e98-804c-cc1c4f3e3102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6ce5f09b-b2d2-4171-8f2e-4bc4de266d23",
    "name" : "Order requires delivery acceptance - 201",
    "request" : {
      "urlPath" : "/order-requires-delivery-acceptance",
      "method" : "PUT"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "6ce5f09b-b2d2-4171-8f2e-4bc4de266d23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "dce99707-2820-439e-9649-9055aa94a222",
    "name" : "Order rejected - 200",
    "request" : {
      "urlPath" : "/order-rejected",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dce99707-2820-439e-9649-9055aa94a222",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "1e8e1f18-160a-46ca-85e9-9fafc3190456",
    "name" : "Order ready for preparation (sync) - 200",
    "request" : {
      "urlPath" : "/order-ready-for-preparation-sync",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1e8e1f18-160a-46ca-85e9-9fafc3190456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "84124d96-1e0f-462d-a1fc-0fa947e9e17e",
    "name" : "Order ready for preparation (async) - 400",
    "request" : {
      "urlPath" : "/order-ready-for-preparation-async",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "84124d96-1e0f-462d-a1fc-0fa947e9e17e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ae52f93d-6305-477d-bbb6-f26aebcee285",
    "name" : "Order ready for preparation (async) - 202",
    "request" : {
      "urlPath" : "/order-ready-for-preparation-async",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "ae52f93d-6305-477d-bbb6-f26aebcee285",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "3356d730-2fa9-436f-bb2c-8d954289543f",
    "name" : "Order ready for pickup - 200",
    "request" : {
      "urlPath" : "/order-is-ready-for-pickup",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3356d730-2fa9-436f-bb2c-8d954289543f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "fdf1669c-6e19-4f6a-a304-722458b2b46d",
    "name" : "Order Eligible For Restaurant Compensation - 200",
    "request" : {
      "urlPath" : "/order-eligible-for-restaurant-compensation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fdf1669c-6e19-4f6a-a304-722458b2b46d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "eee21d3b-3ccc-4a2f-80ba-5dab1d68ca28",
    "name" : "Order cancelled - 200",
    "request" : {
      "urlPath" : "/order-cancelled",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "eee21d3b-3ccc-4a2f-80ba-5dab1d68ca28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "8289e3df-1490-4b00-b86f-7c13f5e33f12",
    "name" : "Order accepted - 200",
    "request" : {
      "urlPath" : "/order-accepted",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8289e3df-1490-4b00-b86f-7c13f5e33f12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "97a592c8-4036-4241-8f58-ab17cd4cc45b",
    "name" : "Menu ingestion complete - 200",
    "request" : {
      "urlPath" : "/menu-ingestion-complete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "97a592c8-4036-4241-8f58-ab17cd4cc45b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "74865f3e-287e-40f6-bf70-4c15c704716a",
    "name" : "late order query, restaurant response required - 200",
    "request" : {
      "urlPath" : "/late-order-query",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "74865f3e-287e-40f6-bf70-4c15c704716a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "5bf806a0-d71d-4fba-835f-248249686907",
    "name" : "late order compensation query, restaurant response required - 200",
    "request" : {
      "urlPath" : "/late-order-compensation-query",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5bf806a0-d71d-4fba-835f-248249686907",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ede8c431-5839-4499-b241-0d0b703cdb64",
    "name" : "Driver on their way to delivery address - 200",
    "request" : {
      "urlPath" : "/driver-on-their-way-to-delivery-address",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ede8c431-5839-4499-b241-0d0b703cdb64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "92a40528-2f8b-455c-9be6-75eda6d24fbf",
    "name" : "Driver Location - 200",
    "request" : {
      "urlPath" : "/driver-location",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "92a40528-2f8b-455c-9be6-75eda6d24fbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "bb5e8c34-deaf-488a-b8a3-29fb20259c26",
    "name" : "Driver has delivered order - 200",
    "request" : {
      "urlPath" : "/driver-has-delivered-order",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bb5e8c34-deaf-488a-b8a3-29fb20259c26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "cf162d7e-93ad-4e8a-97fd-f59f86ed0d7e",
    "name" : "Driver at restaurant - 200",
    "request" : {
      "urlPath" : "/driver-at-restaurant",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cf162d7e-93ad-4e8a-97fd-f59f86ed0d7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6304bcf2-e6e6-40df-a4a8-4d6250f5c4ff",
    "name" : "Driver at delivery address - 200",
    "request" : {
      "urlPath" : "/driver-at-delivery-address",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6304bcf2-e6e6-40df-a4a8-4d6250f5c4ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ba6bd5da-b870-453f-a89e-a3ec6f4fb01a",
    "name" : "Driver Assigned to Delivery - 200",
    "request" : {
      "urlPath" : "/driver-assigned-to-delivery",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ba6bd5da-b870-453f-a89e-a3ec6f4fb01a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e7063dd2-5057-4ef5-8e3d-7b7e095e4457",
    "name" : "Add restaurants to an existing delivery pool - 409",
    "request" : {
      "urlPath" : "/delivery/pools/5qiq/restaurants",
      "method" : "PUT"
    },
    "response" : {
      "status" : 409
    },
    "uuid" : "e7063dd2-5057-4ef5-8e3d-7b7e095e4457",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "72e499fe-9aad-403e-98b4-aac70f5ce344",
    "name" : "Add restaurants to an existing delivery pool - 404",
    "request" : {
      "urlPath" : "/delivery/pools/0wq2/restaurants",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "72e499fe-9aad-403e-98b4-aac70f5ce344",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "9769ac7b-c956-47b5-b7b5-113955ace63c",
    "name" : "Add restaurants to an existing delivery pool - 400",
    "request" : {
      "urlPath" : "/delivery/pools/0999/restaurants",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9769ac7b-c956-47b5-b7b5-113955ace63c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "1476fccc-29b4-4c53-97c6-699fed708f84",
    "name" : "Add restaurants to an existing delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools/41p8/restaurants",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"restaurants\" : [ 123, 456 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1476fccc-29b4-4c53-97c6-699fed708f84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "restaurants" : {
                "description" : "A list of Just Eat restaurant ids served by the pool.",
                "example" : [ 10202, 10203 ],
                "items" : {
                  "format" : "int32",
                  "type" : "number"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5d3d49bf-932f-4de2-95de-a754ec59e4c9",
    "name" : "Remove restaurants from a delivery pool - 404",
    "request" : {
      "urlPath" : "/delivery/pools/txp8/restaurants",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "5d3d49bf-932f-4de2-95de-a754ec59e4c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "afb3be28-ffb9-4c51-bc8d-5bd12a936ca9",
    "name" : "Remove restaurants from a delivery pool - 400",
    "request" : {
      "urlPath" : "/delivery/pools/67v2/restaurants",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "afb3be28-ffb9-4c51-bc8d-5bd12a936ca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.365053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "77bfebb1-6034-469b-941e-b1a59e773d77",
    "name" : "Remove restaurants from a delivery pool - 200",
    "request" : {
      "urlPath" : "/delivery/pools/62l0/restaurants",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "77bfebb1-6034-469b-941e-b1a59e773d77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "1bc06ce4-57d1-47ab-8c22-89b1f99874e9",
    "name" : "Set the delivery pools daily start and end times - 404",
    "request" : {
      "urlPath" : "/delivery/pools/0aq4/hours",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "1bc06ce4-57d1-47ab-8c22-89b1f99874e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "569eddaf-4ce7-4498-95f8-c734c321b542",
    "name" : "Set the delivery pools daily start and end times - 200",
    "request" : {
      "urlPath" : "/delivery/pools/lo6i/hours",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "569eddaf-4ce7-4498-95f8-c734c321b542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "706af35d-c9c0-4ccc-b0ee-e6551f6cc7d6",
    "name" : "Set availability for pickup - 404",
    "request" : {
      "urlPath" : "/delivery/pools/a289/availability/relative",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "706af35d-c9c0-4ccc-b0ee-e6551f6cc7d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "60e7b224-aa60-410d-80e0-1a8b5851d2c3",
    "name" : "Set availability for pickup - 202",
    "request" : {
      "urlPath" : "/delivery/pools/9j28/availability/relative",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "60e7b224-aa60-410d-80e0-1a8b5851d2c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "48de6734-d5a1-4b42-8c9a-c844f4fa9f8c",
    "name" : "Get availability for pickup - 404",
    "request" : {
      "urlPath" : "/delivery/pools/o0tu/availability/relative",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "48de6734-d5a1-4b42-8c9a-c844f4fa9f8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "3f5624c1-9196-4465-8e7a-87a44eeb4303",
    "name" : "Get availability for pickup (application/json) - request",
    "request" : {
      "urlPath" : "/delivery/pools/iw2h/availability/relative",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bestGuess\" : \"00:35:00\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f5624c1-9196-4465-8e7a-87a44eeb4303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "bestGuess" : {
                "description" : "Your best estimation (hh:mm:ss)",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "845e0e6b-bc30-42a0-a66b-43a7987db6aa",
    "name" : "Replace an existing delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools/3vr4",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "Internal Server Error",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "845e0e6b-bc30-42a0-a66b-43a7987db6aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "007be075-3837-4e8c-99fd-19037b7b0043",
    "name" : "Replace an existing delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools/1y3l",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "Restaurant(s) are already assigned to pools : `{RestaurantId:55474, PoolId:cccebb96452349b799b71a7adc51df66}`",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "007be075-3837-4e8c-99fd-19037b7b0043",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "c6dce5f4-6c23-49d3-be5a-1b122d4c6c63",
    "name" : "Replace an existing delivery pool - 404",
    "request" : {
      "urlPath" : "/delivery/pools/38mz",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c6dce5f4-6c23-49d3-be5a-1b122d4c6c63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "5c1b092f-0b55-475d-b1b7-c5ad9a105174",
    "name" : "Replace an existing delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools/tyf9",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"name\" : [ \"'Name' should not be empty\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c1b092f-0b55-475d-b1b7-c5ad9a105174",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "8d8b5005-1022-4fed-a5d8-6c921efe268e",
    "name" : "Replace an existing delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools/akyv",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"name\" : \"Toronto - West\",\n  \"restaurants\" : [ 123, 456 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d8b5005-1022-4fed-a5d8-6c921efe268e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.364008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "name" : {
                "description" : "The name of the pool, used by operations teams, in reports, etc.",
                "type" : "string"
              },
              "restaurants" : {
                "description" : "A list of Just Eat restaurant ids served by the delivery pool.",
                "items" : {
                  "format" : "int32",
                  "type" : "number"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4cc29005-bc71-49f9-b1cb-689e55870ef9",
    "name" : "Modify a delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools/35o6",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "Internal Server Error",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4cc29005-bc71-49f9-b1cb-689e55870ef9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "c4f7d596-b999-443d-a84c-6d7b8cd7dd95",
    "name" : "Modify a delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools/822m",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "Restaurant(s) are already assigned to pools : `{RestaurantId:55474, PoolId:cccebb96452349b799b71a7adc51df66}`",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c4f7d596-b999-443d-a84c-6d7b8cd7dd95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "47bffb25-1667-4bbe-8699-d0de9ba0778a",
    "name" : "Modify a delivery pool - 404",
    "request" : {
      "urlPath" : "/delivery/pools/72ra",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "47bffb25-1667-4bbe-8699-d0de9ba0778a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a43019e3-a673-49ef-be96-ab344f091c82",
    "name" : "Modify a delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools/0s62",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"name\" : [ \"'Name' should not be empty\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a43019e3-a673-49ef-be96-ab344f091c82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "bf2917ab-d35a-4a8c-9ddc-97304552c974",
    "name" : "Modify a delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools/x9t2",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"name\" : \"Toronto - North\",\n  \"restaurants\" : [ 123, 456 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf2917ab-d35a-4a8c-9ddc-97304552c974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "name" : {
                "description" : "The name of the pool, used by operations teams, in reports, etc.",
                "type" : "string"
              },
              "restaurants" : {
                "description" : "A list of Just Eat restaurant ids served by the delivery pool.",
                "items" : {
                  "format" : "int32",
                  "type" : "number"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "85ef8a7e-cab8-4613-9b97-c74c546656a5",
    "name" : "Get an individual delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools/yues",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "Internal Server Error",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "85ef8a7e-cab8-4613-9b97-c74c546656a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "fd8fa279-581c-4f56-a0f5-3f62995ee358",
    "name" : "Get an individual delivery pool - 404",
    "request" : {
      "urlPath" : "/delivery/pools/m5tz",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "fd8fa279-581c-4f56-a0f5-3f62995ee358",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "67aa256e-1705-40a0-9419-be303c2f052b",
    "name" : "Get an individual delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools/7tb8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Toronto - West\",\n  \"restaurants\" : [ 123, 456 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67aa256e-1705-40a0-9419-be303c2f052b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "name" : {
                "description" : "The name of the pool, used by operations teams, in reports, etc.",
                "type" : "string"
              },
              "restaurants" : {
                "description" : "A list of Just Eat restaurant ids served by the delivery pool.",
                "items" : {
                  "format" : "int32",
                  "type" : "number"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95b31696-0c4e-451a-8662-1ea178b9fd14",
    "name" : "Delete a delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools/z13k",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "Internal Server Error",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "95b31696-0c4e-451a-8662-1ea178b9fd14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.363083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "0d0c64e3-c6ba-43b3-9193-b363c7bbe966",
    "name" : "Delete a delivery pool - 404",
    "request" : {
      "urlPath" : "/delivery/pools/rex3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0d0c64e3-c6ba-43b3-9193-b363c7bbe966",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "41e5ae89-f7e4-499c-9c96-67fd36c038c1",
    "name" : "Delete a delivery pool - 200",
    "request" : {
      "urlPath" : "/delivery/pools/llx1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "41e5ae89-f7e4-499c-9c96-67fd36c038c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "9f38a732-38b8-47a4-86f0-1f207833f3ec",
    "name" : "Create a new delivery pool (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "Internal Server Error",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "9f38a732-38b8-47a4-86f0-1f207833f3ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "fe3a4d11-8c59-437e-90ff-96cecf44e41a",
    "name" : "Create a new delivery pool (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"name\" : [ \"'Name' should not be empty\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe3a4d11-8c59-437e-90ff-96cecf44e41a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "3ad84596-f0c3-4b21-9cd2-978ada5ef81d",
    "name" : "Create a new delivery pool - 201",
    "request" : {
      "urlPath" : "/delivery/pools",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "3ad84596-f0c3-4b21-9cd2-978ada5ef81d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ca5acc09-6204-47cb-947b-b943e269cb76",
    "name" : "Get your delivery pools (text/plain) - response",
    "request" : {
      "urlPath" : "/delivery/pools",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "Internal Server Error",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ca5acc09-6204-47cb-947b-b943e269cb76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ad9d7d56-80f3-496d-998b-5b38bda4d49a",
    "name" : "Get your delivery pools (application/json) - response",
    "request" : {
      "urlPath" : "/delivery/pools",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"b9c6673b8e5948b98cfbd14a982de2c2\" : {\n    \"name\" : \"Toronto - East\",\n    \"restaurants\" : [ 789 ]\n  },\n  \"d5f72466a6dd49a08166d5a044c5b9e4\" : {\n    \"name\" : \"Toronto - West\",\n    \"restaurants\" : [ 123, 456 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad9d7d56-80f3-496d-998b-5b38bda4d49a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "delivery-pool-id" : {
                "properties" : {
                  "name" : {
                    "description" : "The name of the pool, used by operations teams, in reports, etc.",
                    "type" : "string"
                  },
                  "restaurants" : {
                    "description" : "A list of Just Eat restaurant ids served by the delivery pool.",
                    "items" : {
                      "format" : "int32",
                      "type" : "number"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5d3ad5df-18c6-4ad6-81b9-63109211a85c",
    "name" : "Get delivery estimate",
    "request" : {
      "urlPath" : "/delivery/estimate",
      "method" : "GET",
      "queryParameters" : {
        "restaurantReference" : {
          "equalTo" : "nqex2rtgem86grmcvfnbvj7r2i"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DurationInMinutes\" : \"5d1ep97btsrhcakemvgx8i07n08jiff2z34zf8x062xs9lluobk2o5n2tr0malea2bq7njuq2isx91j31kxu9u4vwyernho22t7i1zbt9aiyxzaq6cjgqx\",\n  \"RestaurantReference\" : \"e622tvsqkeuovg32d2te4zk8rkmril4c04vjk43exw9aizc0nkn9aqhufxu3fqxhj2vmtyjwvy9dpraqrfmdok559ue892ur\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d3ad5df-18c6-4ad6-81b9-63109211a85c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "DurationInMinutes" : {
                "type" : "string"
              },
              "RestaurantReference" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9866effe-00b9-46eb-805d-adaecac929e8",
    "name" : "Get restaurant delivery fees - 404",
    "request" : {
      "urlPath" : "/delivery-fees/sp47qu4rcb6opl6609xt64t9rofrgtgs2ouswui13c0mazrbi73ksqdez78ylwbxtd4",
      "method" : "GET",
      "queryParameters" : {
        "restaurantIds" : {
          "equalTo" : "496g7tkfin7sc6uq9wbbo8pbne15emg19lnbkgachdvmkcqbo6i7n6rvk2ocl19bbf5j6kh8un5bsk98r943u750avq2q3i8rk8gbrq02xchzytipetapfdstb097zrw0gz6t2cfkn5x8b04ejskke50g8e4y6"
        },
        "deliveryTime" : {
          "equalTo" : "2022-05-29T16%3A48%3A55.362Z"
        }
      }
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9866effe-00b9-46eb-805d-adaecac929e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "62c70323-cc9a-40ba-89ef-129d8b991e04",
    "name" : "Get restaurant delivery fees - 400",
    "request" : {
      "urlPath" : "/delivery-fees/l1cakxxjne9g9ig8dlmcw",
      "method" : "GET",
      "queryParameters" : {
        "restaurantIds" : {
          "equalTo" : "v3tiktntm4w0xfxyf3372yzt064wdh9gqeuusijonl45fsl5mkh5a0bw27h349h71ub8huopjccjk43v8beh9byrg4qjo3x5qeodztmq04ag796fs41l3nkdmouuk4tko"
        },
        "deliveryTime" : {
          "equalTo" : "2023-05-21T09%3A13%3A40.362Z"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "62c70323-cc9a-40ba-89ef-129d8b991e04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "93071b66-180e-45dc-9d40-a56dace96e77",
    "name" : "Get restaurant delivery fees (application/json) - threeTier",
    "request" : {
      "urlPath" : "/delivery-fees/qis2l7tbihgc0xfn6sduspjtrnwyfd8f0a5pxf6jikh732nnns81jx3rk7yp9nyx9beht1z1p17gdepd8zvf5mfuz7193apw82iav9ahc5tndx9xqq8graub7n64uewmpqs4l3i9e7eozfwk4hi04ntwxokjtbn2ekqvtf0r44v68",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "restaurantIds" : {
          "equalTo" : "rdknutlmlo000i2zjd5ve63rgy93ohldp"
        },
        "deliveryTime" : {
          "equalTo" : "2023-09-10T17%3A45%3A53.362Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"restaurants\" : [ {\n    \"bands\" : [ {\n      \"fee\" : 250,\n      \"minimumAmount\" : 0\n    }, {\n      \"fee\" : 100,\n      \"minimumAmount\" : 10\n    }, {\n      \"fee\" : 0,\n      \"minimumAmount\" : 2000\n    } ],\n    \"minimumOrderValue\" : 0,\n    \"restaurantId\" : \"1234\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93071b66-180e-45dc-9d40-a56dace96e77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "nullable" : true,
            "properties" : {
              "restaurants" : {
                "description" : "Collection of restaurants for which delivery fees were found.",
                "items" : {
                  "$ref" : "#/components/schemas/RestaurantDeliveryFees"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6fe7b27-fac6-4490-b7d1-010f156507a0",
    "name" : "Get restaurant delivery fees (application/json) - flatRateWithFreeTier",
    "request" : {
      "urlPath" : "/delivery-fees/q3ozq43pg2bfkf3oi57oyyebsdt9m9tewusiz0zpycvtpqiw79de3fdgvlyzuvk0p453hwt1fnqy8z7p4ijc7eu6wrddejgkzlpbcnrvft131vtxdtmed6u11n1hh1fy09cdrd2rvwrz8o6pfk5wqw91nl22c62l71dw3sy7dzla82chs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "restaurantIds" : {
          "equalTo" : "iya34vddt3cbchd35m0q3nrh2zfxghztrbi51btlqfn8eomnr7yiizwtk8elzljpfyv47dwxxunbfeiwr0rdyf7z110j0e4toesnhs6f1yo7la2o2je9bzixt6ypjv0ldy6jdt3pncz4eh2ty63c0y61wvbjz4943sozkrbod53y"
        },
        "deliveryTime" : {
          "equalTo" : "2023-10-04T07%3A36%3A13.362Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"restaurants\" : [ {\n    \"bands\" : [ {\n      \"fee\" : 250,\n      \"minimumAmount\" : 1000\n    }, {\n      \"fee\" : 0,\n      \"minimumAmount\" : 2000\n    } ],\n    \"minimumOrderValue\" : 1000,\n    \"restaurantId\" : \"1234\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6fe7b27-fac6-4490-b7d1-010f156507a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "nullable" : true,
            "properties" : {
              "restaurants" : {
                "description" : "Collection of restaurants for which delivery fees were found.",
                "items" : {
                  "$ref" : "#/components/schemas/RestaurantDeliveryFees"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc9592f1-1f56-4024-acd3-f3de5fb46b7b",
    "name" : "Get restaurant delivery fees (application/json) - flatRate",
    "request" : {
      "urlPath" : "/delivery-fees/e3zyi2cd3pnh961hnm578pal93qeww0w88e2rf9xtonlydgpjcdtxhyjcjpwkm8yn7ouf0pey6z5fjm6eeyotvl7fpnhzmdzrxim2nm34so3g63l40t2ht16y53g0t6wkti35ecp0agei5qdlcll",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "restaurantIds" : {
          "equalTo" : "yc3dw9fxhlb12nai8"
        },
        "deliveryTime" : {
          "equalTo" : "2022-09-29T06%3A56%3A57.362Z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"restaurants\" : [ {\n    \"bands\" : [ {\n      \"fee\" : 250,\n      \"minimumAmount\" : 1000\n    } ],\n    \"minimumOrderValue\" : 1000,\n    \"restaurantId\" : \"1234\"\n  }, {\n    \"bands\" : [ {\n      \"fee\" : 100,\n      \"minimumAmount\" : 0\n    } ],\n    \"minimumOrderValue\" : 0,\n    \"restaurantId\" : \"5678\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc9592f1-1f56-4024-acd3-f3de5fb46b7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "nullable" : true,
            "properties" : {
              "restaurants" : {
                "description" : "Collection of restaurants for which delivery fees were found.",
                "items" : {
                  "$ref" : "#/components/schemas/RestaurantDeliveryFees"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59fa77fd-47c4-4c7c-b38f-862bd82d573b",
    "name" : "Delivery Attempt Failed - 200",
    "request" : {
      "urlPath" : "/delivery-failed",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "59fa77fd-47c4-4c7c-b38f-862bd82d573b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "9d505711-084a-40c3-969e-5ffe52b2e5ff",
    "name" : "Subscribe to a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/mb2krz06prllgk1fir3dcapplbrda6akk25n9zxqybfprubpl95s4w7ys/me/communication-preferences/marketing/subscribedChannels/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d505711-084a-40c3-969e-5ffe52b2e5ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.362011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bb611ee9-5b9c-45b1-a665-807142c5831e",
    "name" : "Subscribe to a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/ynst67v7pufldstkg43mn9kn4me4qlii7ebjyys17o44w94hxcw4s9mschwopoha5z/me/communication-preferences/marketing/subscribedChannels/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant could not be found.\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb611ee9-5b9c-45b1-a665-807142c5831e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "215ffa6f-a51b-4696-a3bb-16a1e90052f8",
    "name" : "Subscribe to a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/s2fp5somwavcbcg9ams5kkazejs30vs6lxe1q0h0ybf6xup13aizos3sz69go5w5rjqejsgcftf6c5uos73wb6149/me/communication-preferences/marketing/subscribedChannels/email",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are forbidden from performing this request.\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "215ffa6f-a51b-4696-a3bb-16a1e90052f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2cdb6d6b-f4c8-42f5-9090-0a005252b815",
    "name" : "Subscribe to a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/zofkazqut39q25akt3kiagikdt5g1tg3pvxxhqn8ovic637ds39319r717lce86xmob5/me/communication-preferences/marketing/subscribedChannels/sms",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are unauthorized to perform this request.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cdb6d6b-f4c8-42f5-9090-0a005252b815",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed86843d-8e7d-4b2d-8469-5abf63f5a773",
    "name" : "Subscribe to a specific communication preference channel - 204",
    "request" : {
      "urlPath" : "/consumers/uu497nsheoogyjrzvtnkdkh894w5fhy8yvdinvyk4e1trhk7gzyv9rwn9l3y0gq3486avdv9twvqh/me/communication-preferences/marketing/subscribedChannels/sms",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ed86843d-8e7d-4b2d-8469-5abf63f5a773",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "dcc6793d-327c-4205-bb13-3159aa549c57",
    "name" : "Remove subscription of a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/ot4h9en029iz5mptnxei0thtg/me/communication-preferences/marketing/subscribedChannels/l2xego3zvg2ses",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcc6793d-327c-4205-bb13-3159aa549c57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21fa487c-70db-406a-b944-869d05a1fafb",
    "name" : "Remove subscription of a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/p0socowssnbdkucwgflnjojaikeo1e0ypedeww2a6sdbs4phzx7tfkxay2ybwg7qkt9lxmtt4jm474pg7rbzyxiajw9e3bcla2p2nia5qxzybjf6owzjcev4i7agyfd5roziywobjlwhqpz95col5uviqa8ayhquycw4nw/me/communication-preferences/marketing/subscribedChannels/xvo4ha90wxnwelazfcdbvbq4ji7rzrcrv0f6i8q6a870ew1rwl3znw7kqdt1oth19uw8as31sp7h9fpgwukkc1il918hyxe5beb1oftybeat0srl1ruig200eq7maivcx0sh48csn0rxeyffhbo59ss1ickqwcvmbgrcnzrhg2oy7i9q",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant could not be found.\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21fa487c-70db-406a-b944-869d05a1fafb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c03409d8-de73-4df9-839c-ebfb6fc040af",
    "name" : "Remove subscription of a specific communication preference channel (application/json)",
    "request" : {
      "urlPath" : "/consumers/bh2fei7hgps70jkc0rag0dsfxtb1wzuoemzpz9ue95it7j1u6zs7z94pegn5ogrcdyabhb3fpdtw4ef21vkx9eciyljnr/me/communication-preferences/marketing/subscribedChannels/56x7huykinfx3j6s66h8hbk2s2rhbdqdtao3pom",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are unauthorized to perform this request.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c03409d8-de73-4df9-839c-ebfb6fc040af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "07ba4457-1318-494c-8f71-b1bc90859915",
    "name" : "Remove subscription of a specific communication preference channel - 204",
    "request" : {
      "urlPath" : "/consumers/xl2jvkhonju0dnoto47ntf5gahf3r2sl6bw9r3qv01sccrr0jj0w2ebjpra0kdqf0p8pfr3ayc0fwqwo08uca4vf3kqu9tmb9zcvrlk15470r8lm7b9p03lu8z5gu2tnjr3r0hc12bbsudj8c7lklehf4sf7q7zt4ke46rkwbcu7sgas7szo/me/communication-preferences/marketing/subscribedChannels/5ahsinaxy2grko3d1znptf9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "07ba4457-1318-494c-8f71-b1bc90859915",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.36134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "90dfea73-9ab7-4110-b9e1-2e38878a6f8b",
    "name" : "Set only the channel subscriptions for a given consumer's communication preference type (application/json)",
    "request" : {
      "urlPath" : "/consumers/4tr51i09sqwo7uqxeneyzn12d6faoo5lb1baec0cz68e3js2y7mv8q7isbq57fqjtqp9w3h7ewzbeaiqq6m096jr03etfrirpo7yoz530sgcgjdy484q544wik52frpo13n56dojfunfw3cu/me/communication-preferences/marketing",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90dfea73-9ab7-4110-b9e1-2e38878a6f8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "578509fd-1e41-4761-bdc3-c9ebd0ec7be8",
    "name" : "Set only the channel subscriptions for a given consumer's communication preference type (application/json)",
    "request" : {
      "urlPath" : "/consumers/15jvtdipcenfvklapbyrieydfi3ojvlchfzfeqm8fxi5g2z0xd12xzv5awa80ztl11b2iyd1zie3ug9gm65ajgxc76nasl3eghx5aufzj59y9rgbphu0brwbf3aebpjsr26evh80f21gd6bhdgc3p7x91xm4d4auqrh7b8ta41sfqdy23yyn1/me/communication-preferences/marketing",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant could not be found.\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "578509fd-1e41-4761-bdc3-c9ebd0ec7be8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fab0573f-6ae0-4d6d-b5c1-090fb68ab674",
    "name" : "Set only the channel subscriptions for a given consumer's communication preference type (application/json)",
    "request" : {
      "urlPath" : "/consumers/h3kanr0wg8u6c50yhx5ma66053bm979alvt7j73ud1ozu7aez5xnk8zwtmqnu2yvuvea1xr85kcwvdym0bw9e3gai54xfw3hw8n8gucwbct5arwjk3tobzn8qblpdnza7hd0hqe9zpz/me/communication-preferences/marketing",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are unauthorized to perform this request.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fab0573f-6ae0-4d6d-b5c1-090fb68ab674",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77711b1b-25b4-4abb-9384-10898e045014",
    "name" : "Set only the channel subscriptions for a given consumer's communication preference type - 204",
    "request" : {
      "urlPath" : "/consumers/budzkgq40dgqiwty4vntkvwte3gry7qt907u4f2hj454hfhd9eovfwv4hx4ajaa1rd/me/communication-preferences/marketing",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "77711b1b-25b4-4abb-9384-10898e045014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.361038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "53cdcfd7-ed09-4993-aade-ffa726c69323",
    "name" : "Get channel subscriptions for a given consumer's communication preference type",
    "request" : {
      "urlPath" : "/consumers/5lzxen62m4kg2n287vbyn10sqgvbyjr27tnsqk18lv3xl3isc50xy60q74/me/communication-preferences/marketing",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53cdcfd7-ed09-4993-aade-ffa726c69323",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "622ab0a6-a6f1-494c-81e6-4052bb92b6eb",
    "name" : "Get channel subscriptions for a given consumer's communication preference type",
    "request" : {
      "urlPath" : "/consumers/mbm5q4usjhi/me/communication-preferences/marketing",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant could not be found.\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "622ab0a6-a6f1-494c-81e6-4052bb92b6eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c98c3041-3671-49c7-a341-961b48ceb35d",
    "name" : "Get channel subscriptions for a given consumer's communication preference type",
    "request" : {
      "urlPath" : "/consumers/gkv2s2rcjgysmoc2458391cam0i0fyr1xyzcv43h7jw5984ebqdihzuru3qtkk6jwn7o5e5ans36d5usobd8gik6jvuihqxh350eclzovvf5r/me/communication-preferences/marketing",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are forbidden from performing this request.\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c98c3041-3671-49c7-a341-961b48ceb35d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7712a02f-7352-4890-925f-17e20820ce28",
    "name" : "Get channel subscriptions for a given consumer's communication preference type",
    "request" : {
      "urlPath" : "/consumers/uqr1ji7546298hy80eti73glciuoztlt72hvz8owbmvlausa2zwusgce3obqg67kgpeem2043fkrgwr1rlosfqnae4prot2727ekha4pmrddju6t44igveet9qeobv1qy8mvzuvei3a0esrbb4c64nxuglh7o3/me/communication-preferences/marketing",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are unauthorized to perform this request.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7712a02f-7352-4890-925f-17e20820ce28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c94fab78-d09e-42b2-bac1-90da2b1eb9b1",
    "name" : "Get channel subscriptions for a given consumer's communication preference type",
    "request" : {
      "urlPath" : "/consumers/yyt7k251hfjpbz06ima36904p2qjjgqiklowhrc39n5ub1/me/communication-preferences/marketing",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isDefault\" : false,\n  \"subscribedChannels\" : [ \"email\", \"sms\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c94fab78-d09e-42b2-bac1-90da2b1eb9b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "isDefault" : {
                "description" : "Are these channel subscriptions the default or have they been set elsewhere. This is a read-only derived field.",
                "type" : "boolean"
              },
              "subscribedChannels" : {
                "description" : "The list of channels that are subscribed",
                "items" : {
                  "$ref" : "#/components/schemas/CommunicationChannels"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a461ffe-1130-4549-bb41-24e222cf3819",
    "name" : "Get communication preferences",
    "request" : {
      "urlPath" : "/consumers/4u1ttvzptmnp8tl2uwamfw1yncij4ken83abvg0cm1zm15qxkoo78ip0y1xytvachwv943jdw5554sadgzujwscyohkxqofip15ceishrf9d0fgop0i2l3n/me/communication-preferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a461ffe-1130-4549-bb41-24e222cf3819",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ac2063d-5d3d-4114-8225-fb7d1c71a13e",
    "name" : "Get communication preferences",
    "request" : {
      "urlPath" : "/consumers/bvmmmeexe9jmkbhl1svj3zb6iwgm6nu9g9ul03pso56p4n86jvi1z04paszmb6w8oid66izf392qtykw7knjth9l964i8qkrtr0h86eqceqzz5p3dm5sta90zi/me/communication-preferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant could not be found.\",\n    \"errorCode\" : \"NotFound\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ac2063d-5d3d-4114-8225-fb7d1c71a13e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "42025135-e01d-4540-9ab7-c5f2efa3b71a",
    "name" : "Get communication preferences",
    "request" : {
      "urlPath" : "/consumers/cu6toscgebvv25o66ewnjhdtzsxrszdmsd6fenk4t67t5ozrq6phxd4nejukctafp4s6aop8rmxyv1g1mg0ac89e6w2ttnsv0xiaw7rnqdpc8tvnhy2eandnjifu4yidkllkgjf3dgjl04d6fx7ulddd0jn3bxgueccu240xmzv8gt5myxi44jpp/me/communication-preferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are forbidden from performing this request.\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42025135-e01d-4540-9ab7-c5f2efa3b71a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "00450b4b-36e1-41c8-9fcf-5b3c0fd620b0",
    "name" : "Get communication preferences",
    "request" : {
      "urlPath" : "/consumers/umb1sgbfbfa2bhqbooh9y8xao6qwxsnp9nscxse5ibh3wxmooidxijl812o5psi1oraatmxsmrukccswx56z0hcforcwbmof5qw45/me/communication-preferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"You are unauthorized to perform this request.\",\n    \"errorCode\" : \"Unauthorized\"\n  } ],\n  \"faultId\" : \"b39ae4c1-142f-4308-838d-1f01815e1cf1\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00450b4b-36e1-41c8-9fcf-5b3c0fd620b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "31ffdbdf-c3ef-4c9a-b7eb-a74bd9c69ab2",
    "name" : "Get communication preferences",
    "request" : {
      "urlPath" : "/consumers/n87grpd2przmjocz2xbdbiv6emtihvaeig983b2qb1kkiy1sxmjh0lgr1s86xk0ev1/me/communication-preferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"marketing\" : {\n    \"isDefault\" : false,\n    \"subscribedChannels\" : [ \"email\", \"sms\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31ffdbdf-c3ef-4c9a-b7eb-a74bd9c69ab2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "marketing" : {
                "$ref" : "#/components/schemas/ChannelSubscriptionsWithDerivedField"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5e87482a-c0d0-412d-b7e1-4ef5d1254d46",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/consumers/yglno16u93lgzb67ct0s8ivn8e9eyhi50ttqj7otuzrtjxequ4iqwb2a7dzepnx1agdkdslabpuly8ag5hhkw9iychc7hny7suxs4cwexkyco2hq62qy4se2wf80f9wyynodevm8byz5m173dzx0soafa6im9h8evy48axa8bfl",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e87482a-c0d0-412d-b7e1-4ef5d1254d46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7960a99f-d09a-472f-a73f-b88a2c485263",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/consumers/ta0eanb7i9x6ckus4r8t6ebpvkzozcavgk9nc1tngqj9vc6e63xrsp9hloclnuoe6j372",
      "method" : "POST"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The specified email already exists\",\n    \"errorCode\" : \"Conflict\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7960a99f-d09a-472f-a73f-b88a2c485263",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17cba2c3-00e0-4ddc-bb5d-725724ce1e25",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/consumers/fzj0bflfb",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant not found\",\n    \"errorCode\" : \"TenantNotFound\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17cba2c3-00e0-4ddc-bb5d-725724ce1e25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c87379d9-a7d9-4500-81be-1586f53ffb42",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/consumers/dfclsusub8nhcehbzloiw7fcthinyn2gin1r6qh8utbwycjvbu5m28efkg3oeqo1hq5ea9s8sfyx0yzfekpygzdu91a3t8uhykrseovskk9a1pdr2v2zs7qavk2b0s1mmx8o3vo2lmznnsg2y7rsb9u3z609yzzp3y7f91xrocxmfzy",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Not authorized to do this.\",\n    \"errorCode\" : \"Forbidden\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c87379d9-a7d9-4500-81be-1586f53ffb42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.360044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1a54eee8-f31d-41ff-9f2a-e0ed5a31ea3a",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/consumers/z9enrmwt0in788bsjbsd4dap8qcr92aykjj8nuh693cknk26k4di3qsx9yz6aeael5t2wtl27fpfsdr5wkuzkha76",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Email is required.\",\n    \"errorCode\" : \"BadRequest\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a54eee8-f31d-41ff-9f2a-e0ed5a31ea3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3c023fbb-7cba-49f3-8bae-4d26ef6f64f2",
    "name" : "Create consumer",
    "request" : {
      "urlPath" : "/consumers/yq7amc0ips6hjtn7cdepjhcc914z8wv00pog9epjnqlqi23l8xzxqsvqgx33y7rjw7o4o373fxie6o8ex27yvdk9jnw4axzna0ny4gea7",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"token\" : \"SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=\",\n  \"type\" : \"otac\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c023fbb-7cba-49f3-8bae-4d26ef6f64f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : {
              "token" : "SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=",
              "type" : "otac"
            },
            "properties" : {
              "token" : {
                "description" : "The One Time Access Code (OTAC)",
                "type" : "string"
              },
              "type" : {
                "description" : "The type of token. At the moment, this will only ever be a One Time Access Code (OTAC)\n",
                "enum" : [ "otac" ],
                "type" : "string"
              }
            },
            "required" : [ "type", "token" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24aba2bb-a867-4ae4-a65d-b476bd599ad0",
    "name" : "Get consumers details (application/json)",
    "request" : {
      "urlPath" : "/consumers/q7t9psvlgw786t4i6qtmpz0zyulq881fqhuoz18o5c6zksfjcaxjb78kdijm2kntn8htht7fj9t9o7qukh94op06kyvn1kfd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "emailAddress" : {
          "equalTo" : "5rd7sj7y4j35dw9y1sx4rn30bh542q9tnnlnsdcvnkv48bi3g4imk8ixg4i1jdow0afdvufsqy63old2zt61ypywq64ibnpfn6vpqwczg59hk2czbk3o6i26tn7dc9nec214n5olmdxiz3edzpfva8z7iuv1j5yx01"
        },
        "accountType" : {
          "equalTo" : "registered"
        },
        "count" : {
          "equalTo" : "hgxqgh3o6udrvqs9lmvupqlh54hluiwr6czjlf7uinhdy"
        }
      }
    },
    "response" : {
      "status" : 501,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Non-Count queries have not been implemented\",\n    \"errorCode\" : \"NotImplemented\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24aba2bb-a867-4ae4-a65d-b476bd599ad0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 5xx error response",
            "properties" : {
              "fault" : {
                "description" : "An object representing the nature of the failure.",
                "properties" : {
                  "errors" : {
                    "description" : "The list of errors.",
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ad4525b-e7aa-466c-8dc0-3480eadf611c",
    "name" : "Get consumers details (application/json)",
    "request" : {
      "urlPath" : "/consumers/mq7ejk4r80tqnoiamglzty3ft2dr786stj9uuoones49wngfry6w0gqn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "emailAddress" : {
          "equalTo" : "6m1istyz9377gd6jdwlnd3w3hgv0ecckuficem1dk9zbohlqsqvrtjxmkzfy28jacz3n0q1v1ugs56mv6pv9ptmno49r8zznfamh1q0hs74eun2papvxwrygfqh7138j2sdgl5scd8dtvgcle2tn8zu7fb3ege1vn072ln1c7t2551tmgncndgi0u"
        },
        "accountType" : {
          "equalTo" : "registered"
        },
        "count" : {
          "equalTo" : "9zzlk7vblpl3hwvvt8cornn1rj6xte74h4czmpmzh7mtdzf85mpmui707wlq0dkcaf6noarjf3nagz7es3yhxnomjg8bb6sefvztg083ayy8p4jx5njurm59vlt9iu4fhpt0ll7fbe524d2tlisb8r2binrzel7v4zmg06gzqhztp6suw"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Internal Server Error\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ad4525b-e7aa-466c-8dc0-3480eadf611c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 500 error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "If returned, the only value returned will be Internal Server Error\"",
                          "enum" : [ "Internal Server Error" ],
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "99530996-f101-46b3-a6ad-5e5ad7e2f8fb",
    "name" : "Get consumers details (application/json)",
    "request" : {
      "urlPath" : "/consumers/5vkp7hqxrzmd4nqa4gty80cm4a31qmcdb6s78yq7awu393q9fz7cxqmqhxyyixr85pujhujfxe1fzuordjd1ww73cn516taur0ku2guuiq5c6tp80y1ol3w9igks9s5tsrsu85a4newe",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "emailAddress" : {
          "equalTo" : "50k5w4fixnv06r1hr2c13wpq7bpgm3kqfi9nn7ug3r0rmd4lv7x1bfun2s7d8q4pr46"
        },
        "accountType" : {
          "equalTo" : "registered"
        },
        "count" : {
          "equalTo" : "dqxlc6bvijg4e4k2d569c1jaegvlhqo9myzfldpzbctlbqfot1xtulr726muv4le9606orz6z6rzozo2p4lx4y81etrrr"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"Tenant not found\",\n    \"errorCode\" : \"TenantNotFound\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99530996-f101-46b3-a6ad-5e5ad7e2f8fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.35947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5e1e3f0d-7aa9-4fd4-b41e-792b61bdf31b",
    "name" : "Get consumers details (application/json)",
    "request" : {
      "urlPath" : "/consumers/y28ukv9nq79uyz2jjkb271tdagkywzvf5j9d8hzyt5i1bt35ricti63z7qd7kevbb89hemlx4d",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "emailAddress" : {
          "equalTo" : "ypeijnkhkc1r04vjc7ea9utr153fv7m89cilalsn6vrnpm"
        },
        "accountType" : {
          "equalTo" : "registered"
        },
        "count" : {
          "equalTo" : "5q6tiqllhyacqi76me2d0p18plbj0hdjhhjh2gbai9obin0qb9ch73qalve0ahmy5izinbom1qabotrmnpwc47agc9s1p73b"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"description\" : \"The Email is missing or invalid.\",\n    \"errorCode\" : \"InvalidEmail\"\n  } ],\n  \"faultId\" : \"25bbe062-c53d-4fbc-9d6c-3df6127b94fd\",\n  \"traceId\" : \"H3TKh4QSJUSwVBCBqEtkKw==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e1e3f0d-7aa9-4fd4-b41e-792b61bdf31b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A HTTP 4xx error response",
            "properties" : {
              "fault" : {
                "properties" : {
                  "errors" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue",
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault",
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated",
                    "type" : "string"
                  }
                },
                "required" : [ "faultId" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3eb8c587-f36d-4adf-bc68-0b0be14097ee",
    "name" : "Get consumers details (text/plain)",
    "request" : {
      "urlPath" : "/consumers/11p0rsa4nfccex6z1np9nyqyd3qq796ath0ctjbnkcn9804i8s1zsy6ctcnkdik70zt86gn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "emailAddress" : {
          "equalTo" : "2ht5l94n8od2d4zi97sj6j1qg6t6awpby879zujrsgqu1b7pq9h6sxy0lc98c32mu685o4ieckb87szgpoy4x7fm0jrudf1msuriwefdfrj3h7ezs7v4mbtmeru8pmeda9nv8tb37hinv7ufledol"
        },
        "accountType" : {
          "equalTo" : "registered"
        },
        "count" : {
          "equalTo" : "8erwrkhq377xofetdelaunseuu91830d8bb0ihnmwvrkigjrkyonfxfs42famuh5b7njzx9i5zo4ah0ewvahcb3jc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "1",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "3eb8c587-f36d-4adf-bc68-0b0be14097ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "type" : "integer"
          }
        }
      }
    }
  }, {
    "id" : "bb8a8771-2bfe-4acb-87e4-3e0c21e6e8c1",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/alnoyi75m1sdixkozwtkmhzr60j1taz38q30cinyaqp9osmx6n4h6eihbyrg2413gqqzt4b5hbxdoq9s89jgzvinpfoarjdg5ynq7xljalcq3nfo54vws4rdyfbk1vc3otnpf3a7aj4txn6f6hc70xp88dnsgpgzo5egswutrue0/uxn0/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Couldn't complete request\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb8a8771-2bfe-4acb-87e4-3e0c21e6e8c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.359041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0b0e6afc-8a2e-4913-835c-97d765f99eca",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/fqmibaez9b5phf0d32wa/i0bx/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Internal Server Error\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b0e6afc-8a2e-4913-835c-97d765f99eca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.3589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2da3b189-e539-421e-822f-a469e65b46db",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/xm8ws89l4f0b3gbs16ic6y4t5o91k18avsu6faisfz87dah2f58227vhln28ve9oucpdg0g7oa2ifj91dxhrm41ztgqrowppbslxgcj5guaynr/oy35/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Couldn't complete request\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2da3b189-e539-421e-822f-a469e65b46db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.358767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0a25f187-26a7-46df-b02d-0f34012a470a",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/t229lxeedtf7f9bddv0kgvu4x5p4lioxtpsjrtxcpvnxc2t38vof70elv9mg61dqd7b8h8olq6ho1oqkq1bvsbof5sa65rguepvwd461ye9urbcmb0w49sw7rhnxi4ibgzbjlf4peqb0lrzh6ll9cj0ks1bjtgm3qs0gwvpo5ey2n4uvov/3o63/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The fulfilment time bands are in an invalid state\",\n      \"errorCode\" : \"FULFILMENT_TIME_BANDS_INVALID\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a25f187-26a7-46df-b02d-0f34012a470a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.358622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 409 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "FULFILMENT_TIME_BANDS_INVALID", "FULFILMENT_TIME_BANDS_NOT_FOUND" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b7700e7e-2734-47ec-9e83-21cb04524162",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/3bfitdhibqmw0xiyajfm4r1jtrahc8973fkrjdnh2p6w0p2igjbv3t6mb55ounayxp9lkmxxomefoqwxfr5saq10mj7543phtpxiijqahfyqbsdhhs0e15pldzmvo6qva33ev56fcv2sl1zfq8okpb3sas4m58amxnpg3kjeeiu/0995/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The tenant is not supported\",\n      \"errorCode\" : \"TENANT_NOT_SUPPORTED\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7700e7e-2734-47ec-9e83-21cb04524162",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.358428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 404 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "TENANT_NOT_SUPPORTED", "CHECKOUT_NOT_FOUND" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c63995cf-c46d-4e2e-b373-e975d164c7d0",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/e9sv82cv5e3m4y9uuvws3wqqxkpo6syp5b2733n77aev13y7n6j3q6u480heaitxy0f/0m0g/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The tenant is invalid\",\n      \"errorCode\" : \"TENANT_INVALID\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c63995cf-c46d-4e2e-b373-e975d164c7d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.358258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 400 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "TENANT_INVALID", "CHECKOUT_ID_INVALID" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c25e01ad-6ceb-4877-9f9d-816e6cef629e",
    "name" : "Get Available Fulfilment Times",
    "request" : {
      "urlPath" : "/checkout/fx5glxdefk/437n/fulfilment/availabletimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"asapAvailable\" : true,\n  \"times\" : [ {\n    \"from\" : \"2020-01-01T00:30:00.000Z\",\n    \"to\" : \"2020-01-01T00:45:00.000Z\"\n  }, {\n    \"from\" : \"2020-01-01T00:45:00.000Z\",\n    \"to\" : \"2020-01-01T01:00:00.000Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c25e01ad-6ceb-4877-9f9d-816e6cef629e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.358077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "asapAvailable" : {
                "description" : "If the option to fulfil an order as soon as possible is available.",
                "nullable" : false,
                "type" : "boolean"
              },
              "times" : {
                "description" : "Collection of time bands for when an order can be fulfilled.",
                "items" : {
                  "description" : "A time band for when an order can be fulfilled.",
                  "nullable" : false,
                  "properties" : {
                    "from" : {
                      "description" : "Start time represented in ISO 8601 UTC (Zulu Time).",
                      "format" : "date-time",
                      "nullable" : false,
                      "type" : "string"
                    },
                    "to" : {
                      "description" : "End time represented in ISO 8601 UTC (Zulu Time).\n\nThis time can be equal to the from time.\n",
                      "format" : "date-time",
                      "nullable" : false,
                      "type" : "string"
                    }
                  },
                  "required" : [ "from", "to" ],
                  "type" : "object"
                },
                "maxItems" : 576,
                "minItems" : 0,
                "nullable" : false,
                "type" : "array"
              }
            },
            "required" : [ "times", "asapAvailable" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1697d30e-513a-4932-aaa4-b1ace054e11e",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/gf99zcqqik7q8ilaotrnse1r2yf/2z30",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Couldn't complete request\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1697d30e-513a-4932-aaa4-b1ace054e11e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.357849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "568ad77f-3f34-4910-9e6e-bd1a1e66cea7",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/n90i8lzb9moj7p0q59uylu3vymz3wu2amwohawe2sh97xqml36lkt58qzd00c6y82yj5lp5up0b3c1p6abp57cjjwybusqk52wlc3v9p6ohplvpgzmvhv4ra8xk9j3i1e/8ex9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Internal Server Error\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "568ad77f-3f34-4910-9e6e-bd1a1e66cea7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.35771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f5921f71-556e-4248-b93d-9e04fd63cab5",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/90j44lgqhbnhhzs84ti6eotolstctjobgpwgsj3rq0j8aiznxyzxa6ozmqhfojd95g7j1vr1uvc8or31fc2buxblqbzrv0jg55e0vgpopccv9gz52cpwcfc67m26225qnrzebkg0pskf4o/m0yr",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Couldn't complete request\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5921f71-556e-4248-b93d-9e04fd63cab5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.357571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f3a164cf-3821-4002-9bcd-f244f7f93eb4",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/ho7jp1ae/481x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The checkout is in an invalid state\",\n      \"errorCode\" : \"CHECKOUT_INVALID\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3a164cf-3821-4002-9bcd-f244f7f93eb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.357427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 409 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults .",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "CHECKOUT_INVALID" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67b62249-30b0-4218-aa1c-4230c15f5e5b",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/l0uexe6gl2oz4mvvl4ooqshfrlvuu41thicmbyfgwrws7o292amj4a5jsc4prsjanl08f3vdzez9qu4x79l18sahm3ao18iyxrhkbr5ad1td5e1yxrnw8rfe6w4xhyrlgllblueo3t94cjmtbntfmygxbkovci5p7byvzz9exulmr6qemcy2t6xk6/410h",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The tenant is not supported\",\n      \"errorCode\" : \"TENANT_NOT_SUPPORTED\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67b62249-30b0-4218-aa1c-4230c15f5e5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.357257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 404 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "TENANT_NOT_SUPPORTED", "CHECKOUT_NOT_FOUND" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b509d30b-1a30-4995-8b35-5339999848fd",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/0nxxie6jxst6zvjn20kljlju1tvzeda34670yzj7uul0n3ebkkjij7ansy9g6qvukoxoethy3c96bai6upxo0qzc8eug3kj62l3i90rbw6f9zjkc5zsw2cf9uz5is2vbfi5gju1t409gs3fxtbqld1lmirwfesnhfhbqhd0lk6l/04qv",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Access to the resource is forbidden\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b509d30b-1a30-4995-8b35-5339999848fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.357086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe308b1f-36fe-457b-85ed-1da551ad36db",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/vqa5qrod0ahb8115lg019bsz9yqnz1vop5tf3pjq1apgnlyeqn0ob321ndymirg1lscjwbw1o6u07vu92nbuwhkm9zpscls7bwvsulcefi5utqleiic6nhif0g0ief9hnv2y3caww44x0j8i66eax3ejd7t/8d93",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Authentication required to access this resource\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe308b1f-36fe-457b-85ed-1da551ad36db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1596b4ea-0cd8-49bf-aab5-bb0ffd1505e4",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/t7fy2si5dj4rpz07kacia65eo65vwuambciia32226cabjxqwabhtwkstxodztljls6g9i1jsq6h5fmq601khc0z6qae5smjckeast3qd6ew38vqrrdh7jq4nqxc5pxckssq9b1dvbk667xi27126vlaz1bsvmnckni1ye/7o93",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The tenant is invalid\",\n      \"errorCode\" : \"TENANT_INVALID\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1596b4ea-0cd8-49bf-aab5-bb0ffd1505e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 400 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "TENANT_INVALID", "CHECKOUT_ID_INVALID", "INVALID_REQUEST", "FIRST_NAME_INVALID", "LAST_NAME_INVALID", "PHONE_NUMBER_INVALID", "DATE_OF_BIRTH_INVALID", "FULFILMENT_TIME_INVALID", "ADDRESS_LINES_INVALID", "LOCALITY_INVALID", "ADMINISTRATIVE_AREA_INVALID", "POSTAL_CODE_INVALID", "GEOLOCATION_INVALID", "DELIVERY_NOTE_INVALID" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c25e96e8-6cea-466c-ac98-387cb6f53b3d",
    "name" : "Update Checkout",
    "request" : {
      "urlPath" : "/checkout/4w3nfmv2egh1r7yze3ep287/x9c2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isFulfillable\" : true,\n  \"issues\" : [ {\n    \"code\" : \"RESTAURANT_NOT_TAKING_ORDERS\"\n  }, {\n    \"additionalSpendRequired\" : 100,\n    \"code\" : \"MINIMUM_ORDER_VALUE_NOT_MET\",\n    \"currency\" : \"GBP\",\n    \"minimumOrderValue\" : 1000\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c25e96e8-6cea-466c-ac98-387cb6f53b3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "isFulfillable" : {
                "description" : "Whether the proposed order can be placed.",
                "nullable" : false,
                "type" : "boolean"
              },
              "issues" : {
                "description" : "One or more issues associated the proposed order, that may impact whether it can be placed.",
                "items" : {
                  "$ref" : "#/components/schemas/CheckoutIssue"
                },
                "maxItems" : 18,
                "minItems" : 0,
                "nullable" : false,
                "type" : "array"
              }
            },
            "required" : [ "isFulfillable", "issues" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa4cb0f9-ed9a-4e22-a718-3ac9cdf58556",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/5lvp1ho7jtcwb8sw14kik5mdhwl4see3tz9qle5s0jh1x4k1hpoktiungrq9axtoqwpyih6xoxyqrvfq0ncr7s8aauokoxyys1nulbpz60f5zx7yujx15qqy52gf3yxu8hk22uf/j6z9",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Couldn't complete request\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa4cb0f9-ed9a-4e22-a718-3ac9cdf58556",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1cf0164f-d16a-4ba3-8c05-e9a8971a9f14",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/zu898uij4p7efgmlm0wof9lvur1yg0ftquypvgnc34v7535atpc131znz0mwmyv159tbqvslwg1n4g9j63f71yfdoob3yj8s9k4xrpgxm8967mupazwlwedx51b0gi0py2tlo7spq9rue1eqwkh0c4cdpqw3x92pjzf4spfjo2nl9cj1ab0otj0zhhwgb7nq1d9/3v0s",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Internal Server Error\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cf0164f-d16a-4ba3-8c05-e9a8971a9f14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c883e593-79a0-4877-adcc-d0d628824b27",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/8j1ivxhe9lzamri8tcxys31tma88e9rulsn1j8s7v7yv5hpymw0c08m5bce035ezj4gmbss7j68j1d5u6yk108rpr9eda9hk9lnxmkpg9ia6luktgugiiie9r2oyn1tvw2hdnu4b748345l4sh5a8oco2mrk6ww2335f4sj1kjq33mgpnq2a0gqwkhnrzb0rmtd6zn/y93w",
      "method" : "GET"
    },
    "response" : {
      "status" : 429,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Couldn't complete request\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c883e593-79a0-4877-adcc-d0d628824b27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dc85ab13-9d63-4ea9-b75c-35d4a32fbc79",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/aan75w3o60e2m06hkmd9kky5qoumhnqpj2h1pnsjdytwvouoglsh4ykg7yxgt6x5406o31t0k4xuq7x6uodp4djsbx4r1zxfod7pz2vr9xn29ib8l4nldln8ldxe3let8pg81245y25mepl07o0khy68mftiee1hcf5p9xcxv28cn1m9m1iomci/3n21",
      "method" : "GET"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The checkout is in an invalid state\",\n      \"errorCode\" : \"CHECKOUT_INVALID\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc85ab13-9d63-4ea9-b75c-35d4a32fbc79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.356012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 409 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults .",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "CHECKOUT_INVALID" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "22d4eb7e-837f-4bc6-ac23-0b006bd659ba",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/1c61s9zbgyx60gr5tcmqqeluz2as2w4wgpc2a3l6yuc9yuxmcxj1lqr17rotr8vu9gr5913f2yt50of5ynx07yagoq6i7gxx6iv5ah1logxkv5mw4hdri6w785dsqfmw95ti0b7ao10hfme99a1srgba9pwmf36staklh854uu05vmvtwwhx51ks2v7sj811/4215",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The tenant is not supported\",\n      \"errorCode\" : \"TENANT_NOT_SUPPORTED\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22d4eb7e-837f-4bc6-ac23-0b006bd659ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.355819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 404 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "TENANT_NOT_SUPPORTED", "CHECKOUT_NOT_FOUND" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71ef1d92-745e-48db-9558-00697932fbb1",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/lpxuba9irqoi8f95xafmciln5nhgnov8ktyn3981fzr6bwpvonoswdv0hggzbry2kr8up5x3hd/j1ew",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Access to the resource is forbidden\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71ef1d92-745e-48db-9558-00697932fbb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.355619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7be84725-eb5e-447e-8821-ddab3834d4aa",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/kf6130mkkxo45wyyl4qt34gmjcjj5ogqvk4psmcacgcv2hp7arshfztrooxwb7weehamsb1ilykt2jnfg2o4r3qb6et5ioms94gp5g00q85itkxfk6ecflss/6j8o",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"Authentication required to access this resource\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7be84725-eb5e-447e-8821-ddab3834d4aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.355471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "A default HTTP error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "319a5c08-9339-4664-9425-b24f36f96811",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/jn2fblc36b2roknk6tcdmfsrokft8k4os9l847rfpqubweyyydm0x7huiz7ariaohvagqajlo6mau9sg92ixnuqsw0rh1ggsyrwe9emdp8c62jso1ra6ohjlpegm7modzmjwhkzpz7g9f6sag46tw202ty1xd51tp8os5itn7lrwig/j35j",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"fault\" : {\n    \"errors\" : [ {\n      \"description\" : \"The tenant is invalid\",\n      \"errorCode\" : \"TENANT_INVALID\"\n    } ],\n    \"faultId\" : \"72d7036d-990a-4f84-9efa-ef5f40f6044b\",\n    \"traceId\" : \"0HLOCKDKQPKIU\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "319a5c08-9339-4664-9425-b24f36f96811",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.355265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "An HTTP 400 error response",
            "properties" : {
              "fault" : {
                "additionalProperties" : false,
                "description" : "A list of values that helps identify this response back to logs, so we can easily find faults.",
                "nullable" : true,
                "properties" : {
                  "errors" : {
                    "description" : "List of errors that may assist you in resolving the issues.",
                    "items" : {
                      "additionalProperties" : false,
                      "description" : "Details about the error that may assist you in resolving the issue.",
                      "nullable" : false,
                      "properties" : {
                        "description" : {
                          "description" : "Specific details about the error that may assist you in resolving the issue.",
                          "nullable" : false,
                          "type" : "string"
                        },
                        "errorCode" : {
                          "description" : "A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.",
                          "enum" : [ "TENANT_INVALID", "CHECKOUT_ID_INVALID" ],
                          "nullable" : false,
                          "type" : "string"
                        }
                      },
                      "required" : [ "description", "errorCode" ],
                      "type" : "object"
                    },
                    "nullable" : false,
                    "type" : "array"
                  },
                  "faultId" : {
                    "description" : "A value that helps identify this response back to logs, so we can easily find this specific fault.",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "traceId" : {
                    "description" : "A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "faultId", "traceId", "errors" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e789de4d-e363-46d2-bf5f-bb316c019846",
    "name" : "Get Checkout",
    "request" : {
      "urlPath" : "/checkout/wmvyuafvtgnkbq/g3n7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"customer\" : {\n    \"firstName\" : \"Joe\",\n    \"lastName\" : \"Bloggs\",\n    \"phoneNumber\" : \"+447111111111\"\n  },\n  \"fulfilment\" : {\n    \"location\" : {\n      \"address\" : {\n        \"administrativeArea\" : \"Somerset\",\n        \"lines\" : [ \"1 Bristol Road\" ],\n        \"locality\" : \"Bristol\",\n        \"postalCode\" : \"BS1 1AA\"\n      },\n      \"geolocation\" : {\n        \"latitude\" : 1,\n        \"longitude\" : -1\n      }\n    },\n    \"time\" : {\n      \"asap\" : false,\n      \"scheduled\" : {\n        \"from\" : \"2020-01-01T00:30:00.000Z\",\n        \"to\" : \"2020-01-01T00:30:00.000Z\"\n      }\n    }\n  },\n  \"isFulfillable\" : true,\n  \"issues\" : [ {\n    \"code\" : \"RESTAURANT_NOT_TAKING_ORDERS\"\n  }, {\n    \"additionalSpendRequired\" : 100,\n    \"code\" : \"MINIMUM_ORDER_VALUE_NOT_MET\",\n    \"currency\" : \"GBP\",\n    \"minimumOrderValue\" : 1000\n  } ],\n  \"restaurant\" : {\n    \"availabilityId\" : \"5678\",\n    \"id\" : \"1234\"\n  },\n  \"serviceType\" : \"delivery\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e789de4d-e363-46d2-bf5f-bb316c019846",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.355012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Properties apply to all supported country codes, except where specified.",
            "properties" : {
              "customer" : {
                "description" : "Details of the customer making the purchase.\n\nDetails of the customer will need to be submitted to the service. No default values will be set.\n",
                "nullable" : false,
                "properties" : {
                  "firstName" : {
                    "description" : "Customer's first name. \n\nAlso known as Given Name(s).\n",
                    "maxLength" : 100,
                    "minLength" : 1,
                    "nullable" : true,
                    "type" : "string"
                  },
                  "lastName" : {
                    "description" : "Customer's last name (Optional).\n\nAlso known as Family Name.\n",
                    "maxLength" : 100,
                    "minLength" : 0,
                    "nullable" : true,
                    "type" : "string"
                  },
                  "phoneNumber" : {
                    "description" : "Customer's phone number.\n\nA phone number can be represented in:\n  - E.164 format e.g. +447777111111 or;\n  - Local format of submitted tenant e.g. 07777111111.\n\nE.164 formatted phone numbers are preferred.\n",
                    "maxLength" : 16,
                    "minLength" : 3,
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "fulfilment" : {
                "description" : "How and when the items will be received by the customer.",
                "nullable" : false,
                "properties" : {
                  "location" : {
                    "description" : "The destination the customer wants to receive the order.\n\nThis only applies to purchases with a delivery service type.\n",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "description" : "The postal address where the customer wants to receive the order.",
                        "nullable" : true,
                        "properties" : {
                          "administrativeArea" : {
                            "description" : "Geographical region of this address. \n\nAlso known as County or State.\n\nRequired in Australia (AU) only for an order to be fulfilled.\n",
                            "maxLength" : 50,
                            "minLength" : 1,
                            "nullable" : true,
                            "type" : "string"
                          },
                          "lines" : {
                            "description" : "One or more lines representing the street address.",
                            "items" : {
                              "description" : "Represents part of a street address.",
                              "maxLength" : 100,
                              "minLength" : 1,
                              "nullable" : false,
                              "type" : "string"
                            },
                            "maxItems" : 4,
                            "minItems" : 0,
                            "nullable" : false,
                            "type" : "array"
                          },
                          "locality" : {
                            "description" : "The locality of this address.\n\nAlso known as Town or City.\n",
                            "maxLength" : 50,
                            "minLength" : 1,
                            "nullable" : true,
                            "type" : "string"
                          },
                          "postalCode" : {
                            "description" : "Postal code of this address.",
                            "maxLength" : 50,
                            "minLength" : 1,
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "geolocation" : {
                        "description" : "The coordinates of a geographical location where the customer wants to receive the order.\n\nRequired in Australia (AU) and New Zealand (NZ) only for an order to be fulfilled.\n",
                        "nullable" : true,
                        "properties" : {
                          "latitude" : {
                            "description" : "The latitude of the geographical location.",
                            "format" : "decimal",
                            "nullable" : false,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "The longitude of the geographical location.",
                            "format" : "decimal",
                            "nullable" : false,
                            "type" : "number"
                          }
                        },
                        "required" : [ "latitude", "longitude" ],
                        "type" : "object"
                      }
                    },
                    "type" : "object"
                  },
                  "time" : {
                    "description" : "Time the customer wants to receive the order i.e. when order is fulfilled.",
                    "nullable" : true,
                    "properties" : {
                      "asap" : {
                        "description" : "If the order should be fulfilled as soon as possible (ASAP).\n\nASAP may not be fulfillable.\n\nDefault is false.\n",
                        "nullable" : false,
                        "type" : "boolean"
                      },
                      "scheduled" : {
                        "description" : "Scheduled time the customer wants the order to be fulfilled.\n\nIf ASAP is selected and fulfillable, this will be set to the next available fulfilment time.\n",
                        "nullable" : true,
                        "properties" : {
                          "from" : {
                            "description" : "Earliest time the customer wants the order to be fulfilled represented in ISO 8601 UTC (Zulu Time).",
                            "nullable" : false,
                            "type" : "string"
                          },
                          "to" : {
                            "description" : "Latest time the customer wants the order to be fulfilled represented in ISO 8601 UTC (Zulu Time). \n\nThis time must be greater than or equal to the from time.\n",
                            "nullable" : false,
                            "type" : "string"
                          }
                        },
                        "required" : [ "from", "to" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "asap" ],
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "isFulfillable" : {
                "description" : "Whether the proposed order can be placed.",
                "nullable" : false,
                "type" : "boolean"
              },
              "issues" : {
                "description" : "One or more issues associated the proposed order, that may impact whether it can be placed.",
                "items" : {
                  "$ref" : "#/components/schemas/CheckoutIssue"
                },
                "maxItems" : 18,
                "minItems" : 0,
                "nullable" : false,
                "type" : "array"
              },
              "restaurant" : {
                "description" : "The restaurant selling the items to be purchased.",
                "nullable" : false,
                "properties" : {
                  "availabilityId" : {
                    "deprecated" : true,
                    "description" : "Unique identifier to identify when item(s) are available for ordering.\n",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "Unique identifier for the restaurant.",
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "id", "availabilityId" ],
                "type" : "object"
              },
              "serviceType" : {
                "description" : "How the order will be dispatched.",
                "enum" : [ "delivery", "collection" ],
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "restaurant", "serviceType", "customer", "fulfilment", "isFulfillable", "issues" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82340bae-b5fd-4774-bc54-3ba6144e2e1d",
    "name" : "Attempted delivery query resolved - 200",
    "request" : {
      "urlPath" : "/attempted-delivery-query-resolved",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "82340bae-b5fd-4774-bc54-3ba6144e2e1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.354424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "91e540f8-88f3-4789-bc47-cab343a97d1e",
    "name" : "Acceptance requested - 200",
    "request" : {
      "urlPath" : "/acceptance-requested",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "91e540f8-88f3-4789-bc47-cab343a97d1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:41.354369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  } ]
}