{
  "mappings" : [ {
    "id" : "d17481ab-2fd8-3fa2-9abc-597f901dcc7c",
    "name" : "Synchronizes storage account keys for a storage account associated with the Medi... - 200",
    "request" : {
      "urlPath" : "/subscriptions/8uka/resourceGroups/Eliseo+Hermann/providers/Microsoft.Media/mediaservices/kbsb55ciiz1ib/syncStorageKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "snl8tj19svfnkumparlt94lohtbsme35jzsmdezxekket1pkvqavt58if4d5xgyfa99pdzib2fgp2c4iz5fh2nuouts2qojeriryh70mhq3pnik3a0jq1a2adanv9lrlhcj8tlmk93ogmnxuc3vay9jcwpblfoqtxl3rs6cbgw71lof09m2d082tfp3ykc4"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d17481ab-2fd8-3fa2-9abc-597f901dcc7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_SyncStorageKeys"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "158bfe46-af75-3cf3-b0cc-9e9182863305",
    "name" : "Regenerates a primary or secondary key for a Media Service.",
    "request" : {
      "urlPath" : "/subscriptions/489k/resourceGroups/Crissy+Gibson/providers/Microsoft.Media/mediaservices/m23ez43sq3lxceppolg/regenerateKey",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "u5oe3hnz396ijj9mg0gka606d6wmg78ilw5iidl1upuzx5uj69d1fdy9ne5osr2fgarmq4k9hicq4v94yjtpypw441h1300eix"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"key\" : \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "158bfe46-af75-3cf3-b0cc-9e9182863305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_RegenerateKey",
          "schema" : {
            "type" : "object",
            "properties" : {
              "key" : {
                "type" : "string",
                "description" : "The new value of either the primary or secondary key."
              }
            },
            "description" : "The response body for a RegenerateKey API.",
            "example" : {
              "key" : "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx="
            }
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3cfa0d15-aaad-3e9b-9dc2-5da5768d95e8",
    "name" : "Lists the keys for a Media Service.",
    "request" : {
      "urlPath" : "/subscriptions/43kv/resourceGroups/Issac+Kuhn/providers/Microsoft.Media/mediaservices/j8kdvs/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hiv9jouo3snxm2gz8o3j7b143esfewtjkeg6fq5nczjzmi3ygbct3p8imqkk5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primaryAuthEndpoint\" : \"https://wamsprodglobal001acs.accesscontrol.windows.net/\",\n  \"primaryKey\" : \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\",\n  \"scope\" : \"urn:windowsazuremediaservices\",\n  \"secondaryAuthEndpoint\" : \"https://wamsprodglobal002acs.accesscontrol.windows.net/\",\n  \"secondaryKey\" : \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cfa0d15-aaad-3e9b-9dc2-5da5768d95e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "primaryAuthEndpoint" : {
                "type" : "string",
                "description" : "The primary authorization endpoint."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "The primary key for the Media Service resource."
              },
              "scope" : {
                "type" : "string",
                "description" : "The authorization scope."
              },
              "secondaryAuthEndpoint" : {
                "type" : "string",
                "description" : "The secondary authorization endpoint."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "The secondary key for the Media Service resource."
              }
            },
            "description" : "The response body for a ListKeys API.",
            "example" : {
              "primaryAuthEndpoint" : "https://wamsprodglobal001acs.accesscontrol.windows.net/",
              "primaryKey" : "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=",
              "scope" : "urn:windowsazuremediaservices",
              "secondaryAuthEndpoint" : "https://wamsprodglobal002acs.accesscontrol.windows.net/",
              "secondaryKey" : "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx="
            }
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "9f467b80-acdb-3938-b6e3-8a7b75ac108b",
    "name" : "Updates a Media Service.",
    "request" : {
      "urlPath" : "/subscriptions/084i/resourceGroups/Asa+Sipes/providers/Microsoft.Media/mediaservices/13n",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "sblsdb9thfdezeq8b23fl00t2d4eq72jylymkweel3bgmynujxkkfzexykzbaggr5jpfseea87p83xjriqiaimxt6lcmaywjqpbw67h8q32gfbg8hlp7gaqiiqn4vuu9bqodx57lykblipc4ie89itznet7xsy79mbrm3utng6r7zh9kcckiksdtvb4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\",\n  \"location\" : \"West US\",\n  \"name\" : \"contosomedia\",\n  \"properties\" : {\n    \"apiEndpoints\" : [ {\n      \"endpoint\" : \"https://wamsbayclus001rest-hs.cloudapp.net/api/\",\n      \"majorVersion\" : \"2\"\n    } ],\n    \"storageAccounts\" : [ {\n      \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n      \"isPrimary\" : true\n    } ]\n  },\n  \"type\" : \"Microsoft.Media/mediaservices\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f467b80-acdb-3938-b6e3-8a7b75ac108b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/MediaServiceProperties"
              }
            },
            "description" : "The properties of a Media Service resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "80cdbe3a-428e-3746-8bdb-314e60edb2ec",
    "name" : "Deletes a Media Service. - 204",
    "request" : {
      "urlPath" : "/subscriptions/p785/resourceGroups/Gerda+Larkin/providers/Microsoft.Media/mediaservices/eqyiew",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gudmdqj497a0m7jeygv8nre0y9vvajei1m6si1lc1zf9r9z424qhdv59qoyg1xbodfvc17rbx5948qzmummsbcfw7uflpgwobosofop28pzspw547v0ieqy8x032v6zuj6odtcrkmq1blfvfvz77yp4xgaafjyyf1pvvh81hs1gvu9vzg68r"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "80cdbe3a-428e-3746-8bdb-314e60edb2ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_Delete"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "fcd1cc69-b70b-3459-8fb5-a19f396c9246",
    "name" : "Deletes a Media Service. - 200",
    "request" : {
      "urlPath" : "/subscriptions/d9l3/resourceGroups/Jeannie+Halvorson/providers/Microsoft.Media/mediaservices/efr6nulzmnddtgd938bcr",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "celsckzm3hrt9z70kwnxymrs4oyse4o9fdi4vat0wi17m7p3bbtr0dkk2p09"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fcd1cc69-b70b-3459-8fb5-a19f396c9246",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_Delete"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7d1c3606-e94b-32c0-9e8d-7225a854a318",
    "name" : "Creates a Media Service.",
    "request" : {
      "urlPath" : "/subscriptions/6k69/resourceGroups/Myrtice+Hyatt/providers/Microsoft.Media/mediaservices/7q3p7gl",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ps6svojjfpd54j4e2u7tdv50l3gv0870d0n9d4tdtv2acfctntx"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\",\n  \"location\" : \"West US\",\n  \"name\" : \"contosomedia\",\n  \"properties\" : {\n    \"apiEndpoints\" : [ {\n      \"endpoint\" : \"https://wamsbayclus001rest-hs.cloudapp.net/api/\",\n      \"majorVersion\" : \"2\"\n    } ],\n    \"storageAccounts\" : [ {\n      \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n      \"isPrimary\" : true\n    } ]\n  },\n  \"type\" : \"Microsoft.Media/mediaservices\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d1c3606-e94b-32c0-9e8d-7225a854a318",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_Create",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/MediaServiceProperties"
              }
            },
            "description" : "The properties of a Media Service resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "b345380e-7214-3b6d-b32e-07124bda27d7",
    "name" : "Gets a Media Service.",
    "request" : {
      "urlPath" : "/subscriptions/3473/resourceGroups/Armand+Abernathy/providers/Microsoft.Media/mediaservices/8ai84d978fl96f0x",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y0w8sfzgw00n59q67mswspn5amgtzyaorn9uvb68z3v75qj5qtzmeukfgoh3ke64gmz9a26eob0sv3vk29pejbhnsknkcwmuh5a4xnxglt7jmvpmocm1ex2ovfkh37fm1ti89o4l7b0beve5s5irvsym5iyhtcps14zwliy8irzcg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\",\n  \"location\" : \"West US\",\n  \"name\" : \"contosomedia\",\n  \"properties\" : {\n    \"apiEndpoints\" : [ {\n      \"endpoint\" : \"https://wamsbayclus001rest-hs.cloudapp.net/api/\",\n      \"majorVersion\" : \"2\"\n    } ],\n    \"storageAccounts\" : [ {\n      \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n      \"isPrimary\" : true\n    } ]\n  },\n  \"type\" : \"Microsoft.Media/mediaservices\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b345380e-7214-3b6d-b32e-07124bda27d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/MediaServiceProperties"
              }
            },
            "description" : "The properties of a Media Service resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "cbbdc398-2d69-36c0-b670-0744f28cee68",
    "name" : "Lists all of the Media Services in a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/26iz/resourceGroups/Mallie+Boyer/providers/Microsoft.Media/mediaservices",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5zsxzc3gq3xtvvrm3qc6cgfhr960cm4odlk2c6rddiq2xsamikvuqf3hid8wply3jbwx551ge863zjcxvgszvj4eqlcqd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\",\n    \"location\" : \"West US\",\n    \"name\" : \"contosomedia\",\n    \"properties\" : {\n      \"apiEndpoints\" : [ {\n        \"endpoint\" : \"https://wamsbayclus001rest-hs.cloudapp.net/api/\",\n        \"majorVersion\" : \"2\"\n      } ],\n      \"storageAccounts\" : [ {\n        \"id\" : \"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\",\n        \"isPrimary\" : true\n      } ]\n    },\n    \"type\" : \"Microsoft.Media/mediaservices\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbbdc398-2d69-36c0-b670-0744f28cee68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "The collection of Media Service resources.",
                "items" : {
                  "$ref" : "#/components/schemas/MediaService"
                }
              }
            },
            "description" : "The collection of Media Service resources."
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "370d2ca7-6cc4-3b49-82df-a00040044ea1",
    "name" : "Checks whether the Media Service resource name is available. The name must be gl...",
    "request" : {
      "urlPath" : "/subscriptions/6970/providers/Microsoft.Media/CheckNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "o7r32cfzuaj3idpwhcrhgjtald7hnlqqx3knqv8iynwbp3bdvjjgtkfpz333379fkugbpsg3agsoxn0ay77ablidf7kpnqlirrq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"message\" : \"Already in use by another Media Service instance. Please try again with a name that is not likely to be in use.\",\n  \"nameAvailable\" : false,\n  \"reason\" : \"AlreadyExists\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "370d2ca7-6cc4-3b49-82df-a00040044ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MediaService_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "Specifies the detailed reason if the name is not available."
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Specifies if the name is available."
              },
              "reason" : {
                "type" : "string",
                "description" : "Specifies the reason if the name is not available.",
                "enum" : [ "None", "Invalid", "AlreadyExists" ]
              }
            },
            "description" : "The response body for CheckNameAvailability API."
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "22a83cab-bc89-30fd-a7b7-34169e74cbb7",
    "name" : "Lists all of the available Media Services REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Media/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gtf825pv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"i223bobtda398wa6pfm8jbvjcho9ssilxil10ulro06socyqfl940qfsco0sogtagfxr2o7g5\",\n      \"resource\" : \"j3fct3r2gjwrjaw2utdbxi4unyfnap38kczmvt7qqzvxk5egq4kmd954atdu45hcwj7c6ayjb6srvv5jbsubl9vgnuz893ybqgftnqcsglnirtxjvg6l3mzihosk6v9digw505e0sj4p644d9cp1gsrm8z1bfkxrdu26eiet4gq9e1nfa9ff8y1w1np1wb5jae5dtfe\",\n      \"operation\" : \"5w98ycplr5oku8w372ft7fufwqw7pu5lqndn6pp511gjx2rvlc3eb71rfk4etk3ka6mg0cvur268jn6xzs7ct38hcdtfjgfqgptktao3ws3p6ns1ibm6vfn6bp3d\"\n    },\n    \"name\" : \"Vanesa Kemmer I\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"hho9esnl6kjcsxuiewru1hdxtgfl1ngnx939d29erskjuisgqn107u\",\n      \"resource\" : \"ai52ae25xly4w416a82z625vh5ggf54pccg1s0qf4wh4vzsrizh2\",\n      \"operation\" : \"5v5m8xrlg5cau4se4j7l6maosxv5bsv33jxq5sx07paq1niqbmc1h04aagcxmbfrz5onrqsq5hz4pblzipa9jvpll1jj9g2xlylr6gbr69kegjef1pne\"\n    },\n    \"name\" : \"Riley Schultz PhD\"\n  } ],\n  \"nextLink\" : \"8x8bq6et6faspizw7t5ua3au08tybkx0e5jdm98665vx9dm2juq1jacrkowgqvfa0lxpp58coxfdwqnu9e1750iss0jq3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22a83cab-bc89-30fd-a7b7-34169e74cbb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Media Services operations supported by the Microsoft.Media resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Media Services operations."
          }
        }
      }
    },
    "insertionIndex" : 10
  } ]
}