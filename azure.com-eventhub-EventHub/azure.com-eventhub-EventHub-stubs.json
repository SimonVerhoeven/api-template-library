{
  "mappings" : [ {
    "id" : "3b222ad1-f6f0-4b96-8050-12173d6314f5",
    "name" : "Create or update NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/k3el/resourceGroups/Melody+Nader/providers/Microsoft.EventHub/namespaces/Dr.+Arthur+Schmeler/networkRuleSets/default",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1brj2igs2tk0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Hilton Simonis\",\n  \"id\" : \"xtav\",\n  \"type\" : \"p1fq0t0l501j9kh4r8n89kfjpvb3sguxmct7ld6fg7y9k42oqkz2eonj9wovu7\",\n  \"properties\" : {\n    \"defaultAction\" : \"Allow\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"soc8phap7n45v2q0czlga915dirar6ugjv4vjukvhm6gui28sx37i6chm666miqncihv9wypqzvsz0kzze0w0eu3fqy8hnqd72wm0s5s1uqlgcfmeuqjsdvvppudzfdivz9a6c4byqtr3ivzcsbvmraa8vw0700\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"0fdzfgcro9l10biric73y8lp4rn3l6nwca2w2z8ywp4ve14npi13x8dea\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"86ut9o0evrj\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"q8t5dq4rgwcj3sbgdq1kax40hi7nch4bxkf0fnx6axu3wkz0qob8rvpvsivw6kvb5ojet4yubk\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"43p1\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"0497\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"cz74\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"164n\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"q627\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"ch6t\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b222ad1-f6f0-4b96-8050-12173d6314f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.484578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of NetworkRuleSet resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "4e332d91-b23e-44ed-a515-84dc407e6809",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/77g9/resourceGroups/Fatima+Kiehn/providers/Microsoft.EventHub/namespaces/Johnie+Kling/networkRuleSets/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vjq5f9ub3dvzqxnn30r3j04z2i1azq1m31o6c45pf2433v1ncter5p8cuylp7h3u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Bess Gusikowski\",\n  \"id\" : \"69f8\",\n  \"type\" : \"wx5k2p9rkwfdqohodard063euj58nctrynmwqtje1n1kacczfbbnjv6srzjg8wy81busallosgwd11olobhfqjsj0bsqp4ml0x3pshss05g7x4trb7sln95ecogk2v990l\",\n  \"properties\" : {\n    \"defaultAction\" : \"Allow\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"s83vomsleg5g2g86yo9kvwadeiqnfknwe9z45vfeak71leqe8h2b7d3aiu90m9h1fcle51g7f3cbhng5qrqxwpiw8fxcfasksd1xxgof4edzxtedttvpf4pilhzsf39dbts0swktcl\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"8gh0go6r71077miqej86j5s3xj4if7orr45lb0vl4y0jhfp959i03sbgy1ekzeq4ulth74d7tyhtc4mhdf26qyeoxcbntbzhc8t6hx9yv\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"76z86c7qmco56fef7bs90\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"9wu2w9rv63flt12tq9w3dudc8bay9nh5exbfi9f8up8k2rt1dft999uhc97td71hmt2zxohnr0a8\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"8egpem28c57n5ckyhdw1hj92amx6m24krgk4at97s0kkbzerv6iycczs1ehwrejeg5ah4hodm7ns4wzwsr3fv81k7kgam66fvoofd7pn6tkx5o6ihabfmwipz4gsd7mvv3yar6zo5cvlsj785mir8fy4zyfq6w9h0hqfzuzlbinaioin9ib13qiof2pkv5l6b1egt\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"nzrn\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"47g2\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e332d91-b23e-44ed-a515-84dc407e6809",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.483742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of NetworkRuleSet resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a90b11b5-12d1-4fe7-87a6-6fa5ef7e1d71",
    "name" : "Gets list of NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/ne79/resourceGroups/Miss+Rob+Funk/providers/Microsoft.EventHub/namespaces/Hazel+Johnston/networkRuleSets",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cdo706j0yji8ap47j6j"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Collin Mertz\",\n    \"id\" : \"5p8z\",\n    \"type\" : \"th5qbz44giuai61vd9nfop9xghkz26ai8yz8ea8y3p5vjpb4tst1qngqxsn3i3hd25if4kkcii5rsfz1yy1ut6e\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"2aouiqrekqy0qqnopnh8vbx3sxelfw1gzm5bs06ia1p99cc6\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"umyrl83uq542vjjiw2drm26ruee4xrz7ta7x3v7rlzal0tbe6hm999dboac1g70fr5dz1krljldxt19lldso2wrmgvp1skwhkbuhaa4axnh6uohe9z9t4j05db1nryg34lryi2hxzu6bc56u\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"9jkinx4v5f5k3qg6z68e8ajut3uzjstg598rqmiiy4n2m3d0ej1fpd4exkpqh2p1klyhvo2gqvjk9ipl23wyw64qp64x5q2ccmt9jp47gh2f71ol16jue0devlr5b2f3blty6mj9u13vxehswxl86dlyesbpa4iv8di2bfhxvvrnuberz7rwlc8zufrzy1p532luyc8b\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"3ox1g6b2ib6mvynirklwlukqiopujv1k1wezsfprdmbka08gor9fj9esjroki2x7jzvcpw6v8pel62cv6u5jwhaz13rmkwbuik58nwh3\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"oc21\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"8qj2\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"47i7\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"7a6l\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"38h6\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Renata Hayes II\",\n    \"id\" : \"4k70\",\n    \"type\" : \"ydc3tap4jjhtixvuag1tjjxahp5p32jzbngp3zlx13w71s5q9odoyfox1ibbqjlq0ibr73ob4kqnis3ey4g3kxnh5y6u66c037cfd8tk6c7yl003bqbietf0p26pad8degvxk44xdqn3zt5\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"086dmcox8a1bf77xmfxz7pc50334q4smcj28ppgfz3c6w9x4j7qa5jcgmbstmx2\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"b2umrbhrk46ivii5kbao4espuokhmukxenhm13yjkq2s3mm0abddqp1x8m3x9f5470s1c7qnl4v3y8ll1m9ksf9i5enrhjkfc1241b3ra00\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"rlq5f3ailtj9iqlo0psvfaowuy3f1a\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"9f4eo1a\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"bik5uz2qgn3t15xxhjnsoq62ts2rmp2ohmueuzwt0q913h3o4dnc5mnrrwq4s\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"n9brw75d78vvh5bvwv0itba1j3dkh2gygchd7nkn83x3o0vi6db5o9uffiqdjncagjk2f86b8b2uxtbgoqwtvm32l44jsxicmb9tpfculshg4k4ewi9oteaapv9mbrfz84n2tqxrpoyum15o9xlsji7ufxb351q0oxp5hnjn6lm6i5ghqi03\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"3dtvog2xrpv636ghc9dskqkj8yx01c0078g32at8nk5tvk1i\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"3o4hflbuo756og\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"c741\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Isiah Wiza\",\n    \"id\" : \"840c\",\n    \"type\" : \"dgqwyolw5t3t3bcgjqqsry9bvthhcf0zjbllbmhppjsgku4cunn2z0338v7xnakuh71zg0lgg186updftsb2p6y2de9\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"cc98vmo6k6svuqzlfep6986z4f47k35g71m\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"rayqmgg1q07ykm4csq5qetjd9dasjuyuhduv3fiso5hy8yxh77dm083o2hr77bzn6t3frjgvrlqhkq484bta2n18r2x4\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"4njy\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"1j3p\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Denver Dach\",\n    \"id\" : \"dk4o\",\n    \"type\" : \"oboyoyhx9lfcahywt8ksdxve96185gxl5e162htumuga0gcy8uwguvdl9a9lrlo1ocmrr2fxxlp8dwz7nybhuhaw4t1k9o0g3vrkkrt8bt0t9f8akl4jehuxkzs9z4f08b9ffustab12f2rj5\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"bi19oit5796qti3lvp4cthd8bggf6vi18mmv5wv9z0d29bozc699afn4xwdshtpwugxmlctyweebxvqggeygmi24r9vya1fvp0dfs7vtofyb13tj32rv22fz5bpxjasjhey574gaa7w9mat963amdyuvwjcbi57w72\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"yemzoyafhbbv80g7\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"70p4f45v7r542hu0p4rzsibc7n0ddl5mjc93ir77nx3nwp7gsv3eh2vmaz2y7koxliem3yeqfaffq1mqqkeezlrb62tujyt4dko025s711pzguc0dh549lm1jesgov2t71g20crn63e49fa5k6brwju762f12ecvba14p28gjz\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"bb6dkf3u0bzkeyot0sfhmojsgsfa0nh5olm36mq9u5ojpbj175zorr3j\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"zxaw8djn0jb7ow4fe5urmsqefxdayw2nktx7z03t\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"25r7u6j8dv41x1b19zfiynd28iyajzean0uvuwnlw9ucaqhbkxcoictnqpmdn4xd1p2clk5y\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"4q7f1n9m65pz32wlu7urr6fr2ar5smgw19js014s5pimp6rmwiao7w0uhm9yj0qxpy0dlgvx6mmrybkjlvpfief\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"cha3\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Dwayne Littel\",\n    \"id\" : \"74ix\",\n    \"type\" : \"a49tvogsmb2vwzq7wcnxvub3s7i9nh0rbqvujp8hagtsbdo4c2r6bu76s2nuywqvsfxoghwybm98kyqdbxonqage7rubhsyb1o3x2mb388kfiq17f1ag3yndobgt05plmtrz05is7a4pad5ny3i0r\",\n    \"properties\" : {\n      \"defaultAction\" : \"Deny\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"7etwawbqol51sl891egmh2cxuxp2yjq2d7hotv7ficin\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"tlvc3yf6xvw8fpo4lo2zz2m4c2q389dpxzm5p8\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"81jmuuhob9a2slenyeroi0r08za2o0k310jezza6ptk865k5w2rvuf944q9lypba6tkp3d85bz101i41cl9uwbpypl\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"6i1pbclidekz4fi2npotp5yvjjskmsygr3f59g5ld4g61a990j1rv87gyaqqtr8hlgpdb04xoelsg3jq5r8gz2c5mdzkcik32xrv18lraerfclt2m5unxqupziryqx1m81lhc95ere2dtlncv9immdx8tm30fi8lcizxce873m304ak93f471tksko1ak7\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"un0k19wiu4pgxler54h00a7rkkz7ubjlynyct8nubkoexjdimvxrih5rk6wvxz2fu04ge7y5iycxy65cpn2ondjgzhjm72w3mo2w87yemf9p6r3a8bqsbxmu9x\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"yzbkimkawk2ieevlookyvfiv7u1q8hply7cw8060xlrie49vntaftv0xo64sjl9zdbf3zbd7gsvrw8waepne16dlqh1801s1dr8u1vwumgt5rmof9bli3ow7lf2k5mrhfc3dw8n5iyjzji2lj4i9z6l0kxtflj9unakkbirlxl7v8op89jb9teo7wrg0of6h0kvr65n\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"h1bk8htz37lrz6flw4vfurq3oxbymr035mirp98qq35u42o566qp7wzfcz1o9oq4yys5ic8w4ctk7uzc4t0c632gq7orsgbie51uojldawwpzuof\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"zom3\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"hy4d\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Mrs. Eva Dietrich\",\n    \"id\" : \"2d78\",\n    \"type\" : \"f6i5ulfovqmtzol8itk870u9ob6wdo54yu6t8xncc60z\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"0c2jeq56klwtfpzdj4zoqevu54xot73pkfv4fccsm5ur0qmatg7y5wx7eihynm3d5k84y8hc08xnkzpzdoh7xvz8zt71hymv9kp1bj97vgx23bwm31ah1whpe55hl8ha93qvzuj833ugpgl52u0mhtc3f3m670m6o0eow777stgx6l3sbwwfh0z87f6glzljfjz2c02\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"h6y9ypb3druwqvoh5x07rdo9c1uow8d6byo8sbsffo52o0k348g7izygrd4u6b5dc3j75pf6cnqh1miojbz2uq4z2ddbnxiaulre0v8ijtl\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"rx38uaxpyg1raz5g1nhkmimjw3tv\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"rpa1umcfzebaxtmwok040pt0x7jskwsx4ys8\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"rzgi23un6d8wqp98gsfirxxwy6sfinubwh13xl4t8s\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"hilr99xcqtxb5q9bwtkdf73dsjtqd5dfkfhfd2s0c52pr2hp55ososwx4hj5t7wgm7el1ullaxb1teohhbw3vo6s51mlay9kq01aopw3036ik53beffmzto\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"cvaopo01nnfbc3ctqdh68tjq6fi4am2c99jqsln7w3lp9eabs5na5r5f4ct91xc3h3wxk52bl8ynw1lfcf6ooup35wa5jqtymiva7p7tqc01vtkjmgqmp76npohyc5w756kefksp85977df1l8r50y4nuo5qwv9f4bdqrfgazpmuou7xtjsamhv3ncjo4ggt7xc\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"9n2a\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"6l61\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"691x\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"9799\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"56ff\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"75jy\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Ronald Hoppe\",\n    \"id\" : \"0msr\",\n    \"type\" : \"6c0puwvv1ke6xoubqh7oumyvqk1up3npw69saul7jgxwp8o7q52e55dorr5pa14jutmaw09f9lpvj5dg7vaxjzkbm0a5vmyg7gvc4rzam4\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"p07rc8fammq8nxzoednbysmu7ro1s4h23f6agzcn7nswouy9hwc673v7r3on0us35o2qoiqajinccjb2jjfgccequvfj84upc6pemakgnkbmxi0zg23r\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"n10hn4bihoyhf7wgoq81wc5ihdwz1y2lwtsel7vk894j4vvcsiqb8e9yeo6a2tzrsyayh0jfxmx1vbbk22tmhggnf7icl9nct9u0vwp4z9dzm98q6t0iumd2u7s897vvhu1aomn21m4dtvfn8wvbro5nhca9javw1omvnalu4bb4zsgi8v3cpzftu19p6fa\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"w64ww5evvwafi2q2l5kcpvojy7h9yxwh4ec7ydbid0qwejepj8z80nzwbc4qrz0x1gq3m1aeyupnp8umrm9wy0ra4t0c8g9zeriw3d3h8j3t6yur6j0gbj73pm2fis44cw0yehnowdgde0p14znm48f2\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"r8qj0rko2ca0f2mcgbtnqj7gk0v4fdyvo6r2mrwg01ktv6ol5gce1armn64v9n18rrqd45a8q25c05df81gbjr0lka66l894qyr9tnej02p0puepbz8b9bm1w3y1sx4t8wfqa6uxah9zm0njo98tevculebrd2gkorxjny860oguo1g9lstb75bg5d\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"vr9yaxxuu1lyzgz1cxuhb4jrt2x3fsk7lmqvpl2vcw\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"s73wi2fx1a1k7t08p6iryaitrp2xot7ab5dkj2irczgfy6ov8kj7gm7d8jt3vtnzjwp9r2q9uq5y7c1zqt79wgvyj42wyaaj9njl4cvwiaiygcgkosjlum5je0bkkvt20n75kaz35v53fbkrqyzfei9hy016tgrxl4w\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"yvl4\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"ceon\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"0307\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"0pgv\"\n        }\n      } ]\n    }\n  }, {\n    \"name\" : \"Albertha Wolf V\",\n    \"id\" : \"5q6e\",\n    \"type\" : \"4s24b0qqn7bva9dpsqon6xw3y1zlvsrjax6xncek5xn4dtl0mj4jv3jd22g7st1g2bsxup1jcx6golw8h21jll667hxavw6scg3ecqar5dn77sa6czkcbgitmssrncjt11de50anz30arysyglsgjoazfljcyty0hmg84dng89\",\n    \"properties\" : {\n      \"defaultAction\" : \"Allow\",\n      \"ipRules\" : [ {\n        \"ipMask\" : \"jtc03wxxkdvcrjpiuy3tb8jgzkfwg2kpv0zeyocixh4w1s1yy9aq3sxus8omjpr09hvsz5h2sqjljw4q21wmej616td8o\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"0gija\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"ami586xkzevrdmhycpx3nmc01ztga08rm2w2x687tuglz38g9ehh1t4aw15xivkipc82x2wcuwszal1aqu5psafjz85y75p3pftq7dbrxgdi3w2fz58yz9l9kfx8mt6h8n72gp7gwria8gxjkk3pvi4ju7mu69wwxxfhs0lnu44yxcza92civ5ex9\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"gfgsbbtxdcoz5syc5x3wt115fsdr43sjkqnrffpewnn202b2k34u729tnlstvync3nrc4lm2mnjoonk3sbcjohz69pj4q99ap8t36cus59ap7yrzp6cpd1ardebha9diu\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"8c0w6pdq2cnxaf5cragn0uqfeiexc1c7mjsp2bf5y6jaxtdn0bcope3o0s4mrtx5ky92l615vb74suw1ovmnbm2b6lkmnvori32g6bt5eu9velbk6hy9tp5ym219okot\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"5ogmclhjb2xansuakm5kxnbvthixila9wzu9cdm43oiu2nbdncqp1xf6e87x2s9hs0bph1owp040260b1mhw4dwvy4itp1azlbwk6ajuds3613vh1799hs0gigps4foeut1sdjpjtjamuq0bgdzga0u2hqepz7ob4kl85pkmgt\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"4tyxl7rt2v9z1yfq04fq3fa3l5dnepvlnxd9aq2mwyzkw0iwqa0duusj4y9eyn36\",\n        \"action\" : \"Allow\"\n      }, {\n        \"ipMask\" : \"zexqp5dtsq9j4fdhn0ihgk2po9ilm4mdyag67qhevodvsiip0fww\",\n        \"action\" : \"Allow\"\n      } ],\n      \"virtualNetworkRules\" : [ {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"c2zp\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"0qz7\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"r92w\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : false,\n        \"subnet\" : {\n          \"id\" : \"43pa\"\n        }\n      }, {\n        \"ignoreMissingVnetServiceEndpoint\" : true,\n        \"subnet\" : {\n          \"id\" : \"t6lq\"\n        }\n      } ]\n    }\n  } ],\n  \"nextLink\" : \"908n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a90b11b5-12d1-4fe7-87a6-6fa5ef7e1d71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.483101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListNetworkRuleSets",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List NetworkRuleSet operation.",
                "items" : {
                  "$ref" : "#/components/schemas/NetworkRuleSet"
                }
              }
            },
            "description" : "The response of the List NetworkRuleSet operation"
          }
        }
      }
    }
  }, {
    "id" : "c7f321b9-ce45-4d11-98df-07a18c014506",
    "name" : "Gets messaging plan for specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/vvd5/resourceGroups/Scarlett+Bernier/providers/Microsoft.EventHub/namespaces/Jamaal+Mosciski/messagingplan",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "251n5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"7pfrucz90drbj1bmalycdnorjrav1005jndzpn2jp0dfxlsctsrcm5jaoklcydfbh2iooy28r4iuignkuf1zb2p1pwmy92fn6oi2ayfibx8csshg57z2un2wlw5caezogngy6nhbg41sd583b6y09dujozp3wq7ifzlku9wyz8tya5qprfaiqzln3lvq1us1mzk304tr\",\n  \"properties\" : {\n    \"selectedEventHubUnit\" : 1033876756,\n    \"sku\" : 544278817,\n    \"revision\" : 536719472857875691,\n    \"updatedAt\" : \"2023-11-02T15:46:37.478Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7f321b9-ce45-4d11-98df-07a18c014506",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.478993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetMessagingPlan",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "revision" : {
                    "type" : "integer",
                    "description" : "revision number",
                    "format" : "int64",
                    "readOnly" : true
                  },
                  "selectedEventHubUnit" : {
                    "type" : "integer",
                    "description" : "Selected event hub unit",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "sku" : {
                    "type" : "integer",
                    "description" : "Sku type",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The exact time the messaging plan was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                }
              }
            },
            "description" : "Messaging Plan for the namespace",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "decd4806-3411-46a4-bedc-4b96747ed7d8",
    "name" : "Deletes a consumer group from the specified Event Hub and resource group. - 204",
    "request" : {
      "urlPath" : "/subscriptions/fwjz/resourceGroups/Maude+Steuber/providers/Microsoft.EventHub/namespaces/Samella+Schmidt/eventhubs/Zana+Parisian/consumergroups/Gilbert+Leannon",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "u0dqwv2at8x3ncb58uxyplyfpokzeneok1c7qww3tun631asxlrrqrxs4m"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "decd4806-3411-46a4-bedc-4b96747ed7d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.478693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConsumerGroups_Delete"
        }
      }
    }
  }, {
    "id" : "b4dc40b5-ae7e-4137-9410-23d4f9be8464",
    "name" : "Deletes a consumer group from the specified Event Hub and resource group. - 200",
    "request" : {
      "urlPath" : "/subscriptions/8ois/resourceGroups/Berry+Ledner/providers/Microsoft.EventHub/namespaces/Brant+Halvorson/eventhubs/Domingo+Rice/consumergroups/Lesley+Botsford",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dmvzczxr8zt70ono4obs9irpyt0hkpq8tgr4jmgsfhzni85nk3ouwk1poh3y5rgwlo15d1eba6o0c63eppobr6wi5bg5teruzuqqntb6lq5ne11oel2u1ufgn7p9fgp7lrw5wyaxwd50h7n7psr5ndnz3s4kcigtimusmcguzg4ixq0rcollorw066ty7zc"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b4dc40b5-ae7e-4137-9410-23d4f9be8464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.478461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConsumerGroups_Delete"
        }
      }
    }
  }, {
    "id" : "81c470f0-af4e-4e7d-9473-703ed9e65fa5",
    "name" : "Creates or updates an Event Hubs consumer group as a nested resource within a Na...",
    "request" : {
      "urlPath" : "/subscriptions/f585/resourceGroups/Katelin+Schumm/providers/Microsoft.EventHub/namespaces/Olen+Lindgren/eventhubs/Richard+Pacocha/consumergroups/Marivel+Macejkovic",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fx30m2f7usfa4dfan"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Foster Schuppe\",\n  \"id\" : \"q1u0\",\n  \"type\" : \"pqys0wlqx7fp1bpshu8zlf5ee8shx1aml4qn3u4ilkyakbyjz2c0tu1bfsquk68id8kc16f320b\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-28T03:50:13.477Z\",\n    \"userMetadata\" : \"ofwt2iskc18ywtrdesm2qbzd1ebyuhjjtka46bxtzrgi141pqfr6x5irpjt0fa1lvq4v0n6h93y3wf0qh2swy0yv7h7p9glml7kxut22\",\n    \"updatedAt\" : \"2024-01-30T16:11:51.477Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81c470f0-af4e-4e7d-9473-703ed9e65fa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.478213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConsumerGroups_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "Exact time the message was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The exact time the message was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                  }
                },
                "description" : "Single item in List or Get Consumer group operation"
              }
            },
            "description" : "Single item in List or Get Consumer group operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0b620358-b4ce-44a6-8ada-b862af960ad3",
    "name" : "Gets a description for the specified consumer group.",
    "request" : {
      "urlPath" : "/subscriptions/031d/resourceGroups/Beau+Hilpert+PhD/providers/Microsoft.EventHub/namespaces/Mr.+Brady+Kirlin/eventhubs/Clarice+Toy/consumergroups/Roman+Blick",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "aqs1qblbw7b85bm5h9p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Carlotta VonRueden\",\n  \"id\" : \"1v78\",\n  \"type\" : \"m6rqy3efich9tfmf559tds\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-10-21T06:45:28.477Z\",\n    \"userMetadata\" : \"jtaml37rzwc25ccnwwhmz3dhdmhm0qqrhac9grrttdao1yyrv67xuuz\",\n    \"updatedAt\" : \"2023-01-04T23:15:20.477Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b620358-b4ce-44a6-8ada-b862af960ad3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.477804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConsumerGroups_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "Exact time the message was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The exact time the message was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
                  }
                },
                "description" : "Single item in List or Get Consumer group operation"
              }
            },
            "description" : "Single item in List or Get Consumer group operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "2ef7ca89-915d-4eee-9c07-ab02ad4b9826",
    "name" : "Gets all the consumer groups in a Namespace. An empty feed is returned if no con...",
    "request" : {
      "urlPath" : "/subscriptions/08a5/resourceGroups/Ms.+Russel+Lemke/providers/Microsoft.EventHub/namespaces/Winston+Dooley/eventhubs/Levi+Schinner+V/consumergroups",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2v70hpoducb24xqsvhtpq5hy2bojri90hkp9l8ygyksnzim27fays95ocxthuxa6iotlxzcecp7oq73klumpv0ubudbiz2oe37mrsvxnbuw1aasfa7k8u0sn0clsmnp0trwdme2jok7imialdu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Len Durgan\",\n    \"id\" : \"aq24\",\n    \"type\" : \"jbwphvwzhsygf5jp1dtycvcfke1aczyu8m5llv0xz52hdc4a1lziiiy6s1kn7dvjlo0dadphazxf63f5zes8oiiv6uwsnz49xylv9oat98unun6mi4phdwtrjawwsz0zoibc7yqqozuotwf6f46pjs1jm\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-09T05:14:23.476Z\",\n      \"userMetadata\" : \"ba4k263t9mc05fyyubxnkmde6qcxiy8nqayd1p7f3w1u37znb6bteq9k66huh52z2iaa0y1ey25zn1or2mhpn92h9nvg7wt0ijip4dl7z42k5ynh8nih3biq3aa1ez9\",\n      \"updatedAt\" : \"2022-05-02T20:54:53.476Z\"\n    }\n  }, {\n    \"name\" : \"Johana Lang\",\n    \"id\" : \"0zs0\",\n    \"type\" : \"oqdika2z7geh6q5g33fopx6um4wgwcjp3zl1qvbrmrexc4g4q0pa406k1vrxx7dmn2vrkpy8j6t5gljvw3092e6ek4fxqpdf8g3snc4fllbgmjgg3h1o3npfye0iq\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-09-16T14:27:57.477Z\",\n      \"userMetadata\" : \"ho7sbt9fs07lqfozcaapmwsqqvyqj2bnjigzk2v47lr0hjmgsxx76pfz98umo33kdq2ns1bavhwz81r616y6fee67mlym82\",\n      \"updatedAt\" : \"2022-12-09T17:42:30.477Z\"\n    }\n  } ],\n  \"nextLink\" : \"fdnwnz1shhgvsrk923jhl4btq4b50aitvj3vv4lwtqrnc2xzogjlo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ef7ca89-915d-4eee-9c07-ab02ad4b9826",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.477373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ConsumerGroups_ListByEventHub",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Consumer Group operation.",
                "items" : {
                  "$ref" : "#/components/schemas/ConsumerGroup"
                }
              }
            },
            "description" : "The result to the List Consumer Group operation."
          }
        }
      }
    }
  }, {
    "id" : "b2fa6b3f-3c03-4b8a-9369-cbff2bc4eda8",
    "name" : "Regenerates the ACS and SAS connection strings for the Event Hub.",
    "request" : {
      "urlPath" : "/subscriptions/8gnu/resourceGroups/Bibi+Reichert+PhD/providers/Microsoft.EventHub/namespaces/Jarred+Leuschke/eventhubs/Mitch+Bradtke/authorizationRules/Clair+Block/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a81xbe6qqli4zmh9mv7ic6fk4wg88w6zdb5o2epqycjfgefvdhroxugtaefaqhgvvtbwewkyiqdfb5mubcaasvdd0pqtn006cu0fzoe79wd0skkuarwrz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"1swsuoh1q8oancx3dx5e5w43qi1\",\n  \"keyName\" : \"Evan Gleason\",\n  \"aliasSecondaryConnectionString\" : \"ynwe2h4q1blixu32yfuxadhzspueowoowdzelzgglk\",\n  \"primaryConnectionString\" : \"nlfs8r2bvvmphizui5k7u9qqhd8j7f8d1mc33085z5lircgjv25oe6uzfmsjbtm9e6298y4qrjo87r0h540h5xndrvvg4bkpv3mvrguaci4i6sibt0g888r54ysc\",\n  \"secondaryConnectionString\" : \"qtwbivo082olw16cvitxpgmu05rrtp8rkwp8q6dj7p10qnaeovxuwr5f28ndba9m1blbtzlfd5pjx9d\",\n  \"aliasPrimaryConnectionString\" : \"scqn3ynglorp6qyym37qkuwb5vugxcq\",\n  \"primaryKey\" : \"9edgwylj546j7fccc11msasuwbpynpvzgrlwjd279ljkrkgumlsi3llzuzgbhclxz7482j05el9205p5wyv77ieeg15f91cazeq48koba6r5hfeyk0szok\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2fa6b3f-3c03-4b8a-9369-cbff2bc4eda8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.476823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "aliasPrimaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "aliasSecondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary  connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the AuthorizationRule.",
                "readOnly" : true
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              }
            },
            "description" : "Namespace/EventHub Connection String"
          }
        }
      }
    }
  }, {
    "id" : "d8d6f4ed-e9c6-432b-ada5-21f80864fcaa",
    "name" : "Gets the ACS and SAS connection strings for the Event Hub.",
    "request" : {
      "urlPath" : "/subscriptions/x52g/resourceGroups/Eleonore+Wolf/providers/Microsoft.EventHub/namespaces/Houston+Larkin+IV/eventhubs/Elinore+Luettgen/authorizationRules/Cassi+Harvey/ListKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gcpdbp4xb3jz2mql0m2j9svjknh9hiuvjp0r7nxaard6ccb4ef5eir27c31l1o4up7rl2bvbtgoh4rnrtikzb0wevijsmhb8ys"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"dxs1jxa2r3s7cl\",\n  \"keyName\" : \"Randall Wuckert\",\n  \"aliasSecondaryConnectionString\" : \"zj3xr0vzwd80jqodpg7s7lgmmzj4jabii3n952f9oh1vtd5kimfdlxwfiyk5g8qmybddolkrjaymtnksino89v2b4na\",\n  \"primaryConnectionString\" : \"q930x\",\n  \"secondaryConnectionString\" : \"226grtv92i5o61fe0mxg1v6m314p55a43kzu564uocg53asr5l4106ttefqns6bl05qrjpvlcn5qdo4h4xvfvc918z0vznoqp0abrckuxle2ptra5x21gmsr14jxxcm8vi492hvkoz8zb4dacus537oumc61v\",\n  \"aliasPrimaryConnectionString\" : \"uc6btlz2w6h4crlhitu1407h2r61wma14bdpgwafheqjrcyj06sxlbnf5qahdaadluncf1c525bszv\",\n  \"primaryKey\" : \"xrqgfa3zor580pczf9lwt1jq5178rnpt4zgnpaqy9teksa75pu2p2ijqzvlgxeoweyhojlt9q2qs1sjv3wvna0uf784cz7rda0kwi8le13yz162cizpp5049k31q1kewd95he2u2s41xpl22xrr8nals2g7u6u9d9thqqw89eu3mk8xv0cdr79to\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8d6f4ed-e9c6-432b-ada5-21f80864fcaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.476431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "aliasPrimaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "aliasSecondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary  connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the AuthorizationRule.",
                "readOnly" : true
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              }
            },
            "description" : "Namespace/EventHub Connection String"
          }
        }
      }
    }
  }, {
    "id" : "165956a3-3559-4493-a70a-161f2a62d8bb",
    "name" : "Deletes an Event Hub AuthorizationRule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/861t/resourceGroups/Mrs.+Kourtney+Nikolaus/providers/Microsoft.EventHub/namespaces/Mr.+Leonor+O%27Conner/eventhubs/Boris+Kerluke/authorizationRules/Pricilla+Rolfson",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ubozkoly4t33ic6s19v"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "165956a3-3559-4493-a70a-161f2a62d8bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.476017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "880d9969-698f-4e22-9869-d450fad8f9af",
    "name" : "Deletes an Event Hub AuthorizationRule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/fz3f/resourceGroups/Hwa+Hickle/providers/Microsoft.EventHub/namespaces/Chet+Rogahn/eventhubs/Inocencia+Swaniawski+PhD/authorizationRules/Victorina+Roob",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tma9kv8kjvqo9qihiqlpev7gb58exq5tvnyba21ll2lecasfazrnmtbmjy9yfsb7exnik95hof1dyb348wfj1y5oe01itllu19zo40yzlme2924y99goi9uw9zc872qao4frdws901rvnuur8t0p3ztkw79ixrutskn"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "880d9969-698f-4e22-9869-d450fad8f9af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.475796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "492aedcc-5d5e-4499-97ee-f3c1d3f05fab",
    "name" : "Creates or updates an AuthorizationRule for the specified Event Hub.",
    "request" : {
      "urlPath" : "/subscriptions/hw18/resourceGroups/Teddy+Smith/providers/Microsoft.EventHub/namespaces/Juanita+Feil/eventhubs/Fredrick+Yundt/authorizationRules/Miss+Regine+Stehr",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "sb5kojjpu25dg4dspbaohhaium703avn6l22qz341m60m0qbnmc82lm4x9sn9ww0geh0w0rj8ae8phwexpxu98i71q862afuomqzpatsvx5j11ii1pnr5m"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ciera Raynor\",\n  \"id\" : \"3af7\",\n  \"type\" : \"jxr7dq11oo38f4vk5rvsyu1wvivt1lxvv7ksvobb8ios1vkr560ku7deoyfldw2bz9puyhtqnx75qbu1ursw6erz0xv4piz2a9hcwiwy0h1s282g894i2a\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Manage\", \"Manage\", \"Manage\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "492aedcc-5d5e-4499-97ee-f3c1d3f05fab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.475538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Properties supplied to create or update AuthorizationRule"
              }
            },
            "description" : "Single item in a List or Get AuthorizationRule operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "9a72982c-6e8a-41eb-bfd4-6d46decaeb26",
    "name" : "Gets an AuthorizationRule for an Event Hub by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/rjim/resourceGroups/Yelena+Cummerata/providers/Microsoft.EventHub/namespaces/Yong+Torp/eventhubs/Mrs.+Norma+Prohaska/authorizationRules/Youlanda+Goodwin+III",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2gbw1yodnwhaxna20wyzrtxxgiem1oq2k97vaqtg1xq87p3evwe4zlz9xh3bg08hyd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Juan Hand\",\n  \"id\" : \"58mf\",\n  \"type\" : \"lme7tvhk067cbqcuk103pw9o5fhw1znytyr3xjmacjk4egeru4g229fcv15yyaxyllj7o3u30k8t2f74d3k086icfx64h4ed0yxr7sgkov3ka94xgvhcopdll2g132kymydl97y7sbmlrpon9o\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a72982c-6e8a-41eb-bfd4-6d46decaeb26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.475122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Properties supplied to create or update AuthorizationRule"
              }
            },
            "description" : "Single item in a List or Get AuthorizationRule operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "7d130417-b1b2-470c-a565-a6c92493f4ba",
    "name" : "Gets the authorization rules for an Event Hub.",
    "request" : {
      "urlPath" : "/subscriptions/5kf7/resourceGroups/Dr.+Shea+Emard/providers/Microsoft.EventHub/namespaces/Mr.+Humberto+Nolan/eventhubs/Elza+Hane+Sr./authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "o98tkz28xwvauf9rmjn5y1qm3w8z86rg7f0obtuj3jxzaibkr5pkt8hs61tlpwcjma1gfxgk239gwocmth65ebredh5floicgx3k28r5tof4jajrx8jhx7xmm0ekslkirwyg6mkopu3w8rhkzwufiba6ynu1bofzxn29umuiet9u2sh5n38wi12b"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ira O'Connell\",\n    \"id\" : \"fdg2\",\n    \"type\" : \"9hwp28lk59gpg9qygw1k5iqr4wxmsihqs6nb8l4rg1m0ybn5r\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Listen\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Mr. Demetrice Walker\",\n    \"id\" : \"07gl\",\n    \"type\" : \"5fose108kaspaqfo9j88rzvrqm\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Send\", \"Send\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Kizzy Goyette\",\n    \"id\" : \"98uk\",\n    \"type\" : \"edz2ykjmyahtcg78hn608q3iodcmmnur8womuoos0detqvnr8rbs19ulejldd8968iiq1tup8ohznhpais7760kqdor3dnjveflguf1yauuwvo1jsyyl47hh0a466hmv9fpjpj13v5sqmbvwitvmtp2twa\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Manage\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Thanh Toy\",\n    \"id\" : \"3850\",\n    \"type\" : \"smfmzn4v4bzkiqlkj0o0oobiq8fgoxuv08tavh2l1l7eewx7upd2c6t3qv4oeuzjqx70y1sqe3hdytf59rdm7wg40t3zesrgzl1mc2jwaio\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Dwight Krajcik PhD\",\n    \"id\" : \"c29k\",\n    \"type\" : \"bkmq5ngmgm9ip1kgfo0xkle3cfnpmf8pgvnnmpmw3xqi881on0t68axxy3jxd22pz8oduu03jgtg140xgh1popv75qrld4y4ntkjnf6g7gb698vc2btnoarvnn8gepawhtt6vohp\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Send\", \"Manage\", \"Manage\", \"Send\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Fe Bartell\",\n    \"id\" : \"t24f\",\n    \"type\" : \"iyz8u62u73f844wkoi3yfgjxj9bxaufku1jrud6gglwwgf0rcladde1tvrx1ty3twtaly0yavto5c\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Rupert Rosenbaum DDS\",\n    \"id\" : \"r5t9\",\n    \"type\" : \"iip4i9nc5pjfzms6759a4dv14apor84eo6wyzbdxfno7j6wc0uyk1fxk8spxtuj6yg6lxmp7pu\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\", \"Send\", \"Send\" ]\n    }\n  } ],\n  \"nextLink\" : \"6t79ccoys7ayfh6jhb99i76povtm6n7nqfa81z9bn4abyg097njh0yeodg0gucgt71wjbui5sfk2jk5r895hsuflb23tao71553wj5oq64monp6i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d130417-b1b2-470c-a565-a6c92493f4ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.474708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Authorization Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "79bf5e5a-4509-4c2f-a7fa-aabab511b7fe",
    "name" : "Deletes an Event Hub from the specified Namespace and resource group. - 204",
    "request" : {
      "urlPath" : "/subscriptions/svd4/resourceGroups/Norma+Monahan/providers/Microsoft.EventHub/namespaces/Margarite+Hahn/eventhubs/Many+Schultz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "q1dmz4r2a0vpfssq0715dz8pftcvv67pwo3g97xbqv0fu4sg1p37sqapqh5ujh04pupmys37s66p8zqyfhbisia1aghkpsgo4svvyemprehb346idq86yxo1w1j8iw4tqdyg6jlg611dqwr1wvo4hft5sshy1pfrnkgghhpyoly"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "79bf5e5a-4509-4c2f-a7fa-aabab511b7fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.473601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_Delete"
        }
      }
    }
  }, {
    "id" : "9f6744c6-81a1-40d2-b373-3b2a5cfad413",
    "name" : "Deletes an Event Hub from the specified Namespace and resource group. - 200",
    "request" : {
      "urlPath" : "/subscriptions/233a/resourceGroups/Tawnya+Grady/providers/Microsoft.EventHub/namespaces/Dr.+Elouise+Cormier/eventhubs/Princess+McClure",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mg42f8jp54g23p"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9f6744c6-81a1-40d2-b373-3b2a5cfad413",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.473425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_Delete"
        }
      }
    }
  }, {
    "id" : "2fa45bf3-1e93-4ded-bd92-6ee234d37a44",
    "name" : "Creates or updates a new Event Hub as a nested resource within a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/z4l3/resourceGroups/Vanesa+Christiansen/providers/Microsoft.EventHub/namespaces/Eleonora+Maggio/eventhubs/Merlyn+Kirlin",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "852rscekibzj57z10zrcmkna4e6ndq9yd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Krystin Cummerata\",\n  \"id\" : \"6c81\",\n  \"type\" : \"icrfcwq7tgaan6amn03vw0xlyxow9hzyno42hu43atajfinrzmkznkjr3q1tfq1u8w35r2z7o3sylx3nuts6lapeeu2ixxco142kppxey6h9c810ifwz8nq5ku7myd6sd\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-12-17T14:34:25.472Z\",\n    \"partitionCount\" : 7899012175836719226,\n    \"captureDescription\" : {\n      \"skipEmptyArchives\" : true,\n      \"sizeLimitInBytes\" : 212685031,\n      \"destination\" : {\n        \"name\" : \"Johnie Mertz\",\n        \"properties\" : {\n          \"blobContainer\" : \"6j8qq6x0g57s37kiefu5u5g7w9e2zp5wlh4k78fc7ef4t57dmavjt4q834mi3k71ri8ue2vgrcsgbnmcfnquled4xzg7zjuowwjn78xsbs1xf8voteeyjanhostsomzmod9rljhfv029dm8asjvvyh1\",\n          \"storageAccountResourceId\" : \"rqp7\",\n          \"archiveNameFormat\" : \"9frzksbotgcmdr2zsfwfq41jpc0jlr2nt33fqntt6my0lza388ofcsdl353wmqxna24klcpih4e9dqvso5j65yt11spxxqnap4umu62uztsvjgg5jc5kbdp749z\"\n        }\n      },\n      \"intervalInSeconds\" : 441,\n      \"encoding\" : \"Avro\",\n      \"enabled\" : true\n    },\n    \"messageRetentionInDays\" : 7482905954672578267,\n    \"partitionIds\" : [ \"hwamdcddl8higxossywj2lf9x87xudemo2mdb1ekgcpx71tidqtfa8sym11bkwqxwxh4iqf57qpjctaok9ztvgyn5mgntu19ywme0ev7je1mm1gks2xwnt9wzadm4lzu45v3iybnw8tdhamu53c4xkl0vnsmzoe3eneb\", \"gxfiy4ws6alcs4iy1fw6m056d8ildfpx7ef7nezlkcxuxzvu5cy4ivs3u2axzfxt2fnp7qssvjb5mt37n4umnthvb8\", \"w1kn4xq26ucb5c\", \"q6ducjdpwqfavm3hrpbl6o1sneq8sln9sk60nbhxstzhn0ockcwu8lrxk7wq74cdhlega6e5rcn89imn5c9zxsc8aaf6dqd03x5n91cvakvhx8yl25ehg04jxns\", \"aangieequoi4cof94jc8rma4ycjazl4avygaselkakwna49dxc5sjzty8lg0la4u2pelr1szwrptov87eaxn192wvn9ed9sb9yh2xj7ogh8c7yx4in56wr4pd2n045uta1i\", \"syrh9d2ksque2mtmpvpyezljolwmbq\", \"u38z5gtll30w57vl7eed9gsdfei2xiiz0gweeenin23xk47z2vs325t6cah32mzgl79443\" ],\n    \"status\" : \"SendDisabled\",\n    \"updatedAt\" : \"2022-09-08T13:06:11.472Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fa45bf3-1e93-4ded-bd92-6ee234d37a44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.473215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "captureDescription" : {
                    "$ref" : "#/components/schemas/CaptureDescription"
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "Exact time the Event Hub was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "messageRetentionInDays" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "description" : "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
                    "format" : "int64"
                  },
                  "partitionCount" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "description" : "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
                    "format" : "int64"
                  },
                  "partitionIds" : {
                    "type" : "array",
                    "description" : "Current number of shards on the Event Hub.",
                    "readOnly" : true,
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Enumerates the possible values for the status of the Event Hub.",
                    "enum" : [ "Active", "Disabled", "Restoring", "SendDisabled", "ReceiveDisabled", "Creating", "Deleting", "Renaming", "Unknown" ]
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The exact time the message was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Properties supplied to the Create Or Update Event Hub operation."
              }
            },
            "description" : "Single item in List or Get Event Hub operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "df8741f4-ffc0-4ea7-9d6b-ab8fc1995342",
    "name" : "Gets an Event Hubs description for the specified Event Hub.",
    "request" : {
      "urlPath" : "/subscriptions/v3kq/resourceGroups/Edison+Moore/providers/Microsoft.EventHub/namespaces/Randolph+Wolff/eventhubs/Raguel+Block",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "sualtgpwh55tigposi4znvh4w5jlf6mjeg5272pfrxkjvw08teza9vuany2v8ivtsjxj9khs3gcrl64xhyfn11qg5grd5ej5is0l97dhsttrax0xk1ay9ygjyrspm52utb2eiaavn6i5l53oktus"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Timothy Steuber\",\n  \"id\" : \"bi5r\",\n  \"type\" : \"3nofeb\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-08-21T04:05:04.471Z\",\n    \"partitionCount\" : 1525601168036870279,\n    \"captureDescription\" : {\n      \"skipEmptyArchives\" : false,\n      \"sizeLimitInBytes\" : 497050412,\n      \"destination\" : {\n        \"name\" : \"Deon Gulgowski\",\n        \"properties\" : {\n          \"blobContainer\" : \"r24quzopohq6wlckoztg2dmhsho85r3jns68i0ij37td6rfdy9gqq\",\n          \"storageAccountResourceId\" : \"0c53\",\n          \"archiveNameFormat\" : \"meaobcjg1mf91rcy0q7gr97ypjvh8n0fcnyg5fy3c2kn5gn98byzrv2n8o6ucaatkheyv5mwlpbg63lowjnukltqwuc9r6im88pvd0ph0qmp0dmrjqdd7qo\"\n        }\n      },\n      \"intervalInSeconds\" : 714,\n      \"encoding\" : \"AvroDeflate\",\n      \"enabled\" : true\n    },\n    \"messageRetentionInDays\" : 1652046516656618561,\n    \"partitionIds\" : [ \"b5cb4j1s3rac7c4n0dq99nv1eftfxmficozmv7an5plfulj5vthti22a4a7w4gykiaoliq0v4u5ay372d228cj8l5683efi0hz00xlwnd7gv3h73mszdg9bz3tvaqlmk5zwj7rynp809731z5nqz5cpr\" ],\n    \"status\" : \"ReceiveDisabled\",\n    \"updatedAt\" : \"2022-04-03T00:43:32.472Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df8741f4-ffc0-4ea7-9d6b-ab8fc1995342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.472592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "captureDescription" : {
                    "$ref" : "#/components/schemas/CaptureDescription"
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "Exact time the Event Hub was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "messageRetentionInDays" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "description" : "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
                    "format" : "int64"
                  },
                  "partitionCount" : {
                    "minimum" : 1,
                    "type" : "integer",
                    "description" : "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
                    "format" : "int64"
                  },
                  "partitionIds" : {
                    "type" : "array",
                    "description" : "Current number of shards on the Event Hub.",
                    "readOnly" : true,
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Enumerates the possible values for the status of the Event Hub.",
                    "enum" : [ "Active", "Disabled", "Restoring", "SendDisabled", "ReceiveDisabled", "Creating", "Deleting", "Renaming", "Unknown" ]
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The exact time the message was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Properties supplied to the Create Or Update Event Hub operation."
              }
            },
            "description" : "Single item in List or Get Event Hub operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "b15b3343-836a-4815-905f-bc478ce7e109",
    "name" : "Gets all the Event Hubs in a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/ulw7/resourceGroups/Jackie+Bashirian/providers/Microsoft.EventHub/namespaces/Jill+Fisher/eventhubs",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jgr2jrcm7k31sbwpv2pgodo66fpjztkztl8bfd5yb4fq66gcjbj60pfm6v4dz6cnjobrh05n89aduboaow0oscfvobr8wkr48zv9vt10kgag4eakdn8qf3k4g6en5u47bjkgob"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Numbers Schneider\",\n    \"id\" : \"9xm6\",\n    \"type\" : \"602k0imqrld7ro433qczxt2yz9qc3alzwa7vwn70nxislhya9b7byapruax0nl6g\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-10-15T16:30:37.47Z\",\n      \"partitionCount\" : 4286333481428498045,\n      \"captureDescription\" : {\n        \"skipEmptyArchives\" : false,\n        \"sizeLimitInBytes\" : 219354292,\n        \"destination\" : {\n          \"name\" : \"Earnest Prohaska Jr.\",\n          \"properties\" : { }\n        },\n        \"intervalInSeconds\" : 338,\n        \"encoding\" : \"AvroDeflate\",\n        \"enabled\" : false\n      },\n      \"messageRetentionInDays\" : 1930430637952315594,\n      \"partitionIds\" : [ \"gv2n9d7bosahu92779xzze2y2tzxdhpkpnzoam9zteppvej26jm7zsmn2czb9nwqosy42vkpxbf6olmzitv8vhqjr4c8rbw9t32bksll8bbw0wkklmbr8npsxg0cf2hhv0rul5776lhu0s80cbjsysg5sc1u4gbi05ql8i48n15xf147gbpu8ev28dubn\" ],\n      \"status\" : \"Active\",\n      \"updatedAt\" : \"2023-09-24T22:10:26.471Z\"\n    }\n  }, {\n    \"name\" : \"Mr. Kent Walter\",\n    \"id\" : \"j096\",\n    \"type\" : \"jiims7mjn5t\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-10-22T13:59:45.471Z\",\n      \"partitionCount\" : 4278243825420389136,\n      \"captureDescription\" : {\n        \"skipEmptyArchives\" : false,\n        \"sizeLimitInBytes\" : 29100943,\n        \"destination\" : {\n          \"name\" : \"Pasty Dietrich\",\n          \"properties\" : { }\n        },\n        \"intervalInSeconds\" : 101,\n        \"encoding\" : \"Avro\",\n        \"enabled\" : false\n      },\n      \"messageRetentionInDays\" : 5071834508605878253,\n      \"partitionIds\" : [ \"fqebtlguyl2iomgtuy58j2cs4rhmzhqohylan87htbprm2fl02rz7m142m5i0mtxlm2diwqfjo8x48bh3wcfek4f81v6tywybnd0lxtf3ypr0slz91qq6xlc3z\", \"i0dnhq9ll7mg9x10124y9kuylwoxspcydkrxavecyfa2s32oiequ6pp0q35b39sl2af4m4xib61tszit9zxlvwyv8box45dtn\" ],\n      \"status\" : \"Deleting\",\n      \"updatedAt\" : \"2022-10-19T11:22:14.471Z\"\n    }\n  }, {\n    \"name\" : \"Robena Raynor\",\n    \"id\" : \"p0w4\",\n    \"type\" : \"fg4dshov\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-05T15:39:24.471Z\",\n      \"partitionCount\" : 423250630201424970,\n      \"captureDescription\" : {\n        \"skipEmptyArchives\" : true,\n        \"sizeLimitInBytes\" : 217651814,\n        \"destination\" : {\n          \"name\" : \"Dean Davis PhD\",\n          \"properties\" : { }\n        },\n        \"intervalInSeconds\" : 688,\n        \"encoding\" : \"Avro\",\n        \"enabled\" : true\n      },\n      \"messageRetentionInDays\" : 4005066812921767067,\n      \"partitionIds\" : [ \"g0w5yv0fjmpv06ffvdadvhbwz3frdgla5y7bupp6lxui29b2t2ygmqgt8p3jj6w9szlboy\" ],\n      \"status\" : \"Unknown\",\n      \"updatedAt\" : \"2023-02-07T18:49:39.471Z\"\n    }\n  } ],\n  \"nextLink\" : \"3yo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b15b3343-836a-4815-905f-bc478ce7e109",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.471963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EventHubs_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List EventHubs operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Eventhub"
                }
              }
            },
            "description" : "The result of the List EventHubs operation."
          }
        }
      }
    }
  }, {
    "id" : "30aedc40-46af-4d86-89e3-13412de39fa2",
    "name" : "Invokes GEO DR failover and reconfigure the alias to point to the secondary name... - 200",
    "request" : {
      "urlPath" : "/subscriptions/1qb0/resourceGroups/Angelina+Hackett/providers/Microsoft.EventHub/namespaces/Grant+Zieme/disasterRecoveryConfigs/cr6kv81xauuthim3090n9r2m6/failover",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qaydeb24gajnoaa0sxs06rvo0mxu5mcq1o6el5lch5ov3xos8ml0z0dfmjfoeee0b2xpsxfwdksfafald163p4jm17engnd2bvt2ic3ps9eux035qm7rkiqamih6ptxo65wxbttno7zjs50is5gjzbdmxj1f8djxzi03q8mxal"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "30aedc40-46af-4d86-89e3-13412de39fa2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.470961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_FailOver"
        }
      }
    }
  }, {
    "id" : "4d3ffe05-19f5-42ab-8454-cc8ed7b72575",
    "name" : "This operation disables the Disaster Recovery and stops replicating changes from... - 200",
    "request" : {
      "urlPath" : "/subscriptions/r549/resourceGroups/Georgiana+Rutherford/providers/Microsoft.EventHub/namespaces/Cameron+Conn/disasterRecoveryConfigs/54ky7tgmzcwdv10/breakPairing",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jmdr87vkc4icqj68zlqoymichxvut09up9o7oekj1r4etyjpgtmuwchdr2kufi2itfzvkdvvg7yxf1ekku0m3k8dk9kp8q4x60g0v2zkh25lzvwga07on8mwuq37zlj77k9k9nd1o"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4d3ffe05-19f5-42ab-8454-cc8ed7b72575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.470771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_BreakPairing"
        }
      }
    }
  }, {
    "id" : "067a2f2b-02b0-4df6-b578-0796c47cbb1c",
    "name" : "Gets the primary and secondary connection strings for the Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/ax7o/resourceGroups/Landon+Huel+MD/providers/Microsoft.EventHub/namespaces/Quinton+Jacobs/disasterRecoveryConfigs/6w8dw3/AuthorizationRules/Alphonso+Boyle/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ehq6rvh6pu7dyas9hvum529jk037qrllacs0z8z01fxq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"6yjdffa293hmg1nnxp2a8hdx2mzfib1z1k8w2cqm7\",\n  \"keyName\" : \"Luana Huels\",\n  \"aliasSecondaryConnectionString\" : \"32k1z98ht0dht8dr6g2db38m4oj14baacgtm1xhv4x69bgibtu47770le8mzwqf2uflc42qr5hc6vq4jbzwe620obhf8cj0n5lhqokg3rg6gh0rrjp\",\n  \"primaryConnectionString\" : \"df8kpiwoobrizxqc2pzgvcaiotdqtxtyjp1kws28eeamrkm7fl3juzs2agyjas2j54fq8oxxquidyzk8\",\n  \"secondaryConnectionString\" : \"s8z6vc8ya04mt8g6x7lcssi7lvm7saiqbg11m79mtide8qmwunj5nn27tq40voh99wukv38rc22uq1nbpstjug2d8fhk1mhpy3n6t3lvbiovjeafxfpax8hlg012tfq9mjr70w8bu8ysel9cfszqbbd27rzn1w7cyz7cu1ljhmd1g1zhtw1cw009g5rh\",\n  \"aliasPrimaryConnectionString\" : \"3n699dnfosaeglvuxf7wwkxlp54b4s6ih9is26o3wsh4\",\n  \"primaryKey\" : \"g0vpysixojtteuwatp5q0fq2qpkpvagw55wao755n6k06roc1btqlzrrmxdn1krzllfy6a13twzlfoxux6t6xoq8jn39rxbt7k8rwk29v6y6ixssh2xub0xamn6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "067a2f2b-02b0-4df6-b578-0796c47cbb1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.470584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "aliasPrimaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "aliasSecondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary  connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the AuthorizationRule.",
                "readOnly" : true
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              }
            },
            "description" : "Namespace/EventHub Connection String"
          }
        }
      }
    }
  }, {
    "id" : "7dd4d176-2126-4639-90ee-d10b8ec06b6e",
    "name" : "Gets an AuthorizationRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/x363/resourceGroups/Iesha+Kling/providers/Microsoft.EventHub/namespaces/Camie+Sawayn/disasterRecoveryConfigs/jc98mov8047g6zz1l1ihi0dangry/AuthorizationRules/Thomas+Nikolaus",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v1qz8001ypurtj0k4lzapwbwdt0ejx67"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Eloise Howe\",\n  \"id\" : \"1kok\",\n  \"type\" : \"5zhfho4lijkot40x4wulswjac6ok87bsow4376fw8sdfgb3huq215542c9kkoqe96bi0grjk65\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Manage\", \"Manage\", \"Manage\", \"Listen\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dd4d176-2126-4639-90ee-d10b8ec06b6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.47017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Properties supplied to create or update AuthorizationRule"
              }
            },
            "description" : "Single item in a List or Get AuthorizationRule operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ba8df16b-ccf7-4a8a-b725-886bda0e076c",
    "name" : "Gets a list of authorization rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/9vr5/resourceGroups/Gavin+Hilll/providers/Microsoft.EventHub/namespaces/Nida+Walter/disasterRecoveryConfigs/3vnm86dloelkbl2tdb1e15mli2o501t/AuthorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "s56x1cpxgaxjq5j7wuq4lf1do0ra7zg6lihnimpl5hvv13f9xakjxd8fhlo2door76nhqtcscgc87s4u9cash304zkuxraeyrmb7cyiluww6jkoj5flg5d1qpq6z7hae41mpn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Darius Howe\",\n    \"id\" : \"4f8i\",\n    \"type\" : \"k9h5k8hq4gjgd16dcls51t0eer9un127l5ntw06vwz8nrjrg8xjvkdwuxd3m5hfbp782f5nabyksq6kydlrc8cy63p7t\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Manage\", \"Send\", \"Listen\", \"Send\", \"Manage\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Aliza Fay\",\n    \"id\" : \"l1f4\",\n    \"type\" : \"m43sixh7t7u5iped9y8rta8llpcq52z1eigpqb38zzd33ibtl9x0zd35vw8ahj97vpuzosfx6e8zb7rm02qkt66slvtgqq90cuu6b5ias3l611os9niweg20nb4lqfvsnz8\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Listen\", \"Send\", \"Manage\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Brandon Stokes V\",\n    \"id\" : \"02dr\",\n    \"type\" : \"cxf6shcjmbgcxp92k3t3k40g35shhp9lg3dsn4728h80stbmzri0oo7a0cwges8ik72p1d7vmya9c3bsr9iqpj8bb14\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Send\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Sharmaine Ritchie\",\n    \"id\" : \"q881\",\n    \"type\" : \"b7vd4d7dm05qws8945naemd6y66319jloi960qygaldb9hhufyqm56fizuc3calsy38nnuhxoausjnpbp9fn\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Listen\", \"Manage\", \"Manage\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Breanna Barrows\",\n    \"id\" : \"79l8\",\n    \"type\" : \"x9fwf8ty6cnjbqh1ok1f356uimv1bj2zmwiidsxxgsnbfpo71w4lm3p3ex19xcjzvbps2qo0qqkc5yfbo0ply2lmkg75dyd7dnd7qealumjb0tuc5m07z7e5e6sfnsaeydxu8zvurc3yer8v4vq4s9sm3lk9njw60\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"7xpv2e08cpnddc9y42vfq7u8omus8zg0nk5tixh3arcgnq3tkj23stxca4pd2ke8i4knnqk0xphkiu6je4md5js\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba8df16b-ccf7-4a8a-b725-886bda0e076c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.469769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Authorization Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "cc5ffcbf-cbb3-4a56-b6cb-00844cd03375",
    "name" : "Deletes an Alias(Disaster Recovery configuration) - 200",
    "request" : {
      "urlPath" : "/subscriptions/59p5/resourceGroups/Elin+Rohan+MD/providers/Microsoft.EventHub/namespaces/Jamila+Marquardt/disasterRecoveryConfigs/km3du9gc5q5oon64s7bzx1c1297n2cycv1gkgvftmv",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vgq3nncspwizdbttczl0yeohvvyffik6kezj1h4ldh2d8a4viqi4yoecnyldvmg3cnc0dhichzod7ae026tkrgm09retddle0fpn35zim7icop4lfep7jd9tq12"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cc5ffcbf-cbb3-4a56-b6cb-00844cd03375",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.46884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_Delete"
        }
      }
    }
  }, {
    "id" : "d65158f7-e247-4876-a7a2-7e8df485032f",
    "name" : "Creates or updates a new Alias(Disaster Recovery configuration) - 201",
    "request" : {
      "urlPath" : "/subscriptions/74hq/resourceGroups/Miss+Sammy+Crooks/providers/Microsoft.EventHub/namespaces/Lettie+Thiel/disasterRecoveryConfigs/b",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "d81jhl88aqle3xqa2k64btn8j7zsf4zazyt2wp2aaue8e6lec7malp50udhk0hd43zy3exjq9fsvfpzdrwgndy"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "d65158f7-e247-4876-a7a2-7e8df485032f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.468658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_CreateOrUpdate"
        }
      }
    }
  }, {
    "id" : "ad48d10c-3db0-4932-a5dd-320add144d3c",
    "name" : "Creates or updates a new Alias(Disaster Recovery configuration) (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/gxd5/resourceGroups/Gregoria+Kiehn/providers/Microsoft.EventHub/namespaces/Ms.+Ed+Shields/disasterRecoveryConfigs/eml3tmj4w2ecn51wl22wvptidv5xqz8l",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "two7pi3cixq152cf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Quintin Kub\",\n  \"id\" : \"99h8\",\n  \"type\" : \"war7t2pufr4euqb5gogjk2chinsk5dej8qzyuf9zc4gzlnddnc6edymph8yj3z5jvf9k0cz76y5k3u22i26fdtknqwfw5spes\",\n  \"properties\" : {\n    \"partnerNamespace\" : \"opynp2i0tqn5p1j03ah8h2didrj77town9d9644wjy1pl0xj41bmxcd84vm4pzeiv4ug6u613yt7ieldvkgvf66j2z98yfbcc0wlq5w1t0z0cst9qvgcyw245h0iqsnc2jv2d3uq6aw72eupp6kc6vzy0n\",\n    \"pendingReplicationOperationsCount\" : 7838837430840953160,\n    \"role\" : \"Secondary\",\n    \"alternateName\" : \"Ms. Janine Boyer\",\n    \"provisioningState\" : \"Succeeded\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad48d10c-3db0-4932-a5dd-320add144d3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.468469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "alternateName" : {
                    "type" : "string",
                    "description" : "Alternate name specified when alias and namespace names are same."
                  },
                  "partnerNamespace" : {
                    "type" : "string",
                    "description" : "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                  },
                  "pendingReplicationOperationsCount" : {
                    "type" : "integer",
                    "description" : "Number of entities pending to be replicated.",
                    "format" : "int64",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                    "readOnly" : true,
                    "enum" : [ "Accepted", "Succeeded", "Failed" ]
                  },
                  "role" : {
                    "type" : "string",
                    "description" : "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                    "readOnly" : true,
                    "enum" : [ "Primary", "PrimaryNotReplicating", "Secondary" ]
                  }
                },
                "description" : "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
              }
            },
            "description" : "Single item in List or Get Alias(Disaster Recovery configuration) operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0ebfd92f-c1e2-4672-ac70-2c2cc2b743d2",
    "name" : "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namesp...",
    "request" : {
      "urlPath" : "/subscriptions/9uc6/resourceGroups/Mr.+Lesley+Reichert/providers/Microsoft.EventHub/namespaces/Gilbert+Stroman+Sr./disasterRecoveryConfigs/zslolayc3aqnlkwva",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "s0kjlvpdu84f2rb2otplj6yid382gf41qcvdx1gxf3zxkda1m15sryr823pf3urkl7uc18eddi3e4yvpquuelufzmrp9tiiyr2vquhrdoab6ieku4shb25w5lsa87rv8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Lamar West V\",\n  \"id\" : \"47iv\",\n  \"type\" : \"5txai0adkjl4jxplq3eaqy0egypt7i6ybr2eusxgc9p2i1jd3ygdkzq8qh3aryy7hwe87bf4upqmj0tcwtqbc5eqhc9udtgpd2u4fcp9y5mow6dyk0q1\",\n  \"properties\" : {\n    \"partnerNamespace\" : \"892lr0ddblwiu2lyv9e0y0tnvr3vtpz3z5sln6ok7r54ylfn3oj200aai9ttxm24ozd6cml4y0a9ze36j2cei94wru16lt92lnk4fh8a2c6r3nis0wjya2cud5beawdgko7mylvo0ejstynrqqe053cmtwnr2hlmly\",\n    \"pendingReplicationOperationsCount\" : 4194301435334232906,\n    \"role\" : \"Secondary\",\n    \"alternateName\" : \"Mrs. Isreal Kutch\",\n    \"provisioningState\" : \"Succeeded\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ebfd92f-c1e2-4672-ac70-2c2cc2b743d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.467976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "alternateName" : {
                    "type" : "string",
                    "description" : "Alternate name specified when alias and namespace names are same."
                  },
                  "partnerNamespace" : {
                    "type" : "string",
                    "description" : "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
                  },
                  "pendingReplicationOperationsCount" : {
                    "type" : "integer",
                    "description" : "Number of entities pending to be replicated.",
                    "format" : "int64",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                    "readOnly" : true,
                    "enum" : [ "Accepted", "Succeeded", "Failed" ]
                  },
                  "role" : {
                    "type" : "string",
                    "description" : "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                    "readOnly" : true,
                    "enum" : [ "Primary", "PrimaryNotReplicating", "Secondary" ]
                  }
                },
                "description" : "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
              }
            },
            "description" : "Single item in List or Get Alias(Disaster Recovery configuration) operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6d35007f-19f2-4bfb-849a-1477c8723210",
    "name" : "Check the give Namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/60zg/resourceGroups/Dr.+Gaylene+Breitenberg/providers/Microsoft.EventHub/namespaces/Annalee+Tremblay/disasterRecoveryConfigs/CheckNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9f69cj8l1gintyrn7rmh2g18xlironrzngiwld6innlpcsvw69wnvxise56kg40cz32qnhjvwlq2sdbflf0vbesz0ilk96s9qkk85d7cp611i9f29pv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"InvalidName\",\n  \"nameAvailable\" : false,\n  \"message\" : \"Autem aut voluptatem nihil. Non at blanditiis quia architecto. Totam maiores eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d35007f-19f2-4bfb-849a-1477c8723210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.467359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the Namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "The Result of the CheckNameAvailability operation"
          }
        }
      }
    }
  }, {
    "id" : "f5a54f13-3cae-4720-9d81-3807612e6738",
    "name" : "Gets all Alias(Disaster Recovery configurations)",
    "request" : {
      "urlPath" : "/subscriptions/i0l4/resourceGroups/Loretta+Kozey/providers/Microsoft.EventHub/namespaces/Kyoko+O%27Conner/disasterRecoveryConfigs",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8qa6tjrgd0648jmxix4dg1yca46d6cj1e10h2wc4l4b5srn7m2j63lxnrhuk1o1e5f9cno3hsbobwwba22v5zu0zk05enrzmd0ln4v8mc2he89toj88hxhfi8gdzbr65uv0bgqm4y5iy5umiwmm4c0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Domenic Stamm I\",\n    \"id\" : \"f4i6\",\n    \"type\" : \"jhnuxjf3qg6wmjdd0j6jkglshero8cv7in1yser\",\n    \"properties\" : {\n      \"partnerNamespace\" : \"1e754hlh1ccm8oe43z4zvmb\",\n      \"pendingReplicationOperationsCount\" : 3726604103934478513,\n      \"role\" : \"PrimaryNotReplicating\",\n      \"alternateName\" : \"Quintin Hansen\",\n      \"provisioningState\" : \"Succeeded\"\n    }\n  }, {\n    \"name\" : \"Jason Pollich\",\n    \"id\" : \"h51f\",\n    \"type\" : \"q3o0zmlwhl69nn2fvgztqlj0qjpoqvhbij0zp7zhky9jsqcmjf5zb89dor6y53ebj5qeape2hjpy14lvle1g19fs9q1z21bioio1j13rw41qengp3uavde0dntynheqd3elpvtlehkxa0yq17jgbuxl1ov29j51rupao2oe4wc183urnz58uld\",\n    \"properties\" : {\n      \"partnerNamespace\" : \"152i7h91plt60ejps68zkldbhkdof9vvmwjvky0d14sfgvh1dupihupdkteziede0y9960q70sda29fkh48ooxqzr9fz4roqosiw4qvqlc7n59htywlhm749wrzmtzdq9iwcjcrji6xuite1m5lxufmqd9u2yabyt06h2v95\",\n      \"pendingReplicationOperationsCount\" : 894885435252118775,\n      \"role\" : \"Secondary\",\n      \"alternateName\" : \"Lucius Hayes\",\n      \"provisioningState\" : \"Succeeded\"\n    }\n  }, {\n    \"name\" : \"Mr. Valentin Aufderhar\",\n    \"id\" : \"h5zm\",\n    \"type\" : \"nt877lrotwejg275pju5jr59y2o1kqev8py\",\n    \"properties\" : {\n      \"partnerNamespace\" : \"or4gyepemymj0zpcqcf0rkqes2s4njurcehxpu7mlsaitheij40hp63a2968075c3kqc62gxsyzogj67edb3yst1s3o1bgwmmc45h03mof6d3t\",\n      \"pendingReplicationOperationsCount\" : 4262052720419922788,\n      \"role\" : \"Secondary\",\n      \"alternateName\" : \"Chris Osinski\",\n      \"provisioningState\" : \"Succeeded\"\n    }\n  }, {\n    \"name\" : \"Gary Kuhlman MD\",\n    \"id\" : \"vnch\",\n    \"type\" : \"thvvbfdw3stt47ud62ze8c34k146zy0hf8y9nsugzoh8ico6p7yspjl3s46kodyq14736ofcsa7nzmfruoujmx2si3ydeqgtujycnmobhrxmsig0x5mvj49mojjk2zlaoefwmr3a8vmi02enqdqj9rrak8h\",\n    \"properties\" : {\n      \"partnerNamespace\" : \"sdonm8z4eqzc59rhd9vmaa04ojftfndfdpy9hoyzjthb57vli2bf609u91omtdt4asa69tnn58yr2znvtg3l6y33xdd877i5s9bn\",\n      \"pendingReplicationOperationsCount\" : 1426921470422628597,\n      \"role\" : \"Primary\",\n      \"alternateName\" : \"Lieselotte Mayert\",\n      \"provisioningState\" : \"Succeeded\"\n    }\n  } ],\n  \"nextLink\" : \"ng9hlktm5jp781oah94zptt0sbo4o2bjlqibj9r8th3ckjytce5p9uvt2193jf0qy2lj2ubk3zpi9pu8f8v4bkcu2gc467we9i3plm7st5ae7svnybuvgslheyld5mo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5a54f13-3cae-4720-9d81-3807612e6738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.467078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DisasterRecoveryConfigs_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Alias(Disaster Recovery configurations)",
                "items" : {
                  "$ref" : "#/components/schemas/ArmDisasterRecovery"
                }
              }
            },
            "description" : "The result of the List Alias(Disaster Recovery configuration) operation."
          }
        }
      }
    }
  }, {
    "id" : "6a3decce-e05c-4ccf-a913-2afe3ebd2608",
    "name" : "Regenerates the primary or secondary connection strings for the specified Namesp...",
    "request" : {
      "urlPath" : "/subscriptions/879o/resourceGroups/Harry+Leffler/providers/Microsoft.EventHub/namespaces/Walker+Haag/AuthorizationRules/Curt+Wehner/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "aqlokup957m9c56wz0ct"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"4j65urp8eua9vypr1e1b8tp1x39p9jebg1ffnu5\",\n  \"keyName\" : \"Cammy Schultz\",\n  \"aliasSecondaryConnectionString\" : \"6tjncdi9a1ifwukzbq2b5sooj7oozknteys68fmh7h6z3yzhzy1k94ifss00j4c9j58q69f52z6gcw0z69ba9a6cthujvkxmomj9k4ojadoz4jxlzhufbuh0\",\n  \"primaryConnectionString\" : \"19jfc1zajvdzjnis4dzfjudw4uveaw8c1zby7qd18wgn5uuchaqn105mpoyu8nyp7bilrjn23rotp6scoyvavlfg76jh2mg0kll8oolqgu5ru0v45yh3koj2zxoodcxpn1owtiocajumuf8fxiu2k1huo67hjl2oxenz8ovhd7g\",\n  \"secondaryConnectionString\" : \"eko967xczpfr3d5rco8ot4ldq4exn2y8cky87bmjruux6gdjrx0kl30gr5uzg\",\n  \"aliasPrimaryConnectionString\" : \"q3ped5uhwr4qw6kgxrysosyrfikb\",\n  \"primaryKey\" : \"zbcnw7rc703ueeuvwiinoldmwkx6tdh7lqk6ue311f317z3rxw3t7jqg4r0fcylzn4bne3qtoafun86x5i9md6f2v7a1hwud1samswsuk5wimeaoilew8m2h1sn0blg9a7lnc8cj0aiho7wpwtkl3rkctsn0uos1f8vpzj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a3decce-e05c-4ccf-a913-2afe3ebd2608",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.466079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "aliasPrimaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "aliasSecondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary  connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the AuthorizationRule.",
                "readOnly" : true
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              }
            },
            "description" : "Namespace/EventHub Connection String"
          }
        }
      }
    }
  }, {
    "id" : "bb4c5a73-859b-4945-a6a6-ffb4a6cd9cd4",
    "name" : "Gets the primary and secondary connection strings for the Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/fhc0/resourceGroups/Hermine+Funk/providers/Microsoft.EventHub/namespaces/Francine+Bosco+IV/AuthorizationRules/Jonnie+Thiel/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4fzzxa3697864e1za3v8pl9if9d1shstwqt9fd689egcd7zg1v7fdu5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"5ar2aslrdf2b33z3hf6ldxqhw5spx8dpzamhchswmly0zq1bdp3whrsoc71ysncmozt6juu9sm1qw205yyg5vwse2y4axhofyxyn22gxbotgn6oisaq3v15sihxn19fhzs6voixym44u237esx1eigvhxbb7lg0j3f07j5llaefs60jgm\",\n  \"keyName\" : \"Tommie Gottlieb DVM\",\n  \"aliasSecondaryConnectionString\" : \"jniextkrsp9uwnr1cxl3clvhhnvtv3cr2de34ua1qov\",\n  \"primaryConnectionString\" : \"2rvpubehfryszp0mtktjfgaxe4\",\n  \"secondaryConnectionString\" : \"qaufsh8o9oksgb0fte2735bgdlw89mw4i4wvmbs7ornztsu4ujm1i67e07pfr57asqobyh1h60ojdmb52smkc9vkqd0xveyagfk39a8s3w4c9py8i8sl\",\n  \"aliasPrimaryConnectionString\" : \"og3jdxkwa3u4qc6pysja7b4whcasyrc1zogcp9crfm2l3pd7802n0sbh83metamysycrn7x4nojseiiba48s0oq13c04d18fh57eib7l7c0lw5udq3gffx9th055dtuowpcqeqegripob3gqt2tphyekg2vilvxx13xznyj0\",\n  \"primaryKey\" : \"phw604otlq65eglfnq8zkqnc6ht5up1bqhpspy8aq2zyr7x5gb1ls3t5lj9y9c9pst7akvlkjrfoszq5n2d53exl6k1m8trs8jfhwo5voppsfrw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb4c5a73-859b-4945-a6a6-ffb4a6cd9cd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.465733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "aliasPrimaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "aliasSecondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary  connection string of the alias if GEO DR is enabled",
                "readOnly" : true
              },
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the AuthorizationRule.",
                "readOnly" : true
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace AuthorizationRule.",
                "readOnly" : true
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
                "readOnly" : true
              }
            },
            "description" : "Namespace/EventHub Connection String"
          }
        }
      }
    }
  }, {
    "id" : "9097d8aa-431b-4b57-b707-48ff30479a48",
    "name" : "Deletes an AuthorizationRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/597j/resourceGroups/Gustavo+Heathcote/providers/Microsoft.EventHub/namespaces/Rosalyn+Reynolds/AuthorizationRules/Rashad+Thompson+III",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lsc84e629yygn3ov6b4savjtxan5e3u1uoezkp9i2y88u7qujyf68isfz26d4xic1ufg2h3fal170oxypob0e8p4ygz4jao7ebbs6thdlfu29y8863ofdc4cyv9bc7ia8p6m16zsakg8e68hayaac3xzqwmp9j94p"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9097d8aa-431b-4b57-b707-48ff30479a48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.465333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "7996bc53-4a99-4fa4-b975-225a8de46bf8",
    "name" : "Deletes an AuthorizationRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/c039/resourceGroups/Rima+Koch+IV/providers/Microsoft.EventHub/namespaces/Ms.+Maxwell+Gorczany/AuthorizationRules/Kim+Volkman",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lwiew0q9ip46xrzhtkp0chz6xcm66si9inmkmrazszp8ymbwlwc9iobg6temmo3aerkmwq13uoamg0z5ber81z66ui4s6qz46xpi6crkceega70d6znjzpxo03sb9ja3yidxsd8rfjyb6"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7996bc53-4a99-4fa4-b975-225a8de46bf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.465144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    }
  }, {
    "id" : "5ed5d1e5-a8cf-4a10-b385-9c8fa7fe0e08",
    "name" : "Creates or updates an AuthorizationRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/egf0/resourceGroups/Moses+Greenfelder/providers/Microsoft.EventHub/namespaces/Taryn+Kutch/AuthorizationRules/Randy+McGlynn+III",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w7rnhyav56wwvoujle2zq7cv1x5kwqp33lyzrfpc85g7zzd2kb7sc6r270mlnw2sd9yjvkoyeoibecmnd5n03uc40hsij4emm1krigs5qrw64h760cb6y869jgiuzb6bf1g86tfdt7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Eddy Mayert DDS\",\n  \"id\" : \"o42p\",\n  \"type\" : \"jy0fs8gmyqolqfrunaaqyiavqazgj5rzow40\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Manage\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ed5d1e5-a8cf-4a10-b385-9c8fa7fe0e08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.464933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Properties supplied to create or update AuthorizationRule"
              }
            },
            "description" : "Single item in a List or Get AuthorizationRule operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0159133e-4c97-4935-9d0a-eabf2093954c",
    "name" : "Gets an AuthorizationRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/040h/resourceGroups/Bernadette+Yost/providers/Microsoft.EventHub/namespaces/Mrs.+Gene+Crona/AuthorizationRules/Antone+MacGyver+II",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bzvp7xo6wd8hrrroqte4fsb45pr530ynikwokznvilolymvr5isrw162n6trfsj7mkbh1rikli13ncl9u32y3mez8ndyjsaqh0qnry1tlvmnaovn16i95aop4l8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Roman Goldner Sr.\",\n  \"id\" : \"l2y1\",\n  \"type\" : \"x6rza46662jqvtkkg0lwpzri6baoxolcqezw4v8iun53o49kxxwjnyest12r8nhjgyrmjftkitsab01qupexnz2uifxjjtzq9a4pan0b8kt3zedb02mm2yu\",\n  \"properties\" : {\n    \"rights\" : [ \"Manage\", \"Send\", \"Listen\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0159133e-4c97-4935-9d0a-eabf2093954c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.464587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Properties supplied to create or update AuthorizationRule"
              }
            },
            "description" : "Single item in a List or Get AuthorizationRule operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "84b40b40-632d-4a28-9a09-2a9058f7e5e1",
    "name" : "Gets a list of authorization rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/7649/resourceGroups/Reinaldo+Bogisich/providers/Microsoft.EventHub/namespaces/Elizabet+Murray/AuthorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "go4bxjel592otsuj0xflmq3zictm7uls1vext2qpj9cl5j1890xdcjyvhywcgi478uix5zxr0mxqp68vy036apa697rc0kkqtor7cnihh8sixw6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Merle Cartwright\",\n    \"id\" : \"f53c\",\n    \"type\" : \"ocyn630ruzgsft763bcr61zt0vr2jyn9ktywxcfx084qrmjqfm8\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Listen\", \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Moises Stamm\",\n    \"id\" : \"4b35\",\n    \"type\" : \"xynp1ks919aji46u5f8w4jgas5x8tyh6ih5710tjnccgwfauqdz1gvmtkvu0uwls4jqr2c1zp2mk1i6uhzc9ogs4inftcxeeprc52v6m05qvt9qxpm7ugq6738qafwpf5hp8n57z4uiwgohbn98l905zq71lgktc66m6nel3g\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Listen\", \"Listen\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Marcelino Marquardt\",\n    \"id\" : \"f160\",\n    \"type\" : \"fd28gn1c2h1q1ihsmv1n8yffjsnn05fvw6j64a5smflwuzrfsoh8mps1hiwkmjagz8ingz1csm321763pvtza7oh54a4ytjgs6bdhcqtxntt0pzcmwc0kob78xoja0t4qgyml63allesxle7qpwjc4ocxlwdpm1iqrb3e9sfb1hdzz1738n3\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Manage\", \"Listen\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Dr. Melvin Schamberger\",\n    \"id\" : \"6i8n\",\n    \"type\" : \"tua5khkqsfnfpnlk2pxj7loxqwlse983xkhz\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Manage\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Fallon Conn\",\n    \"id\" : \"0rnn\",\n    \"type\" : \"udw6lpo18kc4jba088u89t5rb3dmjs4vy6leyt221og7uphfm2go6f0vemmn7vpceuga1mfh748k8ptvr1ie7l\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Send\" ]\n    }\n  } ],\n  \"nextLink\" : \"tvkmbn7tmdjxjof7b7xc5yhqjzi9luxxee69jidaeoymc9glfjr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84b40b40-632d-4a28-9a09-2a9058f7e5e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.464219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Authorization Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "44ac5984-83cd-4eba-9934-cbd9aa6c2766",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/j87d/resourceGroups/Harvey+Wiza/providers/Microsoft.EventHub/namespaces/Wes+McGlynn",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xla4ol9amry2ugfsz7y6glbrlv0xj1c19kjhyzdiecok46fwzmk99z9mirqs9pc7l9fn3fja78wwbm8072ei09kjwgyyuue3vx"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "44ac5984-83cd-4eba-9934-cbd9aa6c2766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.463333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update"
        }
      }
    }
  }, {
    "id" : "b5ae5552-0466-4835-bcc2-53149d2c7993",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/90uz/resourceGroups/Marhta+Predovic/providers/Microsoft.EventHub/namespaces/Lauralee+Reinger+V",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oav2wh9fdj1bb02dlyk"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"shjpcmic7krij7t8ajkpxree27gf35ecgkckoww6lt5yuizex6yii3u5zr4ngcelq74t0qrz57ov1eqccfqitjomg2mnulpt33oa2yxc58b7zpanjqztgp7j3gsjmcr0iofo72fw023kipfen9ic809rcefb7u\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 13\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-07-13T07:09:35.462Z\",\n    \"maximumThroughputUnits\" : 0,\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"94s9\",\n    \"serviceBusEndpoint\" : \"4pg67ntp25039mrrgpqhaejpzcf9ifdhkilv3ts2k932w0itegqlmoq31mzdphnkwfe5akog75aosn8ehxbe4x5cqvqyezlkod0gvo61kkl4rhz6\",\n    \"isAutoInflateEnabled\" : false,\n    \"provisioningState\" : \"Illinois\",\n    \"updatedAt\" : \"2022-07-26T00:36:24.462Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5ae5552-0466-4835-bcc2-53149d2c7993",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.463165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "e670cd8c-8f8b-4296-839e-6958146f6211",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/uw64/resourceGroups/Miss+Dannie+Hilpert/providers/Microsoft.EventHub/namespaces/Marlon+Runolfsson",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uctgt5ktxd0xrz7gw9ue4b6oysq8cywin0glk5z267mzbqnzy852oa0t8pswxy34rvd8xs8n6n2tfoukx88dk55cbk79dkblxuw1m9jt97kubq1y4jwde97ao2ru6nw12h0cxptks06unnyqfwud0xdy6bve2rrm5wbeoqxvuum5fw3wvad54icemr42zl3mbr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"njedm532j41zpqi2dakw76dmbu72v9xi23mpaoaqjl6x3hh433qrov7c8izqbkn91aygewrvxx9s3xjsohbvkz4dj8ftkb2ogv8mjeupkq0z5csnzrjfjftm3scp4jysovo6hc3tkig1pt9xguvpt5fy5t9zl6fk8a5ygo23udocj401stv3ajcar00j9u69cjw\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 1\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-20T18:27:16.462Z\",\n    \"maximumThroughputUnits\" : 8,\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"bpy2\",\n    \"serviceBusEndpoint\" : \"ftr4d98r0kfydiajot5jsw14hvgystnzankxdkppo5y4usy27m9kndb5o8pc302d65wfd75o3zkygy9u1w2nkftp3nrdsuawr5qog9yanwf6albo27sn7eqciwztce669rcxqbgiihubg77vaazy6nrl5e2o\",\n    \"isAutoInflateEnabled\" : true,\n    \"provisioningState\" : \"New York\",\n    \"updatedAt\" : \"2022-08-29T01:31:29.462Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e670cd8c-8f8b-4296-839e-6958146f6211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.462781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "60a29696-f208-424f-abe3-a57a1bc385df",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/eez7/resourceGroups/Lory+Daugherty/providers/Microsoft.EventHub/namespaces/Eusebia+Kling",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1u9vc7ysxqcct4282rjn6ls429a5knua2g0nagiqwhx5zx7cgong2nv9754losfquohdllti7u2"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "60a29696-f208-424f-abe3-a57a1bc385df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.462382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "3c0edd25-2768-4059-a6e7-1cdca8759862",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/99vd/resourceGroups/Percy+Hickle/providers/Microsoft.EventHub/namespaces/Dr.+Benjamin+Ortiz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bq9uawlhzejbigivgliouvx1bu5kkdpgueu6o3l04tffl2228wybrcfwi1ygtw7k71bqm946jwz1l87myrstihfs5hm8gqejwbrqv3k6z3vb5iclrcbc7csw4zvbux9lmnuus892imbv287tf1nmp405znbg3rdrhy5mcc1y2snvv3l6mnl1467umdxd5sulps2"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "3c0edd25-2768-4059-a6e7-1cdca8759862",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.462205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "e368d183-989d-4c37-8d12-0de7f5fa93ad",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/14qc/resourceGroups/Jetta+Gislason/providers/Microsoft.EventHub/namespaces/Young+Cremin",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ro1xkrlxs0xoqtynmcvvda72hj5uw0susj0l1ds8bsxo2gkl8lgmmax0rk9ei288zpkx7lxn5zndgyzzmtgatrwteu6dt6i8dlwjl4uielz689hb8lak0l3j7hy6zoy45fdeg2upv"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e368d183-989d-4c37-8d12-0de7f5fa93ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.462043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "6dae0bf6-bbbf-4524-a60c-cd6038017bbf",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/868v/resourceGroups/Isreal+Bernhard/providers/Microsoft.EventHub/namespaces/Maurice+Schulist+Jr.",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2z1sxyzo7m7001fng0ehq4cxyl0navfhunyyhcvqsj5elwwfcaxzifgmjq93gax07cks68fcahsdgrcdjjihhme6hustieq2l9ys875c7otntul956q4gmbueer0ktcds3wvsxzomhb0x9wv"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "6dae0bf6-bbbf-4524-a60c-cd6038017bbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.461869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate"
        }
      }
    }
  }, {
    "id" : "030df585-c729-4b49-a69c-6395db72536d",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/0i17/resourceGroups/Jayme+Nicolas/providers/Microsoft.EventHub/namespaces/Refugio+Kreiger",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ch5qcnwz76aq5s2b627ju1uexeajo1tjmnvy4t4vulg62c6h0h7p1y0bvhavdirkisimvdlpy4"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"c3qidbqhnvjluo4p4rjl8mkcmur1m2yabrp6gkx891cthpivtl6xxwhc741bgvbj7sdl1w9yzmnmf7vcqeghz46otfu\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 5\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-09T20:09:50.461Z\",\n    \"maximumThroughputUnits\" : 19,\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"kq90\",\n    \"serviceBusEndpoint\" : \"s2unf6wi80x97dftowy9vloasxsftrl0pq2iiq8tzho41yzygsweep6ak8zmph1f88cj2chf5mpck3pso2b4877zxgwucjysqm42n3\",\n    \"isAutoInflateEnabled\" : false,\n    \"provisioningState\" : \"Iowa\",\n    \"updatedAt\" : \"2022-12-21T13:50:27.461Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "030df585-c729-4b49-a69c-6395db72536d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.46169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "890ee770-f6ba-4fa3-828c-1a955f424c8f",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/3w80/resourceGroups/Thaddeus+Runolfsdottir/providers/Microsoft.EventHub/namespaces/Delbert+Carroll",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ipjs7yimn5qhiyk8s3bshzzst6f7o4sbjqqvpj9kaguel4q377gu06vby3q6o6nh4hnaahnypv6s97rzv32rgokbcdqck4kekru6m0oqkmgsd89uzk4f696p9t4blyudiz4yr80yf86iukm51w6xdk8kcmv9mw7yceore"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"c8iimug8mxxrzt1jittplqjzdi47mbqn0j1v23yme4wonqfhddaskm8zcaf2jv2bwbmsw744cmpxjirs6gcsr68karor6cu10ip8lxfmjaaab1cryyhka3j3m4m57eeq3qq2wtn3nhqjtjrn7lba9cxb2a5mpd55b4qkdwzkfnx1n5c7d\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 16\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-09-02T18:39:08.46Z\",\n    \"maximumThroughputUnits\" : 1,\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"046b\",\n    \"serviceBusEndpoint\" : \"d3ehnq4ao4tmfy8mpxy6l4\",\n    \"isAutoInflateEnabled\" : false,\n    \"provisioningState\" : \"Nebraska\",\n    \"updatedAt\" : \"2023-05-17T22:03:14.461Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "890ee770-f6ba-4fa3-828c-1a955f424c8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.461302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a6c10f33-e8b3-4282-8302-f74e9e9d0d2a",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/hz45/resourceGroups/Daryl+West/providers/Microsoft.EventHub/namespaces/Necole+Hintz",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "q9jhy70t7eljbwbbd4xcyj4rc1fjh"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"lpxyr3u137vjnn9g1ecv1xnu2u577s3jq013zxlhwstkie25w65cn2n3pyl6cxdfr2gg17t8u0gbmawmpuk71m8df\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 3\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-07-11T04:01:34.46Z\",\n    \"maximumThroughputUnits\" : 13,\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"33e6\",\n    \"serviceBusEndpoint\" : \"0vupz588mgxjp8dy45aexavzxt367rgc5dr218oxfid4aetqcigeclshbbfdfs6491fx9nydwo3bmwso2voxnw9rha3xc47yl4v205bnuhh15mamlleg2tep4i5ir6\",\n    \"isAutoInflateEnabled\" : true,\n    \"provisioningState\" : \"Nebraska\",\n    \"updatedAt\" : \"2023-08-15T09:56:19.46Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6c10f33-e8b3-4282-8302-f74e9e9d0d2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.460916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "8563ddc2-6f80-4a1f-965a-963d38bd43f7",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/qvdv/resourceGroups/Ms.+Keesha+Bruen/providers/Microsoft.EventHub/namespaces/Deon+VonRueden",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ol4h9yp2oh7f56dsivmirjvp7h2x76wlj91hrsg6pkj818sfez17uwivdgtugnkdhbbg42trpul5hwqe6vcmify5wyg9n7xfheff0bsvkz1r053b3mdujsdo42innxvq3yjx3ld66agiau7sfo6wwr8zpp275b653gt4furanf5xkp9wsae"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"a1rm23j1jykpzyc4fws\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 4\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-16T23:41:37.46Z\",\n    \"maximumThroughputUnits\" : 5,\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"r4lm\",\n    \"serviceBusEndpoint\" : \"ov1vszd0of2l5pk7jytpfvdhzri5y6a5dbt5u7y8v5d5rpffql74agzznpienpv7u13z2mg\",\n    \"isAutoInflateEnabled\" : false,\n    \"provisioningState\" : \"Wisconsin\",\n    \"updatedAt\" : \"2022-08-12T14:14:38.46Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8563ddc2-6f80-4a1f-965a-963d38bd43f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.460528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a842eb05-24b0-44fb-8d37-2c1666780296",
    "name" : "Lists the available Namespaces within a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/vd6u/resourceGroups/Cristie+Stokes+DDS/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0yr00iaf4r9c9137bkt0umo0acv8tnygy8htn7ckg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"yunv85iskme357hpc25rxd78nzlsmuf7nrjh0ya7yofvd8bicpzsfaf1ufvn3cv3rc4ddg2ccgjiojybp\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 2\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-22T13:58:31.459Z\",\n      \"maximumThroughputUnits\" : 13,\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"242l\",\n      \"serviceBusEndpoint\" : \"vpsop40v6qcy9oh3zhb8okdf1vlazij643dx3yhu3insf370cubm0umj317gh8lyqkg1eymzyea4ps9c883u897jgozarvwz5k6accizrn01d9zon8zcjgizursvzvi2qdv6zphaegpuwtt7eth06nyww4n6qgam4xmzbjae\",\n      \"isAutoInflateEnabled\" : true,\n      \"provisioningState\" : \"New York\",\n      \"updatedAt\" : \"2022-05-22T13:34:46.459Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"ias9v1r8roogcaqwxgipns8dg0z70s33gg754u9iys7kp1wghu3tchwqxas45v4sry7ay8x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a842eb05-24b0-44fb-8d37-2c1666780296",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.460052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    }
  }, {
    "id" : "5c2d2d0c-6f81-4b40-8473-d242d2a7a9b4",
    "name" : "Gets the available Regions for a given sku",
    "request" : {
      "urlPath" : "/subscriptions/5x05/providers/Microsoft.EventHub/sku/dzik01i3s6w7mtmdcv1slzyayqhiabmznl1yu1/regions",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nj2zqt5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"bn55ncab5v0olwznva9gdez3i8crts41lfryz1ivutztkwglpe1i9qflzktvlubfotajcin5ipo568smr6symcmg6lniqeani47nhueltvkfz63e19z0jkq7y6xrd2ax2wdzkq2sm01d9sxh0bt3d1\",\n    \"properties\" : {\n      \"code\" : \"rxyc1q6pr3xcgignmfu9u8qvmg02lbjpenb9py4mwkrqlgomhk2xl0w8l9h8g7esqoj6x9z96ual76jicub8ey9sswzh9clqwclo43c83f11x900h59d4y\",\n      \"fullName\" : \"Jeramy VonRueden DVM\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"q4o6gg7yf4cpvgirfxewxfqupls6bj8qki79kg8qe7dn2fbyo4vyfotd8\",\n    \"properties\" : {\n      \"code\" : \"1rxq\",\n      \"fullName\" : \"Timothy Runolfsson\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"73xzevzqtpmka2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c2d2d0c-6f81-4b40-8473-d242d2a7a9b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.459446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Regions_ListBySku",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of MessagingRegions.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List MessagingRegions type.",
                "items" : {
                  "$ref" : "#/components/schemas/MessagingRegions"
                }
              }
            },
            "description" : "The response of the List MessagingRegions operation."
          }
        }
      }
    }
  }, {
    "id" : "be401f13-62fb-4d3d-892e-8b560b67fcc3",
    "name" : "Lists all the available Namespaces within a subscription, irrespective of the re...",
    "request" : {
      "urlPath" : "/subscriptions/6wlo/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0ctfhozw0sisnwzeoizh30dyo2uf90z08e6dxmy6k0d4adzxvd17v28q9z9j6viuazisbm2yfmop7pxruc482pim8s5zbq987xh0lwj3irr5qtmr6uwbxgn9s1fj1qc77wz4tgyh0fievvi9uwpmnuksy0s7es0ud14h96u"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"u3bdqbia58busfha1gonom9v2n8iraxj8ap8js4w6wfg29k54ngpzj61l2ym9eoleu\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 5\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-22T09:33:52.458Z\",\n      \"maximumThroughputUnits\" : 3,\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"pd86\",\n      \"serviceBusEndpoint\" : \"9zmd93w6ai462aqbaxio2asa23m74qpm8ktnt6yoq8s3u1euw4b5oo9mznjqu1i\",\n      \"isAutoInflateEnabled\" : true,\n      \"provisioningState\" : \"Washington\",\n      \"updatedAt\" : \"2023-07-02T09:21:51.458Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"yiehj5y12rry93afh8e4gsv6rfdyk8j517jr8vz6mfzufwqvr9c3jsxf8t6s9p9f4tffatvno8rgz2vkw6251xj983pf99owo5gwd3u4cgddxx2qk5sunwuxw5xfewhodtkjaoq\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 17\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-03-27T21:29:26.458Z\",\n      \"maximumThroughputUnits\" : 6,\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"1uto\",\n      \"serviceBusEndpoint\" : \"bd46t680y045mn7ugdbvjm33aga11y6zops2rz4mkcpnm2pxb00cdjnlymta9sq16gbkp19o4galj\",\n      \"isAutoInflateEnabled\" : false,\n      \"provisioningState\" : \"Wyoming\",\n      \"updatedAt\" : \"2022-11-27T06:05:10.458Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"27qmxzuewsec8sb3vsg7b7od1tam8jhqtiyycwesnqh6j717hqdaqtx8aebdoeoqb81rm4apgq87aj\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 12\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-05-20T14:16:47.458Z\",\n      \"maximumThroughputUnits\" : 9,\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"r33f\",\n      \"serviceBusEndpoint\" : \"u6uio9b2atmo6z8okuoqqb53drsf6xajfcaz7pp65hv1evrdhp8cjy3soj9sonp85p0s6ow4tjzff65y0i05alxpm3n1pdu7ebeduxexau0vledft1us7x7sb\",\n      \"isAutoInflateEnabled\" : true,\n      \"provisioningState\" : \"Kansas\",\n      \"updatedAt\" : \"2022-08-09T00:24:22.458Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"n822bywsk9d6f4y5gaoifnk0gg3mgu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be401f13-62fb-4d3d-892e-8b560b67fcc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.459098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    }
  }, {
    "id" : "5c4d9d4a-3bac-4c51-925c-c190231e7c3d",
    "name" : "Check the give Namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/c947/providers/Microsoft.EventHub/CheckNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jcwjp0qqasxecpdnh5tfzyqspr3q4epimyyyhe2swftczakpgdjk377cuc6karwbrxwe2btzpzv94sn9oaqc525ot0nxf000xuruvdus2blwqrx4zykeebv7ky0azjpeysxg0723tttlt0vym7g8prmykjnv7m0gx2gne"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"SubscriptionIsDisabled\",\n  \"nameAvailable\" : true,\n  \"message\" : \"Est vel quia. Architecto odit sit. Itaque odit labore maiores rerum omnis ut labore. Debitis ut quis beatae saepe. Tempore quia exercitationem labore dolor nam debitis eligendi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c4d9d4a-3bac-4c51-925c-c190231e7c3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.458334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the Namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "The Result of the CheckNameAvailability operation"
          }
        }
      }
    }
  }, {
    "id" : "5d80bdc4-322f-45fe-8645-1689ccf72b59",
    "name" : "Lists all of the available Event Hub REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.EventHub/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e63yjhz5o5fb3j5kdl1mk32qo0cswgkic3ngc91jgcj54g12whq9l8d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"rlizaz66jink7o99myfiljn6qny6ae8613jm27c2d7nbcrxoylhc1u7pk4jasyxasorefe612trew1lvxu39cazt1zye3igwwdt5146mln6v\",\n      \"resource\" : \"uuonpkqinb6u61bnp42pwvudgaiwn3qyofek8nflywdfgf2i7r1wg8pvp4qrw6d4fo84iv3z6xbt2tltw2ojd3w22dawoo647grb7ardcavqokpsbwprzo5z69nzmthfb3v1ce2e7covz49rdjlfrw3harmgim38s3sabe8yw7kol2236v8tzx7wtva2cpnft\",\n      \"operation\" : \"30bgdhn3bn4upjzxpmlgbktyt9ycgx1cq0rrvufjqr2icbg9tpgdw76c200w7\"\n    },\n    \"name\" : \"Dr. Cruz Okuneva\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"ma2u7z0ibn458ujt3n2j3509vks3exkvcm3am9yb3wxfp7u33xv7ho43ihtovtyo8zifjmxb62kzek88rv7cjmsdyibz9g066qxjswvswkinnho8gk7oydgn7g1hgi09y22eeyu01z1nac0zgkal5a4dxfvdyfwmr8opkcjm1xnlaoyi8w83p1fco16o\",\n      \"resource\" : \"olggb96oomqqthi1fn3uhvmhkncwqjmz9yusobdpu42lzptgjvlva7hwe39\",\n      \"operation\" : \"cdxcr3m9ztf24srnfkgvx5obyoehye2zev67gxwhmk9zmynpcobg4jhmapxl8lgpj2woqox3tkxraezv2u5mq1j14ykeaf8wzhjzah20froaolkh9oenghot9jfs\"\n    },\n    \"name\" : \"Hank Morissette\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"ppm01oxkqsp2x5w8ld7s8kn04sv4y88oph25ajdip71936ewnufx0sx1nx50yqo7dcf4e27bxutjiic3az1qbdkuhfthvfxfwtg1rnb62czj7z1hu1tb8szwlq1aep\",\n      \"resource\" : \"u6web52vheos25domgfj8dskioyf7qhqt25o4taqyh9ybqsasgldx2rx9oe1blr7ijlq9bmyyeal6yleyg81kqmtc\",\n      \"operation\" : \"dfpz0l3fkqajw1at1f9wn2ynr2xvluzkb9dpl7ri1cuvibvo1zoskjqzaspklmzj6gnkf86szf2ucdfz3ev3o6u5ln1508gkxkks7\"\n    },\n    \"name\" : \"Marvel Kunde II\"\n  } ],\n  \"nextLink\" : \"vwbhu5uwuawdwxjd5sis3fm2kay3aqayq1hbrzprz4lpav56j1r5ngu5l7jpszpjw6m43cg8dga5knmf6gxfxef8lnl40imk6lhsw1tigyu9kqcekrnuxyefn4q2zjaqzs7c5deyia7ioe776kerkrmmjk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d80bdc4-322f-45fe-8645-1689ccf72b59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.458086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    }
  } ]
}