{
  "mappings" : [ {
    "id" : "c9cb9865-ea75-4d01-93e0-c19a17b7585f",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/PlayerStreamers/VJeaAaEE50cBB831bc9E7B3bbdFf71B4d0/PlaybackGrant",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_created\" : \"2024-02-04T08:56:58.859Z\",\n  \"account_sid\" : \"AC594fcB3cb5C83aF1b025Bc4E87d5a65b\",\n  \"grant\" : { },\n  \"url\" : \"https://web.example.mocklab.io/182485\",\n  \"sid\" : \"VJAa8aad4Dbc9BCc999fBEE396D61aeC69\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9cb9865-ea75-4d01-93e0-c19a17b7585f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.85932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePlayerStreamerPlaybackGrant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "grant" : {
                "description" : "The grant that authorizes the player sdk to connect to the livestream",
                "nullable" : true
              },
              "sid" : {
                "description" : "The unique string generated to identify the PlayerStreamer resource that this PlaybackGrant authorizes views for.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57ba3bc6-40ac-4590-b8ad-ece64040d796",
    "name" : "**This method is not enabled.** Returns a single PlaybackGrant resource identifi...",
    "request" : {
      "urlPath" : "/v1/PlayerStreamers/VJC50cEE0b7ffE4f86dA84C0c6bA107EA8/PlaybackGrant",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_created\" : \"2022-03-27T10:55:40.858Z\",\n  \"account_sid\" : \"ACa2fF9B863efFCDFAbf7F3b58db07e23b\",\n  \"grant\" : { },\n  \"url\" : \"https://web.example.mocklab.io/038736\",\n  \"sid\" : \"VJabfF61dba5C8d357ccfd812A051edf84\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57ba3bc6-40ac-4590-b8ad-ece64040d796",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.859089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchPlayerStreamerPlaybackGrant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "grant" : {
                "description" : "The grant that authorizes the player sdk to connect to the livestream",
                "nullable" : true
              },
              "sid" : {
                "description" : "The unique string generated to identify the PlayerStreamer resource that this PlaybackGrant authorizes views for.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec82ec8b-eef9-49ef-9346-c936a6a6b223",
    "name" : "Updates a PlayerStreamer resource identified by a SID.",
    "request" : {
      "urlPath" : "/v1/PlayerStreamers/VJ96CAFdAAdd235c3Bf2Cac50B19481ceC",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-10-25T19:37:21.858Z\",\n  \"status_callback_method\" : \"PATCH\",\n  \"date_created\" : \"2023-01-12T15:51:11.858Z\",\n  \"account_sid\" : \"ACab052635409Ad8dc47EcB115FF875F6E\",\n  \"links\" : { },\n  \"status_callback\" : \"zqcc46yuj89ffm3d89vj824epzvad9ox3bggq65yl1zah4gdqq5hc0rdn14mznp31kpxb39h6pccidryt8ai5xl9xxx29n3b183bllnsy62bjg5zqudzeezs3rmi029e6udbl1tzc67p6lk50irmjicw2vmrlqj8lg8rkmhd9j5t5d67p\",\n  \"video\" : true,\n  \"max_duration\" : 666140391636430440,\n  \"url\" : \"https://web.example.mocklab.io/722661\",\n  \"ended_reason\" : \"ended-via-api\",\n  \"sid\" : \"VJd2CCA10EAd2bFb6Ea87f83dbbbCadC37\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec82ec8b-eef9-49ef-9346-c936a6a6b223",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.858745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdatePlayerStreamer",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PlayerStreamer resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "ended_reason" : {
                "$ref" : "#/components/schemas/player_streamer_enum_ended_reason"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "max_duration" : {
                "description" : "The maximum time, in seconds, that the PlayerStreamer is active (`created` or `started`) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string generated to identify the PlayerStreamer resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/player_streamer_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/status-callbacks) for more details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "video" : {
                "description" : "Specifies whether the PlayerStreamer is configured to stream video. Defaults to `true`.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "210dc326-85f3-4576-ac72-d989b5a4c46a",
    "name" : "Returns a single PlayerStreamer resource identified by a SID.",
    "request" : {
      "urlPath" : "/v1/PlayerStreamers/VJ98dde9caC8CFBcBD4B548334f5C69ea3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-11-05T14:40:11.858Z\",\n  \"status_callback_method\" : \"HEAD\",\n  \"date_created\" : \"2022-04-08T12:22:17.858Z\",\n  \"account_sid\" : \"AC9086F92aa5E6A922EaAdA48ec75Fd5BC\",\n  \"links\" : { },\n  \"status_callback\" : \"t7yo7hft11f9y1emutano2c4vjrke2skgu5no7kpjspp610vzex2w3l2uedy57nj2msa3oekoob3l10n7q9zw90jzp5x2a0fi33fqk7m4aji9t4l4pfvdwh8g78fdw4mpx5ov0hksmis\",\n  \"video\" : false,\n  \"max_duration\" : 8920358576476293532,\n  \"url\" : \"https://web.example.mocklab.io/613948\",\n  \"ended_reason\" : \"ended-via-api\",\n  \"sid\" : \"VJeDae3aB5de85E8AEecAaee0E87E55CED\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "210dc326-85f3-4576-ac72-d989b5a4c46a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.858479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchPlayerStreamer",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PlayerStreamer resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "ended_reason" : {
                "$ref" : "#/components/schemas/player_streamer_enum_ended_reason"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "max_duration" : {
                "description" : "The maximum time, in seconds, that the PlayerStreamer is active (`created` or `started`) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string generated to identify the PlayerStreamer resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/player_streamer_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/status-callbacks) for more details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "video" : {
                "description" : "Specifies whether the PlayerStreamer is configured to stream video. Defaults to `true`.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8d121c6-672c-4115-8c2d-64df7dda625b",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/PlayerStreamers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2023-12-10T02:46:33.857Z\",\n  \"status_callback_method\" : \"PATCH\",\n  \"date_created\" : \"2023-10-24T11:48:11.858Z\",\n  \"account_sid\" : \"ACFED8feDA23D44A1fD24eAdd7e9BbDe32\",\n  \"links\" : { },\n  \"status_callback\" : \"cbw1tdugo6v6vmvtb7vzi6cydibspipg9xeod8ncnbx734kxrx398404zmojwexvcpgzbvogo7l52j2wxvgx6dz7k7zhra9s3qqiua9ez2hsy4dzit7cb1kulhyzu5xyitnxpy7r04ugd292dnwt2u352wi79r7uv7dxavlv5l0epenw38j89yliu\",\n  \"video\" : false,\n  \"max_duration\" : 3886986396219492945,\n  \"url\" : \"https://web.example.mocklab.io/701018\",\n  \"ended_reason\" : \"stream-disconnected-by-source\",\n  \"sid\" : \"VJ00052026a2BE3c7A9F92adD1e56b37Ee\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8d121c6-672c-4115-8c2d-64df7dda625b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.858235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreatePlayerStreamer",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PlayerStreamer resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "ended_reason" : {
                "$ref" : "#/components/schemas/player_streamer_enum_ended_reason"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "max_duration" : {
                "description" : "The maximum time, in seconds, that the PlayerStreamer is active (`created` or `started`) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string generated to identify the PlayerStreamer resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/player_streamer_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/status-callbacks) for more details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "video" : {
                "description" : "Specifies whether the PlayerStreamer is configured to stream video. Defaults to `true`.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9edb3321-af0a-4a19-9193-5ce6c66ff04c",
    "name" : "Returns a list of PlayerStreamers.",
    "request" : {
      "urlPath" : "/v1/PlayerStreamers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"player_streamers\" : [ {\n    \"date_updated\" : \"2023-06-25T07:09:54.857Z\",\n    \"status_callback_method\" : \"DELETE\",\n    \"date_created\" : \"2023-11-29T15:41:17.857Z\",\n    \"account_sid\" : \"ACf4efbbF1aca48c3Ff6ECfFBc1ac44f69\",\n    \"links\" : { },\n    \"status_callback\" : \"wtamguprtw18bj4n4rf5pavnqb449at9wo10v8dw00apoel00yitita4golkhro7k9pwz1pa7rvs5l37nyo4xgjlzy289p6dilaku406rapujzl5969790b9dun8zsnchq0qt54cdneeyt1uq1\",\n    \"video\" : false,\n    \"max_duration\" : 1533749918063165140,\n    \"url\" : \"https://web.example.mocklab.io/683123\",\n    \"ended_reason\" : \"max-duration-exceeded\",\n    \"sid\" : \"VJ8cdee83C5ac3c4471d09bd56CCBb06A4\",\n    \"status\" : \"ended\"\n  }, {\n    \"date_updated\" : \"2023-01-21T18:28:00.857Z\",\n    \"status_callback_method\" : \"GET\",\n    \"date_created\" : \"2023-12-28T08:46:42.857Z\",\n    \"account_sid\" : \"ACC1dfCF9A0eADa3a03dcccDa513F6E109\",\n    \"links\" : { },\n    \"status_callback\" : \"bsdavvytaziahuevn1khqa3uvhx7m7lh7mvk1252pgfhqonglls9omqkax7pevgwkbma8bobohjfv81mxj3j6b2afcpfffufjnu9qd3yoftpmccj26284ul3itk\",\n    \"video\" : true,\n    \"max_duration\" : 3554287796566745526,\n    \"url\" : \"https://web.example.mocklab.io/938335\",\n    \"ended_reason\" : \"unexpected-failure\",\n    \"sid\" : \"VJB41fb40C494BBDfeeC36b8CCC17cad6b\",\n    \"status\" : \"started\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/290297\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/873770\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/119088\",\n    \"page\" : 1059243569767913698,\n    \"key\" : \"j0jzbiwe8d1hkzvn8lz9dkmm1zjhjo2ma5sigb5rgematf13yhq0sjot30ootzm8wnrfriw799986yhg6yl0sncosmvhlfy13uof0j3zvuk5qsmqgy52s366ztf0edy0l07acn6bdrqfl6lokq1c0r8cipzt18te47ow256ykzng031ayx47psktr9i4h48eqcw\",\n    \"url\" : \"https://web.example.mocklab.io/049579\",\n    \"page_size\" : 8969498493948942810\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9edb3321-af0a-4a19-9193-5ce6c66ff04c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.857962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListPlayerStreamer",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "player_streamers" : {
                "items" : {
                  "$ref" : "#/components/schemas/media.v1.player_streamer"
                },
                "type" : "array"
              }
            },
            "title" : "ListPlayerStreamerResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8642c3f-204a-4cd9-9480-794cdb796fb1",
    "name" : "Returns a single MediaRecording resource identified by a SID.",
    "request" : {
      "urlPath" : "/v1/MediaRecordings/KVC07b18Cb170DFD3a4Fe48d8dC46Fbe9F",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-01-16T10:43:30.856Z\",\n  \"media_size\" : 7227224241456408546,\n  \"status_callback_method\" : \"PUT\",\n  \"date_created\" : \"2022-05-12T12:22:24.856Z\",\n  \"format\" : \"webm\",\n  \"status_callback\" : \"3kiiel0v7tqx1n7r4i6de50o7rr2wxdf891icrgxg3pdry1cm2dcq2edqqnowpzfbdedecm7ypy4hxrj7gw7bng571cuxfi3wlwybfapuo\",\n  \"resolution\" : \"og8javgc3lxyf4j\",\n  \"processor_sid\" : \"ZXc76fA3b18Bdd51Cb7c9acA53cf3Cf0e8\",\n  \"url\" : \"https://web.example.mocklab.io/271267\",\n  \"sid\" : \"KVBC45D823E033620CcCBcdBd4DcBb9799\",\n  \"source_sid\" : \"ml845621c2B2037D2Df5d0e6c6d3D06Eb6\",\n  \"duration\" : 2281593305957067093,\n  \"account_sid\" : \"ACCBeC79BD9eE9b181dDC6Ffd5985F6ED5\",\n  \"links\" : { },\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8642c3f-204a-4cd9-9480-794cdb796fb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.857214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchMediaRecording",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaRecording resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "duration" : {
                "description" : "The duration of the MediaRecording in seconds.",
                "nullable" : true,
                "type" : "integer"
              },
              "format" : {
                "$ref" : "#/components/schemas/media_recording_enum_format"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media_size" : {
                "description" : "The size of the recording media in bytes.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "processor_sid" : {
                "description" : "The SID of the MediaProcessor resource which produced the MediaRecording.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ZX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "resolution" : {
                "description" : "The dimensions of the video image in pixels expressed as columns (width) and rows (height).",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string generated to identify the MediaRecording resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^KV[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_sid" : {
                "description" : "The SID of the resource that generated the original media track(s) of the MediaRecording.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/media_recording_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every MediaRecording event. See [Status Callbacks](/docs/live/status-callbacks) for more details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e840f63e-1e4e-4931-8282-27f8dda6bb2a",
    "name" : "Deletes a MediaRecording resource identified by a SID. - 204",
    "request" : {
      "urlPath" : "/v1/MediaRecordings/KVCD550C0D44BBD21EEAFD4beaA2abD996",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e840f63e-1e4e-4931-8282-27f8dda6bb2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.856887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteMediaRecording"
        }
      }
    }
  }, {
    "id" : "a4947592-3073-4504-b6fb-660955250e8d",
    "name" : "Returns a list of MediaRecordings.",
    "request" : {
      "urlPath" : "/v1/MediaRecordings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/820521\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/746750\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/802440\",\n    \"page\" : 2803743908025716866,\n    \"key\" : \"2386\",\n    \"url\" : \"https://web.example.mocklab.io/825725\",\n    \"page_size\" : 1879840288840855024\n  },\n  \"media_recordings\" : [ {\n    \"date_updated\" : \"2023-11-05T07:38:48.855Z\",\n    \"media_size\" : 7119536438275370887,\n    \"status_callback_method\" : \"GET\",\n    \"date_created\" : \"2022-09-19T22:45:58.855Z\",\n    \"format\" : \"webm\",\n    \"status_callback\" : \"hmbtp61vdrcckzudhrazixcjf7dhg717792iy8q8pxlw57cwq8u1altgbr9ii6\",\n    \"resolution\" : \"hi61e087t1etz57lz2q6l6mnj4pe0t6gbrbmpeq8jboi26p9y4fn67wnaifwzwf6c098aft8x7ngmgr9h5xz8hxh7cgv8u4qnydb6nk4e8qg5iqyxppizwzwhdn6alzko0mv0ijnir2ykkz7orv3eg34lm4wvbuhfft32sxu2r663b8d8g20j9qqx3ly93bkdb1li2\",\n    \"processor_sid\" : \"ZX18e5e37C0ded118C3c43DcfeFb97420F\",\n    \"url\" : \"https://web.example.mocklab.io/590590\",\n    \"sid\" : \"KVAd4E0494F916121fd4bE900FD9d8C19b\",\n    \"source_sid\" : \"eWFC876902b9BC2dD92453032Af7cAF7Df\",\n    \"duration\" : 6152218069060467700,\n    \"account_sid\" : \"AC6f2cFFEC1259BDdE08bcBB9CEeA76E1F\",\n    \"links\" : { },\n    \"status\" : \"deleted\"\n  }, {\n    \"date_updated\" : \"2022-09-10T00:56:54.855Z\",\n    \"media_size\" : 4379094457864504493,\n    \"status_callback_method\" : \"GET\",\n    \"date_created\" : \"2023-08-10T05:16:27.855Z\",\n    \"format\" : \"mp4\",\n    \"status_callback\" : \"j7qnlolb726fqsc041gn1u6erhulzhfovfa3ty68ezxod3k9jzjc2rrg63xjc6nh74jeh3g0uuazdbiyonar257jg08ggp8vet12irkrrexraq67q6gl8rrrdcogfexsdh8rutdlxvet4xe\",\n    \"resolution\" : \"fy3og3evnm7wq1o2y7is4to29x2z8dmvuq26hx8wab8wqi4j8b6mxb6tg3f8ij1fbo0570c2g7d23dace7nbmlgnqp54g9403vph3yh91pay3sfqcvl7dn61pshwu5vtxgdqjpwq76mc5xe2kykuotbppkvshy7auy8g5f\",\n    \"processor_sid\" : \"ZX4d8cAeF4741Cff554ACecFF4bb32cD4c\",\n    \"url\" : \"https://web.example.mocklab.io/585374\",\n    \"sid\" : \"KVCbb6BD83cfA3e5616dd7022AfC9570EF\",\n    \"source_sid\" : \"BMC857A7F97ebdA1b8e64FBfF9E2A4f1Af\",\n    \"duration\" : 4297381558854135596,\n    \"account_sid\" : \"ACb75bBa5a210876f34B6dB9E1Fbeab3f8\",\n    \"links\" : { },\n    \"status\" : \"completed\"\n  }, {\n    \"date_updated\" : \"2022-12-15T03:19:36.856Z\",\n    \"media_size\" : 5081018906423968664,\n    \"status_callback_method\" : \"PATCH\",\n    \"date_created\" : \"2022-12-05T15:52:37.856Z\",\n    \"format\" : \"webm\",\n    \"status_callback\" : \"lrnop1yv1y7pnxn0u1lvvh0jt7kea4f0swl065\",\n    \"resolution\" : \"0xcgjy33hpvatwe5ty6kiftmcw93vpvwsdily2wf86gv3u0gu5jd2wkf1uh6b33z77je4eh2f6lu2d6vb8s\",\n    \"processor_sid\" : \"ZX70DFb936730dEEd1dC16a0b17Bbf5bEd\",\n    \"url\" : \"https://web.example.mocklab.io/129765\",\n    \"sid\" : \"KV6939BdB68DEB59Af4ED409ef9fE8468A\",\n    \"source_sid\" : \"OF7211A9e814f0aEDf34F53591220e15e8\",\n    \"duration\" : 4036163998130473317,\n    \"account_sid\" : \"ACdA6aB864BdbF7C2536DCEC97cB48De6e\",\n    \"links\" : { },\n    \"status\" : \"processing\"\n  }, {\n    \"date_updated\" : \"2024-01-07T16:19:04.856Z\",\n    \"media_size\" : 4457453661621344910,\n    \"status_callback_method\" : \"DELETE\",\n    \"date_created\" : \"2023-05-28T12:25:37.856Z\",\n    \"format\" : \"mp4\",\n    \"status_callback\" : \"6ts6i31cpr2v4i28cg4m2wn7l9jb5o7b7f45xzcyd8po1a9rdcpws0yq2tw9fb74qigy9qk5\",\n    \"resolution\" : \"owrlbetb7812xuudhz1e9hzjgrm2yjlt6e0c6smozt1my135klfei20uc\",\n    \"processor_sid\" : \"ZXba3dAaeD5C01cF8df746E5E0bE2e3b28\",\n    \"url\" : \"https://web.example.mocklab.io/512237\",\n    \"sid\" : \"KV6A8Ea5D0BC5FAf6DC8dDbadbCD47eF38\",\n    \"source_sid\" : \"Vya8b539d1d5A3eaC489cF4CFeCCeB7cbd\",\n    \"duration\" : 5973262915120275157,\n    \"account_sid\" : \"ACcA8d4722dB930dE1f4b410779edF9cdc\",\n    \"links\" : { },\n    \"status\" : \"failed\"\n  }, {\n    \"date_updated\" : \"2022-04-12T12:37:39.856Z\",\n    \"media_size\" : 4654259323814684868,\n    \"status_callback_method\" : \"DELETE\",\n    \"date_created\" : \"2022-08-29T08:51:14.856Z\",\n    \"format\" : \"mp4\",\n    \"status_callback\" : \"myimysq1u76hene61nxtmmu3plhkog5zo0rm4kf7urneathqrzmbg69vcskw6tzy0lkab0g6lclernjsy884o7cmfxaozy3tuapwe4jza2841bl1oexwfvsa4go4ficxekif9c5mz18blw3ly7jr8d5glvo9ndblk5bbdt12y0qpqe8r\",\n    \"resolution\" : \"kutpkhz6hdsgkqdrtxwm6xllc6ra3r8hmo74tzgfr5zw8ubr76iotypdxv2r9um6gtqbmalmwyn4k86ltoqnln8503szddj4cak4qqfzqaw1duf3oossj0is\",\n    \"processor_sid\" : \"ZXdBfc7aDF1DDFdB4BdbCA91Bd4598dd62\",\n    \"url\" : \"https://web.example.mocklab.io/939972\",\n    \"sid\" : \"KV2C21dF15560c5E42A1F2DdEF7FaA8BCE\",\n    \"source_sid\" : \"jT6CeB85b6eF2C73Da106DBDAe72bBFbD2\",\n    \"duration\" : 7869980677518535807,\n    \"account_sid\" : \"ACaC3a0F87EC9Bb25419dC907395F6ddcF\",\n    \"links\" : { },\n    \"status\" : \"completed\"\n  }, {\n    \"date_updated\" : \"2023-11-16T03:45:31.856Z\",\n    \"media_size\" : 8071879946035019799,\n    \"status_callback_method\" : \"GET\",\n    \"date_created\" : \"2023-05-01T07:02:56.856Z\",\n    \"format\" : \"mp4\",\n    \"status_callback\" : \"b0kl1wl7hp60emmu98vb0batcnjot624qb4w0noljfpr8hwyr6g563a9njkoa8mp64r5tsakscpqmn7oynqmf58s3bfik6pdzmh0ow84cl0cm6b0w599l9fh0poucf6ijcyuu6yojpca6jnma69nnp8mlkne50e28njmq4v2kgrb9u0hv4jumj3tg4kxbhwin0el4\",\n    \"resolution\" : \"7a62ygguv0et4zp0krudds4kfg0ba5vbxcj9c0sipca0pqflu929sib03rvtcttfy0bjthjzec96t0m9igbio3s7x8chwdyr0ufr9ni99mhwlaxu322782qdbew6o8t746\",\n    \"processor_sid\" : \"ZXf3cbcf0dFEFF1ED53Ed83dafB8C7FAc0\",\n    \"url\" : \"https://web.example.mocklab.io/430642\",\n    \"sid\" : \"KVF99b555Cb8D3452Ed5eaAaFF3c76B77F\",\n    \"source_sid\" : \"kGb6ddEae4c3c7dd76647Fc0Facaa75873\",\n    \"duration\" : 4004849278974604822,\n    \"account_sid\" : \"ACAF60C6cE1BDa9Dc0CEDBaCcC6deAa673\",\n    \"links\" : { },\n    \"status\" : \"completed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4947592-3073-4504-b6fb-660955250e8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.856838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListMediaRecording",
          "schema" : {
            "properties" : {
              "media_recordings" : {
                "items" : {
                  "$ref" : "#/components/schemas/media.v1.media_recording"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMediaRecordingResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "31b75552-1fc2-4f95-aba3-36f954cb8830",
    "name" : "Updates a MediaProcessor resource identified by a SID.",
    "request" : {
      "urlPath" : "/v1/MediaProcessors/ZXe44BbEb4EcEC82bE45a192B35EdA63AB",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extension_context\" : \"vndqr4uh0nmal6ujzh50koewq2r6zmx5e41dgohapiwp6x69s48jiwpejn6t3mc1epzik592rrh9mr0vrkga5iw8scu11mi1euo87mbs496hfacw878dd\",\n  \"extension\" : \"c9w12dgonvteyjexiu6yuo8sleio2rzqvmrwu5dqme576f1wvjyitw4msk6hqatio51cujps0k75vloe2d3u5kpkknop5cpgdfd0g9s1b\",\n  \"date_updated\" : \"2023-06-26T23:07:46.855Z\",\n  \"status_callback_method\" : \"PATCH\",\n  \"date_created\" : \"2023-07-18T10:38:09.855Z\",\n  \"account_sid\" : \"ACA5Fa07fC384aFCBeA5774c2EB0eFb837\",\n  \"status_callback\" : \"opw3ie8zyik3m6yom2as1mje650wkez4b0oqqojitdj7bsm7upye0aym2rnx5gjr8ss7l37pr6v91i8ri\",\n  \"max_duration\" : 7594224777109406314,\n  \"url\" : \"https://web.example.mocklab.io/117738\",\n  \"ended_reason\" : \"5xvz286ks4ct445vx5o77z4uym5sfyyquejg2ixk6h1auni1zj2zstn9c3hild878z4bhj09u0cza7wxrgv8x5hc73zyc2pn70aesm57gg4jda94ine19xp2lvdsct94jirfi9iiop1ji97s01r3o7crkj3vgia5tp9vpms\",\n  \"sid\" : \"ZX1C65C8584C7cf9BdDF5eFEfB0D16425E\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31b75552-1fc2-4f95-aba3-36f954cb8830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.85536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateMediaProcessor",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaProcessor resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "ended_reason" : {
                "description" : "The reason why a MediaProcessor ended. When a MediaProcessor is in progress, will be `null`. When a MediaProcessor is completed, can be `ended-via-api`, `max-duration-exceeded`, `error-loading-extension`, `error-streaming-media` or `internal-service-error`. See [ended reasons](/docs/live/api/mediaprocessors#mediaprocessor-ended-reason-values) for more details.",
                "nullable" : true,
                "type" : "string"
              },
              "extension" : {
                "description" : "The [Media Extension](/docs/live/api/media-extensions-overview) name or URL. Ex: `video-composer-v2`",
                "nullable" : true,
                "type" : "string"
              },
              "extension_context" : {
                "description" : "The context of the Media Extension, represented as a JSON dictionary. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about the context to send.",
                "nullable" : true,
                "type" : "string"
              },
              "max_duration" : {
                "description" : "The maximum time, in seconds, that the MediaProcessor can run before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the MediaProcessor, regardless of whether media is still streaming.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string generated to identify the MediaProcessor resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ZX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/media_processor_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every MediaProcessor event. See [Status Callbacks](/docs/live/status-callbacks) for details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "df9d3f60-b02c-4c21-bd0a-7835eaf2e465",
    "name" : "Returns a single MediaProcessor resource identified by a SID.",
    "request" : {
      "urlPath" : "/v1/MediaProcessors/ZXf2A88b716381d8Ccd6270D23Dab8BB42",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extension_context\" : \"1ucc5bu381597w0619lddocqetkm5ca1iddv5fexglvp7ljd713cr1cidvy9ukoumjl3fergsq28toh8ab6ou407acne7fr1ht\",\n  \"extension\" : \"r6kqhm7mp0k1szqrj5uxsj7slmh2r49sa6pcabhkm7a\",\n  \"date_updated\" : \"2022-06-28T20:53:21.854Z\",\n  \"status_callback_method\" : \"GET\",\n  \"date_created\" : \"2022-04-28T23:20:09.854Z\",\n  \"account_sid\" : \"ACBb73EE8901Efe4baBF047DC1Ab30c65a\",\n  \"status_callback\" : \"3u7\",\n  \"max_duration\" : 5345997559136088704,\n  \"url\" : \"https://web.example.mocklab.io/111631\",\n  \"ended_reason\" : \"pphh6uwvx3p41xgk1c58ae0by4tnz578bn5fmzele92rbxmmksjwwq05uyz5907r\",\n  \"sid\" : \"ZXaf92Cb34cb7da3aCaE1eD8C26DA90704\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df9d3f60-b02c-4c21-bd0a-7835eaf2e465",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.855092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchMediaProcessor",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaProcessor resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "ended_reason" : {
                "description" : "The reason why a MediaProcessor ended. When a MediaProcessor is in progress, will be `null`. When a MediaProcessor is completed, can be `ended-via-api`, `max-duration-exceeded`, `error-loading-extension`, `error-streaming-media` or `internal-service-error`. See [ended reasons](/docs/live/api/mediaprocessors#mediaprocessor-ended-reason-values) for more details.",
                "nullable" : true,
                "type" : "string"
              },
              "extension" : {
                "description" : "The [Media Extension](/docs/live/api/media-extensions-overview) name or URL. Ex: `video-composer-v2`",
                "nullable" : true,
                "type" : "string"
              },
              "extension_context" : {
                "description" : "The context of the Media Extension, represented as a JSON dictionary. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about the context to send.",
                "nullable" : true,
                "type" : "string"
              },
              "max_duration" : {
                "description" : "The maximum time, in seconds, that the MediaProcessor can run before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the MediaProcessor, regardless of whether media is still streaming.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string generated to identify the MediaProcessor resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ZX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/media_processor_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every MediaProcessor event. See [Status Callbacks](/docs/live/status-callbacks) for details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd2b73a6-dd9b-4dd3-bd93-188f6f75fbf3",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/MediaProcessors",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"extension_context\" : \"3x5ki316zuo1nhp30cmeig8dtfgorjklljd1u7fbgsqn8boko0q88hor3hx80ranl2ji3mofsar7v1ohe9pc5vk7e0ev5oblokkyl3pwc3havnz3v9vlldaancbpa72hdt7uc0hx3cpmllzf5ab04\",\n  \"extension\" : \"k44w311yyv2c8whvh66sp3ma4n7dmjf2wzbjjd6z1a5nm2ukvwo1zcumckublaim2svkobrrsehlyvf9vkgbkggmyxdq09j94p17r6z56s4m5elqkj3s1njnytpy0l48lnr436ruxsx6r3wiq1m6d541kl0bsx\",\n  \"date_updated\" : \"2022-10-06T10:03:18.854Z\",\n  \"status_callback_method\" : \"POST\",\n  \"date_created\" : \"2022-06-01T10:00:11.854Z\",\n  \"account_sid\" : \"AC8c70b26FfBDdd3B08CdbcABA9f57fC0b\",\n  \"status_callback\" : \"3ui6gmj\",\n  \"max_duration\" : 424312176033361212,\n  \"url\" : \"https://web.example.mocklab.io/381897\",\n  \"ended_reason\" : \"phhw386qz8mpb6bvlvvosum9jtpwprq39bgecaqoyjrneslsq5p5fp7llgw235gyf61sh66bnrsipvxmmimt3enrr3f6hvm9m9g67ae2nt0phsyqexgq2y60i64qpwvfjdhggwbehxadfs4b1ilp3m63ps9k\",\n  \"sid\" : \"ZX76f12c8de464fD1a78Ada0dbD2ac6eFD\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd2b73a6-dd9b-4dd3-bd93-188f6f75fbf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.854816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateMediaProcessor",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaProcessor resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "ended_reason" : {
                "description" : "The reason why a MediaProcessor ended. When a MediaProcessor is in progress, will be `null`. When a MediaProcessor is completed, can be `ended-via-api`, `max-duration-exceeded`, `error-loading-extension`, `error-streaming-media` or `internal-service-error`. See [ended reasons](/docs/live/api/mediaprocessors#mediaprocessor-ended-reason-values) for more details.",
                "nullable" : true,
                "type" : "string"
              },
              "extension" : {
                "description" : "The [Media Extension](/docs/live/api/media-extensions-overview) name or URL. Ex: `video-composer-v2`",
                "nullable" : true,
                "type" : "string"
              },
              "extension_context" : {
                "description" : "The context of the Media Extension, represented as a JSON dictionary. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about the context to send.",
                "nullable" : true,
                "type" : "string"
              },
              "max_duration" : {
                "description" : "The maximum time, in seconds, that the MediaProcessor can run before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the MediaProcessor, regardless of whether media is still streaming.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string generated to identify the MediaProcessor resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ZX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/media_processor_enum_status"
              },
              "status_callback" : {
                "description" : "The URL to which Twilio will send asynchronous webhook requests for every MediaProcessor event. See [Status Callbacks](/docs/live/status-callbacks) for details.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status_callback_method" : {
                "description" : "The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.",
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6448c77a-e1c2-466f-8259-29f2999fcec2",
    "name" : "Returns a list of MediaProcessors.",
    "request" : {
      "urlPath" : "/v1/MediaProcessors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/556910\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/167079\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/462372\",\n    \"page\" : 8799539662792363133,\n    \"key\" : \"w69kriv0cc9ocjpt8hkrkqrcsc25aqcqrvxhas03rmsnan9cuvtxdq9s6p2s2r1s1fvix0n5p4y0kiouhnwjbom062av1mu4b82803jl9opqg959nxvy0y3iymzabida5glvkxdddxn5dotzyxd0c4rlco770czme5adw2hcu7qiwqoybzq85cfkdbfg5guscqo\",\n    \"url\" : \"https://web.example.mocklab.io/601899\",\n    \"page_size\" : 8006722072650963748\n  },\n  \"media_processors\" : [ {\n    \"extension_context\" : \"e79mi29wtf9d4xn2kabkvoz9cdh0evtpo23anjpa91ttuq1pevts9puuf52qdzzlmg97jhpm8wz9fe1nci0xcigi8ky2mcyxe5nii1tog72u94y77\",\n    \"extension\" : \"0zhuqluoq8y51amw5kg78vh19oizu6kkfeaaqyud1gr50hubveq6hv22a7re8xs3ho21dy0wofgnil9dfoqw2czzuzq5o9ccowz1e5htslbg08gqtr077aplwdxpgsuz6vg2tod4tnrko7qz07odpm7roofqq5p2jg8m\",\n    \"date_updated\" : \"2024-01-18T07:40:19.853Z\",\n    \"status_callback_method\" : \"POST\",\n    \"date_created\" : \"2022-10-23T00:25:20.854Z\",\n    \"account_sid\" : \"AC7D7E2cc8Bb2Dd314803eaa71abD02c2c\",\n    \"status_callback\" : \"urm2n3ioo7gv14jr5m1dah27y2z9wbr135t0qnhmgwgff5roc4ne599njvxp3ot85fccl3gcexdswbklqz8fxn1806jfo49sksgfj7u1i3\",\n    \"max_duration\" : 5898268391652038465,\n    \"url\" : \"https://web.example.mocklab.io/228819\",\n    \"ended_reason\" : \"qgwi1k6yhkce6n4l0fnf9dg8obxqwj3spagb5wgd0keh68h2vi7s5vdt99pdg89ks9lpo5twgewyq1t1z9lrzd2o9nsgxthnjoqflg00dt5k2sua23qpd215s566dnra69vuttvp8z2bexmce81hni82yv8v1xqptzlorf42bvl\",\n    \"sid\" : \"ZXda4AeA7fc407DDb2ae9EF7A3d9A83F44\",\n    \"status\" : \"ended\"\n  }, {\n    \"extension_context\" : \"os1mjpz9tujqmhz6t4em59c3dx6vypgro1rvtwljqorcwmqurzmhs44a84te0oujxiv2pb8gowmocs9fw5m0lcp\",\n    \"extension\" : \"gw4hltykbpp83ngemqf3wqpqst150gd3cne0rp8gbtvapfg\",\n    \"date_updated\" : \"2022-07-18T10:48:26.854Z\",\n    \"status_callback_method\" : \"POST\",\n    \"date_created\" : \"2024-02-22T18:27:54.854Z\",\n    \"account_sid\" : \"AC1Aaa12824f3BECE4D2c4996eb3400F7D\",\n    \"status_callback\" : \"e221wwcgmbcoa64vn0d7fos3e\",\n    \"max_duration\" : 7295149032136467804,\n    \"url\" : \"https://web.example.mocklab.io/838375\",\n    \"ended_reason\" : \"ttd9f1pp2kveudcp40xsfjpcwckssz6js5t1nnq3nmue9r2ztbexr86af4438ss0n0zp4e0rhg8ir0irn763i931mhsp4d0himajdisx9506ieiegb5araweoo1ovu129i7sszf\",\n    \"sid\" : \"ZX193B9BFbadCF3Ba8E8f7CFefCbdEA26b\",\n    \"status\" : \"started\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6448c77a-e1c2-466f-8259-29f2999fcec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:16.854498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListMediaProcessor",
          "schema" : {
            "properties" : {
              "media_processors" : {
                "items" : {
                  "$ref" : "#/components/schemas/media.v1.media_processor"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMediaProcessorResponse",
            "type" : "object"
          }
        }
      }
    }
  } ]
}