{
  "mappings" : [ {
    "id" : "13021cff-5ec2-4c07-b6cb-5badd997acf4",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/kpxs19ogxjygm6jfxeejyyrrw4zkxoios2peqcrovghu4jfsifnyl3c4c5od6h3xrx44hxzmh29kiuj5naaji4osld8y67oec0ktwws5ikebkk20ymbp4t7goevcset947f9vw:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"ovrxdxqk5v7rsfvb57dyq47pqw2ul5bmd9c83q6pmn5o86at2qc2v87g0te03a0mmdey46cuvabwl8eg8kcg0om0tza4rphp7mj3jcxapk7985osoif2utcphlwa7iuuouag0s0i8gbar1ss3b3d02wk4wbbyn6i07wzzi7lgvu\", \"rkcr8t0rgfp4tl764de4nei9fy5g5wikyz1yqlkxpv256afglifagbc3viaf8ua\", \"295s498amrqjf8dpjbdnjv3ytn62tdb6h2whyj9ph6huqhslb9yfhk3\", \"fyepf2ch5z55pjnsyy59fg5pttxh1ur1gy4zlwdimzu7beudrbz\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13021cff-5ec2-4c07-b6cb-5badd997acf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.47089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4469a419-5002-47f9-a194-d4c9be00778f",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/f0v3etqj64u80b046jho0v5sgkl17pmfi1uyfect1hj:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"9ugbyzo5chym5b6vavbn5pxu49lj7daxo4z2o0bxbvdedpk8vvs35jsg6l3nymdwdwne4yr4ly7478tu8tkjlmixgwlwut1iyg7extsisd299q4pckyal\",\n      \"description\" : \"Cum reprehenderit hic dolore aliquid qui quia quis. Ut corrupti repellat reiciendis. Praesentium sint ea aliquid. Excepturi velit optio illo consequatur adipisci culpa id.\",\n      \"location\" : \"cy09q0hjcjctdkk6yzk0z6wqekqr7xntyyt1nb6c92ruvn2fbq6vdcesstd3k8ts41xqu56f20qeo7oouhi5y7w\",\n      \"title\" : \"Veritatis autem ut quidem eum rerum.\"\n    },\n    \"role\" : \"jx7o7fpkfgprgehcx8buqrjjoi0y27vvvytjf3i4zdeky6w1qbahw41r0yumh8xztguewj234sd5mbi4z\",\n    \"members\" : [ \"w9tpel14bwpguydin6prr4gf952xksfu11rr0l0emtm2c62flq5k7gdzke3rvsk1opyp626143d4s3opd8dvkzb5aiq7x3ovgbsncwmopzs7uywci5tog181iuxeun05ukg0q3dz09hb4jlxqw2v5jckqap8eaz2p6dtgs2\", \"1bitnexu76ve7dj6s7j5n5dmmsx0jitaprum04nd601b5juxjen3dhwodr3wqxm722u7yjl4qcjox7lkuthk\", \"p74g6ccbkqj95claqmhb90494tzznryo869y479rq10q5qz6un0kzioi\", \"9vjhl3kbvd07d8ts0lt1mwdyl7mv6259xk3y2ysghkm4zpu2o521yyytgaxsclxnv37a56oj6pbbhckqko4em0l0vn6fnpapmsh8fqbalmdeadbo0803qkxhwpp77vzwf7m5r7tjzqu8y3ungkccb6jdtk6lsiueapysyks4gi0ay3i5rshuk0vkb9pc3gj8zl5d3\", \"rrxhsqfxjm9ndjiojofoz9vf29pgririm6ructxgul3rlj0k8\", \"i740623vclpd79yyczv0d03jphze7og99aa4wghf21sn96187vz5oadar5ktqj8ddr5f5asaitliec3iyinz05y1vx2umlhp4xxh80\", \"77cplicv7mcj37i88wrmy989d9qnsqa34bo8im9s9dljfc7uswcj8iuway97hjddngnsq66pv5usjpw8j3ab4grskaq6w52g1a5l987ur3182u7q3ky6nstpgnyi527fk18nvmgijzvhl0b98574kgi5pjcmnpr3qk5pfuihewicg600g8y9\", \"85g7cseml20oozawv2w6iln2pniyd6wd4d8nnrfare9bb85ee878dqoqcltz6qp3i9psmjhzrrtbc7xpk4v75nkoriy7i1lsemsgh9vgb6zj5pytqyatcahd4vsxyl0tbnpfk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hg9k81qk5hx1gjz66l6ufwlk6zi9ltgqm3e7togm3bm65zwgvv5b95r\",\n      \"description\" : \"Dolor perferendis et eos suscipit deleniti veniam. Sint ducimus odit itaque. Nostrum iure qui.\",\n      \"location\" : \"wmnmhevq2a8a1zuxind652l9b29whnwud4h36may7i0vorakeyrug29qq8we2r0mpll316dklfghfc7hjulk03wlccljvl82di25uigik8em551xycnhz25nwblfyn228y6ftx46r9yvpblq6z\",\n      \"title\" : \"Incidunt ea quia iste.\"\n    },\n    \"role\" : \"3u2a551u30ti6zs3lyd0hz1fkoop9aiixsiv4ulmrzkv794ogxqivx2jqfhm918y2xu0ygdnva4dv2p4zl56qw6nt3aun4df19d07k6artqngtz2c6j8mutymi9cfki5o9xsgdwff4cytv3ghsq70c6qejcsuhnvx353s01yn80lmohkrkvnz\",\n    \"members\" : [ \"trw9swp5rlg3l3xemxuk3g4a3sp06qtnmkih3bvn2o60bvhpe8egvbg8tzmhi4ok\", \"qrpr4ert6if8dlcu75u5omded7pqideji0aydvc15329m379r7mnncn5ysf8qz8l9pybn6d5tpcopt32aj3wg93be3rm0tkukhaa5ndlmjgzdik9fxux0i0etp2\", \"rimkk1vt3qu7vselktv3fiik99ph0gkwro210jyck4n6b0il9f35sy6f5w1h23cyzv85a6ll0cq4t37ojcr78tgneupae6eo1bjz1avh7mccm58vywymcrcf6g9g1mjci33nu4lb3x3k5weha60ozd5s7i1jhq3e\", \"dc58cwajzgb20f4r3e5vx6jokbabrx4c44bpp372dvvyh3qzc8yo3ppg1wwbzod5kokvd3mfk3j0uji2vjvgqnafycu06cmjkpr7wsq14sqc7et4puywuv2yf7z5iv6ycid4yebeefp0kvtx5m8znbhyf25j8u4it\", \"bc71vd8gibjw050wwsnzv6di3x0e253mw0pemaa0cd3s7wczlx5osjigleociyol6b34s1xk0aol5llj6r5gssh\", \"sfaua8dfjc6y7ebkmihu7kea7rizvi6hgutvt1m7dn4o8k0cbm6obcnhtsjplu8byjxzfi9v1o4zz79c01yoj35xku4hwpbyv5vnvqf0s8zibbwbwjix8b69tktwov329hp3pz1jf20utfe5t1h015s5y37yyn43hq2jqk25cmb6\", \"2jjnfxxyy2mff28chw3utnlsnjnmqiqizfhx6fn8j99qs5xu00ai1yosjogxc0lwdc2sn5syc596ow7dna7xh2t\", \"80o06qo4tqovfgsudyms0e0hy7shplh73ey5m5jhsxgk3fmnmdx5o5sp7qtke6shkn3u8jks4oz32yw8fydf\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"a92s43k4i4j0og\",\n      \"description\" : \"Quasi ea aut impedit. Possimus rerum voluptatem. Aspernatur et non fuga.\",\n      \"location\" : \"4ra9s1zvfj95luelydt6wiqv5ypf8eu0x34us1fvewdhnzo4z7kh7tvg1c3s1ea\",\n      \"title\" : \"Sit nobis numquam natus tempore architecto enim.\"\n    },\n    \"role\" : \"6fve518vamxy7kqm50octkuoq6cbl98odyjh30yxf5abx1h2qeogu102zjt6xo18e64j00x7emng44anc5l1xxgydsyn486zl7gsi5cek8ey4ls1sodong38w11za3fp50mqk3fhts0m5ow01px5qmc8w9smrfqbjaxrzav0clhhv519l81g8cv70poo4qywm8r\",\n    \"members\" : [ \"mw4oa3csbpwbn8xkebks11mmd2nqdcviwuluncz27674s314ff2saw5jx6l90q6qk9ggg\", \"8qrzuqwcm2v4dlt1fu1x4yg3n16z53lkfo7hlbrnf153eo\", \"8ln5hmbv2rd6gowwwkhqm3xoupqw2aez3utujs2sk8mhwoqece7szjjrji1dvslhiqwlz6ozj013ng34ewnmb7p7wm4ehg67glmu275020dwh8xo6w9z8pkfz79405hbuydx2ffgmzxc289sf3s4e0kohdaq1h4wo5z9l5de7qabydp7yw\", \"loi0zu2d5tlaxabsl2ivb68pyitdu6xyodp3mwa4qo0rm4y44p2q7zuwi1nhtee1nklwkmss31pi8bv6jxiqtrcucu3xc1cv9h5njor00p7xrbtl84cxpchp9ffvk3d4qrqzdyrxhcy2vkyqqqgsmo14gs3xcta9q77qrw8xbq7i03x4xt7viewwp3\", \"kf86txotasu8fclgndpxaio0prn2bqibci15y7m3ztg89brmxgn3smczhz7az5i9ed551pw0vfzu4vqgclfb2b5vzaludasdz59anqrtvc2trmyqbtsa9cd1ig6extmfu68wcxtlqqub5qbe7\", \"a5j25zsdabj6j2sczbzce0ou0ryr123spchhqsgjq4tzz7rrj8co132wsjtnheyofcakveqx6oiitn7lwpa4bikohnlium2g4ua82rkleizjdabp6\", \"31niofva3yfy85vcbent1elico9ooj9r9fvwc651yvwlk8182066ol9z2gqkjo3dm9mit1bt8d72xup1pkh54vn6xcxu6kx6z\", \"iw47sabpfl1dhdpxfxz0swy9hsypx6cvc57k2ek5hau9gcrf6qvwnvtps6hyamu7d7p0i5fl6jbrg2cn2h24vulnwz8f1bs39g0uy2tejp6pbg986dqpsyyoefc2a2cnfl53xdtjfc0mehlzr89ue663uaxmlu5ykhfdvrjunktae15\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"50wzc8mr87nazk542autyaqakr0pkv0ovqxv6oyfr1f03sabhe3dn4qzz3o2ddpcgkcya1ceurw1xij61n2hn8zufyuu27vjw77toi4ixf5zy1zuuzinnvz36svbgs997pqb7wi1wkm2m9py5502z0\",\n      \"description\" : \"Id rerum quidem quibusdam facere occaecati ad. Pariatur ut sunt. Ut aperiam provident accusamus. Ab est laudantium molestiae veniam officia. Soluta sit laboriosam ut repudiandae non.\",\n      \"location\" : \"m3whew96ikl29wh122u871ovfcfe26pygjmo3zorxg2b25vq59nefrniyojid0dimioynin86tonvzu0o6r9lb7qhm6rq4cbllrbeklw\",\n      \"title\" : \"Quibusdam suscipit deserunt ut nisi quod.\"\n    },\n    \"role\" : \"32vnmbaxxf0lc1n6dvp92sihhp9hv01gbqsgrsdkibn5ccms4autz1mf6koc20wq0piktzwnw5pg8uarcwze8uukijfdzdeq15vnykhufujbqnb6m7\",\n    \"members\" : [ \"pbhgi8d6jnb255neven46iqvs1oa26xalp\", \"tltxqem89ibvbzfrzpityqvjz77c1bjcrc0dwnzqomlln25t1ke7ykvuhwchkvrv3l9imo8yx96ibpwef8o40fxcem6f216rf8zsoak087yqkrj6bnr4nb97\", \"cnn1s6fepmrfo1odydktr9sg4ehzq4e6d132t4w\", \"ioqfvjj37z5abe4emihunws5ms8cpje1bq410co9k0qsu8kgpmlwixtk5gypvjar1nxjal6hn3ncfr9entmggsdfg44sor\", \"7xvufzb9tznf8dp7j8wj0yolpjq3vy2z7s9mnq8z66702l3ozsvgppihqlxkq8dak9jxuhsz6r26bispzmubi10mp6t3id1d4ffo7c6pxybss\", \"yhrz9kjgjkp2qsia9atxc77n6p9hz6dgouuo9ysqt7xt13zwbi2h5193z4hv61ftrnn9w51gi0gkd369d1oct666x3f4k1rtok2qwtfrynt0eaqeymh8miqmf2q410rdvf7201dekvmx4zbpfmv5u0rha81z17f0v5ma0rcapkljf1ulvt4xzqcyeitd92qylt765ue\", \"iq8xfi27hnjrszv0a7dfk9zribayax4twp00iecza2qanapbxgcxcjdb00s4iwrzlbq88bgq814zay6llim7280lla3dlzn09ea8m12ox4hpdg3o61ln\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kmk93embhdkv9coxok0mssj65iwgzfaml75f1bpcob441wrk2zqpwo9l110qj3pzezd1j8de9411m5oh8qub125j8u6zda5g9a1s8rs94ad7zi0j9da7r8az4oqriqut50kax\",\n      \"description\" : \"Beatae voluptatem aliquid rerum eum rerum iure tenetur. Ab odit saepe velit modi. Quibusdam molestiae at. Quis iure laborum accusamus expedita. Culpa veniam rerum dicta dolor.\",\n      \"location\" : \"brv263wl799fb8yv4l6vrdh5b43234bvmxqmbekingcyv01gz3mxp88dgg7u5ulfbmrk3cqb3byds84ufq1\",\n      \"title\" : \"Et impedit unde omnis quisquam.\"\n    },\n    \"role\" : \"nll2lkygpe8gi9iodyf23yzz5ar42zx8s4z2ukzdmr0tmldtj9zn6ti8vccq9oqovexxxqsg715orb5cef4u7bz5gfd6bdj0yjro8u6c3rm6nwzit5gup93em5xkjbr57f9qqj1iku1pg0vzd\",\n    \"members\" : [ \"b7wadpea01ochfihww1s9c9xr48e8ky74nj1qwr31pttxf4qckji49ju9wi2ffn4ykl6nov4xry5tp6w6vqwc91vgt4ktq20uyfecad8orxdqqei0x0mym\", \"h8xgzqnhnqdwijr7hzgr0weushqtw0m1fp5qu4pgdc8qd89s03v8dd95fk8p55mywd741wt1rhb5wfvxxc2wvk8tx94hc278tjkz7kp15i1qcn5uy99rezwzcjloac618gnaxef93n6llqmc9epcwch6t33bulitnnseqs70pnupm7ja881oykbil\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"pxwfk7hfqe6oqgzx4kiigf4dfovxwv6438irx4rsnpbwgez4lmdo06d077o3rneixz348mvu55wrtdp9h3w6oj0v2yqzk3qxknfvfs3fqug0mbpikflv90m\",\n      \"description\" : \"Quod officia corrupti. Iusto maxime ea dolorem nostrum voluptas. Quam alias expedita repellat occaecati pariatur. Soluta totam ab vero ullam et. Molestias asperiores sit.\",\n      \"location\" : \"e8iwgvqmuzy9cq1hihk2cybhj734buprnttejn3f5if874be52jplj8rvt7taqee5e1vr6nwchinojxjtqxp8hfohp2c6s5brc107w69qqrk3hful45jfw07py9ahw3wzpmwd1gqvvx478tumlg6sgd7dokbg5n0dckkvdp7coxyeh7jun53oofe3fmun187hp2rmrq5\",\n      \"title\" : \"Velit dolorem et nobis minima.\"\n    },\n    \"role\" : \"u81f2k02pmwe56oaz\",\n    \"members\" : [ \"efgkzmrcjzm3r0s6167zkj8uq4bseac74h2vufixc6bl4xe2h69nftzmwenkx5hoj7589cdewss5m32wog7sbv4l644src047yzi\", \"ybuzxew43873r6grbjqgk17vb5pxm74vwa9y02a0hr7tbr1dl5d2p5mmwkw0vkdszpyygapvm7vu1ltufht1o6nuqh95rrt3py1h061x7z6fgbyvq5p56dvfy0k3zplrdeb6t12xi2pw5yic0\", \"6xltsbbrlgz6q0kib0uk3l3j7xtad4kfff7hxif907tzt9pby33q8umu3ds7bbq6f4owjtd6uf93qm0wi7t90d3a4k4g08ba4gww50smny93\", \"p26sk8z68fi5b4dy\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"y8hihuzyrogpu4vh6u9q9ku5yo4gbgsejuzqkipg2cy2cinbvfkq5s0footmi7jztb7fvytt8kvvnyhk4x7m9d6xkdf240hquz6j75d9xsb79dlhh4m267in0pnbxfbysljdwov0uo3acavmqsij77mzt7wlythdxfi912dppxrxw2qbwpq8y9sfk761\",\n      \"description\" : \"Rerum rerum culpa eum omnis consequatur non ut. Asperiores accusamus delectus repudiandae similique tempore harum ut. Vitae a culpa occaecati dolorem eveniet voluptatibus. Minus rerum sapiente volupta\",\n      \"location\" : \"l5wj5fhmpm35n1dylky33x2g\",\n      \"title\" : \"Minus ipsa nemo alias ut voluptatem.\"\n    },\n    \"role\" : \"04bdf6k5ck17kjt5culdhw354zjbl9vp51zc16pagd\",\n    \"members\" : [ \"3c4rk0j5zrxwmt3cmgn2xsq9v76tgogfhhh3k9e3hs6p7qnt9y\", \"x58m18ucbkfnl31jxix6g19eix1khwjor544rj5n4l7cbt64kumdzbk0cx9l789ywvly4amd5qa2b8mo72beyfcujm81z3zl663rzsts8sfho3d3utk1ed7o8703pwbpmmy91n9qndzc8kq2gcnlj9tyh0c4gtrfpsz5thfmwo07r9zvjuan7bgkcm085s\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"a2d0l6xt2p5m5gplafig0k5jfcwmy17johow89ic4ckka0qymlfexuyhksugul81vysh4qkukzukeqtg2vvnanyl9rgmr2afc2g4rcr5rmhitj3mdmx0o7xvnoelpnsj3297gr4np9uqz26dcja053sa5qzrcxeyrwf8742cpoxgwnwc7gir22iz439e4\",\n      \"description\" : \"Dolorem sequi ullam error fugiat ipsam laboriosam et. Et recusandae optio nemo ut quia. Qui consequatur et dignissimos nulla mollitia debitis. Doloribus est omnis occaecati necessitatibus perferendis \",\n      \"location\" : \"j497f24yf36ht2jy5qagkl8es0hckb1axkp9hkf1nbodcnur9f3rz9dnwyfd3005gr37qholeb7mk8vpgottn767ti72xft8wcl5mxyxiz9vwdrdizzopy7g27xyp4h640u764ayo2cihje6qafy0z3hmqx\",\n      \"title\" : \"Quod reprehenderit quia sunt doloribus.\"\n    },\n    \"role\" : \"nqz62p0hcf1ucuzimfy3v2lq5r7mpj7kyz0fp3vh605ovouxq7kz5oq8hkwdi30biqrfz6qew4ttwc5uszyf3gg1d0wxlwz61casvl04o3p6\",\n    \"members\" : [ \"sqr5sxeb71ft8756x44twp77bcll4rwbb7se1gmrb8kyh5aqxpvy9tado64v9gbhhk2w\", \"59wre4gbw9eztvbglqkxrhcq8xi0brqbfxpb7hyt3v4lp69qbr90tvnekj9c85opucvrmsknd9xpogecdxlaic2vc6k1mnhhjae03s8hl3k76gpruxj4ww\", \"o2dz4rs71519vtl56khx88vzn2qds13a1o1guqe0p7lyjgzzb0pyydru5qpu0jn6freq3fq5erfsomhfrf0puy0r6eayxloep788at9kk5l08iboc552e3mge7n65kj63g\", \"yd9vspqdydbs0dgibtw7qf459yeut3u9bntzsq5edgbz5cy6swzu3v51vqatu3gshakan0hwfotffu9w1seyu75i9xv2yvx216117u56gzqfqlhqxgllsuyq9fty9iyvra7vbqepbm6cun3rtlk5wffs5lkm3mu7yq7ebyv458xys2e8pq3b9\", \"91wz9je2achu4rw978n29jap8s01bcn4qfbzqemxz3yf8gve5c5w5ytgjwgyov1872kdnt9naley3pxfebiax9pm3w9wdk4s9mb0ib2xngqnrfyhyakr0jpe2w0ye8tmn40gagqr9asf6e40\", \"bbql3k8pmkv2rqck8ypuyunjnp6mtmkk3kz31l5l964eoesv1jo18qaeci2vjplrha1cd65sfm8ztni0lzae7ps1xbm63e3kh5ctovbxhdqhldg1abjkbli1rgf48i1xo6chpoaw9aikpw8c7yfk33n5eykorddok8hx1x710ed7ksfnn8v5wc9\", \"4fbx2t2vpy2y6ed7mitz2t4ca7xm3f2657l6aecbj76ptl7g3eow\", \"lcbdlse3bah6j9q28guav7a5oel8317clwk56\" ]\n  } ],\n  \"etag\" : \"quia\",\n  \"version\" : 339240281\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4469a419-5002-47f9-a194-d4c9be00778f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.470774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "0bc28da1-94c8-45e6-ab28-a4aa1f2cd2d9",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/2oor0e56o20mk61t0ftl92lmzob2yzrac9tdoi5ku6dabovk6btoxoeu6pv2lh4jrgas1iok75uyso64rvwz9gx4tzv5p7fiayr3srck5j9g89rnq3ofj7berudrd5a6u5fxn5suc74:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"ujjd35l8wdc7zsej0\",\n      \"description\" : \"Ab rem est ut voluptatem quaerat et. Qui id et error aliquam facere animi. Error voluptatum ab. Mollitia sed sint reiciendis. Et possimus quisquam cum voluptates dolorem dolores dolor.\",\n      \"location\" : \"5h19jfnwl5z1aqtm5yjt08h5x42p6gfqat10j3xvn10px4t3owjxao3jb28asv5xoapwzkjfazssj4r4y4f7gjg60hzv81cojuvv92reffk59u3feuki8pg1xi11yzvxafw2ypsmx3oxz15i0amc46fsl7g8h1xe1g4rjwe40lj3pfqjdd4l\",\n      \"title\" : \"Accusantium eveniet odit.\"\n    },\n    \"role\" : \"74941n53\",\n    \"members\" : [ \"zea4uocwqq5j7pt8sdcgrhbijnslazrve0yvhu83euq4fjwscmz72dgu0t8tgyvufc033t7peba0fr6chfi18cu3sptog9l4gv4o9ddrayt1wuxh6gdyqmlmlt887cpcg0b16eevy18bumr15m4lvj0tt7wjlmuyrsgnegp7i3yso0wul83jxf56qnpx\", \"1vvueva9rl2xvy5rtybqqsuxe74zpb4fxx0ib1donmg5m12w048\", \"bwrcd2w1s7h6ixc89kahpeq4fuh9wm4hadtysdsgmmh7nz3c2l23tu2ncwx2flvnnnayakgnnklckyi90e4ypljgigq8br4pukq5i4zsntx\", \"wtjpi2zjezquwlna42a3hw2ey214oxm61jeq044vxlcwo23wa9qu59sgy2zg4ljmi85n91ao6rmg5nez0hov17fw1fi4mggypgq8m9yxtlxp5pgwctutzvlv8esze6m9km32f48n9zbvb3w3nzmmfrbdrscpd95kcf27ij398xy2o16rpd7hk95l6\", \"6tf84vt7qxzf1gjks7h9aruogpffpj1j2d9dqn4ovton8o34wvm4zttdf6291y78z7aenm8cun9g2ngg5b774hmopve2austrqopankj5h1hg93xtfkcysb1ex7wpzlbzrdsvapyh95y5yvvqq5u8wuw2s91ptu1eqzhf7r9isb3lep5\", \"r3efe5neoiz7d01wb8cfqtb1gbpwbjrbsn3ursh95ktu9r1r8t4y55svdth00b0g0iv71uub7pv8d9vgk3yhkilptyfdmpxr3vgi6a5nu6j4jbtidhmw7wjwbg0uywg4inwq16vlp63sp\", \"r2fa078rcdu83jo3mtloh36l69ccvhlounn5eo85ehmzegu6ub5j31v45x83j8qn7v4dtzs232nl8z75xywmhp01dv49wkr8121rvrajrz31o5edk1hk7ycz17c4ic1k1f82zkq8hbc84t7yayplxtbbid3jgxm6n87u43i\", \"3yzl5anefrq32wn1esyh4nr7lobk2ozyesy\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dmnhyr1rw5ney18jepwmrx58rv37go83noi8b4zeor49g2bv02mzg497cf3mm22shg9gtae1ms58o1wusa7esivu4nmj47ijc2of4\",\n      \"description\" : \"Corrupti quaerat dicta laboriosam et eum. Non et et ut. Tempore non et dicta quisquam cumque est. Repudiandae ut molestiae tenetur quaerat est iure ullam.\",\n      \"location\" : \"b470005rj1ikh\",\n      \"title\" : \"Modi aut id amet quae velit cum sunt.\"\n    },\n    \"role\" : \"wdb2bpuz8jf0wh2zplw25yc96hj4iuyl3r9cf3ygmlo3hw47kzvjveqhzbjpz8cg2emgl\",\n    \"members\" : [ \"c2qomzqc6f183agkxtmu2he3wkwc02x299xy2ujxqgc7uf6j4sonr4myvrz1cqva40049qdzqm0j03xdpss29yipp8l0valvve6pjzfnxzuv7piai8zyx8koo3miz3ypkvh1pnehh98j7ipukuv056\", \"jlfaow0bqyybf1aetwbs8msl5b8ohzt0ora7wjafian3rpnnnzvcz7yq90d4mptm4sdbmuar2ep4an4gq0lll105q0sj436rn2fny2va2r2t3f32ifo43j2aifinuxsbur068m39al8qfz\", \"r3jg591xp0mzzn7wnb9ds4\", \"gmys2snimf2s59payj819pt168yuzm1n0ifod6bu73ihpckt30jysi5v8ukjc25fmj9vez8cjx8ihgqgj7x1wd8uj1fyvqm1a202yluwj50w447po62x1uv47guw79bc879xoi7ulwvryy3e4hzr6pajww9od6y74w3nlohiytcycctq57zin\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"65canh5iok8lgf\",\n      \"description\" : \"Veritatis et ipsam ex dolores exercitationem. Laudantium exercitationem consequuntur neque quas qui veritatis. In voluptatem sequi excepturi inventore numquam aliquam. Architecto odit officiis labore.\",\n      \"location\" : \"zs12z6bvvwh7xghki4qusuv0lv7n32hk8ddw6ufag8saboxmrvzy651tzdzypw7dzwwsgfjq08fjtdptcvcr0801qwyjw6cn7dpi4k3j2jnlq9yyhav4n997hciy4kak2oyb21uhvpux2qghimzumwrt1px6ap4me62bm4tjbuhleky626o\",\n      \"title\" : \"Nesciunt aperiam eum blanditiis sit minima omnis.\"\n    },\n    \"role\" : \"ulbr3xx9e0sqjok3tilgc6r3qkvxe8l7qzo5diwia4jrqf4qik4jacam6kbgk9fxplfnh1ss6s4m9ntfpbb557gww5v3c4wq4ew6rlozbo9e67na5n25bkflh6oiczw4j6a5n5gv5tv4roazv0p0tn92w0tkxks6oumcoo056y9fy\",\n    \"members\" : [ \"r22ifva333p5tqtre8xo9bcdvb64whq4sc0eeoavyiit7ur0fwt9o9uibd8x0mxvebrx14c26zhti4fdgzf7hqdjljw00ro4i04b5xwodbknjxbnz22lr47eet3c6dty7yef7wuoj1ny8dmoq4v84p2qgsglnobn5traqo2g2d04\", \"dqi1pw0xznfb5talytt3vkg2vt54v059tfd4yljwojk6p12euazaoww2cr4lzuewpxfrs5xullceyx2sjq9lnyi2jie86l2gxnb095j4fc0tsqy2ecpu4wl99059cs0o4bntjk0x2qr13u3mmqxobt1spenomkc9qv9uwa5vdevhkwbcci6c86ba\", \"uivxcs1iems9qjv7\", \"zydlgdh3gfgxswidjql7y7h93w6htm16fm4va1kw1dw3oafc1k6ywmedkia4f\", \"tuqy9hjijmsemjp23ugqvd5o7ll6jfyn47aln1f9g64ezbvdn6fql61p4hu0f1v1e39orwv557zgcsryc7q1\", \"wj58o4ohuteppbiurqqt7icltfdl9z382a5hv0h5pt1ht\" ]\n  } ],\n  \"etag\" : \"vel\",\n  \"version\" : 1464287489\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bc28da1-94c8-45e6-ab28-a4aa1f2cd2d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.469429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d2361428-4e5b-4808-8c9e-78757645b4f3",
    "name" : "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND i...",
    "request" : {
      "urlPath" : "/v1beta1/ts0y3y1y62oyoidjja7t1tpmbqyzevm2mfioc0f0soa2gl7l59ca0r9p4k6jimwbir2bevty9jszy6y13e8qdwafhmqa2663qbc187jwwkosp1bmgycr/attestors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"4uwrifmjb0\",\n    \"noteReference\" : \"h6ccbxmgpyhz0as8ejv1d5vz0sazjaiz4wyoo92i2f7liz23zznhfn8zqiw4rnit6odipytbi792iq83sxk8zgafqhbh2s3i0j3zpsy0z\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"fmx0918wwsjaxompoex94v92xevy6o5x6grhb9vw6s2dxq3gkjpmozw5dptajih8wcco19f6q3go4x14s8142fytnvkj7rosbgg6g7kc2r15g56\",\n        \"signatureAlgorithm\" : \"ECDSA_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"6k7yktgrorsn0okic1b8lyqyw4h7fdxw4da8a2627mhmsgcckvx0l39z2pxleuv4zglx9qo7d2u9jo6xvf2w10r8t65peqek3eg92afhtc5g0kyh91dgxew4zu03lzczkx08tgjwbf9qbk\",\n      \"comment\" : \"qupubi885iv3r8d6rdzpen1m8wb4p2nln50ll9jrxfu41bhzj9hgvs9yof4b7rpq4uapyz845y46o7j31nc1u82t538xg3y7g0nb35leijqdo8ce1dbaew832ue04p9s0ie\",\n      \"id\" : \"43dr\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"ia3ezaov3vxubw2fp41sqf12iwz22r7x8ulz7pvvo0ssry2w4pjaq017el9qoen8scpeo0ayqu1ik1rhfh1\",\n        \"signatureAlgorithm\" : \"ECDSA_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"11d9d5bcdajv8nty40fodwm635bk9s0nl2u5sy81jaun03bubc52szcmsgqzw9yc16rmp9wvvdy2nkay91l8wceg7lovcbmvllnk4fm4eoz415chsm8t49550v9kdnz3omsl2pu3bytxmalrxs8\",\n      \"comment\" : \"k8p6az50e\",\n      \"id\" : \"9266\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"ir7nskmucgmtee8zhgeio5lbq1pl\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_4096_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"xrnhupxlglveq71yanm7q89nse1lo7b4i0znt182k3xt5i86w3wd\",\n      \"comment\" : \"wtzlg815kpjzzugntnsjw5rwbghx01jourj0c4gyec1kelhtmmq681vbyhrh65b5j3v7ytlgj2vqmrtdf0s3ot6ab2iun2jmu15\",\n      \"id\" : \"7jnw\"\n    } ]\n  },\n  \"name\" : \"Stacey Turner\",\n  \"description\" : \"Non aut consequatur tempora. Labore quas adipisci voluptas qui consequuntur quia eaque. Quo rerum rem.\",\n  \"etag\" : \"unde\",\n  \"updateTime\" : \"2022-08-25T11:20:15.468757Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2361428-4e5b-4808-8c9e-78757645b4f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.46884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.create",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1999ec7e-0f85-4517-a66d-1af54c2c49fe",
    "name" : "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/jcvehuuvxl7ybfdu3qbpp7vskm2e18mh07lezkfrztg2xitgqz838hf/attestors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestors\" : [ {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"k8kmq63xh7kl5kur65l7ksvhcqrhykn4tua3xbv9kcbkpjntxkz1fn3\",\n      \"noteReference\" : \"ynyfcmjupgo81f3vdd3r3i7da2v8tygmz1vtegja1kzkqw8rlxobildvfdsqnwxcv2w40enncy0paxmc1ijglqz7i4hixpg154mdfu9fzwiuktjh18on67n4qtyxfeq9pxdnvxfrdpukb9t4rl1wapko3\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"9wmx7wu1x7g2kskqjjickv3ev5hbaozwphpmrzqdr9rh3x1qu936k7ye4q7p353agpmtx75b7e6zm7e4o4m4kr3e9djg1d618zj3wn8h6bkck\",\n        \"comment\" : \"tp47smj56fp8nsj4eisvscc\",\n        \"id\" : \"siwb\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"phm2usyrnqyj6yu0dwa94\",\n        \"comment\" : \"jwraykorbpj5xadmuv1r8d3844be0sj7mgzy343hec0dhndlaumsfiupkmxsrsw0yg5fdn8frq8njcddo02c5520j8c3pgzr7udiw6k4q6v7jy0l9ynnf97tzbcm0tz2pcvv9ce92oy2usinkvj5wjwgqdtmfitfvcrcnqbzt5b7egkxvv43gux5ccbivtcsvl9sy4\",\n        \"id\" : \"16m2\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"lgn7rcmjmj75d5c8p2sotybs8l9lgwj30esytzdzbaxbskw5blfkkzwvjpnc2tekbfqsjqc\",\n        \"comment\" : \"ecwg9pf31yjp0ux058kyl29aud6pkvjj58lb5z6p\",\n        \"id\" : \"p659\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"0du48xn9nkujdq8vhalli4ay0ybbva52uxokwmt07dx4b2luclr6wtb7ia3bcw1p5myytz8olcd0v38u7smviburk99t508ssjwn02gpg0nkq7d9p101rxsa6w78n6vjxour4l1b6m23\",\n        \"comment\" : \"2y1o4pgolp0zdxjwpdy3u5ipce77n96wjd4sosr44xjkqh7i99k4dcrnni23axrm2r1nzdldrnmpedb59q45lgvsjt90syazxd3wdca2h5706ox1i693y4gzw8hjsktopnnv66o8f4cjqr7jfwig\",\n        \"id\" : \"3atx\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"g04glcg0z7usae2w76hyh9473ibymrlhvpec6d\",\n        \"comment\" : \"yb0edh4mqetk7z5vvilr182e97i45l5jpe08osov6p4ta7bllk90evlu5v13zz0efss1z8z67sfn7dz2wnqncmrmjui43u\",\n        \"id\" : \"5j72\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"nu2ulmm3fd0jlc4ak83nw2m7x5idov18cd6mzm6qhj5q1wpfyjxdkz2y743wb22kfw4jncy7lkvhn7h3vzwltnma5mq92bs9rydnd0wvyzgawmiafdjfdw0r8e2uycsww4sfdee9by0fcor16wn75c23vdvhjbzgneurbaathe05mlobxl44hhqhebnrsrbpmnqju\",\n        \"comment\" : \"xfv7lhhc4qzmieqgngj432btlokc3s8w7kp2olzw98dwzboaqiu8tony3abmjuo19czgam139zrn7vfzm58lgemrz2y75xrjxsl9sdcb2lvroacnjabklb2k18o2akqqje72o6shek8\",\n        \"id\" : \"59c0\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"44fjl8huxfonhdk2knmiglwg0cshwpwuafn26hd7bs8dew3kk6ch9vqw8jzaxkqi0qlt7w2r3eft4oyydq660xwpk5qhp9pn19s5g7t2jm3ibzic0dv1dw57yelgk3h\",\n        \"comment\" : \"be4rww43ve65fgbvs61gcwp87vn3p8hvads6jwohkfdwyiecakab3xy8t1qmv78bshnl6vp9kfh5fv5zwyb50amskoc1kf7rwadq3rwqoptf2399joi913dfy77kqfufzl6r52pck2wvzhoub5q110nelbga8l2c59xeovjkf1sxbjh4jeu74mubhzzh\",\n        \"id\" : \"i791\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"b4nex6b1qd265b954ibgpzc98dt7cx7jnf8qflpkx05v4pnq6dxpcg9inxl7kruuwxc2ouy42r5mpjc8zi01sfd1qvu5q\",\n        \"comment\" : \"pq0fcfwkgqislawk4r2neywpszezeua7lg0lc0va3z9x7apgudpqyw6vp2sk53r1vo0xqtmasnoasrbegoqt71ysg7p2xi3nb3jfb6se56rmx2qhebb8o87scprdzudp8jk051p3846apntrguef2zmcw98ua923jmxgqw29i1tx09su9tpbs7ia5hu4bzl5cz\",\n        \"id\" : \"1k91\"\n      } ]\n    },\n    \"name\" : \"Olimpia Hirthe\",\n    \"description\" : \"Cum eos qui doloremque pariatur iusto vero. Expedita laboriosam saepe. Fugit possimus illum voluptatem. Exercitationem exercitationem dolores.\",\n    \"etag\" : \"velit\",\n    \"updateTime\" : \"2023-03-03T10:24:15.463807Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"m2qha7t2yet0symxq8sml7qw901os13m0iv5\",\n      \"noteReference\" : \"ei8t1k45596huaq4ddp30ugtzwmzzo5aq930ujy9bez6ka3zir0vxnrmkpeyovajsce0s3gs\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"wmytk2blnmmu8dpmo6q10i29pn5mnn935botn1dkapvrpvz45z9my\",\n        \"comment\" : \"quxvvstg1yp5nm8jbko8d1q32kbovdmtqc5ezctrx25rly7tc8ne8k6p88rl87t1tjoqi3uphnq46ewct3kocsdhj06yfibrq7zzotn34zr6zet671uxxh1ejfve70doh0xhhuowqzlisan9sx99e33ckaafenhie1b7oekdcmvsp279y4q3of0k3torm\",\n        \"id\" : \"065x\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"6ul2nzr28loldqoxa3t5ckf7dub66v7icumyrzg8b4ynxlo6pioxacnjrkjzdwnj2ncas4sx8ltvbu\",\n        \"comment\" : \"we8etfnzsheqef8bk232nqfrfa278iadejfg7qr6rzn2c89f85jw53j5feic5ql6d5htimfd5afi4j314vnt53xi4tjl45gea8wugbzhqiuo09nhfwfz7f5mx0xkvpyi57ayr60d18sui4kl677jbxc\",\n        \"id\" : \"vk3y\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"hzvjfejcygz6gtf\",\n        \"comment\" : \"wm6ztxjjfo2ywr0oz4mde08rj4r5x9pyx0m3fz0e3qwqwhsgz0qnjhvg616chissc1zcctzkek1bcyg5cnm4d9bvf4mg7vh\",\n        \"id\" : \"18uk\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"nntcguqa06noapr4y7wd6mesbk4j7fflq07x0jp9min39ocfd10ndhbk6r66ejyrygex3c9rgpg257rh98u61zjgow36z1lyirscqgu62ty61gryqw57q11g8sb6yroqlxqfn\",\n        \"comment\" : \"t86ekl2eltboooq8vtjuaa1woqsukw65fuxsi4vc0zwjhzhsutep099lm4rg3qoa513hv90lwjxerxg7ncvdxuj6d7z9xjd0u9r20jsf5a6xexnot6ca09iuv6dkq2s2mxmd67jieqm0iwj4pui59tqusg55uvtd6f8wzs1bv0y83t7ry25h460h87m81vxdi9taxnji\",\n        \"id\" : \"16a4\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"2a5dupjmgxkmlhuor9fb2yjx49pjuoj3z55zwo4i2wb1r5z4ct1jdc1\",\n        \"comment\" : \"p7hvz1iizfiwhipxg6ph5oawqmlp3jl8u3urj79srx2a3zdxlonzelkp\",\n        \"id\" : \"l3ut\"\n      } ]\n    },\n    \"name\" : \"Christen Franecki\",\n    \"description\" : \"Rem sint dolor. Voluptatem quo mollitia. Sed consequatur quaerat illum repudiandae. Dolorem est repudiandae vitae.\",\n    \"etag\" : \"autem\",\n    \"updateTime\" : \"2022-07-12T10:15:15.464497Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"kx92w2uurr3dqbuqqmyky7z0gltnhh3dck5ucpdnp6ryeosjyld6du2u7ydr36l5m33mm6k7umffs9rsqhkukaeheeyiyo9fdy0emxie9bmdx9d8xb4vadzoakgkivvnd08e423ya0lsh4bzcj8eshlbmtg5qbfrmiiy3mzq9q34bieilsdwmqsz21yx4kl\",\n      \"noteReference\" : \"eu99ph1xwe7nlr301ruiklrznejhmqerht90g7pv0fy626tjvy00eqjqwa8323oxaqand4dfh3a26y8lbq7tmh95iq836b2tih2me72rviujjjpr15lfpbp1f8y6uz6qse52td7807cauqipa5ws4n0ijqnpxe\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"afdflqsd6b4kauvsuu2alef20qszz60ae\",\n        \"comment\" : \"2t37sd88ohm8kwocqoiqudfi5iipk0m0ydklzac102cq8vmce6xsy3j3ubel13cmru274qoozozhzalu1fr2tylg0rdfvsy5djwjbypnwv87hduyreilk\",\n        \"id\" : \"9037\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"x2eail74cqgb0qmwlif6x6\",\n        \"comment\" : \"0ftmqv0gezr3byjmwijb0ltvf6yptalguik4excj4wtx22n9knrsmhxr0t36lgb1r63ew0yt9uqq00dp029yo4y1zg6pyqfgodxij0ijzxks9nbuab522pucw98v4srns5um0os10e7a8434xe9bflmmft\",\n        \"id\" : \"mm82\"\n      } ]\n    },\n    \"name\" : \"Warren O'Hara\",\n    \"description\" : \"Omnis omnis consequatur. Aliquam autem est. Enim aliquid doloribus ullam earum ad expedita.\",\n    \"etag\" : \"consectetur\",\n    \"updateTime\" : \"2022-04-15T09:44:15.464881Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"61zv6wxasfzcn75ofla2ffuyyyngfo193y33qw2t6g0i9lhlj5qbzb0tq8ldysqo22k6zlp1exgn1ldcl6ad2iy8qg3sc9hksdj4dvuz7tydbgr\",\n      \"noteReference\" : \"cvwro37nvy7xanrk0mhl8zwr02pxgfxioe1h039vmlrn7kr83so6716uplrwzxmwm53x630vfzc3e1th2v2qul7wfryjccuxmqdmnt8z75o113u7cnydlq0z2zb6dzw1fyx0xd26dn5eqo891x1b45gsdsd18n5ru5\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"fzk92f27gjmvxxyzk45lllatm5hq5e9scgkxecgper78mqjkn7v9zc68oo\",\n        \"comment\" : \"zdidwd3pg6j9k6f5v74n67v5kdpnbzyg0r9qh\",\n        \"id\" : \"h592\"\n      } ]\n    },\n    \"name\" : \"Ms. Jaclyn Beier\",\n    \"description\" : \"Quo aliquam voluptatem quam quis rerum nihil. Modi voluptatem magni ab rem et autem est. Qui officia voluptate odio. Qui earum culpa.\",\n    \"etag\" : \"qui\",\n    \"updateTime\" : \"2022-05-20T09:44:15.465139Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"sezhu189gv403wvtuqnksxjj7yuibhnwmejz0qesc8thtm6rfmrc60kyqaqq98ltmrqdjow3uj656jh74nf40iaj1ex7tm9tgj9s1rscf6bwmk01w7l0fyyfd4hi34pxc67b1699r883tg0gwsv5q1g7130ad62ddyvrs1pvp91h05k241z2x6f9nj0\",\n      \"noteReference\" : \"rwn6bn7i2tiy2wmr6bm6awx9ukkduoayy0zia40cnv1nir3nh8lbc1qpp0mtpb3x3fb2yqjbaaafgo4l5zmotw551r7pv6hkxq2wm4dg99g03dla871bdm7\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"8jh33tv0wn8jjcz9iiytp3rx8vpcv8g8fbnuvg0xq2cjkc0wg02hl39g9q4cnkzj14rci98en5yjtc1gj8n257byo7jgy1f5q89gd169gyjeik9qa2z63rum4wvqqrwbpglaunysgjbgrqpp2pfnt0kl6nz5lfz978uf3otkwp5p0t4env341ts79l5xdhji7sep3z\",\n        \"comment\" : \"3owfxjalddqqp216k43muzkkjsfq1j1kxfw8oktf3zp790h7hldcj7xi4g4au4q0vgefvspu1p5nhkmj0e295t2j4w03yo8n\",\n        \"id\" : \"94n3\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ux1mgk6uz7l0or9xnetcwigw4zs65bcezz33d8ticxzrydsumxr9n3qz0mkmwe828sulvn4853asju632tvymdpm3fjq9j9opcl6wdwhq815o47bwyq2mck1khk82m3j\",\n        \"comment\" : \"xwcn59xdnt49lvcose983aium9ggtlor6l3r31gjzfa1lofsec1mbca9rypgkfh5ddyb4ufkyx\",\n        \"id\" : \"xu28\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"9ieqcx50a2g2khw6fjw7l5sgtrz2tkst5wenp63e0vv4hzjtsjocl9ypcdx7h4b64b25p9hshyih1uesp2tfupmkhiqcm6dl0its88n8ijq3hwz0ybr2jfr0jj14q6djzur4p9hp6dqr171skf3gme7hmg35v0xzdjahh2ckm16hou35qhs1\",\n        \"comment\" : \"ywpq9n14kvrcitmed9lmsnfdzy5ejkqxodsex5jr6x4fzy4rggvvpe\",\n        \"id\" : \"6hv7\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"gvuy\",\n        \"comment\" : \"0ypbhzh5xtl217yaaene6a5ebrnxj7dzqn9zgq6g31fi5tsyyfajexxsivor25zvitwe6ttbguzbcgdf8lv12mo4ke3f2mzruyngpw2dazi8d84arysg9xki3nwi63k5lvpadhd4ceelqy\",\n        \"id\" : \"69lu\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"pib3uaj352ri83mf1i37lbfaitn2h5l49rgzs21cd7wk3swc10421jfi08j416mqujafwasu99sk5ffcm\",\n        \"comment\" : \"vdsnv4ahu7lsqlxlz39oqgkym8b6fr6f4g7jgo9x6eqbnkxmsjj0ka1gc5u6n50maza3923l26pgib50zn4ajkwxcuilk1v9zg5ojk8fkl6ma\",\n        \"id\" : \"0v92\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"rfb4os2zwmve8ym3wxf68imtm4g5qcpbqj61943qgkz1pk3n8kovbbki4ah4zuatnnjn3a89q4xxmvlg3atik6hlk8yiug7m6jms001909nqt4pa\",\n        \"comment\" : \"mvsa6zckjxczrinj0yjhh3e86zmrefdspet53537c0dr9f664zuz0cwonxo9auxbnr85ep7nu6qh6aog4haeqw4yuklc5yevj1mm1f1x3239xo1f5xj90ll0z7ca8sfwa9z8t390s1076do97htboyox9igowe1\",\n        \"id\" : \"svb9\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"j7ddv3\",\n        \"comment\" : \"tjxos3cpcgvwbjbg79t59pj2tfijb0bpcoba4zep4z8giy2mc09ryhedwv61ol4l2fx2omsh9h32hn3cb0jy2esoi3h9jeuzf8z4kqjux90jddy086jkb590ycwtlicyjaq0fe702zp0v0je5tuaqfh7xt2imehkqqaxze8l3tpzc9i5kn70a3ph\",\n        \"id\" : \"7044\"\n      } ]\n    },\n    \"name\" : \"Thora Schmidt\",\n    \"description\" : \"Aut et nihil omnis quo et quisquam. Enim dolores unde autem sunt impedit delectus ab. Praesentium velit explicabo. Perspiciatis laborum cumque cum iure eos ratione.\",\n    \"etag\" : \"architecto\",\n    \"updateTime\" : \"2022-10-11T11:44:15.465987Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"6c23oli0ujtd76lsgldsym6ucjlc45n7tiiuc02jrwzk2924hgbsrhzamx4ujc7pxs32irclyxzs5lugcyuvonzyrj82zzfrlechz0fgn0w4wnvf25p16b6moo56q2ffy039vljep4cdfjzwv79j161us05e\",\n      \"noteReference\" : \"z6e1h3ya2oavzzc39m5fdimcfinoo8gh39nwewrr3k12yp8lyhvfknqcj11bny7r50elc0xjv\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"3h4tlq4185hj8l7o7yeguhdbygxzwvf6dsz5eo6r4abznk65p2t7mnl1\",\n        \"comment\" : \"673ne3a7q\",\n        \"id\" : \"25j5\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"oxzk3nmj56ltdp18laayh6ff3kvru3bnroo8qdkpmsb3nln6cchubuxr9y6j0ser34n2g\",\n        \"comment\" : \"cto2wnrwy12sut9mkny6odgnv0ztvtquct1nxwvjccf6muusbl7ci5bf2geav7k50k12b3qy8z87fbwws22dtcker3nvbz8boisfxkqy82ayfyr4szfu\",\n        \"id\" : \"6188\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"62mx35m3nthzgub4ntkmxr4lk0fl6ifgco37gyo5147x8nqutcucg5f3y5a9wsvxm3uve6lus14k3ulahd8ij8mhk2n53sxwqc04iiovqkxbfociwyanh1mayk4mvelzatfmzp590do3i0a8m14nms6ljhb8aoeo7\",\n        \"comment\" : \"gw5du06em2iv9uj16mmvok9uwo\",\n        \"id\" : \"j9g4\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"0if49zo1t18m7dn6v1a4vtd1rgr5s6ygucz1ymfjrwo1xzj448iangb6kvzrp7zkiowyji2hhrncbk061ue8t2j1c3i9t4dxya807nn5vhhidmto8pjocbv09wtbg5ghgzrzmtvodm6xwedroxsedvwwdi6kc1qrqurn\",\n        \"comment\" : \"nt472jxdi7tfo0gd4md2mlxd83bdhqqnd5w0lilunfnkx3mxj6jril30vniymhp1t51h8jy4fhotinuj1npttwnekw569szb3icqc9ib9c4oxa7e34y2u6aepz680b0kinlrof892trbp75u97ks66rgq\",\n        \"id\" : \"sgzh\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"4f4ysna3ibz2h3xco4pdrammlp8iicdubf2avszqqxse29billn5atgsvjmjo89dvaqj33br11wqhiuf6fa68wzi20eky0qydpwb14ujpdcjbv0ghvpmb879awr7d6ao8otjtff2w1vlgre0slhrl88\",\n        \"comment\" : \"kw15ptaugdsyzwmpchpvycdchh43q8ioy27oqg957wmfod2o44hvg937vzerkpm\",\n        \"id\" : \"b916\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"g68d6b61y8nd73npnl0qpotb7wfi6m3pcrmgcrna01x08fd7jwmp4ygirwup25q2k1o8pw2bskvosia6hiueoggzb3xrwofd4wvr83h6o1r1wjnwtfldsuewxa00k429hc\",\n        \"comment\" : \"vxwypvw8l1rmaqs8ndd08l8alzcv94wpbu02qx5qg3ocitfuy6k8qnj79x32omgajf40ysrceay6l51kj1d6w36a3a0cw5l2yw3iiycpta45fvibteodhq16nuooc3r90qekxe6mk3zojaqm8tjyuzbdipq31gen17soduyvv5\",\n        \"id\" : \"hmi1\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"qqlz0b9qmzvuf2ivkfwlc3djyw59lbyivmh0xk63fubtlnn0lyxzsgdqpxlp9g0shbk4xamcyj8u8vfx2zod295po70mrznwtmnaxasnrr2w3d7iusw8ampisiap9qkbb2pji8wan191fylftc5v4qand8y9hyubx3jqmcir\",\n        \"comment\" : \"uq8p0fjvx1uda7r5h3z9flrnknbb3j46hmssd9tg22aadim75lvkc42rh26ipvzckbi7823009imns2dffojnk0tpr704sqcaamdmx157nlaohcw79tk1op\",\n        \"id\" : \"wz5e\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"yogd0bgtjv0tfeh7jehd3f7flcayarcwrbg5n5n13ro7xave4uin\",\n        \"comment\" : \"7ehwjqe6rmvgbmfvj8utv7oi8iufzhc9q2xkymcwspxm28rkrxgrpsc6j0vw6eqerj4i0eq0r027swjttnq94omma6h9cikcjp25l76qq52miqk1dk029v0ikf53zzxro6rmdhbpg7j0867ksnj7i9hndr6913fzewa8805vu3us1jhe997g\",\n        \"id\" : \"53l7\"\n      } ]\n    },\n    \"name\" : \"Dr. Modesto Dach\",\n    \"description\" : \"Earum quo tempora facere est. Ut alias cumque mollitia. Itaque voluptatem consequuntur id qui voluptas. Animi est aliquid et minima beatae nesciunt.\",\n    \"etag\" : \"velit\",\n    \"updateTime\" : \"2023-02-11T08:42:15.466962Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"9yacsvinrrhxuhk6u2dq0wq4sj5rtf39m9u0w4b1j8a\",\n      \"noteReference\" : \"wp8oabtp9qlutzu65naa1shulkkslnh16b08v813g23isu94ktc4i8a8slytujw0g54t3ize4he37kwseljdzpv92yrmskxa6tcrmhdh9erdx00mmd2s44iw3wgv8h0so6l9cm1i881c8rbtgs6lz0df8t8me78qrkjbghcfrd11i5aysq9duyh40acpdp\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"7vyfoij8d08t5nglfumrfh82fnenfydrf9sqh34b6kwkvm7js6uwx9jbmi9b1q3krwjmovv6g5ui2yd5p16lavfu4a58ji7kcwh0o3ptchkrg6n0ocypy24m7z1h2w8nba872ndkevpdhm58e9u46z9wl7bi5cnp9c2882gitb4z3s64am27d66kjkqkkzjx9\",\n        \"comment\" : \"uu9pp7evqakoxr35e5ne82fsy5flcdxn30k8h6qorxl5dtdv2x4s2wmvd3gl40llag5phai7l6bufikub8tt7moveglbdr\",\n        \"id\" : \"5m89\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"gxlyffflphyxuhaonz6epqzmlck1jx\",\n        \"comment\" : \"ffnv7l2juls2qpafic5xzeysaawwvlnclgmma8m2oy7oe3xm5mbfea8kteq1smc4a0xdb17w0vr9l8e7o94plk5dcw5z64auf35aq32mn3gknghk6s0a5yugv4zs96crzwyn3i5f0s4\",\n        \"id\" : \"85k3\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"7px2mlw4gbi1f28ioa9e8xerglbvuzbnmatxp1395zvsi99cf1z06qhwjw6vjvfpqpv0qs3bba5o1vkrd2bk5ggw9azx6tnfn\",\n        \"comment\" : \"xymxo466q4at\",\n        \"id\" : \"fw60\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"yfp8lowstaaucxxehb4kbom314ubak6n0z9jugy7\",\n        \"comment\" : \"694by7gljj2elbpvjvv\",\n        \"id\" : \"1t25\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"e2oftom7i97rju52qvtdvw42ihhgyo1i32ri5neuxf0xd91kswkhktuaxzh0zm967bz4nny443kjubxurzb1sdhf966o4hzvuqt3qde4r1y\",\n        \"comment\" : \"ajy34kr0i1o9abkvc4r1s4g0sht8wv7fpuqvoy2mi1e81jhyq7v6ve6kln64ymn5wuuyudoo9229jayk0sb9p4gs2n0m12mld0w2q7kwxbmq0drddyoqf689fqjcd4v57n85n64aw4yhs2c2da9phpxh580spe5f31vsa8zae6l027urs0nljjvv3gr7jm\",\n        \"id\" : \"3o6e\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"6w7bk1o3slu4sjpxxqzlrqifqeq08gvi8yqlql30r5we411bdpkiz2ll3d2c7ksj8mhjm63wv0bl28gco7zy68mfb857un4hn44haz7a0l7xbcvpeevkxhde7dedt\",\n        \"comment\" : \"aowdw0gsvc3yqttafymywmt6mj2xh0h3mrj1c1vh47uas8j9rdbjvdao1hbgmjeh446ob3ftqjumlcknotxxsbhmu2ui67i0x4taarzijmyen0a4inqlpibclx5ufbafksskj9r5064j2614t2oiko0t1m7sr0a4bzbxg8dehdjk0ji7cudpw9nrr\",\n        \"id\" : \"86y7\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"k1e9sh52m8uhnue1z6f53529pgbvh4itu5svgk1v3ykxpnxl6kpolt1soaaj91t33agf0j3m43qewdk06ldr93x7998h7xm9wjcrctlymd8r8jbuowh0m7e6543dl75zsi6mgnnk5l2o4ajbvb6m2c1k3684ybv37iz0sc0w0\",\n        \"comment\" : \"iwbw27ujdbi5m1toytigov8a6esiwas6jxy5zq8zyc57ji1c7ofsz5p0buq1sgfv5a711nnh4gv9798ruzwxdqhassou4qzl69p0v1tb4o7btbqgn7d7pqpbojvuckwr1rpajp5jk3ux87zjz7p6wli7ucnf8q\",\n        \"id\" : \"xvwe\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"fc0frkq2zm37l83cs6n5lfhwjavvylh99cnln8lfgi2m2z8ij76bm\",\n        \"comment\" : \"wropk8s7q6s0sr3h62qbl0a5f4ecw\",\n        \"id\" : \"0b3q\"\n      } ]\n    },\n    \"name\" : \"Trudie Mraz\",\n    \"description\" : \"Nobis consequatur quam provident officia qui. Et voluptatibus itaque. Alias doloribus modi rem asperiores nisi eaque. Velit ut vel. Sed doloremque sint perferendis vero eos.\",\n    \"etag\" : \"odit\",\n    \"updateTime\" : \"2022-11-26T09:03:15.468009Z\"\n  } ],\n  \"nextPageToken\" : \"0yo0sml9s1scruq86rqcsmia901u4iuw0i9r7my6qobu11fm1ty3juf3cdicqq1jdepg8m4p7wem8j7gld3yo0fx2hsbl51o7rw10f3rs91\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1999ec7e-0f85-4517-a66d-1af54c2c49fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.468206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.list",
          "schema" : {
            "description" : "Response message for BinauthzManagementService.ListAttestors.",
            "properties" : {
              "attestors" : {
                "description" : "The list of attestors.",
                "items" : {
                  "$ref" : "#/components/schemas/Attestor"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results. Pass this value in the ListAttestorsRequest.page_token field in the subsequent call to the `ListAttestors` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "64dbebc0-1334-4dc8-99d3-a08992bde8b4",
    "name" : "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Belinda+Gottlieb",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"6d4mpirp8jdbopmlkxre8qyyk2crt0vs6af6hldykzy9rfee\",\n    \"noteReference\" : \"ot5qs1q7k59dnlh3d\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"s3jbbrmt1bdxu99rb3qt5ns40spbbzopk2bmr9v10j14vwsdo5wxo\",\n        \"signatureAlgorithm\" : \"ECDSA_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"5cdwgbk2k0tyabnbkg5x0biigecq54ci0icroo2rx4h1\",\n      \"comment\" : \"jkex6g638na0o8yrnk0k3aeqt5dqfo16erw7xil8pz1jgoo1lii2\",\n      \"id\" : \"di65\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"7o7cpdsffwhub65ja0vf5\",\n        \"signatureAlgorithm\" : \"ECDSA_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"zbjg9\",\n      \"comment\" : \"tbuup6o5xsefpr1m83ofyw8oaqvqfr4qcyuw4vnz4on0ocque7ac3l2lu0hu4gf1da7xht57vl7s33n2orolgdqa1mbvwypaxrekjk8im95bvgaer10u100ka724ugdd945xzx1\",\n      \"id\" : \"782h\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"j0l0xcisw1metdzonmfq4zw343mldn4h4g12v2rktkzea799oihdjlv0cb7yr2i86lntighk8w2shs4f4pz0d5looe29vh8exzeb4sohrjty9q9iwmqamlxb14xe3c9s7gopvozujay0aafjwe0ykn7rvapju\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"lyzlqjw7dlw831zhin6ztz4lyaran80znf5mgvgkca8i53vs4uvkvijt7knmcz97aimne67xn91lzol7ysav5iwrp45qn5oyx8z668ryupqv9e\",\n      \"comment\" : \"4exk8yvlki3c497p0aewf7dxdysmqlubtzw0f0bdh771t0p5whaufuqcrwhx4z8u9s3wdquxrxaubdr9z59sk3x9yeux3j7g3lzu2kl47nyf1qmuknfbaf070l7fl32k5lkjqare01lbcdhz\",\n      \"id\" : \"3xww\"\n    } ]\n  },\n  \"name\" : \"Shantelle Quigley\",\n  \"description\" : \"Delectus iusto quos dolores cupiditate eaque. Non unde quis consequatur. Corporis quam vel nesciunt voluptas quisquam eos ut. Id quasi quos natus dolore.\",\n  \"etag\" : \"sunt\",\n  \"updateTime\" : \"2022-04-20T09:38:15.462682Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64dbebc0-1334-4dc8-99d3-a08992bde8b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.462786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.update",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "30f7e6c7-53d5-41d5-989c-e2c736e8a3c7",
    "name" : "Gets the current system policy in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/Silas+Schiller",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clusterAdmissionRules\" : { },\n  \"kubernetesNamespaceAdmissionRules\" : { },\n  \"globalPolicyEvaluationMode\" : \"DISABLE\",\n  \"kubernetesServiceAccountAdmissionRules\" : { },\n  \"defaultAdmissionRule\" : {\n    \"enforcementMode\" : \"ENFORCEMENT_MODE_UNSPECIFIED\",\n    \"requireAttestationsBy\" : [ \"gmw8thatgo53z91vu1i5x\" ],\n    \"evaluationMode\" : \"ALWAYS_ALLOW\"\n  },\n  \"istioServiceIdentityAdmissionRules\" : { },\n  \"name\" : \"Malia Hilll\",\n  \"description\" : \"Repudiandae dolor deleniti reiciendis. Maiores quod possimus reprehenderit maxime voluptatem voluptas. Eos enim cupiditate omnis.\",\n  \"etag\" : \"consequatur\",\n  \"updateTime\" : \"2022-10-25T11:57:15.461916Z\",\n  \"admissionWhitelistPatterns\" : [ {\n    \"namePattern\" : \"q0prjuhmfnqjr29sawmoxdfbw6mf06uzf2j1f76iy8x9my5fnpxndnazfwc1s1cvaf268wc6isg9v6epsulgkoj7ezdjnwi05xgzvadwob8de8kve2q7ikuo4qtfzya3s9z16cvh7slb77\"\n  }, {\n    \"namePattern\" : \"g0dqylzamf7q33ebsx1up3qzj2b693gszlzwkd8oc48ebllpmr3hwy3a2kx6nqhh2lyn17r50nj4k60fnjsklycq747m8nmkhmfqntvhs7g7jvhp99d84qw7j04ix5w63bk5l5gk9cbknogqo50bens5y7acpmmxtzmlk3zl7qliwxmc2gj1a\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30f7e6c7-53d5-41d5-989c-e2c736e8a3c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.462117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.systempolicy.getPolicy",
          "schema" : {
            "description" : "A policy for Binary Authorization.",
            "properties" : {
              "admissionWhitelistPatterns" : {
                "description" : "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies.",
                "items" : {
                  "$ref" : "#/components/schemas/AdmissionWhitelistPattern"
                },
                "type" : "array"
              },
              "clusterAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-cluster admission rules. Cluster spec format: `location.clusterId`. There can be at most one admission rule per cluster spec. A `location` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For `clusterId` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters.",
                "type" : "object"
              },
              "defaultAdmissionRule" : {
                "$ref" : "#/components/schemas/AdmissionRule"
              },
              "description" : {
                "description" : "Optional. A descriptive comment.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the policy has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "globalPolicyEvaluationMode" : {
                "description" : "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy.",
                "enum" : [ "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED", "ENABLE", "DISABLE" ],
                "type" : "string"
              },
              "istioServiceIdentityAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-istio-service-identity admission rules. Istio service identity spec format: `spiffe:///ns//sa/` or `/ns//sa/` e.g. `spiffe://example.com/ns/test-ns/sa/default`",
                "type" : "object"
              },
              "kubernetesNamespaceAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: `[a-z.-]+`, e.g. `some-namespace`",
                "type" : "object"
              },
              "kubernetesServiceAccountAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-service-account admission rules. Service account spec format: `namespace:serviceaccount`. e.g. `test-ns:default`",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name, in the format `projects/*/policy`. There is at most one policy per project.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the policy was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "73368440-0810-449a-8e64-8cf8bb750247",
    "name" : "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Chauncey+Rice",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73368440-0810-449a-8e64-8cf8bb750247",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.461718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "e693f2b2-2419-4e46-8753-71543ee15a4f",
    "name" : "Returns whether the given Attestation for the given image URI was signed by the ...",
    "request" : {
      "urlPath" : "/v1beta1/u6gobr08x4qx61gy3b9qfik16bxz38ke5qbk3p8m3owj8x8it4asaccub6nqs3rsrg54utwb8jt47z3ac5e82x00myktlhkbo5lxg9u3mt5yqrnisy3rka5zv39ngf3l98kbf636zj:validateAttestationOccurrence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"ATTESTATION_NOT_VERIFIABLE\",\n  \"denialReason\" : \"p1n4iegmi8foh3imxyv4heexwqplk8s8e990oepzzuhmq29ynx25lljlonm0q2pkqzmr7hnvy4yb19l6y8iy7e3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e693f2b2-2419-4e46-8753-71543ee15a4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:15.461615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.validateAttestationOccurrence",
          "schema" : {
            "description" : "Response message for ValidationHelperV1.ValidateAttestationOccurrence.",
            "properties" : {
              "denialReason" : {
                "description" : "The reason for denial if the Attestation couldn't be validated.",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the Attestation validation.",
                "enum" : [ "RESULT_UNSPECIFIED", "VERIFIED", "ATTESTATION_NOT_VERIFIABLE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  } ]
}