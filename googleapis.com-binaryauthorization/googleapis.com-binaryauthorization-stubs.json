{
  "mappings" : [ {
    "id" : "28c4333e-5ca3-4f2e-a382-d8ce294571eb",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/s3rulc528lrd9wt2z1wqzi87f8t0qclf4sssbkx545jf34w0941gcf1vm4d8g82c2yzlwf6fzmsy9h1202:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"rebn4ocjilrkmd7yh82ljjjmyitaq4m1vy1je3wv1m19e28uqiin38lvodhdz83aqstg94lhb5jgbi7w498\", \"7990k1q3tmnrzpbrtpcs97gukg8hdgotm45s2lnevoygofpevyi8mjt4nwndefr7bg6f6rosgwfsv7r51qf7qngislblk2izs\", \"sgsss4gvdsowx5lv5mkv9ry6dh15ye69e18iof45odsxby1rqhmout69th6lgitaoowtmkui7ldxpvweqpakvbbos3927dp8i6kbmxvc2pnsi0axnafs0z\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28c4333e-5ca3-4f2e-a382-d8ce294571eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.069001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4185a488-2ebf-4a77-88d0-69ec8b9d72f7",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/mk9glbl182q6p2kg0va61995pb6l9y37satv2aw7q6vnni2ttfa9b20xh9eif9vmaeanhy7q64y5khpr9vwehakjww1i1d55wu760n15qdj1hzjwrth1wughy34mex50aktqd7dajbw1u7e6ij570xe9wmix:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"n7o5e6tyqoromx7tdzeya2cvywcjqgsu8zhsewgdzh485gsawgc6tpwq7e5x7w10u1u09wf91xyp1x2txj1h5fi4vzuuysc5jbn3y14mbae38ini0qg2dochl12mmd1axr532kww3qfr60kodrha1l\",\n      \"description\" : \"Eaque sed nihil quidem minus ducimus error. Aut ipsam optio cum. Debitis ipsa veniam culpa.\",\n      \"location\" : \"0srrjkcuuvn4tjbst2utar59egu1rx1007jy8ifehc2f5b\",\n      \"title\" : \"Magni quis impedit tempore id.\"\n    },\n    \"role\" : \"thrv\",\n    \"members\" : [ \"59ilnfy5v0e5okmvxl9bhp1xa1kdvhdrhdu5izhslrzweg55bd73i5gphr7usf7spu6elhkl8hw4r592blimdwolxu46chh32itj2e02xizl1wmbehrm8xvy46ollqfjkvtpwsw1j6uk2wgkjhep\", \"3q91olaa4nld895s8mtzeytjfhq1tsxrszsm4ekevuzlle1sv838eqojairqv3bl05i3ptxkfupw70mlh8lmtmsgv3fxfszzzwa\", \"bhxw8a8vn5yhv1i56gyckwfgq0zl28c4t6cc01c0ksmk9lroychf76yefni3pj31nacqb0zt24kfb5o446bmbm2t\", \"nhfn9af\", \"0l0f0vcood4lp8wl1xnd3fj1n5jflqs0g5g4\", \"mrbiiwdhxyc8tppccwzspsauzwlll27chrdv4t3oiuxejcpj97ejb35d3hsirxjtpvve56n4ilixx57gqkgrs5u2v820a51x7pe30ukbzh636pk9mipl17rkoxoreeaovf9o4yu1osciarnqyos6ajk4xwatjvw2ojaqvg1knrzo1zkx13zbbcvi38wb\", \"dovpinm0yr6\", \"3l0bwqfvfu26zqu2n7gpvr8toafx2t8xp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"weavxwepz0tnnxwxsmakpe752fwr9c9pov7gpfz13nx0lye2u04xbmrmgpxelzzutbkqaskd5613dd6f7q0w0w6oyoxhtqdwbc4bgkx6czqbjg7se0i9roqing8j6smkkgxdjtu7wf4gnuhwnedx6n6y4lq0ixjyz\",\n      \"description\" : \"Omnis velit ut quos ipsum aliquam accusantium nostrum. Fuga dolore sunt. Sed quod rem non soluta est. Amet repellendus repellat magni id quam dolorem. Dolorem asperiores omnis quas error voluptatem se\",\n      \"location\" : \"l9r24c777jlwjyy47q2j8g7ks5ef1nfykqfmt1rduodr7dgwhue0vdpsmr2d\",\n      \"title\" : \"Enim nemo aut esse beatae vel ut.\"\n    },\n    \"role\" : \"1c9d4iqqhdof9enhdjvlebw45x2edpvx6mim0r06d9pag1ihfgpn0e6k0pqj9fl\",\n    \"members\" : [ \"wefu2jw7ndzd77hlweb3p5aeeximrjdo5uajtkraogcv0ut06agxopt4y2n90pxask54mewhsjbt576zi844d26k5pxuqlvnavynuoletrwymsz648yduxclpeihr5oq2hz166ew4fm44vw6xhv5pz0b8bnannn72mdi9ki\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8qfv86ga8yil146y3zf2ckk50ugn39i9o4n02b735k8c305sd6cc24rduy9knbgb5ii8heqo1j1kyljku5wsqnsvtpz83xhxotqsz2uhzc59fptw415q4\",\n      \"description\" : \"Sit voluptatem ut ipsa quibusdam necessitatibus repellendus ut. Quaerat ipsam molestiae saepe. Ut quo aliquam et.\",\n      \"location\" : \"swl60iqtfz208qkd77r6l3hgu49fbb20qgrejltw9uwlxlmc7l90cgg39kuym17faxbv29d0d1pnwa2ob64fhwp8gowz1qrpbjl7yvtwzvs281nm71ax0fd8r06w3s6j6d9za5tsptji02a1mb1cpl7af3d\",\n      \"title\" : \"Porro aut voluptates fuga.\"\n    },\n    \"role\" : \"ox4q3mniw00e0f3y1covj7n9hjwxbmd8all0nmydx5s9l8zmcw6hgmh9pfah3hqrk67y3exvgh0g8q1m6kfl8oqa84vp2rytb2v5kn9glkepl6dazg57kgu0rumjedij6fg\",\n    \"members\" : [ \"5bi69euugmfytyeflmfu872r0ylojj8j15m02i8ju88vii0wlafyt5xbf2eepjsq1hyv06hvamnyaszc\", \"pr1r694sv618gw36ytkp1cl7n3ss66hyx5dqfjfja3kvkf3xwp6acmohjbo76a\", \"8o1e5edm0ynafiq56yxqs9scsp653865rt6rswawzsmxciq56zyw7fm2mwizcrrbxlh3gzxs8o7wa5dflwongkrsas13d29qco2uozddety3nt3cxxh2p80iqe6pltk2cicnyls0xxth9okv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"80nxm96m3ktfyboqbyukyvjhe2mx1r8t484qp6g9dhjodix9cpf1arj3p8ont2wqn0vyrmsc63fpb3hxiqddfsgt667jfraf5r444hzkv5lkylp71tyidp1w8vz4zag0djnggebk4hf785cf8i7mpuizombtpdsgoiz\",\n      \"description\" : \"Vel inventore et et itaque id nulla. Vero quasi in aut expedita quod est. Voluptatem repudiandae neque ut impedit non. Et minima ut. Et quod dolores consequatur odio placeat.\",\n      \"location\" : \"83gi91uphjc31me82c2801fmajp31w0onqahj15n3txsk8ocmsj0wyd7kq8gpfjjd38lyc2ot7f03hhzno33ck\",\n      \"title\" : \"Iusto quae neque odio qui quod.\"\n    },\n    \"role\" : \"nv2jai1mmkipoinekxi9avav\",\n    \"members\" : [ \"uoyoaxhfiuqfzeaekxskd1aet\", \"pcooa9nf49yah33xe5ll57fdbpnf7\", \"zsa8s6e0bp9s84oah0bzxwnng9h4p9u7420kvdnof6iwqbxek8ap5erf5gum5vw76pz77yph6b25p9qvnvkcyqiaayf74dabqlxygvee4v67xs52x8i4adoekfhvq6bi7tk5kdx7skcyn99a700783w93x4d8\", \"1jf9ea7g87dlsl31y2tkhxw8hbe9fzcdoh8331chp57zubngigpllae950mnuj34p204i4sk7r2qnxic0umkq8g98v5gs9f6mmathqt7gs1qtvsi5pwxsn94er50r570wtczw3fu2tw38ew1d8vjsrmd1egbyfg93vm0icz6uyr9jdz\" ]\n  } ],\n  \"etag\" : \"adipisci\",\n  \"version\" : 327504083\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4185a488-2ebf-4a77-88d0-69ec8b9d72f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.068909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ac20de1-f901-440b-87cf-6b6f9368995a",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/b69tjqvb32cn9s3qf0h8y7q63znr18xg9ypjc61lf7ol5i29ubj7rfrlmyq67e9pant8tft2mmga2i5cg83jlzvhhic2x23nbehs6mfq3oljltjvaxw8qqsa5adspqukqa56fv3pen3f:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"dq3irfc\",\n      \"description\" : \"Id magnam voluptate sint nam odio. Qui odit saepe. Rerum nesciunt minus ullam. Voluptas error omnis assumenda aut iusto recusandae.\",\n      \"location\" : \"diema6u4qnt3ip64\",\n      \"title\" : \"Exercitationem id illum delectus.\"\n    },\n    \"role\" : \"zo494h44l7nqp4l1thp8jrd8lharwppi3o6jeqe8bntmona6nxf28n4h5r34wvqw9vyhzzg2ynag6yom7spptx6s83lcl8mabtjkxzflt0yr7mjjkv782hirsq8zr4ucx6mjxr1osxtg730z78opeqsxjivqy\",\n    \"members\" : [ \"z57xbah9ee673nm2fu4asjlptoz0gb9xx2cyvuao5c4\", \"abcg3yf3dyoisw5fvidji6dh02d2oefvmhx8x6jlk7l3hk7krjwg4s4xbdki5f58r3dl03nrstzmj35u5ybncqiut6mx5d10n8ph6q3x135bv9h1le4v3vtqmdeyhsdj84khebvr35ncguthv8iegx2gengf1zr2ggmsa22q\", \"go0iv87hn3zen09dyztpde0fuczxyp9xeh9bhndpdmzydvyy1id7u0gbgm0yszuva0kwlksuvcujdl5ek99d9lcyn8ew3mwalwuqubdflo1yk2urfna04erkwjf9am6kmhj9kkcfam4usuyczhc\", \"rfjbk9q4lysvz8eypwzm9fk7kd3giw3nbrm6n02f\", \"hsujjjdfrnlg0srbmydkzqa2emu3tlkje8f0lwlmkvjpo2ugwhy6gzugf6jxuvaj1ny35xmgh3l5lxnsph0sjtx3pky9abc4\", \"fkyn86jm4qzl1z8n6uwgbrhc5qljxdscxlyn62e8aaxe6qk00nwvizkhzreyfn9y3qnfzoqx8xnvu3us2li0qwiyearbohw9ni4mwgu71d2ljchzyzbegk2zvnybis4du10ocyrbr938ozx5mbx2jg4b27gtncaaszxm39o58p02m8\", \"8aaq4rjwrons26d7ur12p78az8u\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"84t68f044ouh8h7zfo2qlo8xr52qtgyaotek4q7gndtcc1cn8u6qrjxshxcqbjhck1r70yeww2jq9giokx0ijiqiuosawjzm04uwpg416n6a0ad3y1ihedayddfgug82knln3xqtg1qd17djtgqwcjbg4hoi6tbuox37hjcecfh3z69r3jkv\",\n      \"description\" : \"Ea aut est. Est eveniet molestias natus perspiciatis. Vero vel odit qui accusantium. Dignissimos voluptate quos est officia.\",\n      \"location\" : \"sark6bhf8ru\",\n      \"title\" : \"Quis magni aut omnis autem optio.\"\n    },\n    \"role\" : \"v2lq1gttfsg53rmx1t8h2a5sn6acgo969xesjbr0slo8tuvq062fm7l7fnf9\",\n    \"members\" : [ \"42v19zutx9vvr9byhln6ue1d1ztp07z8hivyid8n0tjp8jvht23gfowkxexe7sqvey4dkli81x19xw291ced8zzte4lqat1o2k99tn6uehw8kyrm97bhhg1wffp3bro0q1n3jq7j1d9wroyzgfr0ylm5cxgp1pwn\", \"vydc9hfg10s7ip0e9norymdq4z94heg9cf9qw765eums2pigrmf6lujt9\", \"7errnwvn7uxgt0bnthb997ydymrqlrcqghvzc4ghmizr1z\", \"5bnj0y5pds9r9i70d9a2fgdn4vbcektlxgacuektjvijfeqpncgwa4sc6xlhw4f3ytgf7\", \"ia5fiubva3fifwx1mh\", \"g3u1i6pzuhmv3d9b0gs9wkry3cz9x81el0meb7ic4po7bq58s2ejonx5gt5n15y0d4nansqnxi6a330z8pgh5dgfy8rj2788rwqfq2oddliomzujy7abf9fware19v\", \"6snlymx0ypgt98zuvxma88mfmccjyhg0geme4l7fxymphl7gc4yeqt9pgxjpna18wrzeryopfnc2khmuwp6w4bdkuksl15gcgcnflyk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ylgtsierpjj9po5fzlag6g5d8qcs2d3tbsbwnv47p198oklirsfp44joyqg74y3myfmd06zq6octumvz6\",\n      \"description\" : \"Qui sint quae. Nostrum consequatur quam sint. Corporis vel voluptatibus sunt culpa. Ex ipsa ut autem mollitia asperiores aut. Dolorem id ducimus laudantium.\",\n      \"location\" : \"3a07mhjs5wqsxkka1cecwko8n3usxb5tn23g01ewy30h4r72t8fvx33liw1\",\n      \"title\" : \"Est repellat voluptatem qui ea molestias.\"\n    },\n    \"role\" : \"x7fxnizvpwo62ykkhuxia2wbyqkhqq0dyz3irpu0bkr4lzdry50hdasb5azskrj98i30ztsgvyg\",\n    \"members\" : [ \"gdctonz5yf3dqajbj5rvw00opbb7hsl4q2rx9w3r9lnrb4xfss4pj6j11skgjeh7b8fzwu3rgxmt3bfey6x4q28twwmaycnjkfovkmu5vinlyt7omf\", \"qda76vbaxh0m99o6e8ksu858memekatqgsietds7ozhoperxz0w4jom6pob45c\", \"vowjjxnkakal3kklxaz5g3zujpnr8vmqbah17nc9tri9ia191zjn860nd3h39v3ugy1figej66by2opr4gkycxhvnzuf4lze5t0kdom5poopuqsiux27m7xdod0d9dt5oimq3boci6ps2dlq64uyexdymgp3pnvk0rzo9ib3t86ticlo2va4\", \"d03rflxmckgni7u59hz051g5nm7959imtk6x68qtqdo1augd2szlwh7w6ea3le891x42mlzc5cn454bmdyrb3sk46mm753i7xhfue85blbiesqojngja35w1ec0dgqgwx29h72f5agv8enbwmtrasx2ptm2\", \"txjzns1m96wrgig06zdxbhhnbnjf8jzc0qaq2da3mp7gsucjdslp8f7709v3ny8l8knzzdxnlbofra\", \"l4uu3z8m97mdt6hoixtoglm6e9wmsnwzw9zs70pv08ffui79h99vzwv4v71xqmw5f369m3rfp3qcnx221yc37wcssd4eyaoyhmr9scmvj196fn8rri4wvwmts3z9gs8do0qc3w6z9p6r79mha2zi0ko02r4i27nzuvnm26mmx5j1mqncchzxcdscsbet3ry3speoyebc\", \"w7cr77end70e8pu9pvr5t37k74g52aptbtcd39wyre792rxhtd0az4d8vhl9anhoe0w3kzegz86geri4sjf2osds\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7h1xap3dbjsaok9hmxvwhqw70cepkkedg36dld0jvifddvj1\",\n      \"description\" : \"Quia sapiente recusandae quaerat deleniti labore. Ducimus amet qui numquam ad. Incidunt mollitia dolore tenetur voluptas.\",\n      \"location\" : \"7zra11zq7u3kaqynsdw66udaxh23kea2taqyds1wexnyww9z3eptxn7x8a1w7v88alt18gwe5cb3d17gk4z1oataw97jbv7xnsgr8sdb0dbhwbcqtd67ikjdfkztnbnkqr695k08k70\",\n      \"title\" : \"Voluptatem est odit et amet.\"\n    },\n    \"role\" : \"itrtpl\",\n    \"members\" : [ \"rji08r7xpiyg03dvei70proiky477udfnw08nj53m23zhf15mf0km7v34eo535m9i84mc1lmbky0yqd063g11otxepxsdlhiwktrhm067y55ns8palw28\", \"j7qw12tbuvfav4glj0555y9xkoio6v1v0ls0gmcdunfkxegoy7umupk9t16sw6lzojlt9hgqdyzvv8lzctgpdl1gbu00n80qqi1k13b6nycpkevezac086krnmpc03nfnpl749fa90y9xov2qtxxch\", \"cqsil1qzcmgbwih2pr7neuzjf1pwv1vbv2022qd6s4rcevs3jk8jdtwdki5wcyjymjuz4bfkqpk0yciet7genh5x8o6kp990zyuq484aycd6tyspdegxhvqelxw9ebkpo64q5pnos15mpt5dskgz2vcyhnjq0jdtiv7v3l1q8x85xge66pdcft6zdpb7dyf40hxi2\", \"lppcyjxvbkgmj436ax6nndcea9ymptbuo732c8ufialiglwpnxjdzwboeqra14xg5njxcvfors00qtaf8a6upc3ylsxb6ytavyzlxs4s68d8ks1nw7l71cxvt3fw71fldmizxsp5zzpnjkdq3b8q792x\", \"loq02ms91tlxi47cikylrzglpv6ijwqb35xphxvcud8j64\", \"lesjiwejv0ntfhrrytdjt4e7txwpf10ptlyli6qkg8d\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"aiubn84hxxw9xn49\",\n      \"description\" : \"Officia inventore animi consequatur qui. Ex omnis id ab fugit beatae enim dolores. Qui voluptatem et. Possimus possimus ea minus.\",\n      \"location\" : \"i2o80tcm4nqoo1afezujghn5o4nbwaxp54o11o9kuv\",\n      \"title\" : \"Sit at asperiores officia autem.\"\n    },\n    \"role\" : \"ygg64211jlyakc7cvwt6brnjiios\",\n    \"members\" : [ \"3lgdzx0rzarpfzaocupi7503l9ikub7nrt5zv578tefz0gm3o2jaay9rq1p1tj7tbtpvai7jmjqk47thq8t6qv56z1ufhikgbufc078or25n\", \"1g8\", \"gxmxdllnyij6f1c1hg1n43tevuijdrgn6bf0x8qkfxpom57lfu9rs6sa162xbrcgsab6z7lho9r9beeryeq0sbr4tgrf0q6nu0y4yrqt5mtnuhvxy8pqfb6449v2bd0dmzt8zck5\", \"fwx1ww76r8mzw47nkfi5lsvttyi1cnifhwzlu005r2j6pg5ef2xye8xxbmozue95nfn34suapcgp0253puznur6glb3g38hr6llgu6nc81m0c3tfh6ddxp3urhmi832959ggapio52zvvxkp0rqnm210zh62dawsgolnju7hjev2buqitp3b3vi2vrb81aj3z5r4g\", \"38avgsf5pj29gceu6qxtke0sn1uh5n66i9amaek5lokalj8qk7pfjzx38qz6hprl8jv04mz4orvjm913p\", \"hq4eixsq9vfp927abesbhy81y0k2tzbmptseajw3alp07mjbs1mxvohq366744ug9hcm4mmtddh4sifqw4itz6ve0l8fhirl96lzhvcs8bul97m76hk3j35p03xrr9yyacm8dpt0tjokaci9qxx4r7l6uamqzgf3rr85rdg\", \"nhvuglxzmzcjptnv1pyesg288cey7c7fz0gomcn13eg108copcli1ubbb4rlblftw5q6bm9uuwrfiisaab4m743wdpdj1xbnwcfbuqjnd4a143ssie0g1ft67m8jspq7cgazo0zrlsbo6n3\", \"n6ygydoit7rmauj25cnk0yonhj0gafs7h7jqxajrlzd5wuhev1ss87j9g0xab8g3fmx63p27r2yr6hogvak0dd8f2p68n6wxfr0qxuh8zclehcdh7s4uhnedp4cie62bz5l0r78fhou4pe6dadvg2y76rwmxccn1lqbn4prvqc6oxgwkgepukxdvipso\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"65c6l5v5dc8hnfwu2bm182l1yv3oz3fq8i7i9qwjkq6t4vvgpktwjv941t8w17o2502cg2wkc5u24nfi3ra7w9ysf60m518bwlr173bk6ws2p5w9b3b7h5p9pxoevfygr90lp0ublkwa1jgkqcy04ktojfso3buqz5ufqt4\",\n      \"description\" : \"Quidem quis illo ipsa officia adipisci. Ullam animi explicabo saepe. Ab ipsa facilis sed et.\",\n      \"location\" : \"l1vlhg5miywpaua7aiqqoejvkrj8evfn9dupery7ltinh8ij7zxejqx038itjukxbq3f9m1od93zprm862c2yln6uduu0qr6p4ue05r0fgjm4aopl0g9ctditn3f5an9t0j35zzt31m7pnv4euj8hqw\",\n      \"title\" : \"Sunt veritatis veniam corporis voluptatem.\"\n    },\n    \"role\" : \"tnhh5qm83pxt\",\n    \"members\" : [ \"g24ztxqkgugnpqam1nwb605onzf3w3l7m6rfetsplgj4kavj1kb5a6v91et25uhxduosvvzf1b0isw51g4idp7bwz9zouc752zqw85h9jb45pkhpomlyh79au0ep531t0kj4u8gns17h4ufqynwa0nqmeeqpsqvosy54nk4m4k\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"a8nbw4m2pqo1yh46crzz\",\n      \"description\" : \"Repudiandae ut sint iste magni quibusdam rem veritatis. Distinctio dolorem est. Optio omnis molestiae et voluptatem et et. Accusamus pariatur quas. Unde nam recusandae beatae nostrum est nesciunt.\",\n      \"location\" : \"g0f1mw88afaqciajhzxzdbg9j604s\",\n      \"title\" : \"Doloremque eos voluptatem laborum laboriosam sequi praesentium occaecati.\"\n    },\n    \"role\" : \"dsjfsaz12rr1wwjp22n329a0kmzi5nn7v9elzdh06fl56xpt8dm5w3jexm14ne1d7m2jp37mthsy0ac9fmmui7vhfmmlm2b49sxrhtokspvl2gpmmqphmj8mjm1indzrm7zvwlqpaqzxzdm3i5som5nogavgqi7jxe9lypwx74wgprdwtqxtf8pwe935b1tj2\",\n    \"members\" : [ \"40kka1eslpbq1sw83r\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"umw7puy0yk6mev655yu1pws9vgtw3msorvoox41626f6yo9qlq1g9flp7k3ckg2r4r49ehceurtw1refkeqw0gwa60rzt5j3pknfr34dpvwe10hkt6xjps54k4yqqxo13zj8q2sid2s9k1h4dmt0mahm\",\n      \"description\" : \"Veniam harum molestias quia cumque. Dolorem rerum numquam placeat eos delectus nemo. Qui eveniet molestias maiores iure ullam fugiat.\",\n      \"location\" : \"cdxunq7o19sodkpkgg51ni7s4t5ib08icltki6bfut6hqn0bdd2wt\",\n      \"title\" : \"Enim ipsam delectus dolores vel qui.\"\n    },\n    \"role\" : \"hsel529tiwk6bblbqnhstu4c6tbp92v20g9swv8nyo2l6gyjjbnbdr7197dputk31kknudr0uks4i85lyfgf3rguejtrh6q0aus5cszn29wr6m6ed938prsoq9dk336u90zn9dr3ep9viysyxnk7tiqo6144r0fp71ugp88y\",\n    \"members\" : [ \"8zdlc49ws7opfq0iv97ehz2z97fzbniytg4fh0jwvtykhz8p7qhzxylkoww80yz056\", \"578zy0ehkof10x09w3qvp58gnpaiey2r92limywpm955fqths2s0wl0njebiypca6axas0jw5fzo5l5h6774b039ym2pc0a2ndr36c70xv4m0pjvje6cwtx812e6w31wl54uzk4mv7guyv3pu4m7d1rzr44bxev6f\", \"aht5s1xfd021wet6zm09koldzh11duijkmn0g8mji9x3g3o384u4y\", \"v8i4uiqe93vpzgilb9lms4d5z46apxbntbirl1\", \"ggkrl7lgioriy5c9u4mwosx9yrg38y0jrnlcst2p9v0sbqfki9dg1zv7hgtdmdmc5265d69lpairvswk7882zscnfzwi4c0wyxep8w6a1vwe90pl9capc4m5u6m9zes7idqnsr5i1tyeimc38fot8qfhske23g81t89ammuiiwtx9hulg\" ]\n  } ],\n  \"etag\" : \"repudiandae\",\n  \"version\" : 908937329\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ac20de1-f901-440b-87cf-6b6f9368995a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.068248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d2441175-2089-47f5-bb48-abb6391c0b6c",
    "name" : "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND i...",
    "request" : {
      "urlPath" : "/v1beta1/ie9ixrz5pzjerfmbosxowyhenj25yg3m5mrsov5zskxnpvxrray9vzck4bxhludfh8oqreptgpzgs8mhdpspq5e7hxvpkejfuh44l0ufjxi7rp2wapb2gtradlbodg224lcmiedevtsnv2o962822pxyij/attestors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"ihof0ac5gm0n8zmw7qnbw25d91juyd288uv4zxks46zpvgbeuspu2xib8qww8yqodiuai4n9jm8a9dvh01m0nh4kw6kd560x3nalps8ztrx5f4kz7jphqg2wkykfu1si37xhlzkb95w6nlr49ey1f6pgubjce8xbh85mtfj818jx0ivn0wdcbp8k5cgi1lkxpwso\",\n    \"noteReference\" : \"8doqwbydgmp1duwaeq4eqmpo88yjsf1ibs20wgrtpck0d1orffcp5lmaclz27i7ogcd561p21mpbksk6hisscw8ni6uhtiipkba83f2zxyhgg7rbgqnwlf9elh06cc6imekhgt1p1201kla53964e7n423k053b3eth5csjwwrh5wanlum1w57pdcsdrx\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"h6kdj00jiogf5qdmrudazkmvvk0p6rkuj10ssnwos56md459\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"h1rleyedkivsmyezwf1a0dr2mbn531pdwihrk130x6sjl571pk6dn78vwanwsu3geopt9vyst1sjl27q11qrjvp8amvmzfxla0ejdlab8mawjr6vp59trhit\",\n      \"comment\" : \"7in38ofghgcurz8ia3eeb5mjil4ddh8zo4zttazo4q5dzrjyz8eu6fegu5hwogq2iduob5i65kh9i669r7dg9lu9anauwkm3efsm4j5r4k15vthgrjywkjfn2k9u8up8r\",\n      \"id\" : \"906f\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"o84n0lha7rxgxtxptxjeqkqhijhl81gwedo9j65jgmf8ihyx85832g8jhso9vakinpq1i676dfkv7pirz3k7kk3bx9kn7gxkexizn8zxl8kpkbaar6g4i9xuv4kau4w2stf8w92h5aqmh29fckspqqd0am2q2y\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PKCS1_4096_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"n909r1ssame6jr8yc7nos7oqe6d7i4ebez0en23kwbw2r16uzvvr5934zxo0w5x9pr4e6d42c9g28ummilksbuhitd2soa736ncptytpt616ph806ncfrz2ghxvyb0t6zpl8rkq7uwfbuzn5rvif0sxqbaju0vya\",\n      \"comment\" : \"b645j59gchl1yr1zqhm5xizl2xv06a20xxeuun0bf7e8fqs2tkj8\",\n      \"id\" : \"1g1n\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"g1p1zbj07d5ijc6x\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"agd7eqmkvm5ijg6rwbnv9t0gb9ekklgyk5t6kct4423dydsadelyxb5zbeqh5jy3dntjm39clhnu6u1jnsqiijh9mf2vxo74hjn1gl99j70vuwoxenxl54cms2pvj9wwc51mmjrul36if8dx7\",\n      \"comment\" : \"2l6phj93x7wb02fjwsv7qfipaxf6655nlyz1q1zwqy4sr956murnfxefwipvsa0knv00k9mgq90p4sha8pk2bl9db0g5dlqriqedzqdj54v2z8rtaetypry9rwk0fnlngt3diyiggq6lf\",\n      \"id\" : \"6495\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"yxbmq6np9s7zathx81vfjk1541oxbdzc2jqxevzmv9sp9t22y27c5gcpovjoa5lyvc1t4uv2fxrh0oibsr6cvvvz5fzbyyfsi3py36laaqwsuw795uoftulyj1imuwa3eetxlogioyqtngzsmd1ybv2z9wllsuhew\",\n        \"signatureAlgorithm\" : \"RSA_PSS_4096_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"rguerbpgt3xfvsx6f\",\n      \"comment\" : \"2j7z2jbtmyly67bi7ljfga8cgwzm51axkzad5a3kw2sdiaq1qz55r1mfek18englw35dq\",\n      \"id\" : \"fii1\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"6m8wh0swgzgfeq99e3myu0alqqn29pw1f6nz5slzh0v2e4orpjhn\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_4096_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"6y65k7c7kbuloshucu14s75e0otz6z81dxrssidx9x1sc2qpc650qh6xhzlna5ohvtr1j1n9fcf5sedjulmg46ej173av8k6u0dwxoeb2c60wz24ve73v1ldl9uzayk0eoakq1uv32rvw7u866tlfsvkvvk4snoj2gu\",\n      \"comment\" : \"vonmvz1u73vfxgfsifbc6x975u9l4h7198pcgcw5c97he02h436n5z4a1q0u9vfr51uraoo6rnie7w9d2v0by6piwibn4qyuisffnmb90nnuxg5krbi\",\n      \"id\" : \"mzlr\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"pkr4tmgsq4jir51pjvcv8v8b65o32nsahqcsktp75io37bh802tbci7bi69rrjeyziy24si1nwn223it8io3fno9n9mi4g1kvqtk31pfbpf3vimi8enaeti0\",\n        \"signatureAlgorithm\" : \"SIGNATURE_ALGORITHM_UNSPECIFIED\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"sdkjbotslszlx6t7sm12k81nd026ym\",\n      \"comment\" : \"37j5xvjtlcrv40xknc9yi7l8fp1f1ygj8z7fpe54rjzle4bpebgm4btx17z6gj9dn1bl6173kuljy3dyaq3r9o2nufaovy0rxd4ioqktofga9n68mdkptic3vcj5eravlkezvic04cpp9ak47kf5c535i29kktt7jl1gusv\",\n      \"id\" : \"56c2\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"8b53ul7\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_4096_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"jiqmgl5qctnfqjhic1h6tuvqcwczn9w62ctyamwbfgj6yukhnee\",\n      \"comment\" : \"p23itukgbnybnf4kb5u1oc4t60n7xwfkkmcm0c7h6rxcqf\",\n      \"id\" : \"4d4d\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"xuabh3nt44zvdy0nm6926me0prbkogyzhotavh3ds52foiany5n0emtido5p6l74m923qhx6aq0m5okxp50axurvpqjcz91x7p\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_4096_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"o8dtcb4b4gwx1neid8pkeijtzz15wdnrli428pho2ksu1rx70bgfrwzx91gkkly3ojl8s7ome4z86726bep0yf22kg1ymv3y366h7w4tg0nrz0eawrn3ubxnexwnq77k4kaf1p2c\",\n      \"comment\" : \"pxosiid1exz6vu7ck66pgkzxesy104z24un6r8y2prb7y\",\n      \"id\" : \"4ts6\"\n    } ]\n  },\n  \"name\" : \"Cori Parisian\",\n  \"description\" : \"Esse qui atque consectetur. Ducimus repudiandae dolorem magnam ut at laudantium. Praesentium nihil quia eaque.\",\n  \"etag\" : \"adipisci\",\n  \"updateTime\" : \"2022-05-05T14:39:26.066823Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2441175-2089-47f5-bb48-abb6391c0b6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.066952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.create",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6d29dee2-52e9-4f2c-9640-6a867b89dde0",
    "name" : "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/itfc3upgk7os3a/attestors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestors\" : [ {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"qegaj7nqicsaidq2zfcsan6152so1cpaioswyu92ukvjeri30uy5tdnosbbkwq2vlslia83umbsco6n5ehrg3ky65avfemm6ify3v57m8ybl90nn3cy88j2xbqyc9nwddsskooz6vcb8npk7y7cq3of32jo80y9\",\n      \"noteReference\" : \"j7grepuu4yhgz\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"klz9g43awf9akqh9tk3cs601aux6wcijjsnk07ey6p43uglhs6bkilrorfwtjqsjo69a4ed266nkbbr9sp09a50kxucluqvkgjya19a8v01t1qao4xl\",\n        \"comment\" : \"bgtp345pkcqdw1j8gsp2wo4j7aoe6epceb5zgf9u8snf93r8s4wcsgjubbjtktjaxcp3j5r9woewt9n7u7mnk9im6exl3jurv3htky8e2684w03emg9xsjpi3audzfrwtpl4oaflrhg2yiijjtefkq1e68u709xf7io9ext3irx34cooaepwgap6hzl1zhpro1w4x\",\n        \"id\" : \"ivb3\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"mv15aun3dlihwqva1k3iz7b3x2o5edraa940hafxqkwp9x0cayl5mprirw2i3swo2xgep28un5rojmj3h0jb6xjcse80vn211fgtgqz5l5s7y3dv9ajhd2pgrxxjlcg13i033bmnmsrcpawxjk\",\n        \"comment\" : \"ecv1yso5x49lj6qw7l7n923ix\",\n        \"id\" : \"69f8\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"1vos\",\n        \"comment\" : \"k78svxdh4qr1f11gqzw46hlxopepdn9s4ztfl4kgvb63kyj4tog5lbklviqf3t027367zmpvbd0e1f0jqg8cnm77gi20lx\",\n        \"id\" : \"2q24\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"gjqal28qvgbhuudb35onmm3x06max5ixlb6sqj6l6s19mi50ust3pg9uhj6sg19i210ibroatrr8bri3613jdzs3w4cxh0nomveifq9odjx7p52cnt1hn08vtsbkxlsniqyu0pqbhy2fpj39msxkvq2v9582xx2udxpl9ce1yikjppko31xw9ed706bl3nfqc2z7l6h\",\n        \"comment\" : \"oshx0g4os7t89xbqcwvbm84nkd0iv9ioum6trhy6c1wn2bwm5zdww9g8xh8do1u2bix517nvp6yw0fhywuj9vl2irs5dn61twdqu7imna6zy2522n2x8kf023gs3eqhznyegclhvra\",\n        \"id\" : \"lr90\"\n      } ]\n    },\n    \"name\" : \"Mr. Delbert Pouros\",\n    \"description\" : \"Sit sed debitis sit molestiae vero. Suscipit minus dolorum labore sint molestiae. Eos porro blanditiis. Magni est voluptatibus maxime nulla. Aut qui accusantium mollitia.\",\n    \"etag\" : \"voluptatem\",\n    \"updateTime\" : \"2023-03-06T16:32:26.06467Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"9l959nz7fre1s4w353nq6087azu6ny7bsd2y3o56o2nujlf7h9nhii81lxegpas2venxt8nlit42hxyuwlh5o0pxnulq38z4213a8xh4cpe43srhwqk0lusk31q1g2hud0m4sh\",\n      \"noteReference\" : \"7lbv9ocj2iqjwcwbuhkldgilwt6mcwajf38bjqhyzakcf0pgflpiy9b3gjea1c7z1xy7aogn042ocp7g7yta7xqs\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"v49b7yulrjgezatd\",\n        \"comment\" : \"xut3y8kncov9efse942rmykwuwrooz4g9nidc2n991h5g5xihuccmczk9fh3eprmtcj57p6crnxgltvhpbqcdq3x6asbhw5rw9inj2ln8sf23sivzbjlf7dm9528pztsxsmr18njhqocl8x291ftxzd\",\n        \"id\" : \"2de7\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ebrv4h8j13nn4rdgxb5ytztlz8aead5ptpmozltre850lx0pfxo5svgn8xk7fdvvvos65es17d1ybszixo02cak7emwfr58o3mf8r85ro4huy1mkdvlypbg07p5rdg6zfv5z5zy4x4gb1s9u6atl8oilee7fuw3p2e9fai9bq6aqth4rk\",\n        \"comment\" : \"cmf7021otygtq5n9saaoc5rsk1xnaxps0flp3h6fzq2t5xa0qxfoky852lo9z3mpk2pjdszvy26ybaz8pivr48npmvzmevnqjlia4j9j1v9lkn1ftdyjrk\",\n        \"id\" : \"x70c\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ka79lh77c6pk52gre\",\n        \"comment\" : \"wg6zeflq2f0v02stbf4vczfdbx5zfjn4h9kqx5q6pum5i3w4pky52q9i102zjegazr4vbzvbt68w8li2wf9mxtf0pipgshc1uw6acbeubbtrmye3f09ft6vipn6trkly9i0ekziniau80k8ovvxb62bnps471yebw8wf3cninqrbpz4v2pi\",\n        \"id\" : \"ht8u\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"j6n9k13czyj28qtdo31yb6ks3ypxizwxomv00lf3h5ajuyhqy3h2mq2shb86rajez7372m2pwkox6x1rfclh1midfak2s2t8fvsiearyygio985\",\n        \"comment\" : \"eyiac81ulvp71j4owuzc3uth1892m4sbltx29g34u15dzilg51orvdj0ot2upphbca8uog58culwm7gpoget9rbjzfntdiu8s4f605w\",\n        \"id\" : \"2614\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"b38iignu7nyeynku6wme450zxrd5252qeacciuyryl96xoj0t9jvl08dc\",\n        \"comment\" : \"wbqbr2uyi5gz6szi87rutz0bcd4cq3r829jlrxewq8vj8hmqxrkape3n7vsdc32a66qzvx0cpemebf66e3mkp4btlydddi25m60u5yaoxr7ufgg2\",\n        \"id\" : \"929j\"\n      } ]\n    },\n    \"name\" : \"Estella Sawayn III\",\n    \"description\" : \"Consectetur eos libero tempore. Maiores molestias velit earum ut nisi voluptas. Ducimus ipsum quidem eveniet.\",\n    \"etag\" : \"consectetur\",\n    \"updateTime\" : \"2022-07-13T17:58:26.065361Z\"\n  } ],\n  \"nextPageToken\" : \"cdpkaz4emn8g794rfunzker5p3moin2n63hwt29xvhb38glv13uagbqj8wcw75s9q6d7zns5i9vre6qtqi8cwd66iwoausdgpaqb79ealnll7efdxwdbdtblghp8rf0yokb0uxbslblwotkrqdw1fx5n4ewhpakco2l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d29dee2-52e9-4f2c-9640-6a867b89dde0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.065497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.list",
          "schema" : {
            "description" : "Response message for BinauthzManagementService.ListAttestors.",
            "properties" : {
              "attestors" : {
                "description" : "The list of attestors.",
                "items" : {
                  "$ref" : "#/components/schemas/Attestor"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results. Pass this value in the ListAttestorsRequest.page_token field in the subsequent call to the `ListAttestors` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f331c302-18e8-4973-8b73-5378cd1ff75b",
    "name" : "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Ursula+Feil",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"ht6uv6afene8ldpv2jhxpp94rzzm6vzepsfh8sjoyj6dlskktv4dy4qvea93p1jznvtapq2iij9y9y76ourdv0g9zwppmwwwb6661l8xtoai1z4ujnqde0mi5d6gmpn8ndgr\",\n    \"noteReference\" : \"xx5l26i\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"66apv4yoae1r85hv2yqpa3aacu5t8qoex1988jwx3kdmht2u45iw33swi570c3csfa0gm5rast0btd14jo89jjh6mcon324mf81shkzpskzh2j77ryyiyr6fc0r5fipgz05pxut9w629y\",\n        \"signatureAlgorithm\" : \"RSA_PSS_4096_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"1zfby3kkeiywh8mjtzddr0t55w5kqf53ptsdhz5lm9qp8yrdd40v1j6smovb6zq9de5p05jm8c64xsxg7i0hel9c2n3jhb6qh2lucpo3bbmaz8o9e25zhf53pwpw8pwa228xw3dhzjbifwkq0zvgrlzw7c59ejeqmmb2pmim07outio5gtfl8\",\n      \"comment\" : \"bj8v3fj40jlpd2mfu9xb0bl5j353k06yybv3p6bij24aqf7hmk5r8wpbd5fqipxbsa9wsncg8gyfdl6uy8972vk1\",\n      \"id\" : \"k4g5\"\n    } ]\n  },\n  \"name\" : \"Kristle Parker\",\n  \"description\" : \"Ut explicabo voluptatibus dolores aut facilis. Voluptas corporis consectetur. Eos minima ut aliquam in aut et asperiores. Qui ratione blanditiis.\",\n  \"etag\" : \"quia\",\n  \"updateTime\" : \"2022-08-09T16:27:26.063942Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f331c302-18e8-4973-8b73-5378cd1ff75b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.06405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.update",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "253d6856-b2b7-422b-82c9-a8574bc65dc4",
    "name" : "Gets the current system policy in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Rickey+Schultz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clusterAdmissionRules\" : { },\n  \"kubernetesNamespaceAdmissionRules\" : { },\n  \"globalPolicyEvaluationMode\" : \"ENABLE\",\n  \"kubernetesServiceAccountAdmissionRules\" : { },\n  \"defaultAdmissionRule\" : {\n    \"enforcementMode\" : \"DRYRUN_AUDIT_LOG_ONLY\",\n    \"requireAttestationsBy\" : [ \"qm4gft9dhm0jkhfow1uqr8l7p1pt4kcy61lm7660wnm4e0vrlmsak2l96ncy8rweh6tj7f6ufz3x9wjhjzb6k6q69y0c7kajgzvoo7xdopsepcgifq\", \"wlhupkwbcy5tzbt3h2m8ue7pkjg477hudk5eqzxj60zkffn8b6p9rx9inyjgjz6dmjsw18smqi56ws7pftp1uoazhh808zblf6\", \"7y0mxvzeomnn7xlonptk932ioaao1khcgf8wwwfzu761nld9wmbz7vid1wmn644aldhedk48q6s3utbfvzpcx7dxgfbtstm0umkux5x92p\", \"ge9ydvbxs855tbj0k394xbfx8uj14xtynf0s1yrxaes\", \"mgjqxw\", \"9j04bio70xns8txs3ds9j0kdmsu6u9azxxzdasp1btn9l3jikycci6zm932maf01ipxwfzr2fbjm5k7d4jxl24odmyigvzb6qv9z319fjgqnsw9hy3pifrp17uo5ud9lq73odukvc47o7vskav6h828nuevzi\", \"k9s7cen1lsnxv6e64h6gb\", \"tsm6okp9lgf90nekanegxs39vzrl8xg10cjsttgsb8ak7d0imnedyixnjtx2zb15c9yualhiidbt370ohtg5ttqadnanpul6mdd80kwb14znw4qipxhv6h3mf88binyh529f6tk7u886jt3svjx499r3rvyub9cbvvfz4hpmr5nqr63534p3z6b1y3c53x3aywd\" ],\n    \"evaluationMode\" : \"ALWAYS_ALLOW\"\n  },\n  \"istioServiceIdentityAdmissionRules\" : { },\n  \"name\" : \"Loreen Schiller\",\n  \"description\" : \"Expedita similique est et ipsam. Repellendus veritatis a omnis et eum. Deserunt consectetur error illo. Iusto quia sit vero eum voluptatibus.\",\n  \"etag\" : \"saepe\",\n  \"updateTime\" : \"2022-05-28T16:54:26.06336Z\",\n  \"admissionWhitelistPatterns\" : [ {\n    \"namePattern\" : \"7sozy3mmmrc0a4ycndfak919qqaio6n9oa8guw3dfoe0irijv9hnp1w5irj9qzjukxdy11pejjav37d8gct0v8e30qblfnq3s12mcu4q4db9p0utn78h44br85ud6mleub85nbsv1ax232tcbhelmzndbo5fwo9y0bzl6o9wnx6hi6q5csqe2ky248zy\"\n  }, {\n    \"namePattern\" : \"m0jox9gz43aefisbyxczhtncakt4smlyyw8g4nbgqp0wkwspq2voa4rojcewtmowboincp6sy4v3ti0gx9clglxxna4dfg10svhkaq4noec92pkq\"\n  }, {\n    \"namePattern\" : \"tbg1y6herpdzpnlfqdiuxfathtqb3i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "253d6856-b2b7-422b-82c9-a8574bc65dc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.063596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.systempolicy.getPolicy",
          "schema" : {
            "description" : "A policy for Binary Authorization.",
            "properties" : {
              "admissionWhitelistPatterns" : {
                "description" : "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies.",
                "items" : {
                  "$ref" : "#/components/schemas/AdmissionWhitelistPattern"
                },
                "type" : "array"
              },
              "clusterAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-cluster admission rules. Cluster spec format: `location.clusterId`. There can be at most one admission rule per cluster spec. A `location` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For `clusterId` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters.",
                "type" : "object"
              },
              "defaultAdmissionRule" : {
                "$ref" : "#/components/schemas/AdmissionRule"
              },
              "description" : {
                "description" : "Optional. A descriptive comment.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the policy has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "globalPolicyEvaluationMode" : {
                "description" : "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy.",
                "enum" : [ "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED", "ENABLE", "DISABLE" ],
                "type" : "string"
              },
              "istioServiceIdentityAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-istio-service-identity admission rules. Istio service identity spec format: `spiffe:///ns//sa/` or `/ns//sa/` e.g. `spiffe://example.com/ns/test-ns/sa/default`",
                "type" : "object"
              },
              "kubernetesNamespaceAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: `[a-z.-]+`, e.g. `some-namespace`",
                "type" : "object"
              },
              "kubernetesServiceAccountAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-service-account admission rules. Service account spec format: `namespace:serviceaccount`. e.g. `test-ns:default`",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name, in the format `projects/*/policy`. There is at most one policy per project.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the policy was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cdd080f1-71f1-44fc-b48b-a07443c022ea",
    "name" : "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Norberto+Bins",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdd080f1-71f1-44fc-b48b-a07443c022ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.063111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "261d9082-f6d2-46c3-aba2-94fff31d60a5",
    "name" : "Returns whether the given Attestation for the given image URI was signed by the ...",
    "request" : {
      "urlPath" : "/v1beta1/29cp535gu1gan72njlopx4iccvtg05rixv3ydjhh5h345jdvlojs12mgzo39cfwatlw0a0m5e9k3xhqoeajtfzhenlmj8yilwnvhybnae89ft9d3i6acr362k2tx3cys3a0ivakj07prz7oa6tdgdi:validateAttestationOccurrence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"ATTESTATION_NOT_VERIFIABLE\",\n  \"denialReason\" : \"pzxdhqlzt9zp96ns2wjie0if0p8i7s3et02bjd1dcck4brh9zxpqrgjqbpu3uiw397398uvdgkfh562rjmyxprknl8ejf3nr0jpsn0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "261d9082-f6d2-46c3-aba2-94fff31d60a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.062995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.validateAttestationOccurrence",
          "schema" : {
            "description" : "Response message for ValidationHelperV1.ValidateAttestationOccurrence.",
            "properties" : {
              "denialReason" : {
                "description" : "The reason for denial if the Attestation couldn't be validated.",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the Attestation validation.",
                "enum" : [ "RESULT_UNSPECIFIED", "VERIFIED", "ATTESTATION_NOT_VERIFIABLE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}