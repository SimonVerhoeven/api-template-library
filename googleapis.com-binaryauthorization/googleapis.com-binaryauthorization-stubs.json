{
  "mappings" : [ {
    "id" : "0480e85e-6702-44c3-99f8-e052bcb38a9a",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/ktx9vmzr29tpo36h77tx2jueyhq20l28te5g:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"glsgrhy8pxh1jnc1ow812pw6pje4d12tpakfhucwgx6nrzsbn0e0u85md70u9nzgsal7n0t1viljwd41aeruz9zybzdd08mllba452p088y9jnc5e\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0480e85e-6702-44c3-99f8-e052bcb38a9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.576912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9286d10-fce7-48b8-9657-e0772d9b8466",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/viuesmtnllyo9vdg6qlgp078smx4imky3z1vlpq1f4xb1jfd56n0h5oidgpfgvo7rvgvugxkkmcverj77niynnlq6o8t5rmnkyl8yudza8vhv7ibgc3ey2i1v5tezdc4ivqdabz23ir3o4cx07wgjuvrgss3h5ent:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"lvmby31znys3fa7t1985ncms2nwihx27j9haqtvqwrdxeq1t60rduqcqh4zxkz3irhz1qd8gocix5426wrb17ot13iefteie3km5tp09ohaehkvwffs29w0ejmfwwcih6xkasnn9wl5lpd4lm2pbt3wzcf62yu1m81drqtcxskvpiphqrfauni8aoy\",\n      \"description\" : \"Temporibus nam voluptas recusandae laborum voluptatem. Fuga quaerat temporibus rerum fugiat dolores. Error qui doloremque illum quia beatae. Omnis et molestiae aut aut.\",\n      \"location\" : \"po5vhwp4e2826\",\n      \"title\" : \"Commodi suscipit reiciendis.\"\n    },\n    \"role\" : \"wz34kfaqgemzukg6jaes4yabuf9gu5wau4349n5bro4eubezeoyrbadtouo389aat1o2yjtbefpqnh6re5xc863vt7syhy10jz6nwxfle8s\",\n    \"members\" : [ \"029u4s7kxyqw5g10jrfxex1cneq423yb4an2pkgg1z3npdvrrqjhme7wp28yv57deovql4r8ag0fl58fmppz3tku3cp8rm0ksybvke0hu1is52vgpibzqkt2th0914qpfq57\", \"v1my5ukdew6gz06q57c05qwqsp1s84ybztu2eglo9up8hmmt314hluxc3h3ehxwp0pf27cu7qtj6aqc5wxkd4yktkwy0d25zu67aol47m2og7p32pg8aol1opvyspz2dfswdt2uil8kbhp30mxs1bqtavyv7ro359q38y5sufwffh05kupst4ffdd4h45djh0kof4l\", \"s2qf6itsyg1jag5lmp4mtvium3bbas6fo21yumu5gudvsrd9f1ui76domnwqbw8v0jfkv18ev13nk6bb0k6ngmb12rn3w6ufmxi4afv19ahiftjfwtlsdj866yquazokx3i0j8u08k\", \"eo2ym446mlo4fq8c98bh36obzhc50l5w4z35nnd46r204fapc1lurpmk9psobyujlilcf7dssilv7mz06sgxa6ks9oza7ah7b1vlhjju2i1r45ohlcej7hnga9d11i9z7oq26b89jqn9uip1f2qhab74rxfo3xzs0n8wo3gdubha1ohkx6gxsrsnik8rl77e8prk\", \"ev9sx84z77ipfsjno8b2z\", \"7huoo9oue8c90st102xcfokh14ccjx9wf4dxf7xcrav2p32xmnzy83jkeit7thplptw17tquvz8ngtuh11dugkq1u0r43f0ta906klioy87hicnm9jdw79j9ag7vkvw9d2luaw5l\", \"fhij47rtkkvmefp4bvaslscecly4ikekeu8k6hzxpc240etm4azyyz0h0s0x8njjjjo0m11b5cd9qhcpuykgohti2y0fbbl9rkv1uj5h5lia47a3dssmegp2hr0f148y1xq9tg3r5\" ]\n  } ],\n  \"etag\" : \"eeeet\",\n  \"version\" : 1920327953\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9286d10-fce7-48b8-9657-e0772d9b8466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.576827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b45a7754-eae1-442a-a8c1-5b5e0ac85cf6",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/qfdk4tg0yuccv19x9xa6ey04ul9il4w19vs7alwi2728lswpqioohton3zmvsk2tszyki97nree262ed576pbyn81c:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"99m1sz8ewkhdn7dqgd96k6pe7pmssfsl974wf13z2l68nvajyiq3yql2c7y37vazqw7kdw3775582dysr39jgxng139yrkk81b3l9kpnimuffa82hm7ubzhrytslsaekehc8aqkz3uwzw5wp9pvkhlzk5w7sug97cjtjmdtuza1m8b64qlfaz7r70eawg20gvz\",\n      \"description\" : \"Fugiat vero velit magni sed velit rem. Sequi non quia et cumque perspiciatis architecto et. Sunt aut vitae voluptas expedita maxime consectetur. Natus omnis quisquam quos. Repudiandae perferendis non \",\n      \"location\" : \"0d9sn0v27b1iyrhhc7brmfkgzq9kgya6v87702t1l6mf6qjcp8e8s90tn51dlv7uj0\",\n      \"title\" : \"Ipsa perferendis et blanditiis qui et.\"\n    },\n    \"role\" : \"y1vms6b1tmuqjlt6tsm0jebwpmknff1vg2ujx5ww2dpr4n9oedh0howi2ht0swf08gh3u67nlyhlu4nmdlaxi1iiwdxbh1fod\",\n    \"members\" : [ \"fdntgdjn5p5a2cahmyovtxc0fp63fkbtu84en5dcxadj8wch8m13713l9colrt65tii39iaeavmz960bsru3hf9p2tvyv4wtzzm5g245nd33hf1mh1ukfz4c80a74xly5zgkiiq1gfq1o2jgk9uwog9eepafeuxeuzjv1qkeupo1u1a889tby757xt\", \"4ojolxi9hbibkcr2rpozqjwp182k1pqwqc2g0zfqwcppxcqminioedpj43mqhm4l99reqixu7izgeicednckfi51ydjk0e3skub9n2sbxi83ui416t77pq1nnfef\", \"vepiqt0ig1mq0gekyyc1ruwi892s3kyfrt07ale8e5cxb7h7bz80ovo6wd0ask0zvheglwn30nhzb7opmzcjbqmu\", \"rop4d8frlsphw0tzgeh0i8wyk4c9mycfrezfmj89ag7msad9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"p8f11yxoyyout0jl378yoabr26ryg4ab3cho4etun10axx4tq7j4qwwsqayhxvgj24t6irl7je8owjvpehey5stdll044ix0ld4xy0n2bkc1\",\n      \"description\" : \"Cum sint aut iure optio. Officiis dolorem laudantium officiis beatae voluptas velit odio. Optio quas ducimus quo laudantium et. Id aut occaecati deleniti reiciendis dolores cumque totam.\",\n      \"location\" : \"88z4k7\",\n      \"title\" : \"Cumque asperiores laborum dolorem et et.\"\n    },\n    \"role\" : \"o5h0b112rnjs51nbzywc14rlfq2sh96xet2ga0wm3y5mrf9ptelztcrp12nob0jktm\",\n    \"members\" : [ \"7aef8nqkcyi6632sc5x5196g4mteqn6ei8kl2l79ejscltmxrwqjrjqdz3zje3xo6wu59s6di9zle81b27zk1h4ta6dsm0sgssp5y1p8ya8\", \"h1x8fs93hu1da62xbwy185lxldunuc481oysfu5ceth9a0amao2aqdkocebknpmvguk08\", \"kwb08n7c6m6ukjpbc43oruc3138kypax0pp87ic6hgy94sogd4wb01i66lqj28u4tm17uy5keu\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o443fx3xcjy210viay1cw7ev7end91\",\n      \"description\" : \"Et et ad inventore veniam ex. Et sequi ut numquam et nam et. Ipsam modi quia et quisquam quod. Ea eos ex aut. Veniam consequatur eum mollitia libero sunt.\",\n      \"location\" : \"jgux6sxwlf9obgbjywbkemlaksouka4y4t7gnhw618a3tls76xyxy5r325ccfuuh9fo53vphve2p7xb2tgx2j7sjwqiis6cprsfne53v9yyldb58m9hbx30v5ytdgqu\",\n      \"title\" : \"Dicta deserunt perspiciatis ratione.\"\n    },\n    \"role\" : \"pv1aao045px2cbdmebefk10a391wyki368eoyf89se972d35n0m9moqg2zuijjoo\",\n    \"members\" : [ \"t5f4p8ymcxsmeq5ajxsvnuo5mas66ptmifp101t1jwu07n2ahhnfefi7p8hc23qebu16hw1om\", \"c04f3ob3b5d7ik983zo7eh750k45acuzn9li1gjml02acceg88nb31n03zefpp40bo6gioa1dh5fazgu3djhxs9xsia7en74jkcb1bwl27147p1y9lv6vi8h6pe\", \"cata59gjw0oe4uznaommmb8ihqwhr0k5u3ye26pdpol5j2tw62mp3bwx0mograxe18t8licmoy1uov9qx4hqc40xwr14j3z6efmbx5zrhe8hkxa1jxoz475or030ofyua3h3y4vk8p2rvzuxsdz8boqwyxuc1hof4stx576s85nr72levwbca2kahiadey\", \"nfqm0a0ezlh6x9zemyvztzpceyuf051dqb67lqlatuuq1lifdx49umjux2hya2pj70afkifwqagu51r89c50cww552g0l29bm20zemswust7om8vk3xh37xnmy89ldjbcqcyzqu66wxc347i4t1ke1p6t7wkrrhhzfct2euaw\" ]\n  } ],\n  \"etag\" : \"dolores\",\n  \"version\" : 1651296141\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b45a7754-eae1-442a-a8c1-5b5e0ac85cf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.576567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "46f83a3c-b5b9-4bd3-b6fb-a33f0b13be20",
    "name" : "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND i...",
    "request" : {
      "urlPath" : "/v1beta1/c6i9nf7yfywh4b0okn60z5kakvzzawxe06yho4/attestors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"gmi87ltnq6rn5nrxxv7fqyhvm4zyiw83q5hdz4w4634dso38ak1jai2lnyeonakc7\",\n    \"noteReference\" : \"88eghepo0qb5yezm2i1t7gy1mzpchhszaggdav7d66kg3bqiuxlm43244jqk8l3l5a3jwe2k5xmhmvypl8o6vnkbqzfrjrx1dqbbpb80bozw1vie33f6wzs2dg8n72ppjx\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"z09m5xvuse7g8ssiyi8wcvm1pvkgfnkzt31qiwfe4nni6hco5msxdtivkuzkz3jbu1ej3ikfndppdqw8jo2izhb4fo00qassw3qo89palg3zqtnnegl2w4xi0p5sdx\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"qusq2pie71w4rgi3hui1s14xlkdkf8i0ruz054yx66uktp2ccqw7bmmt5qcffranz415tbfz47g78qhh0ov4dwzyyrh3ewjj0t\",\n      \"comment\" : \"33745ckb18sgo5mzdazxna7e4eth61og2\",\n      \"id\" : \"3toi\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"jpudpxn0yfm6zf\",\n        \"signatureAlgorithm\" : \"ECDSA_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"9mv\",\n      \"comment\" : \"1eccdg3an23tlb211yh2mqwf8ti4co3yxgjivhwg3kxk5j7ayqw2fiuqbtq1v1va3xz1pm5757jc4hj6jfhtndh6j0hta4lz477u3noj3vref4zxclloput9o6viv7s0y0zna9t5gwxuc0mekqq9pxq3azgv9mt\",\n      \"id\" : \"z5af\"\n    } ]\n  },\n  \"name\" : \"Mrs. Branda Cronin\",\n  \"description\" : \"Quia qui doloremque et inventore aliquid deleniti. Quibusdam et totam sint quo rerum. Ad vel aut aspernatur voluptate. Ad et voluptates alias ut ad. Exercitationem mollitia rem quia eaque quis sed ver\",\n  \"etag\" : \"eum\",\n  \"updateTime\" : \"2022-06-07T15:00:28.575918Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46f83a3c-b5b9-4bd3-b6fb-a33f0b13be20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.575998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.create",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "be2d09f0-dfff-4659-bb7b-e391abedf1bb",
    "name" : "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/63hl18msw96t5fg3yu2zmf2nmlo621dkvdy5xdjr663d4ysbdsx7lkpluowk5wcu0g8uco9lc7iap5b31wsebr38omr5olcp4rwoxm0lja89r4da77pjz59c/attestors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestors\" : [ {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"apfzuafehcw50quwjzclaqgwmuwqjdq238v38wk3wz56yijg8zuc8ok0cutm354a6wzznak0h80jl2w82e2dt69bv7yh3uxcjc0anib9mykczxtuwi17ltg3j13azp8ubxug4tdib62yax3liqmv\",\n      \"noteReference\" : \"x808g321gyswuhcr470id81fely4wc0h4d9xyk0nq2gi09ct6jbic745t025x8btnh7cen0rndgnq6r36041urvovslb0iz1abcg4lnqiriuuqe4s9fgh8ik7ee5om9n04lvsasy9dg1mjwwguzq02u32x21\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"95l1cnj9l4s9e3sv58py8yyb9xlt46q9cun04n6egvl9h2yha7yqc7lwte1mlsmjhby6ln1kpjlxl05bzk8s2jxo9qe2xearnd3tacs3lkoaujm3kfiw7zcdau310vs3776nvfopob28884s8l7q1d6efdenaxznpyzdgq\",\n        \"comment\" : \"plroisp38we7jkxyo6xiwdkdy3pxk4p3qmpx1dfroakzmchwvzb5co6cu6wlv3wud8ykog6nf0ycmj8jb3l56vgc4y3vof46esr2q8s1gv1k2cne1aiiuaaitywu97us8w8202433t5rswk9n90qwlg87fvrok8xvu\",\n        \"id\" : \"3g8s\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"u0j3ipjajs5aabz5u1hwpoaad2dxltfv32y1xlx6o49jt52uwu79o4vhdkftkzw18grryoq9bhmxusjb163dm6ftzxhfvf2m42cy6prvq72t8en4vb3o68fq4uvhi0xg54vdvdj8mr3qk3xxjbxkwv7sc91rvbk4d7fwkjjc7vndwtapol3bhe6jnw7s04zy9\",\n        \"comment\" : \"ubwusu2404tbzt52q19sad73go5n461crt6s9xa9lydv0ej7k8rphpsg79kwfm5bgiz5qrlqew86em6uh4deytv345yhhn41l647suhwtec0yxe5fi12idrsxr1on9e7qq86br45xx5c72jyodmygkunxfnrlcysf9zgianf14p7yrk8ulsid\",\n        \"id\" : \"d9cs\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"iimp3hg1y98dx4ham3fjmzbomo6t40firb8wsybzdpsm82bx5q1y5z7839hslq6lsz9rdodk4cz4jpggcazyp5wwpryyw836jo5nyf69zyakvuu09fteflui67z56yhdm0qv2j60uo76g9jnb8zgu98cwsir6v62gvecdjtv119d52jjq\",\n        \"comment\" : \"ghy79g5aph48zohsuwa1phy2omcohrwdackmyxocebugb0ah6m\",\n        \"id\" : \"153y\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"mc1lrz2j9bawjeaee3nkyssu9aqgd6sgmu8j82if20uvwzo5tclu6oh5oj1z1ld8qui6gormxdv7ugdfcpoe3lkq7ttq2efvg9vsv1q6uyo8oypepfo0mw0a354z61aqino766b78a9u7krq5epdarn9eikrtf9h1o7i0yektafi\",\n        \"comment\" : \"f0o7t0y9nzgc7rcuxzsciknetfeph4l39783iam6kvjik0ih5r5unj5c0t30g0hekjnj2fmvgwr61i5p243mi8twx6eu0fgr686ddjmrf3rbafs03tzdude50wg8vwivfhs3e3229vcfzgl1ggl8e82ochtmfnf5hre6eijdrmdofu\",\n        \"id\" : \"zsoc\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"jj5yoan1v3i7jigfquaehiol8r2s179pxvsccq15nd70vjtatidk8x09rhye4ni9uvsg0rnvj4vwzef458rfj2pepb3lobybml92rqgcjpgvo8myqp89pz80ow3lxf9mdv3yyembuk0xgcxgvqlfrn\",\n        \"comment\" : \"f3svw6y91wpd4gcllwy5vxm9byup47znydl0b31l3jhdcnw0s3fd338xw65v33pbdlkf9i8mxxh7co9bhlkz1dggm8hia8yw2fgi0c3h8yu82mjsmkl54c3ww6epru22cclbpt6yhz6zvulgirx2xnzfu97hyq8pjao17ssc12xwajd2qmceoblmcqkcxg2dcyl58m\",\n        \"id\" : \"1j2y\"\n      } ]\n    },\n    \"name\" : \"Kasey Hammes\",\n    \"description\" : \"Est aut voluptatem consequatur esse et. Quia est voluptas sed. Voluptates pariatur quia incidunt error est.\",\n    \"etag\" : \"enim\",\n    \"updateTime\" : \"2022-12-07T16:07:28.57327Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"apjs8c4imacnkf5ei4qasdnq5ofw8k5ud0kd5icnopa5cj4bn41l7ooylvx3v7a5kawsybkpo4te6e4y\",\n      \"noteReference\" : \"mk9co7ibtee6h27vqup24ed5v2hqiwyfa56h9b1r24fvj3abbozi5yruahxyvn3sb89c5hk11xiepcv6exf15vcmd1w5f2oe69h5922tahjk449shvr4et93xmgpisk96wemc5wz98vnk3zhvcv9tr\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"3r7obanqyc6z4zq6vy9w2a6yedmotadu8zliw4tzl07oow24bs36om7hnstycqe3hk7osm\",\n        \"comment\" : \"16abkkcaxwjznzrqlbjtytrz1jfs7olma9s46yopzqxoy1no1097ii7cohyl4cq3n1vt9zdc7u6za7e977qsg\",\n        \"id\" : \"0989\"\n      } ]\n    },\n    \"name\" : \"Charla Hodkiewicz\",\n    \"description\" : \"Omnis aut quaerat recusandae consequatur nemo. Consequatur dolores voluptas ipsa molestiae eum exercitationem. Mollitia unde tenetur facilis aspernatur dolorem. Provident porro minima. Perferendis aut\",\n    \"etag\" : \"fuga\",\n    \"updateTime\" : \"2022-12-02T17:05:28.573533Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"ip1muyho84m27t92gkvlxwgnjj7eo6xqugzi92xkgflfw0ue01rqw87ol0idfnivrwhodfowa75o1ztmny8rhgfncx0t1wpeue7mk312ma6cg80ei6310si23udut6w\",\n      \"noteReference\" : \"blxtuaxykbidy3b3fbsu9fxvq0yqokvpv6b5wyh5otqh7qu6xytf3iugtbs0b7xv6nxqqifhnfbuhnofq6p0yo74xp521ell60ffx6cflep2x\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"n1p54scddb7244e9mvwivpn34dbq4y64ckqybi6abdma1s11e4x3yqy41f88hnbqbz9nzmvrj4er9v9t8qjp8zadu4rhsxyhb\",\n        \"comment\" : \"j42qrhz10yih8878q6z3h1kps06tsnj81lkozb6k20v92y82kv842is8pkvf54ul0zphoscwwss5oe2yszqmw0e3dtlqe78exx0ydx2zy\",\n        \"id\" : \"pauh\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"qvvnbx1xgp1y8qtclz3n12nrwjlp1wjvfoam8xlc7wur0vq9oiou27qv3wvdbvlhixrl2ovl97fjxwdts61ohtnzxyzmk4i9\",\n        \"comment\" : \"0uh5h4pcx6mxo78r7git0kav670ose5e5cakrfl4x55h9st2udf1fsz8fiumyhe41xb2hspgg35utd2jru2nu0ygaynrgdd5jjhgog0djxsfilsdz3oa\",\n        \"id\" : \"757s\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"npyfcwu68n99oxuec75dmdbdxi385qzuisqr9avf\",\n        \"comment\" : \"sr3aq30ajtovthwgj9kdke8k33e5t2exqzwkqhjigb7m9gyj3jt3yqi4c6y2ptrzhgjr50oxh35mpzvhfgi76cflm5ip2mdu76bx6mzdpytig0vykou4dssn00q3krwbve0qt98kgzbqf9uao8lzm61kgg73cuf44jisjfqlea7ohnva0robeuy5hg86q0vb45atg\",\n        \"id\" : \"ts4u\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"iq9sc4w4d9wfe17bj3tw96pk9csafisuxp24b0djdymtkvp1nra04b5gal37a6hd3rgtkekm477q175s24173bj7cv6kaf25dg20rxwles1c9y0n9ez2j6d7vv0d7dfx9odjs5d32ktpcb50vo8zetm419bbpi53by90rb79hlr46q455g0se7vv\",\n        \"comment\" : \"t4rkrutu7165621z95kun0xz418ph7s5zz77ge3h9wd8tvw1nuaxpl8o1avpxb8buq81ky8ii0ezdy9rccnio1oftpybute2xl2\",\n        \"id\" : \"whth\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"x0oh1pnpvj7k4fglj3i3bgm6428i2cefxcc40wblkisgassbioy83nm3cjwhs7s6x314icrjctsyxh0k95yc0b37ho43cr8ibfz58vg37me606es3msrojjzp3pijhzf2xz0ed0133z0j68y0j36xftv63ml8ctg6m17rdc85y19slrkkk48jgoznfw1hdq27gk5\",\n        \"comment\" : \"5zppcb9mwfqrp5t2t8y\",\n        \"id\" : \"o96r\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"uoy08z9nc2gnvkakjek63kpfcskwx3ocvgzh7sq\",\n        \"comment\" : \"k1co5pr4pveyfnxc63nq7b2lf75oyt7836s4476nnkuioppfjy6pjlmjon8rmkzb2gh2ueat9lta12fju425on6js8chkobhtwd0n0qv0ckypeag2nvt528sbjqkjaf94qfhpt6xcypisi35gxrfy1cfxd0m00y0\",\n        \"id\" : \"61k9\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"zv6hc3qh8ofqzles9\",\n        \"comment\" : \"qyzepfn9rrw69fuoxyw0y56xfb56zcafctoat6654kt64kigkylm3brjppao38bt6eb6kcf68hfbtpuqvug6mvckftp5dv9r1eaen69o1l0h9y7dsros5k17xfy0tnzsxp071jdx9ym4ybsxgxxc7ap47qyn0rnpm\",\n        \"id\" : \"t132\"\n      } ]\n    },\n    \"name\" : \"Elissa Kling\",\n    \"description\" : \"Totam nemo nulla impedit. Sunt enim quo ipsum aut beatae. At quia quae debitis culpa aliquid.\",\n    \"etag\" : \"quisquam\",\n    \"updateTime\" : \"2022-03-30T17:10:28.574379Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"52dlzw02vhslj6xxtii4uxhhupzzf2q0ntgw3uguemp58cn11snxeep1fihpmo3longt1nz4avs4cb8oobmn34juj8xdfc9c8wjrhnjpfg76q5l73m3j480gl41yxipw8er80q7fw4cqkwd1h9mckgalylzr8uuxw4qy00852cdtx2onsaitdtgbaokhoktzc4h\",\n      \"noteReference\" : \"bhwfdu1upsmgxqx942vyllh685gl9rfjeqrwi6j8lqqrjvqe19isy8zlzxx83xm2yjtz9qu1edtnxawjce11gmtcqdr0ey6ui5i7rnqf8pn7rj1fipd1z79v9fvoz4d2vfmx4hkkonagxdolajtqr7l6v55djxsg7l0cf7jbhuodr\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"1de9oj4e3d0rdeblmm3qfz8t8wmfdlsg64yj4zcshyysl0km\",\n        \"comment\" : \"r4g1ktykyjpzmyr4x6eoey8ds39ct3h79x0l2lves9sm54\",\n        \"id\" : \"0m0i\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"at1f7kn8p0rh0otanvcmdcpkwgfo8wlexczhx9dpxasjmeb3s2rsjasg2rcq5fhdehcjc4wclfqej8bt2xjsk09ie\",\n        \"comment\" : \"6gidsrmt4blflm5dwf4jta0qrbpmjrb2kl655dlz0wq1ybbistmnwn7xuzkyybimj071njg8tr3cdykmayl0eoghrfphdmwoqx\",\n        \"id\" : \"1wk3\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"kstke4t1ags5ocertah4a1ytq53l7v2ypdzmb5z5bavtsdh7e2e5nr4m6y3xl6farpw3chzrdkdtlvvwbm0kluv1xdgo6wa133dwoolhyyzf6pru6jc1pfhigrcp9zton8p9oj83h7aqg3auc2prx9mq3xnumxcag0bn3t5ytlxy6yzg9k74k8vta27eq9dsmrlwyno\",\n        \"comment\" : \"58r23a9ahiaxvswcgvy8xtkptbnfngfby1zbxvrymc2vuf8wk0z6jhhoupoemyypq0i4cg0momqjit3oheww74r914z0fkv5x9v71aw86rp42oaxbcuccf5imsf2v29no92ui9rqn0nbfu1dvj7aqs51pegv9guzlfr9vd8qdgo40tgi3uhg6fx9ndf8yps\",\n        \"id\" : \"rhth\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"tib25ru4eomlg4ncj94ago7wpqovtuxdv8s9tf1bdr42gkvm301a9ddrr8if3j5uyctrs38vn82icjr6n32uvthhdzacyvjubetf2senn141sr84r2pnt0b14vjvnsv3inw11hodad7138h4ullov51d0kbg8s2rztuq7b97gxpjk436\",\n        \"comment\" : \"o2ggi2e0luw91es\",\n        \"id\" : \"u2he\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"jw3vpoikiki9ufi4vk89yi2ddf6f2kle2uc8nq7l7gz5zmkrdqotbi0dhzdelw2upog5xwa6v8kxti0wykej6nt4pshtyn759sj6yyy\",\n        \"comment\" : \"o223xrpnl38pfewogauw49ia2g66j92iu0hzb66lu8exz0sq1mj6okiu4slhrvdvn79tqfu22bvrhru825jkfrrv8\",\n        \"id\" : \"t96g\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"rhl7w1180yrnjlza8ql9do775bhnrl8i10bpfufbqnuka8zlct8j0k4hvur2xn1kwe8mgns3y092oby27ucsx6tw6mcoaov9w\",\n        \"comment\" : \"zqt1z60ngz8oph28pb0t7i28euhkrc6spbupptxmobdvz5fyun2o05k1zidvvd1xmt6twukmk1egjk7hn4hqx8dlmfoq8bx1hxxpgd1379n3lygses5zlo1pewsdtyye32zrpm6eqcsz6vp0l32ihnh\",\n        \"id\" : \"zai7\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ug1ibxoxnl1zoh5rpgqvrs85bqge00imevzz0mtk75v5f1kxzovl9dhw8vcdq7osnu81og3wk2tmptdpjnhtztxvvc9wu7ubv9wpq7auvsqhwwtcugn2jk0urlrow6ocs16fw6u2w77zmwbnmkmespup5ckhs8rdulj64a35pk075\",\n        \"comment\" : \"yi25kyc68hdzic6\",\n        \"id\" : \"xr2c\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"3yz6y6418qpcyudexgwww283hli73ferbpwifylf70m1n1oxyz9smseu08qtj\",\n        \"comment\" : \"w0e5hmmx0zbws4htb8th6srtds00fahzb8zqxg0gqu082qhk09pqx\",\n        \"id\" : \"cke9\"\n      } ]\n    },\n    \"name\" : \"Jenise Stamm\",\n    \"description\" : \"Eum id quasi ab nulla. Quaerat et iste. Ullam ex aliquam eum itaque. Ullam modi a.\",\n    \"etag\" : \"aut\",\n    \"updateTime\" : \"2022-05-22T16:40:28.57533Z\"\n  } ],\n  \"nextPageToken\" : \"8rn74ivjvpzzvueddlrwzrwpp6cy96rd3k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be2d09f0-dfff-4659-bb7b-e391abedf1bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.575493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.list",
          "schema" : {
            "description" : "Response message for BinauthzManagementService.ListAttestors.",
            "properties" : {
              "attestors" : {
                "description" : "The list of attestors.",
                "items" : {
                  "$ref" : "#/components/schemas/Attestor"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results. Pass this value in the ListAttestorsRequest.page_token field in the subsequent call to the `ListAttestors` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "11dbe66f-f08d-4270-b85c-260f8e021f1f",
    "name" : "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Nelson+Bechtelar",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"hodgfm0h6ttoebrvtjeehax2olsbrj62v8cxaatnpbhfd8dw01sme2s5gvh57b3ef84uw3nw3tzwjk9d27mum\",\n    \"noteReference\" : \"fu3x2dfmnt0xcnze1u2sc9n8hmygu62d5o4yflxony4ywr8ijd4nfqlungccurtezgwsnogs9ftuw2fx0ntxqwoh64up898gf3\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"k8d3sm4cp2dss8y0g49ei8goe4206ybt6w39tzjtvxha0z80ud98rahozmbgpn0xwke90z2mftczwae52gsjmivufabxamg83fuc3kt9o6ghbig65h6jepvlnwsga0i5v6iudtz8owmqv4v0z3ywftsp\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_3072_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"5dtgtmvd7vq6235pzvnt8m7yrsevcklkf2exk932stx10d4imet1n96zlnnjy2g0feqlgqbgfqu8kgtd325\",\n      \"comment\" : \"7pblidsozsuksc44ew2qyk7pisbnua4f5wif5lcgsvhbcmo456gae3x\",\n      \"id\" : \"3eo2\"\n    } ]\n  },\n  \"name\" : \"Myung Stroman\",\n  \"description\" : \"Aperiam itaque deserunt. Eligendi facere id. Consequuntur et nam distinctio. Fugit molestiae rerum eveniet iure aut nobis. Nobis nihil omnis nesciunt ut fuga nostrum eos.\",\n  \"etag\" : \"laboriosam\",\n  \"updateTime\" : \"2022-11-02T16:41:28.572446Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11dbe66f-f08d-4270-b85c-260f8e021f1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.572572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.update",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fca281e6-310f-4e1b-a282-e52ad03e3cea",
    "name" : "Gets the current system policy in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Tyrone+O%27Keefe",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clusterAdmissionRules\" : { },\n  \"kubernetesNamespaceAdmissionRules\" : { },\n  \"globalPolicyEvaluationMode\" : \"GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED\",\n  \"kubernetesServiceAccountAdmissionRules\" : { },\n  \"defaultAdmissionRule\" : {\n    \"enforcementMode\" : \"ENFORCEMENT_MODE_UNSPECIFIED\",\n    \"requireAttestationsBy\" : [ \"3edp312nxi4ylxvsw7qo6ukxq78s3j83qpipnqcdhvya8s6lqe0x3fs1imdtv2sb6j6x6jvb28o2l8skqfj0ex8bqnpdg7pir0241vwtq57vhvd41pwl20n321n9x2u4l798jzv5zyhma7\", \"ct264hexuhvh9ubqap1v9pulbb0bv2pdyzloauhrq7c9orwf2ymh7q39p73dijhvs8d6k56f02nidggjrd\", \"c6sv83yvck4vq6770z0puzjobh69m8mv4pe4d4jepx0kywmhw7o7wta96l70pglgxqwbucw3z0ydms973syhwmxw4rjsj02cjk81h9ksvzdl38l\", \"st45eidcfjarmzjqizxjo22f7ter4w76o01rffk1rn6dmsq13ebswf7e91fenfs237gfb1bb3il3ijxvoh518elkvbqbvmbev7aq87l6hc51wg1mc7k6scktiafqt98p9p8j417dmlpme65n4elwtt55h6bmw48toq8n6dsi1p5ecmyiwqiq9go8i34f9\" ],\n    \"evaluationMode\" : \"ALWAYS_DENY\"\n  },\n  \"istioServiceIdentityAdmissionRules\" : { },\n  \"name\" : \"Dr. Aleen Block\",\n  \"description\" : \"Maxime saepe omnis voluptatem id enim est nulla. Quae quis unde suscipit fuga. Laboriosam sed officia. Totam maiores ex numquam dignissimos repellendus doloremque fugiat. Repellat et odio non.\",\n  \"etag\" : \"quibusdam\",\n  \"updateTime\" : \"2022-05-24T17:24:28.571826Z\",\n  \"admissionWhitelistPatterns\" : [ {\n    \"namePattern\" : \"vasxeom79k9unl4rl03hm3ffgdx01zolnpbdk9nvdh9a6oelaq47hd48bxazj4n9e8cuvhpgxal3ggo9gedfvdzhh8w\"\n  }, {\n    \"namePattern\" : \"ydco11grga74x4ya42i10me0f3ejn4gfo7y7sq53hb15e3v3b0skes7z46el9pt4q3x81v1engs5uyv44c4zgjzm4ad49j\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fca281e6-310f-4e1b-a282-e52ad03e3cea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.572062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.systempolicy.getPolicy",
          "schema" : {
            "description" : "A policy for Binary Authorization.",
            "properties" : {
              "admissionWhitelistPatterns" : {
                "description" : "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies.",
                "items" : {
                  "$ref" : "#/components/schemas/AdmissionWhitelistPattern"
                },
                "type" : "array"
              },
              "clusterAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-cluster admission rules. Cluster spec format: `location.clusterId`. There can be at most one admission rule per cluster spec. A `location` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For `clusterId` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters.",
                "type" : "object"
              },
              "defaultAdmissionRule" : {
                "$ref" : "#/components/schemas/AdmissionRule"
              },
              "description" : {
                "description" : "Optional. A descriptive comment.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the policy has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "globalPolicyEvaluationMode" : {
                "description" : "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy.",
                "enum" : [ "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED", "ENABLE", "DISABLE" ],
                "type" : "string"
              },
              "istioServiceIdentityAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-istio-service-identity admission rules. Istio service identity spec format: `spiffe:///ns//sa/` or `/ns//sa/` e.g. `spiffe://example.com/ns/test-ns/sa/default`",
                "type" : "object"
              },
              "kubernetesNamespaceAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: `[a-z.-]+`, e.g. `some-namespace`",
                "type" : "object"
              },
              "kubernetesServiceAccountAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-service-account admission rules. Service account spec format: `namespace:serviceaccount`. e.g. `test-ns:default`",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name, in the format `projects/*/policy`. There is at most one policy per project.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the policy was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39b89cbd-a27f-4962-815d-ba7002300688",
    "name" : "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Seymour+Kilback",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39b89cbd-a27f-4962-815d-ba7002300688",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.571564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64975204-1909-4d2a-8e00-f85fffec2dc0",
    "name" : "Returns whether the given Attestation for the given image URI was signed by the ...",
    "request" : {
      "urlPath" : "/v1beta1/1md34hbi8hh2xgft9ipwvomocrikir8r46sy8gew5wfdlcu2sa0zujd9efczsb9vvwx5gkifu9el3ybub2t8omrwbz4h25uzczm1lm08fdwgagez3uqtm1hfx:validateAttestationOccurrence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"RESULT_UNSPECIFIED\",\n  \"denialReason\" : \"dyz2nm7flvjkuktard5r4dmra4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64975204-1909-4d2a-8e00-f85fffec2dc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:28.571441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.validateAttestationOccurrence",
          "schema" : {
            "description" : "Response message for ValidationHelperV1.ValidateAttestationOccurrence.",
            "properties" : {
              "denialReason" : {
                "description" : "The reason for denial if the Attestation couldn't be validated.",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the Attestation validation.",
                "enum" : [ "RESULT_UNSPECIFIED", "VERIFIED", "ATTESTATION_NOT_VERIFIABLE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}