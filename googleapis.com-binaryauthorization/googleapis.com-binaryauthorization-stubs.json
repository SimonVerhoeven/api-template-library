{
  "mappings" : [ {
    "id" : "7f6e9953-eb28-4d1c-bf1a-16d480bb653d",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/e1ja80zgpw5ur4bow6a7heehcblto8zgufm9mi5q0a8j9xbx6nfn31912nanf1lo5xlhejmgrdfuby395jxb3669u358okpmxw7l5o899ann4s5ythcl3fagbintjllfozl2jbihmt8eyhnkgvqr4yv7:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"hhly918al9k0nr6qdqobbjqsh5ozn4hi3dgclhssrrob808x7yejttp17qqfruj6e7x1ymfpa12mvn67w3rdmerp5qdd\", \"om0po5z\", \"pogj0qs9rueexreukbicsns\", \"slak97i93hagxtm5tqrz9i93a\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f6e9953-eb28-4d1c-bf1a-16d480bb653d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.690536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7dbbb8f1-e3e3-48d0-b6f6-604eabf096aa",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/rvv4n6kel8owa0i06p0fvd061ypyar70yntq7hcciwkvi5i4mzpoffbvs6prhd7lsclk2yz6j5439:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"jlq8gr8ivf1wnbvzzusrhdny8orzg12qrtey8xb1bby37v09k9o12pelznn9tl\",\n      \"description\" : \"Praesentium molestias earum. Aperiam quos numquam iusto incidunt beatae consequatur et. Neque beatae aspernatur ut similique nihil.\",\n      \"location\" : \"tl0a03a8slqz23r2y0azia08lknfzg6ibvd17dfl8iqznmc2l2433n9rtlxzs4n3k76fdr1ke7rw3qwa00a0fmyjjacxssayzw991talchnh7ampf1zk80nquf62hjt2z6xbk60s1il2ycwzmywpqrkeup95ft\",\n      \"title\" : \"Repudiandae dolor earum dolore.\"\n    },\n    \"role\" : \"mu0m3ygwr7j7gjhxe9da9gvuo88xjubcvatfkcvwksozifan3szy2blhv58z1hs1lzyb683psav826xbgg8jq6jw9efn8qphcpzles3z2qjcxeh63kz\",\n    \"members\" : [ \"0nx3xkchx5jgp5zigyvipyipbul9e9xys91yin7smnxa2ssrj9tgcu0f1yeisl36fj688cptbg4iamhjnwima905ev9cvmxc1fszsintk2aytmfjc5ugg3xrck7umj07anf59qhrt56lt4evixqeypo6ogdmx4rkm0go4iuct30y4tdit8owva\", \"f1vxi5g6tmq30rg4baxd9h9rq5h6wzxuwm4079wb0d0pg4n45g2ndf5eqj89kk5ubtf1jl0hvw0x57n5cc6g7a74lmqwb0wh2ttjo9q4ygal\", \"nyqgckf792ey3pgmpjs208iw2d32dpdlaxnonmpv8eioy4hf692m9bysrprwoa4bj741qwl5vf3fq0arcge64tfslwe1vq81upto6n301xlwc9v92m94q9k7fip7p5y44r2vyddoyfofw3jirpq1xk327ietr8xrelbs605epjxtdnflorle0811vpzfg2a\", \"ptfs4uzbkdo1i35ncgdblljblz8m25bh90nuuqitektubdrnn\", \"rd7lu7dditw3ltjx801zucz7z6vmgzgt2c5zoduxf2ycsi3bx15oy2mpkaa0x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"nwwtfr5pqnaq1ieztieiy0xr4ejun2jbnjayqt4owhu91jv8tpdmydbu8ug2pgvnoya67i2wu01k53vo9hr2ymqgd9iog7padtsg4of10cn1xef1ngyqoflx8j5ai8rqww88wldihxwa1la7wcsvztwkgco\",\n      \"description\" : \"Possimus quod porro voluptatem. Aut voluptatibus aliquid ullam id accusamus reprehenderit. Earum dolorem pariatur et omnis eius quo.\",\n      \"location\" : \"ba4o75iab7zowqvo2h2p64x24vbo7br55etmjelpm0njhnm5fsgnkicmcfz00q3mm16hznr6ghk06qpcs08csbfe9rargt10ksj5ws0d1sqjyt3ugjrkuuuxy94\",\n      \"title\" : \"Rerum reiciendis dolores.\"\n    },\n    \"role\" : \"rp97pkfz59feulbybgfgg0uj8wun0n2fxr4aba4yhgsh2t81fulr98ql22eqr19jfhvb6i7zbg9s5lmaiymb09wacquii0za7wubfx6kb2o22ti68ct4gwhejaxs62qigry5artbxpxxex3fdlqdfno916vrex8\",\n    \"members\" : [ \"6w99xsbi8sfga0jvnwgro2gdde6zqixr1uah42ypubpkvceg1dbeb7jhd4b1e2jlnngk477qtxbinl8cl7gx2hr40jcc7ou4l6hsuvvxpujcep5zut2890bce0vdycjx6gemja\", \"jxyhd4wal5beuaiy0dsj3hnvpc4pqdxlyf1zer3l72sswyeni6\", \"n5cudpmirz7418q5i9e8mijmxawxegsy93pib1yy025zg1ydjdfdu1amgq0st1sv31ofe8cyq6hsxwscueo3qie49tdf5tb0cf4dk4lgoewv1beom4l5e5lexnjee4q98fyf7fqja65io6ur08tdtemrjulo0ikqgf2agi4u\", \"unilr7kpq5jjyac1wiafml1e5gb1e5py7nijrnzorwrl5dqlvpibkulu0mqk5emcqprkg1t687xfhlrvjc0w1rqpkqk6o6xycpwmyaadxgd27sht43pahdwllraby6u28kyegmu48hq5rgrkca1mv8vvk1jmp965zxc7ktp38649hv51hiv41737xg00f9\", \"kvgnhqou72sxirnhh4fphgpye3fr052eym3mviayhjtebergs7gxz6qzqbuwd5lhrvjtkrts8xbstwl3cwnjp00zgm4cs6vtrwm39nwsiymqjtw59ioi5xq0v7xe6z0de8qcxz0qo42px4hpax\", \"f4cbwvzndqiu22yts5ymjvxhyhbiuo81hr76ybmh\", \"4kjmvsw3x42v6k1ajapuhk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"w036wb8gl8uq1y2psbb5f95un91lsu7gfuf9lcuiry4u03j56qohh9hx9obffax6r7m81p90ecvsjof\",\n      \"description\" : \"Saepe nam ipsa rerum ut est. Exercitationem optio est aut ad placeat ab. Magni sunt optio vitae. Commodi quia neque et quaerat enim. Qui quis quos maxime labore cum.\",\n      \"location\" : \"h9zu7jmfe9s7xp2ki5h0tmfpkmr2qkgm0k18lcucqbs6yd0hkgvxvyhucryam9favbj6r0ruy3fog1phc5xorvk7yn7wux07x43758m2bxzjuqzray\",\n      \"title\" : \"Quis autem non.\"\n    },\n    \"role\" : \"gzijpaijmha6a9xgbxfjjm\",\n    \"members\" : [ \"9vd1pw8cdt18wal8htc76bk7x52vh0lu6doliykacvu0vop851097ss4oq8fw9c4q26yf4zkstfdchspik165okzt5semy9t16e08blp76nwdjwy0ot24bt3zhxxzz87fjc6vve56iz1ig3fvxyk9hekwbs4a00n0copr\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"pa60h0dknvldkubkka9b5jpxgf6kjlp7wl0g7ahvdh6htb8zsqibfasiwgd9bxnx4829b9ky0lkz9rpcla6ey6ktf5c4xyvm0o8am9qakwnmxphrkwgbm8dvde50wnxc0qnoczbnl80y8fagi28injyn6q\",\n      \"description\" : \"Asperiores non repellat tenetur atque magni. Tenetur reprehenderit expedita sed sit. Ut velit recusandae harum ipsam.\",\n      \"location\" : \"5henaa3qh22yr59ryw854bosm1xe066ato4mbvypdise9oex9d5v1vtu4kiutcxflsltemgaat8s6h8luhovw9869b2qb6271pbs0\",\n      \"title\" : \"Odio delectus aut voluptates consequatur aspernatur voluptas qui.\"\n    },\n    \"role\" : \"qfirwpfjopf0\",\n    \"members\" : [ \"a86bwmpw5gy28w1lhoj1s3mgyjyg1gjlnvrd05w504bs5h40fc6sjd0267i9mmxfr91\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0qbxzytttvhkfoohio91sn5ng4kv299dm5u70ia4d24g2vld8w54fw7c3qcpc2yp1y6whufuofpchzne1l1grjzoiavg9bir9k672ljn3so88\",\n      \"description\" : \"Et quas dolor. Non est natus aliquid dolore excepturi. Laudantium laboriosam quae illum sit. Et autem qui voluptatum error odit. Quo consectetur dolorum.\",\n      \"location\" : \"995eon07x602reish076c30qp1kud5zgsvglks9zrc7lgu5ph32upbjjluz9vblxqcc6y93mxagn8grugn401j9y9p7zaug8on\",\n      \"title\" : \"Nemo culpa quia id quia dolorem aliquid.\"\n    },\n    \"role\" : \"te81n48xtdvn8q7los059dsm8muuf6xpudl8dy21vz6utzqppfd8nm3m\",\n    \"members\" : [ \"w0i0bjtsl1zln075t7zecds6ufbnyfme\", \"bz1mfyo0dx3024xd7zhf2s527z442inwx39hj78jbdlwqqjsrw9r4pelrvpshmrxcvsdrpg2qm2bfi2g0rlkl9hxuu16esep6mvutc79lvkwae6xo3zjw160ofms4u4ksxdayeiwmwj03snwyh6r9a5st6eqg6ciu3q\", \"bplgq1mxcw2shmw02eyhg8lsyx0giyrgxb1psj93ceel2a66w39n4a0rbdw9al5159ne0rsgyl6b66s82iow0gbaoo8hfy04xu0ra9effwh5h06hr7oy0746l9bb18ikv\", \"nw2wn5fsp5tcag2ldwxjofxetoy45tqam4psvfbnvqbuj5xxa3mvdj8j06pdaql6w3wadb26rjxbecpfyw870gd5qjfvj1ntqhihu95dowkrr3ixohzetw72nqnq4wb04nf290gday2e5c7k7sv6d04lacqtwk7t6k0xbqv8td1bgcy9pp9psoyatw\", \"4b7sfjhkzrex75f7viazff36yt23zjcunma0d95o4gbhjkbjnxtglm9j32y350r6hay6holqpr335929ovzprpkwxfq9cackaf3bicsjpgc4aonkyj8tcch2lk6fnz9wucm1gp0jymkx4h8y47dq95bgj17qfi\", \"e0dg896832yeqslu6mvkd328e4u8gnunqjs7sw51cv950v3lfre620jpaw6dbpsepkb\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"r852fwhz1rvmmmfp97bbc58sgph8u37ii5sywv2kuv1btrdb8q5vn7cgemufgadisvnnaxrofhz3w9c5ob\",\n      \"description\" : \"Molestiae qui laudantium sed ducimus. Itaque dignissimos error quis doloribus molestiae corrupti impedit. Repudiandae amet exercitationem illo ut iure quaerat et. Velit omnis doloremque minus voluptat\",\n      \"location\" : \"5on63w0af35ma7es46ajwui4c8rdrff4jbe2qoy39uh60xm5lafizh6l\",\n      \"title\" : \"Aut ut sequi non maxime reiciendis doloremque et.\"\n    },\n    \"role\" : \"2s4qtd7x7dg7flzfssotf1tsmatbsemd1sdjaoe0yw3js4dk6qxd3t2zk1k64dni6\",\n    \"members\" : [ \"r0r6m0rx2c0pu9nixeaz0f2xay89g7lm2zw7ctgrymuiavz8zlx6bx0wm25fignvnbg54do06hlu1doqxvgcico8u2r51k0av804owsstecf5jqkvkl56duexx42ii48xdc8ynlg3toycemnqzscryad8k8chqrtpb\", \"6evhr8x7bb114fmdu4c6kwb879yiaoq0demu99\", \"kbm5tm2qxxw2j3bw5qb15vhr9q753798lq702v79sajldpwvd8mhetwf36slvg0vymoc5vswfpj64vmr2eix0sh1z50s9bmswmt8ji1a8mzhmx1zjy4zvojwkouc19jstble08z354sacbcbtl4tfp81qbynaduao1pwsho8h05ti91sja9p7gz3t5hey3p71jsnq\", \"4h3hq4f2y5avsx05lluhunmf8kbaqm79liyvn974r7hdymm7nrn7uw95yqqbo19h0yk33m270egdw\", \"e65zb4tbpisgqhrbulv8o6xsquyy63v47za037ohyaql\", \"kgsvwnmoqdmbqvifhkn90zwegfsvrvczi8bw2yqn0eow9bbbvdi8kbcid15me97sdrvqcgi5kz16kfdagiw71k5qexihncpplvcm1o24vn4nd75z83yxzlp5bx\", \"zlf0ldja2jlm26vcqhx5gd8pme1cf4rz4ex04mryvow8uh6l0qc7v94h5lhlctmqxrh7w3wnee2el6wlh7ehspcknpmxpmfza2fewmsiqjj49p9rjdc0ks5f1czyxg1bz4q3d56ey3ief2\", \"2re042w08psfebqusfewl4dve4nwosi93ymf9axsqj5zx2xvl1hru12n\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"rnakrlkhlruzwozvc96sr4z1oxnr8uvbetylpvgb10yrinfadhqyi6b8g70kkpcugn7duttntnp5u1qxdfhiz46b6f1toreel217kxfuny65ur4syfjxebtjbjb0uqspj0k06g30tjh6gc8jxlknczncbu839fnlwvnap\",\n      \"description\" : \"Aut quia hic debitis fuga dolores sint nesciunt. Nam saepe ut voluptatem velit quam laboriosam. Rerum ullam molestiae. Esse hic tempora mollitia aliquam ut. Ipsa minus qui quas.\",\n      \"location\" : \"zekanesrk2hxclfs840vvo30l8pfqzldr26mb86sf633ke3jjf4l3krbzncurso\",\n      \"title\" : \"Culpa quo corrupti et non provident architecto.\"\n    },\n    \"role\" : \"j4tibskn02z1vvg7ha5fs0uysblh6fxg6qk7y6973homsc7rt9fljwwgd8y3scz401\",\n    \"members\" : [ \"dp07a36tadej9bpvmnt4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"c3snbvknyob0yyur4igsdfz7v9a8szwe1xtquxfklrz20g25cbt647hmoqwjh01uyte5n45xxjsido6ofr8j1n9bw3mdrxd1vx4gg5uwe2vbar2pwhp6my9r4cv\",\n      \"description\" : \"Odio quia doloremque iusto tempore. Adipisci mollitia voluptate quae. Voluptatibus ab incidunt odit labore omnis laudantium. Ea temporibus aut fugiat.\",\n      \"location\" : \"s8hohy2xsq6h9albuv8npcgqj4vqcqvphlrhwlyi29xgpedfd9qlylbvrudopabffldsa920qakiks2lnwo7ih7q4pmvjbyyn312e5wyx3nne479emchabtleoc8yjfspfhm0u3lzj6cbahus1kkf0969t866bzq4arptollsi1\",\n      \"title\" : \"Tenetur nostrum et.\"\n    },\n    \"role\" : \"wizx94hypzv8a0pmxlkebripvx6s778t4oj85mvx0dz59b0hmvd27s7emhs8m77oprfyyql9h3h46hclovo2241pc3x3dcxamt6l7pi5eay9cq5i0ccln527qj40z2ejfmkyh1fh498u3ln8mym0u6cz2qylhc94wyi4fucak9qxo05sfmgjde9w6oljisnjoa64uicm\",\n    \"members\" : [ \"qloqmcaz4rv6xzsmife2ca93oqmibdjhkisl08fo00pstgcdj5mj5xtbve9cfsmq8uet25rkssy0q7wwgfvqvcp9prq3twopvrmpai13fb76o8kjyio8ziu38a7w6vfpeolifd66rav52fgeip1oty93l2y2afs43i2n702orli9gs3auoj80h0zlw\" ]\n  } ],\n  \"etag\" : \"ducimus\",\n  \"version\" : 2009791820\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dbbb8f1-e3e3-48d0-b6f6-604eabf096aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.690434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "004917b6-5ca8-4389-ad4c-97d99e1641fc",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/1teqz6ibav68ldpjyv5dxdhgzzfa23nexcb9g87s636l9kcg57kxecirqi17:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"3h5u72cdwsqpf6wrv1ak2fj2aaiv1ko4\",\n      \"description\" : \"Excepturi in accusamus modi. Quia quod necessitatibus quia dicta quo et. Earum totam dignissimos sequi. Iusto et ut quidem totam quo odit. Eveniet neque debitis unde id rerum.\",\n      \"location\" : \"33fqm3pwsk8l6yx3wqkqwq1wzxdafae35zaeyrenatibg4ef5vb45gr54ew885w6momm6tlqozy7cpt70vd\",\n      \"title\" : \"Praesentium quae fugiat animi.\"\n    },\n    \"role\" : \"505id0a5ph4rhfat1f81n27pi1af40xd3uvq26hf2ugt11gn0zr8g1e6vlcudp8qzckd0bwq17imnzpnp1gcx9nbdttjutzjj7a6838hfmsnktnydevsdpbfr161sq17knkuq6lqy3488vzylxxdlny2l42tedvkv2\",\n    \"members\" : [ \"obr61u7b0op03wol7q5pu27y\", \"l4pntbhm1lm2jjotsl9yr4msu4v06scydvhthnwkv9uodz4j5air4l790vn63hh0kvv6jh8l\", \"x3vd53yyuppeyrob111ubclowtbtmmg0okkt37d84hao26sou6e9fgspdi44w0c259k1kd5c28stv4xctgwa3xli4tgtk6kx2958k1hv44k74o438ugos51qdu3xehblxvm2\", \"lb4arpx9o1rqijtfnj4fcfrhmkyedekunkoz88k2t1pttvqq0kr9bkl3p49vm57z9nnwflf77fu0lugawaqhnyqobtat05qabwn0943wac37vdwep39dkkml8zvqsjl8h7yipm3s6fqytb2i00pv5e0l02attqj8qzc8kmgsyudx20hfpx9u2xxmj1i97\", \"apkodyxk0jy4knnzh10h\", \"wuuqa5ukb1fps0vhkdwm8hvs2leqz8czs19gnxjrzfzko54gvxpjjdil9gv9k9dx1lqd5742xf51q9u1vi\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0v7phg67cd4t5c1d009\",\n      \"description\" : \"Repellendus nostrum porro neque iure ullam dolorem. Alias et rerum vel sit occaecati. Unde et soluta. Vitae quia consequuntur repudiandae doloribus repellat vel et. A asperiores reprehenderit enim qua\",\n      \"location\" : \"vcmdypkrrun8hrla4wgq39gfgrffv93dsr4dxh82012y2ern6lk1cugzd91ko7wg8vylqdykiqwkdvr8cwkqi69s5hdgzwtlnuzo5tux4rvu35ral57cmw1fy446hg3h9afrxa\",\n      \"title\" : \"Quas porro quia facere suscipit doloremque voluptas.\"\n    },\n    \"role\" : \"pnllnu334k2qf3etsnujwg5f0qmjvrqv58dueigyco1lil4gdzzxlny5up9v6dfpskj8xxy8ezxvtz0i3gk6132gym6kghbxxbwp2jd5za84v6atoam4fxo4m\",\n    \"members\" : [ \"eso6w6m3ogr2lfc88kmqt6tt1qd62hyh7mxxey75pxsvxroq64k7rbt859ycou78axx0tg22kgqnaq87uwrcvfso4xr054m5et54covyt5hzfsrdjagt1vs50hph4blovbkoi6a6lgtra9cu24v\", \"6x2vm9at934rxjuenpgdyo6jbu5o22ggvp1sqtrq8sb3y2sg1mlz5v9k8jaom9nlmggcg8h4zdbs7mmx79wyxintyxuzx0i3o74jeo8o1eo6keit2o5y6on9ui94y1k19wrqnt6i4sqvuc0jqpwggu2eohbrh6yh9tvskomaihhlo9f9byx8onzqvusl3nw2olu\", \"gj99fk5kwj6d31hmd9no30i63bu0ysgdhbxnhssm1zl8y0hgz1blg52iiiqoxf5sk56rekgk2udme\", \"f5cdijxk2w3e4p9\", \"l23w8gbx2lk0c4ih6xebgl33lys6012dr1obpxvi9md25cirtsd24exzal3q9o9ph496mo0is8n2v88l7ku3fp2g97eu5l4qrrc6omvdwgcy63hn6nfug4r2vkthcz3186oipbrry46ted8t2g7wbgkl4d4wen33t5giz3pc3l7o48aql6hc1octc8zp4d4me1qz\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"v00veh9jdrlgfvpzpjivnhu4z842q0mda3sp1v8z54wrwysa24d3h0rxxvkky5qpryf11ojfxlft7tp0ka58j4nbo42sdwtnz0tg11s5cyl38iwbulphb61a0a1o4qcvox4haxh9zsy0eedl8ppfeu7qenm7fbo1ohb8gt\",\n      \"description\" : \"Voluptas impedit consectetur. Consequuntur explicabo laboriosam. Quo expedita voluptas itaque dolores. Modi facilis laudantium quo dolores fuga vel. Laborum velit labore ducimus.\",\n      \"location\" : \"5ama2kriduxy2hwua3dau8coaat4k2htc372xmuhprrv1cv54cdrl8icyunpoad7dm8\",\n      \"title\" : \"Expedita sed repellat voluptatem.\"\n    },\n    \"role\" : \"xoa97zsm7jfv3qlodiajr5ocxxeww6x0ulqh6qfe6ic23f6duy2d84hyptwb2545dosn2man84\",\n    \"members\" : [ \"11asfzwv365i2ooi18v9wkt97t2kxbjo6i4urjw5wxhjuj1r6e13j9omgpbraox49a6qqymil7lwxm509pktue7b7e3zo6sm90cbiz3sckavn19kqkqfh9ytadb7cbxp89yqt8nlf1ctgkcvkn5cgse3atpwkpruus8v6v0h\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"f993cqrpa2fjjxtyk9b2eujf3qkm4c8hkr7k3nijokb9h8wbxsfbx7ytoh03cyc2f7hgu8k1i5nb0zvpzyhd28tlntrzgbzuldptzvugfpye6q786xmwayujgzye45slhy5lg2nawh25yw\",\n      \"description\" : \"Sed nihil doloremque illo et. Tempore sed vel culpa sed. Est et culpa. Eius qui debitis aut aut dolores est sed.\",\n      \"location\" : \"jwc8xri55rvnn7zjd322fjg8qzbe8zfkljgpogro7d730k3cllqcw1y9q5tcyy2qdp9hz\",\n      \"title\" : \"Error ab architecto quia quia explicabo magni.\"\n    },\n    \"role\" : \"isnhkihxgv6w9dx3lkooimcw0n7l9fu513iq3ztnw7lxzhm41ci1fwrs7sozgx49nkop3zgzk\",\n    \"members\" : [ \"jfh3qp0882j0g8nihlta1jnulo3087ef4mkeaj4stazzikjoj3uzaatcl8ghppg0ssw95x7eqiqzc63o2ezqz8qdwqqx\", \"rjxjd2nkfnluptzvlbem6aar6r6q0fdeot2eaovoheg6clajr1juh7nd3kxllh6ilkg4shkhlf8up2jgltay3gszou\", \"w4t4dtlf8cjuq4535b65lc9kny7u4asl\", \"sug73wwg2zhbh0qgsgyy7isa6xmjs4ajaf2z6noat5sovbbyjjp\", \"knuih8qsxm4gzqjekgqteab9tb79w3fffgb2ttv8trzoy2p77aqg6nuhl2pr7hzu93sx16wtp5mctv46mu0gbpit695uxy5uzmv312h9le4gqsygwxqdbw41bfn49\", \"a9yi9ig6oa58\", \"5mnt37hdeldjfus0pedqv9absrppze3op3ulyb53mgow4hpgciiln6rzbr00zkke0f04d8jm9f3pmeck8fu1x9mrw2ip8eu0yaq7vowo46kele9mx6kvwxz0nybk04e0ycc9s9bwjpmco0bci9sm8cn8rxrtz4jcu2eqh79eil96rxmsxa5jevu0d25\" ]\n  } ],\n  \"etag\" : \"itaque\",\n  \"version\" : 155871585\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "004917b6-5ca8-4389-ad4c-97d99e1641fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.689313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "90afdcf6-a505-4dda-87a8-7d24b840126c",
    "name" : "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND i...",
    "request" : {
      "urlPath" : "/v1beta1/waemebt89luka9x6sj7la2z0xm020tn82kgyp141t61zvprpchneueulvbvxxk2dmiusw8ejg5twp040ww4xgwtepfhxm2ymnb4e72773kij57g11l8j50kuo/attestors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"rpom1n87e8dcxgnsnl7ipexb5hx06d1f96pvshsdn3bt47xal9hvwz1v9mw4s56dne99hd4sock9otjhtvkwenqhxil1i9r9husx9zk3bkacttah2e1\",\n    \"noteReference\" : \"nthsh48k5opto5cqh8cttekc4fi8inhprfmiqov4\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"msy2kh9019s90ank2y3ie4zncnpyhmbdsa2fbtdregzax420ldg4cjgayqjnlxpt9v6wh7hkav8o5lrctxc87hse22n3zxeppcq823abu6hu64uftyxi3fju752lrtnbrzigzlj8uq05fuygr18\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"t1k5glzlqp14hzouq6u56kypbr5spgvc06dv4li24jr3sh8k6fxxll9xdl76men3jgj2n7f3kjeocpgxx76r0dqt3ckaw182nnpxwf7uslbhjr4zmq6449\",\n      \"comment\" : \"j8gwt2da3yh7xfu1w5axe6ee96vzfb8w20edhidf0m5ls6qhzyg1bjarhyyk6oe0e7mc9tamjsfa4d6e5zyk24w010gh4yapznzwhefvlm4psbcbmbrmfa45\",\n      \"id\" : \"8088\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"hkgkg355dz3akj0gw6uuoha3vybuuyey2rymjsbdjnwc0wllychwxxdqwlv5yfbbq9rqukq8g6r62idqon93gymm6es622b5cijpqsumcaimxgiw7vlrm12e2masqgnuo21ejzzzoax3m7a4x51yfi\",\n        \"signatureAlgorithm\" : \"ECDSA_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"gwwm93mufph30g8qyk5l6t2o7wen29atb50wn2ctip3z6x8cdunobh6zbwi24cp655wx16sxd1pvwujta1il6qeixl90nzv8dg02uvkkg9pwyx31z10ne2rpphehpvtrsf026b4o2l555zwcx7ves9kwb3rfqojbak4hi8iv9hrq0g3mo9tj6lb7j3z4cxkknp40d\",\n      \"comment\" : \"nvrivrkignhtoeohqx\",\n      \"id\" : \"46p7\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"mvtn61i1zixx8ehu29qvgfvttrc571bopcy6pk9l4tznbpcj5ftznj4k48a8ta2qwak0ivs4adygrgsldkrc4yapujr8ylc9ga7h2ijjepb9ehdfdlwapn2rxxpzlc0fwujtux1dc93uyvpxrdb9sxj6z\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PKCS1_3072_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"hoze2ppb9lsdiga8lndwih5eb7xnu216qmsefmluyb5u3qwne7wmxonjcndty0qmwfyocby244\",\n      \"comment\" : \"lpjaywrx2joxnxh6q46isnrlsovg712hgg3pm7y4jqmlq0fihwujibe0osbqr52qse5ty5dkbvibv2m90wuj50uvxg8lhihc2hg6q5wpd8h4fbi7psi3u9p5dmioh9fbgvp\",\n      \"id\" : \"1038\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"5t8xh1mnx5ip9s9kfcpzornzb8h9x4xyvibebzb8eiw538mkhbmv7fwl1yuwo5k1r0kbx1isy7ewpino93wy8x6hy69zu9sbny4ke1xsvjf84ywxh3jkfnmpkfpdz9qrd1mbf12\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_2048_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"nb5wgmrr8rgbsipdhbnqauaikptupphyj2z82o9f5ngs7m\",\n      \"comment\" : \"6qh4s75at3jig2nzfdoe7zgqr2sjlvcefuhpxy3cpp5bzrzuq2j8kzpk6nec990gigrlc84vbz3olq0s1qe7m5rxd6har2nlaoczt8w307c0zbtbkjitz37ddiid1v8r86p4lcx8lj6fv2ns6ocp2jp06zl\",\n      \"id\" : \"v390\"\n    } ]\n  },\n  \"name\" : \"Beth Kerluke\",\n  \"description\" : \"Provident inventore accusantium quisquam. Rerum pariatur ut sed. Rerum officiis maxime. Sunt officia aliquam. Non est et expedita porro possimus consequatur.\",\n  \"etag\" : \"maiores\",\n  \"updateTime\" : \"2022-09-26T13:58:35.688519Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90afdcf6-a505-4dda-87a8-7d24b840126c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.688621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.create",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e49a49d-b492-468e-b66d-6b136f5c610e",
    "name" : "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/5kq4jonmxx8c4yc14igzzy5sdhp2ku5dt054oy4l67u3/attestors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestors\" : [ {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"uto7pati8z9rt9w0o509q8uxwl603mhpxjq5fd6ns6dz93j6ir774gzc519sytbd3uf82q9pysxlfhwtd9vc1kgmbxax4io64ni46hx454s8k1fskikw1wkjfmlxgv7vj6lc7jmcvz\",\n      \"noteReference\" : \"7r8av0ms9cpv32d303i07b4oebbzq2vvp0z8xid2cn1ka3z6i7\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"nih45a8f64lea3k98h5w88ew28wlhjkignslpyj6y4l9hl8y4mtw11vnn1r94wlxbw6ae93udepmxcsfcwrbmwx2toyd2rzo9pt8n13srsbhyln2gs3ewqrgcas4je44gls4wtxk7ze7o7qbgep7l5qikz5og4uchijcau1xffu\",\n        \"comment\" : \"pw2figb532bvzgjtosi1btlvduosx9fnd12poy7nb4dqp7uz2ai5r6bsrbdolf7bm6iwz92hwu7kpdhy1z3xewa04r5l15bueq1tf2enyc1ga61yvgl0fuf\",\n        \"id\" : \"8766\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"mk1rhc3rf1nqlee7ker3a1b5amm5o33zsjw528kenk6ykhb7eu721qpetoerigo3jwoenclc2lv275tgbbzqlp9qwo167x0tj60943x1teeimv7kii2a6yvuqq9\",\n        \"comment\" : \"v4hcelmcfkttbjmmf\",\n        \"id\" : \"c8rr\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"xvlfia86129nta1ktm5bik3tou9k7d7pjumududzhrcpibd9ppzfi60urj3rz43vk21jyqhn9yevp59wtfrexvowt41gvrhatr8mhk08huav326z6f7ycjl\",\n        \"comment\" : \"1z6ls0lxbiamlhhnqdgkeykp15om9v6vti0csg8yg154lhyw5usepwdzqevcj5kyc9ky0kklnwbqmxxtpcllg3wtd093ti2i2z3ehwl86n0jem3apjzbwcn5h1vv3gvgtkgcr\",\n        \"id\" : \"487h\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"fxitx8gp591yhoi2iybq2i2ndhtw9hu9l9c7gpomksqf6cybh6j24j858sm77iie3yne\",\n        \"comment\" : \"pkcg0cyl32v3tshy9d7b5xz3rzy93nf069nvgtjqd45i6ngg0rtg6yjpvqr5k062kvxvamuigchklvu0ldrcy8z1zwpt1sakm5l8l7sbh2h0e81diae0t4j7zbru3ijd992fa3hjofw2xdea9e8ngux3eyfnd7ygd7ao0bkod1qj3bv1nhepexiddtc\",\n        \"id\" : \"ygs0\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"r2ey8zlagedjhomdc7k88m2tr05hh8x0g6ir1lhw4w2fwguzm9lxn5lhdi3cq7wb5rxyfigvdg2ugnl7mybks5exa9fl2kqlhgr1g2vhzqaq18\",\n        \"comment\" : \"9s4ryw6knidd79\",\n        \"id\" : \"js4y\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"bowqhbzual7jafs39iwxvltl4egxtv4ze9a3dwykbz03zc0rwv8xx2h\",\n        \"comment\" : \"vvcvi6m42ioc17iupqlewps9v9iw6ymhetnff391qw4qegcmat29ffct4drdcoasf3vp2tl5xwzvz3zl8778ivg1riprfi5p3i41iho7gangl52\",\n        \"id\" : \"l4yu\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"rci4r6i6349ulpgv1e0dd13ovxz56xx5dnujgz0p90734zzg8sfx0vsguss2bajdp50mfex7t68ph42cpj1jk5rc5lbalg3b66g4coin83lfxox0qcd8ve2l4cjswfias07jufhd96l\",\n        \"comment\" : \"ly714z62o8aiazkp1uanluhphc4to3pa0ot17au0nghxoyjm0151ygrbm81k1jaq95exo7sbml1w6nfis920x1w94amgxv2bl4g5px988y7jw38ph255pa878edvzg6gsvefl50nefdvymbjfkmbqqy8t17hr11jyi\",\n        \"id\" : \"xk1s\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"vmc88eb81a0bhsatuoshp46a83ctxt1eu0g68qwaa7vpmii0x9su8h4k3sozclw5q28j0xckwt6swp1wsn49t7i06jm86v8kvqrwj3prka8gej7xp22yfm3314zw6jchlk1ex4bbvj3xgazkpddlv6okk2pncppjwqa7fhbq38i33l\",\n        \"comment\" : \"rni0g9mz33\",\n        \"id\" : \"znvx\"\n      } ]\n    },\n    \"name\" : \"Damaris Lehner Sr.\",\n    \"description\" : \"Ab vero vitae doloremque. Qui amet distinctio. Non ab sed dicta ipsa quas. Est dolore officiis qui quo.\",\n    \"etag\" : \"dolorem\",\n    \"updateTime\" : \"2022-03-27T11:44:35.683995Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"dqo9tghm5m2cl0i8w2z8v0hsnhcnxvlwu3ynz23nv6mto2c3sexokzxyky5eqh2\",\n      \"noteReference\" : \"1f9dxq9nibfyqezpmvo5dypl4v49xoj76qmv24se8uee4oyd2xpvufj51ghovi1fm42n8lvlimphfspe0sp1p134lo4sg9y2bxdc6cxo17djk4x0gd523ypkhittd26l3awb8swfxrtj6uaz6z3bfv5b7ax62vpac6ufob\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"2ecgwvknt6ay\",\n        \"comment\" : \"fyddiwci4bqw0z0oix61vqsrdu7xpcmfrna19mr45uavx4orwecpfuu15enwtctaji3h6m9rtcgffp1bqfdihflq63vhwulggbtdbuu6sxbvsti4455l6m14hiutz689ki7wxwj4vms8fd0bb3vi7kqsx1yna8oh3g678centti93x52aqoougpqiusw1vn5coq59\",\n        \"id\" : \"464v\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"5kd5w4spiwrudm6v5i2e47ri9uwezs27s0cyqg40pdlb278qhzgimkbbv0r2iwsgxgv1kpuoiara1tur4m1gza7baqiqlgzaw7eojbytfsvwxwkevf0q5n53x6ge4bvktyexzcmlu7zjvgtgnay6eyzb5o0pa62bzeumfyoxov9lm5l526126\",\n        \"comment\" : \"zpfpu2rdsw0dmju944ao1rz4fhwf2su214c4f3bbnphzb7hvnicjyhp47s7jqjx5nr1bcbcfizn29e060jm79ompfme36skv8y4nt5r2q2gbcx0fnl3ji7bzhv9uayfe6xnnfazs37i1gc05oqytlykay804oyn7nkgj5e1tl0z1mie\",\n        \"id\" : \"0h44\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"q3i4gtwy7w9mk02pbwmrd664jt45d40e9bgs0gt0r14s4xouxk3r13rp2lyaul9pa5e7642qmgu5zz35qd14ejtq6a2kcd2l9xm7mxr283paazeuz9s67h9pi74ck10stvtbtmve017yocl5zq8wd2e0baole\",\n        \"comment\" : \"89ihe76nwo16onxau96xgm9i04kr4smfune4ytkmwmasy33rvcapokrs4x6ar3rlzzznyp5g4z7n6dkoh7el9ex41b2gwtui7ifr9tp50nzx55xtkeievajk1r3t3na0t3pw47wac3mcanuyc63fve3tnkpmp5x5bextadphd3h\",\n        \"id\" : \"4q94\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"347osvautxjsk1yb60y7papea4n543h6f0x14d0u6h1xecee4q9g5vc5mfij7c22pw63th9d5haiy79kym171zskidu4a9wsz46803ltj6z4qlguar5vckgsaec0u45qfgkxtvclb8jfbmw3qaeiwkuoymoz7sojknd9oaefhmvz8av0mfsabt9srshpk1psv6w2km\",\n        \"comment\" : \"ce16q0v1eeczfxxiixjguonukesntmwa3m8iyycc5sowqgtdnr3t6kjo\",\n        \"id\" : \"5p3h\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"misrkhuqgkmqzse9f6snh0mqrpcc162175w0xkt1z2ytsjcr3d54v3565iid0zcbad06y0nskrcem7wpd0s819djasvu24mq0rvs49zsvnmw6clf16xl1t45nqn2t73z88uicpqcb14b8fj9wh\",\n        \"comment\" : \"fotm6f3aglfvfmhfc1khjf136tngixvkrsm6e4yat92k2ya9pv62ghbuulopj9sva515l8pwb0d9arfic3wcr034f2m8ksbyxz3cpjfom4o6n58awz7zkwkv8zu8n58eoe1p8686hqakdyi8q6zsfqf8ajgvx0rfit8uswshsqodxc40xbgaka6a\",\n        \"id\" : \"3151\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"7ua0evdvwz84viwh5hsr8qwffc8uxmbxz9xvuuilr2uvdaq99swt7znks3h44ce0slj0yyw9s70x6kzof94igfht1iwjwm6csh3m47wbm95pv0uerhtuxandpo9qrttye9i25tkz9cmow5u4qfnbjnfyltzuzassrms09jedq06ep46s3bmmekffo5f2as4n\",\n        \"comment\" : \"urzlxzf0dtcfy82ua2f0qtdhjm2yxqhk467gwdm3rona3x6161f6oh0drodqmkin6ivl37qimentkgw16vpbhzuwmnk02he6b4s8iav\",\n        \"id\" : \"c84y\"\n      } ]\n    },\n    \"name\" : \"Gerald Gibson\",\n    \"description\" : \"Molestiae nesciunt numquam qui sint dolores dolore doloribus. Cumque rerum ut. Non qui rem tempore explicabo aperiam.\",\n    \"etag\" : \"molestiae\",\n    \"updateTime\" : \"2022-05-25T11:26:35.684745Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"h8i6d08dndhb1xrytlsqq2mxantf65j4u\",\n      \"noteReference\" : \"68bmmupxpjlry2oivp78g7zftn7d3dtszf5\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"dxhh07bs5c9m78h9y1svfav1erm2wukqw2aaa044el2vvawgoaqw5lzvju129\",\n        \"comment\" : \"oth69fzjs6499zo2x1rqm0tma1j2yyqolu0tgixl9zijbcarppvr5e0ddldrqn3mu23lgkliykyvj6jvbl14s1nsq8bwc2ylm4xnbp898p7qqvwuqutc49v8zrouqv6\",\n        \"id\" : \"y48k\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"t62azq7sbrxb504il2h5a5pxu8ld5b15l80bvjpyd9uvb4mo7s9rxu8\",\n        \"comment\" : \"huu3mflizkem5lwpqxnty6airwg7qa3ngysb1a1ggzqigbwo9kzx0v7cuuy8od5m49xzzgsn7musodetgvdabwr5hv177fk5un9z4awqnx6n0biz1koi\",\n        \"id\" : \"id20\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"8ztth2rokox65aodgt05dlw8da4cfsl56ho1oht1o2qn5yjleb9dzl0s2f0j4br3vgw5jzopc6h9v6hlfbd3467pnqvewciqcix1fckkyun5b9q15hhzsjane\",\n        \"comment\" : \"cpttorbmuv9sjtmsyy487dgyux2fpjg4\",\n        \"id\" : \"e8ah\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"wtdhs1i6e7y6dimeivznhor0lv6emwqlz7gpi90uk9x6zr5yyra5zohg8giytji8fy9spvsgnkae32z8xsiv08gtjlmf7bvfi1cap26gjyyup8sd29hisf6gm5eqp3\",\n        \"comment\" : \"8r79uqnqsm6ael9fb3u326zazt2dgvgtny9pzo3u9jl5ddd6vg9owlu8fea88mf98hjcsmvn050ckpkkgz2alpu51n4wz49ih9rv8idi626vwqlgu1m5zzsad\",\n        \"id\" : \"si98\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"l2muzx4z755dhhxt314sxlem0txsi\",\n        \"comment\" : \"e7wymkkxwchx5i6lft8f3fgozkn8a210kdmit\",\n        \"id\" : \"as50\"\n      } ]\n    },\n    \"name\" : \"Delcie Ruecker DDS\",\n    \"description\" : \"Labore magni in. Quisquam et saepe quidem sed voluptatem. Vitae minima aliquid enim soluta voluptatem repudiandae debitis. Odit nostrum architecto maiores repellendus et. Earum illo repellat.\",\n    \"etag\" : \"repellat\",\n    \"updateTime\" : \"2022-11-22T14:07:35.685381Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"6n7khq81de\",\n      \"noteReference\" : \"mjrfz1iwb3uk6j68zc27yxxz9o9binwvznkwh6e2frk\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"seeylerranr7tzh0xxy2x1ao9ucj\",\n        \"comment\" : \"3ynuiyc4m5wk4uznjpv7heahmvyqvyawmhbxwykqrv4z3kn15k4acv6d011t81kojsykkdu2rvzost5ovqqoq\",\n        \"id\" : \"ew70\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"77xbxfxvwufq8jpgz560s7y1o9wxg6il0fja9to86vciacwy1dsmsipgvwp6ybe3phhftvw2bm2pcm2k15k4uc39coycajic5osj5hdc6su38ai0hsjqx8cg88yz92jsn9o0p7b60gb8sy4erkcb2xkuui1ncpb8qz4vsp6d7rxfl489r68lxlw3\",\n        \"comment\" : \"ufsnd4gxvew4ybpg0xlnmv2xdm6g0e7j45h7ittcndrzumgh6ku4axupkr1puy3psssyyswntm3qn0uhkvh5smi2elf33y499ww33gqke1z00xvy5mursnqhunfmi4uw79zaf361xi\",\n        \"id\" : \"b7ig\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"7vnathdb0vaw42q1i100yksg1lbmsc83soqa2h01nwpg8hbuzmhepmaqdkmafe1b3dfitse\",\n        \"comment\" : \"ruloq6tj5tftzaopool31j33gef794dbl18wuadi3hqi28icr9rkjr34nkzqrq1eslyia220yq9ig72mt990apxoc59wfravuxnqtb0bjpn5n4wbh2hw5igw92djt1j9dx2vuhzpdx19pb5mcexb2m1gaqenpisox549vovdpaj1wzg\",\n        \"id\" : \"wy63\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"0wf3qat60bwsrxixqakbqh44gymkuax4vgb7ha9ft8w4gwgm8tr0vira6safu8rk74iqlocmcdoctqbqujfzkbscf5c907v9ow7tr12st3oqk75lou7gkkhaxx2jeghguw34zz8\",\n        \"comment\" : \"wano9yn8m7eml1wwirasjemrdgdakrdw4ky64ztbrx5fy56ytqr7uqzr8sxtlue\",\n        \"id\" : \"zs35\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"f6ocbf4u5ygd3f0ep4mxcgvnkvs6kn48lx1gon3d17g59ov4k44zkbo3afqye2p82cujst67an6mvp7wsmkxhprgx2s4ydxl6y72sx6f2ccza00zlp3psr1c7a4s9gpct78h62voa\",\n        \"comment\" : \"l2riai9lybkghhsitq4a68ucwj0y3nkkrgnpf89svzmmyx3jrgr540rey64zsdg7ugyffo06y22siqsrxi17r7bdoth30e4moap0lh3512ti2c0mj0yuq3gfgcmxkywj\",\n        \"id\" : \"947x\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"d0bzbc3ns45ebtetq0ol6z17d69osoa72hmy00f02q6dwq90iwcfd4nl40jgu7e3a5hlxkpszxdmfckexm3\",\n        \"comment\" : \"t1w6l4wskuoayjfmzli922w3of67x94qj1clwefyhmqg9i6a2kcl9c1j9zdpin7etfp2v36lol789waq5a65xlnvzvx4qu5qtz819rte9wmmlabobl7n3kfb4k5z4ju4utswzdsh\",\n        \"id\" : \"929n\"\n      } ]\n    },\n    \"name\" : \"Gregory Fisher PhD\",\n    \"description\" : \"Et quia praesentium voluptatem dolorem nisi dolores est. Sed explicabo ad exercitationem atque cumque. Hic quia saepe voluptates autem iusto numquam. Voluptates animi sed beatae adipisci. Sapiente fug\",\n    \"etag\" : \"consequuntur\",\n    \"updateTime\" : \"2022-12-11T12:03:35.686117Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"w8o8k4iqvfh5pknty581ncpt9pq7wzlk06sqjbsingdaiirlr72yq6u89jl3jpf9fy17nle2uf6388wjom350cxihhtya9740xewcpqbh6gd8ewqq1ytpwd1n9sblexnotwhep27zclriglhktsrdo57r\",\n      \"noteReference\" : \"aebnjc3ujkjxrxduqcqmenth63la36rq1qaufvq6c85wg2h39k0mbmtgo1ixadzr6jng2joxnht8tvvelrcr0bc3yvvb22l22i4eruju6q4t1ec8124aemwreic04rvtn63zfd41nkt2958mp9fz93n7ui6bza2mr840dtbi0dcxdhzr9jy9c1m2kq4dghp4oft\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"qjnmgy41rzcwo32k80ytw451fozqanr8pxlub7vfq8yo11hqzluep99m8sbqwzj3a0llxs0vh7a2d0veqey11bceqw3isek7lc61mxemnpo4l4s62v2ijozr5cc8lk2\",\n        \"comment\" : \"8n8lvm7ktybip8b1x54p6oton3gs5yc7pgbsineb3ynnnen1\",\n        \"id\" : \"ul5w\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"jetkuirxgjlb4hydfwbce1xifv05klw1xx0uc1edw1igua31va84yysiaakbhnqi9jj5c9fcz3l0nu39bpzrqv3qqrvxntl3ak71qahbk866joluux56beu5uabcrovmpvwzuxpak2taqghw9lqz7q31u3qmzz20lqm\",\n        \"comment\" : \"2g4ngredmrb7354ltt2onw5u3riym1f1llvdlr4vvmilalu5eflx20gze94lf37719lmy16d1ikaub1it3s6mgxvce0x7ju099v74ob3sl397c5kn8xey4wtxa3hybshoonv2qcmsqr\",\n        \"id\" : \"3id1\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"xs1qei\",\n        \"comment\" : \"am9nmlirel97lan3krm4orej9s6\",\n        \"id\" : \"32hy\"\n      } ]\n    },\n    \"name\" : \"Claudette Braun\",\n    \"description\" : \"Exercitationem officiis culpa. Enim deleniti deleniti sed consequatur similique. Sunt eius perspiciatis aut recusandae unde quia nihil.\",\n    \"etag\" : \"dolores\",\n    \"updateTime\" : \"2023-01-22T10:29:35.686566Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"51zeqtw9myl7sj5ceob38v\",\n      \"noteReference\" : \"yua71p9od63evpuzyd8jyr4657xlg96rz0vj6nr34lbjzz40sxdxdltbc3sx\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ihtijr7ak85peo2txnb9mwwngq5\",\n        \"comment\" : \"1atxrk808fpztw7soum64qcb7s8m75ldcyl85054n3ujjaatns183t8haersowfigqryfqw1cadjvy5z9ifbpznqxfnr0f7ncwri6puvu9uvtwmowlx7y4jfr5vopafdp0g6y\",\n        \"id\" : \"9u2w\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ydysww14vln5c8nuwe\",\n        \"comment\" : \"c0qk7d80ft3gvok6wscmbu10xqow1gpwudg9lrs\",\n        \"id\" : \"z11u\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"axnx7a9uocjox7wkoxzyoovbjfi0n151kye10aahcgvw0kq3lxjahzicr4rzvzywxqwm6ce5qkveqrl3wude098fy87a35rynh21csmhgork8i1rh1sh6wvkoqhmi4jz4krdmuh03h8sdjp2sh84qak8x7pv1dl3qn7j1uh8vq87v82t9\",\n        \"comment\" : \"mtesk25h5w7v04dc36p8q5tvu6hs2zxjmf1ltm6chy1fdurvbcknr6xa5euura17bbxz9hmls82wvzpxieudrsfh0nkpnev06kzy8bqgd5p8ys1t59ou8e38w0q\",\n        \"id\" : \"w8x6\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"90tsiixe9nqnnpjuqsc7px05k5hkc77n2vgvt273hj2gok3g9j0eo6f1xllt73p19jezp46mdx3uw3t9laxsa64c0fnjroci6lbsm4rasygn9slo50u4gfqepk74b3b0rlqa9b2k0ycllhsu6ep00sm8bf9kwyni\",\n        \"comment\" : \"mvkaska4z2hl7p8jsawskvwul6zqew94mi38roq887fq8182s2lhoqwhv67liddz283ha6luvjm3bzgz5ny3r7j6cfkpxx\",\n        \"id\" : \"0vg6\"\n      } ]\n    },\n    \"name\" : \"Tracey Corkery\",\n    \"description\" : \"Et rerum beatae at sit. Est officia nostrum fuga fugit. Vel qui cupiditate. Porro aliquam aut expedita voluptates omnis sapiente sint.\",\n    \"etag\" : \"facilis\",\n    \"updateTime\" : \"2022-03-10T11:03:35.687087Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"lt3im5ascksa\",\n      \"noteReference\" : \"2rkc8hbcz3jjvrty1ms6pr8v8mg\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"1rce3f2edvvjqijm6akgylvgv6mnytgm8z37wdztmisgd4rut0b9hbv5nbb6am4qnyyx2s8zzinlblrdgkg0qh2n5m42s4fgcf9hm9eurmbfaomroly8f2w8lk4ilmhns5g9ekgmkic5xjqb5875un0yvb7cwpgundnx9k7xg62cpvvmfnmo2ombjt9kh95ed\",\n        \"comment\" : \"hhsd6cu6mrqjrl5onh14zx95ntixgd1w5rawv50zfnoc7e1ridpjql52s5q4x3o4jjpog9zo1l4n3cbe6a4aec49zyyhyt2kl0dbte8quqhmxfzvvlh2cce6ww2md61b70p81fhg4awj7z1ul1h5kzz\",\n        \"id\" : \"kd16\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"5rzvnj4mt8uj3gjovkjm42ytt1ot0pqtgv7umdbe36t69p8998qa8m05qqqnfzzhy8agg3p71rrk2c9wzh6md8rogwxr7gmw9oosk2ishwla\",\n        \"comment\" : \"hzl42yfy776ffcqyl0eof\",\n        \"id\" : \"9o2v\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"xr9suvbcbylemy2wlxnfwflv1qzfs5a5sbibdoixjxt79l1gy4xp04en84any1mdcpy5aqjqjzogbuyo5m7fw16h7vym2517nxjuynguh0yh5r85us1v1vpl4bk72wfjem318exynoorh78y4esc5wvmpviagby2q9pgo38xfa4gave\",\n        \"comment\" : \"rvvntfza8gk587agt20ujmqu30kr6s5m43zd11ynk343djjkhejmhigosrgrh8lshexli03c25z54x8j3wp3mddufi74s0npa38408rj1wo3ogv182flegrbywzk8oxwv7t2reknhd45fap1f5cwgx53\",\n        \"id\" : \"8749\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"49klu566343w01msd7vu86kh9f5nw2i09vjs8q0j4c0ylr1bmq6m7vvjo6azz378n7bd8syvlbnq1shsfx3ph4yr7rj8mhs2nvj3ysm8v7zk4so13asjww4kyps1ibezw99aqhvrlmxgf5db37fk\",\n        \"comment\" : \"c6dc8tqyy8tng7lapm4038thwk8cs5cxh7106ch3nyl1h6kayhgnlc8qfdmvvuyuiql4tyti57qxcx2clu9dwtueik3h1dt6xw41m0zg95zaud280bb8lrtscdlemu4yh6elfcyb7aogddqspx6qcbz1u0i50qwl1p39w0ojyjdrdef3awy6bw41dl4w9wd86sox4sj\",\n        \"id\" : \"womf\"\n      } ]\n    },\n    \"name\" : \"Ivan Gulgowski\",\n    \"description\" : \"Eum consequatur hic incidunt porro. Temporibus qui nobis hic dolor rerum amet amet. Eum distinctio ut possimus. Incidunt quo excepturi. Quia optio voluptas nesciunt.\",\n    \"etag\" : \"aliquam\",\n    \"updateTime\" : \"2022-04-26T13:32:35.687645Z\"\n  } ],\n  \"nextPageToken\" : \"xzuql4exe1f4r2b9lgr5jxlcawo9ry9a9ew0aydvl69le7um54y46co83y3t1q4wz1sqwn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e49a49d-b492-468e-b66d-6b136f5c610e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.687844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.list",
          "schema" : {
            "description" : "Response message for BinauthzManagementService.ListAttestors.",
            "properties" : {
              "attestors" : {
                "description" : "The list of attestors.",
                "items" : {
                  "$ref" : "#/components/schemas/Attestor"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results. Pass this value in the ListAttestorsRequest.page_token field in the subsequent call to the `ListAttestors` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a6f3d675-9b7c-4356-8369-dc7f0fcbf136",
    "name" : "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Suzanna+Huel",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"xlc991utcuo76uycioqwnih9vqcbc30o1liktrc1f2mka2907gy4dvedhhtm87xrbdnii760gpoxz293ndlhixm1824ew1i4n47dno5mloth2bs28rptdx5ls5x73tbnpmgc2kdr\",\n    \"noteReference\" : \"r97abbf1lvrbwp5\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"n999dwom2edcuy7ux5jvudd2r7tb5d8tode8v0q02mzo8b7mvlyc6cgovsu9gy3x1lknv0wq3tid59vvkbfnkkcg7p3ecz0si7uvung9t9isd7by2tjgledvd2kbap4z7y8v8au15g4ribm63q9cswbs3bcfu81itdvz8c0auc38uxux\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PKCS1_4096_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"jh6ylv8rj20e0d960iq2nke355cskrnlthtps62q7tgae897p\",\n      \"comment\" : \"eaf474ae71s0s8n985lcbo1j0hr25n11xzj4vo3stb6m31mlaas9avhr05ythreekd2rtigt0pzbhyyhj7zfp6g77dmyexneipa1qvhqw93lq20h10ausyihlec94wz0l7xqh2zukwv2r\",\n      \"id\" : \"rxj8\"\n    } ]\n  },\n  \"name\" : \"Asa Dare\",\n  \"description\" : \"Iste at voluptatem quae. Eos sit autem sapiente eius et. A esse ut.\",\n  \"etag\" : \"sed\",\n  \"updateTime\" : \"2022-08-26T12:49:35.682906Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6f3d675-9b7c-4356-8369-dc7f0fcbf136",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.683019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.update",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8cf395a4-96f3-4e97-9f25-f8e1562c7905",
    "name" : "Gets the current system policy in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/Mia+Quitzon",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clusterAdmissionRules\" : { },\n  \"kubernetesNamespaceAdmissionRules\" : { },\n  \"globalPolicyEvaluationMode\" : \"DISABLE\",\n  \"kubernetesServiceAccountAdmissionRules\" : { },\n  \"defaultAdmissionRule\" : {\n    \"enforcementMode\" : \"ENFORCEMENT_MODE_UNSPECIFIED\",\n    \"requireAttestationsBy\" : [ \"0ba57c4zsc8gr2jq7v0niuztlzxsjx5o1trefm8jdkqromylrsgkr6mjc1en\", \"pgg6z0h8zzcvcxvhhba5h6aw2x9te2zkacdetc2hsy3o1w1vhja92tdpjrj33qywy1ti2orrac1tujnvi6nap61emsafmpsd2b0xwijocjj9oni1df98nwujcmsihf029yazqlmdjgtfg3wbqofvy31fhnvaufnk4dipkihtjbzksok6osrzbokmwpthv53\", \"uzryceb2k6w2gx261ilf59bu0ebcb21ka046xcfse5825zkk89wdqyk989ibg7i7mne3ck9ptfdymlxy5xdzkrxsn0x39iswphfyp4mo45ewpj1n4mfopyagwdy440w3sl0mw6ltguk0g1lc4nkhnhwzc43ek3huvnd55g\", \"n5nu9scom4dw5yss8fhvk4yva128gfyv60b83sl20zjcvixd8xnmhat0sb9ts67v1ugwduha72kaee7df3dzk5hgbro\", \"pr1zplaxtzuh7cpmlx3yi0cckksay77x1d0zluhklnc15t1qb4f1sgi4izf8yf41a6q31fjem66m05fdfz1fpb61nrl2ymb2b0g4z4yrhkkp2tptuylz4cleg4puzty4tsekaytipd4t9zts7d6t3c1wpi1aj3sdvac99kt8f5cpz\", \"1iniwha1wj7r2c\", \"2s6erj0k7m5pkxfyjlm05rl7sfbguhc5ahb6q3twy2w5jmujv9sls7fgk6e0hp27\" ],\n    \"evaluationMode\" : \"REQUIRE_ATTESTATION\"\n  },\n  \"istioServiceIdentityAdmissionRules\" : { },\n  \"name\" : \"Silvia Bahringer\",\n  \"description\" : \"Rerum aut unde ratione nobis aut. Laudantium rem ullam est numquam ullam est laudantium. Et dignissimos et cum voluptatem. Porro saepe dignissimos harum ad facere.\",\n  \"etag\" : \"doloribus\",\n  \"updateTime\" : \"2023-01-06T13:37:35.682288Z\",\n  \"admissionWhitelistPatterns\" : [ {\n    \"namePattern\" : \"7mrqc3h1lgcjy6z7ed3tpv9xertgc2ats6i25mei0iyx0gnvbx3\"\n  }, {\n    \"namePattern\" : \"3qo1jnbeh5aa81zwjrj5xutx5uee2p39c25qqg9olo1mb7nkqzlhs8rdi7snl3wml8zixl8qle487v6yxo54wpcrmuy5mplmp0efk3b5ha6u48ili0j4jhbrk94rza21c1t6fhogql1btd5lt78b7amq48lriuz0aod7myqof2pafke\"\n  }, {\n    \"namePattern\" : \"dif\"\n  }, {\n    \"namePattern\" : \"700y3h5q2o0m8voycki4cxei3hccjpk0gbph18bvateyynkdfjk9glhbzi12aagslsb1hxo1nzh3fikesmy05cp33rawu7l465ls0rspxklhfrn5uvlm\"\n  }, {\n    \"namePattern\" : \"eb97o5b0t76p833xlfxgf4h0ytx5wwse9lg3ug9zy29r5b6c6w4bg0afq151ww642hozni5kfvbmphsfwsfcqy6rbx5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8cf395a4-96f3-4e97-9f25-f8e1562c7905",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.682566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.systempolicy.getPolicy",
          "schema" : {
            "description" : "A policy for Binary Authorization.",
            "properties" : {
              "admissionWhitelistPatterns" : {
                "description" : "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies.",
                "items" : {
                  "$ref" : "#/components/schemas/AdmissionWhitelistPattern"
                },
                "type" : "array"
              },
              "clusterAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-cluster admission rules. Cluster spec format: `location.clusterId`. There can be at most one admission rule per cluster spec. A `location` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For `clusterId` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters.",
                "type" : "object"
              },
              "defaultAdmissionRule" : {
                "$ref" : "#/components/schemas/AdmissionRule"
              },
              "description" : {
                "description" : "Optional. A descriptive comment.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the policy has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "globalPolicyEvaluationMode" : {
                "description" : "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy.",
                "enum" : [ "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED", "ENABLE", "DISABLE" ],
                "type" : "string"
              },
              "istioServiceIdentityAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-istio-service-identity admission rules. Istio service identity spec format: `spiffe:///ns//sa/` or `/ns//sa/` e.g. `spiffe://example.com/ns/test-ns/sa/default`",
                "type" : "object"
              },
              "kubernetesNamespaceAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: `[a-z.-]+`, e.g. `some-namespace`",
                "type" : "object"
              },
              "kubernetesServiceAccountAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-service-account admission rules. Service account spec format: `namespace:serviceaccount`. e.g. `test-ns:default`",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name, in the format `projects/*/policy`. There is at most one policy per project.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the policy was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "113e280f-8469-4258-a8a7-c9304726f5d6",
    "name" : "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Donny+Jones",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "113e280f-8469-4258-a8a7-c9304726f5d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.682015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c4aebfc3-d947-4f06-a181-09ff682c8fef",
    "name" : "Returns whether the given Attestation for the given image URI was signed by the ...",
    "request" : {
      "urlPath" : "/v1beta1/oo179sihlxq0crqa9gs4joauabworwroyc27hu14deahaozsowhd516j0v70vuqr94o1mvksjpitmcuwfn1q3ulva6iuwqi6dxqv96g1:validateAttestationOccurrence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"VERIFIED\",\n  \"denialReason\" : \"3ygiumvui515jpus5s1volwkt2pm0x8istq8vr30ju4xasr4d0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4aebfc3-d947-4f06-a181-09ff682c8fef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.681905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.validateAttestationOccurrence",
          "schema" : {
            "description" : "Response message for ValidationHelperV1.ValidateAttestationOccurrence.",
            "properties" : {
              "denialReason" : {
                "description" : "The reason for denial if the Attestation couldn't be validated.",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the Attestation validation.",
                "enum" : [ "RESULT_UNSPECIFIED", "VERIFIED", "ATTESTATION_NOT_VERIFIABLE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}