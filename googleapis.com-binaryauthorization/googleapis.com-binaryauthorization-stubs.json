{
  "mappings" : [ {
    "id" : "3d9f74ee-565f-37ed-933c-fe08bbed43e8",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/c5wsusq0bawqje4nsilxcd34k:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"04o2wh1f6yg9jjl6rhbc1ciwcj997\", \"8mtn6fkxm8be2zwdozxbep54eaae1zjimokaep8ta4350lqqbstx7vfsa0xxymtq3llo0dh9ub24eyt34ssvgqsp1odq96qt5f50dbfoc40\", \"gqsmzl60pzlweatjcd5tmjuqj8312xzpsx08pdh2s13s5hx45zeq028sssi2a9fsqw6p58rin8s43jtay4a0jd2d63locegvnjlsk0fttk3amk437y294k\", \"6902\", \"3naz7jw9gxgpudqd7z3dh5ajwmmdu838yqbtn9sim1kknsyanj\", \"84lrt9pex8feed21jrp3m25ifoondpc8doppg6du3w6efdibntmthbxohyhadrwueik4oypv5pttggi2qpgya7m51fv2h1yzblf59810tqwbs64qub0kj3en5y4e8o0n0qpgqjdh9\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d9f74ee-565f-37ed-933c-fe08bbed43e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "60794e25-6048-360b-99e1-0aa5653ccb20",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/sp7um59yk00d48e81g48ysz6ug7qyyhvyf3vt67xbuxdtta8fhq436217vwcpzfu68lp03priuqmu03wrjtkugv21vpdep70uo27rilk96mc5xfog1cm6w8dy84im6tj9xxm1d48w2k1b8zoizwvz8pwpb4j5zo1na6qr29bg5fqfgjwp6bmmmk49npfu:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"wysz1e9a69qqy9pcf13q750zn68hnt4d1k1d545n2o6l3z0a0obl0nmewkluhlhj8d21vweztu4nfbgl60e\",\n      \"description\" : \"Inventore debitis harum. Illum fugiat et deleniti ipsa vitae adipisci. Aperiam possimus sed non est et quia.\",\n      \"location\" : \"snuodh7paygi1kf3tywt8ggac21sqckn0kjo6tttwsts02bl0yxcs1o7hsr4htuna6esqgxcqo468gll3te9dzc4jbxepl5ce25npfvhy2i22\",\n      \"title\" : \"Error possimus molestias aut ipsa.\"\n    },\n    \"role\" : \"vv1c4nhymfvqtascijyh7rbbhqljt5gujxhqp\",\n    \"members\" : [ \"gpqkp8fpec11h8jgg6p6hzkseu4gyrc92qas2wljsm9scyavdk6880hjftz6dl5xh60xw3vzkzrugmy8a9e9tdslr5igexpx8vno14w1b4wpgnj0ur5avj14ov\", \"uxpszcjom5x0v16watpo39bahzjb0bgbkoyv9i2pdn4f9e4a53hifoj\", \"h9zhyskekvjl6u6vx38vg5945t0lni77no93u0tlpqgpgzgu1d08si0f46zf1u8mua1h3qv0fl6hrzewqlg463iuqie3e3icgh1c47jple6ng29m\", \"q35x0alodjdfrty1n8ldof4rugsbtam109uottzjdxuetcz1c3ycafobr05h\", \"s9mnpa0qgb6\", \"fna9ru7hv5qnfpygl5zn7h7emx4bez0331a41u5sfhz1f7scmmhzqygiqoyw5bkdf23jx937gcvhqynnloe6owc65\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8m8rnccgsm4uzwvggchyqxm1vyrhfm\",\n      \"description\" : \"Minus quia et aliquam ea. Veniam eius quaerat velit eligendi labore. Quis excepturi sit. Illo doloremque aut suscipit quibusdam culpa. Quae sed voluptate at qui id.\",\n      \"location\" : \"8ss\",\n      \"title\" : \"Tempore recusandae architecto.\"\n    },\n    \"role\" : \"jmwtx4g078cmzboxvvulm\",\n    \"members\" : [ \"3t4dr621631xla7uyntbof4r9dvgswygb75bnvv033kl0sm7gflby3765vjbz19ivu0i8m49d1jsd8feaqli3nptkmi6nqd0l7ummsr61yqhw8m81duzrymacdrlzp1y9dred3ol6p9veu444kkguuj7xld8vta14xnk\", \"ikf4otefbjql45v4ns6s6da09xsb8cx9972k85fbjuxavg7waqcel6mtuyi8uys8caotygvyiy48mmmnk6jjwrjn7lu8u61wlo8q2t6n3yivfg6i9nqxq0psxngru64q0u724gwiez8ybcto2yh94m0yz4foug163r87wxlkowy7\", \"d6se48x5xzdt5q3ybx7j6nq80le4uxcu3kvi5mdyaoozco3jp5qc7ixa0g9gyw546r5ueynm1nk53la3jksfqo4iksb0d88wiwa4jwc5nwouztc4nfa9yene9g3vr9vzsu3c8of8o0lb8oaxwd3cxw67m8u7h7s3odc\", \"t4t17ark1a5vc86c9o6rn51gjnmgt3lr7gjqeq48xnbb6p21owom38sj8ehe08kxlgrx8h3lwl030t938d7qg3ge75td2glz4cc3x9kyf83ybcrylsxmiq73v155icutm8w6h1vs2oi1xbh7227a1ys3o13n871rb8l08mx6oxz27laqfhwupz8hw0p9gip46ns\", \"kczig6cv5ybsvkr049zcso6zjb6aqlp1ssfdtvvf6nyik7xhg8w8gew5fuii3hrns8u2i1d449tujocs1djfb1v97jxwgmf3orl58x7s6b0179k8t7vys8d3eeym5svb0hbdur1h65vj1p8offo18qcsggd9h71agb53wbqafnvcdkda2jyzbdxq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"poz8k2rgfbu9ojpgu3q99glzq8nktrg3uwljmt4l193toxvmd6hw9uscveu3vjefx237zvqq7ph42dgxe8iraiu3zxdfczjjwhxqty5ch4dygljiot6214f8h0f8g\",\n      \"description\" : \"Vero molestiae itaque repudiandae ex praesentium. Vitae molestiae asperiores at. Officiis et reiciendis ea cumque mollitia.\",\n      \"location\" : \"o4g2rx5ned9fa8upgqp1nr82cmn52r8y2nbp6755pijcq0boa4imxo\",\n      \"title\" : \"Sit dignissimos consequatur atque voluptatem sed minima.\"\n    },\n    \"role\" : \"qgaoemrbtu4itifz0100ibjbz6kqoju7z5tp71veavrl2sc8bpwzonony6d2qt9g6nwnq4rk1l6b33id75ihe5zkbt8ia18akdqeguutceuuzu6invqptkxyp8hio\",\n    \"members\" : [ \"tusv73fh00vsm6s1u1v62q09r5y5kgaz0c7wdaoeeaskiv4ccgq971ki43btbyr4qlr2eag6bzsu7lxg\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"zpeovjzzk4e8f3ebn89m1egiypddiga31e3jjmq3spngviv4iwkf048hurijfki063kju9pnek1ljwdvj4kubeazmhqs9tpakexi3m6gx6572g2oumgr3r4w\",\n      \"description\" : \"Nemo ut suscipit eius voluptatem quasi. Et corporis reprehenderit et est. Sunt temporibus sit ad iusto rerum. Optio omnis qui voluptas. Dolorem alias laudantium.\",\n      \"location\" : \"hya897fbfkdph3ll39jhvznl9738fvqeoy2jofbownwo493u0g8idp06lo4vl6p54\",\n      \"title\" : \"Ut blanditiis qui qui similique impedit aut.\"\n    },\n    \"role\" : \"tgiug9tnyhtlflazropygdx88c0frcyp3s8etn34xh0n2fcy0y9kb1w89y9x501u7ez3gvng2t960oll4ag6zptez5vzg04x0nbqp880xhsgu4w1w2hmica2tfs5x0cnf7c90iu4r9g0m6levvie67m3wed82cfgcq92pipsfpmahigsel\",\n    \"members\" : [ \"27vemz58u22f34tq9l72cunw8c8ymukssnqh9jscjb87tfxiu8nq4vv2ehskh2wh5tu3kmfs3zrbelmfn64rj9lply\", \"ofv7jb943j8lhmkrxcwudo0hplgg3fxg3lkir7zo0h7h444gxv8x8cmk3m335nt6wfwmdi2zsvbzfusd0ehzj8jxzrd1y9v77akezctug0v7i8ij8j17051ijg58scl39azs3ykg36o58b0tlulvl4xyh84mo65chq22yibd5ux1vyszd5r\", \"zruj4nmr22zzv4s5c4211ptiqafv7g0oxlwqwy1yc0tno10r4z29yrf88sofl1s8s5x0\", \"j2xvw91fv23qbsnfs30ibvwf4ibx3ha7wzupo6nsusjjajj997e5assd5v3g74ariq7tro7ki5r8p16w6da4btxcbcxvrdslyefkfppbqsksqpw2af7ja9eodtbx\", \"8zsb8xm5mbdag7z82d1kx9guvbea2li568bxlvd20u5ysff4sz3mvr24m9j137klh8mo8z2bdc4hvte9iut34t\", \"3rosq9ekqc81e7kou55j5do1foaft692pl7kvzra2yyrybauapv91ccs6ulmseqj1sqy3o6yp7ud\", \"dl2szkh9d6ugc1ladngd5wevwhhrlc91nz3\", \"o5bmijhes\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ahhpljrhdr5tj7kp8qzebb181ubiefoqhswl8ecvi3csav1bgga4so\",\n      \"description\" : \"Eum sed aperiam. Et sit voluptatum et dolorem quae porro sit. Ratione quis sed maiores.\",\n      \"location\" : \"ngps7jg41pc6sttqwnxp93lexd7fu21d4xk55vwcqg4ou6q2n91lkmvn3ei23iby6h736p10y3068n6710jq5ylfh5o4bpmvdfwdnox9nmplvt19m\",\n      \"title\" : \"Sequi fugit pariatur maiores dicta aut deleniti.\"\n    },\n    \"role\" : \"1d759nr0e5vbmlbf28zu2d5k9rcj6aqa22xeewra0yb9aixa4fhcsotghxyc030yicli6lv1n6nbvgn8gh970omzs39gtjfiqz0mui\",\n    \"members\" : [ \"16v4v99357ai3twyf73qlkq61m0mdd5y6pioujj8g504btfsofiokvo9jqlecijnpkd1hv76dn8s5j5xiiqddk3v1kd3yir1ezwv5q69qqt2oubozmk9lzfw5ywfjhwvcmrapigulfsehn8us45obos656a040fx14qz6ikkbv30bpq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"6doo8pk1up4hhx28rp5moawwpd3e74sjig0iaq73cgedednelve2kta1ews4855mwuc4uhq01eydzz5gjmasoowjbase6pvgjf1c88b8csw6zjiesr\",\n      \"description\" : \"Fugit fugit dolorem aperiam. Repellat voluptatem voluptate esse accusantium molestias quidem veritatis. Omnis laudantium incidunt asperiores exercitationem. In quia necessitatibus et et dolores.\",\n      \"location\" : \"11jr62kyefznwfs2w4dkd2ohjgi1uef8xf3n19sxfbfet3xcizev83hrekbqo7y3ukur2mzqekeexnu9bjnl4k6hyzt231enconnxs8qrmonwd7dnd543ppo6td1bhl1cpzzi1\",\n      \"title\" : \"Fuga dolorem corrupti suscipit eius sit aut ullam.\"\n    },\n    \"role\" : \"rqxqcebuqs0ldv6r2r3k5vilkip58ja3408uvsaoz5zcvd63a426mk32sozoezgsrpzp3pm0bz\",\n    \"members\" : [ \"38fcxtwd1ark9rrjp6cm7scyraoglbhqk2r7xlw7hh69chs8j3t9tfw7qh6it5oakmxkuc1flp5hd8k52ol9mn3wv6iqg6o46pdbzzzmc5z8orx9peid9l5yx5fq7hkcfkg9ehuhyc43h70yja39fpy98v14yioml9tdcb2p7wttzbdmu2\", \"gmxp9re3wriu4eidm6e8ioh9xqpd4ymqtiv2qlk7nbgb55g4hrdpnr73pimezny0xs40b2gpt1y6ccsei7dle2d13n6bb1f2z37z2wtgbloyxemmnua3d1quywv82johcsieqxcwp09gtebgk17sf4fmzaykizqsnvwqv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"wzzdo5uewdwdl4agcssbiw5s071hfuvu386mg03363oq2f3gigqqykzsa6i6sxe320l8xnj25faok7tvbrvrtf33b29e9s4qy10imb0vt30n914n6jxvel2gc6ntqm2na7ecx7xrb6bn8kx2gessfsmxc0wrb7vdmgo2trmiv3aotpngd1esr\",\n      \"description\" : \"Repudiandae et sint aliquid nobis voluptatem ipsam asperiores. Est delectus aut. Nesciunt eum iste.\",\n      \"location\" : \"kv8hpmschbhx1ztjvm988v7lelztokicecf8jcfbtfdpcwnxnzgusfv7nthsvonxpf7utr\",\n      \"title\" : \"Sed molestias aspernatur doloremque non.\"\n    },\n    \"role\" : \"4diedwg99wkwuiwfxxgc3q8bqoehpzlixaa95k5l20g1so42w4h1chd0ckx1nppu11hpgjk8vwcq2fkg6g8uwlz2p587alm71acrc\",\n    \"members\" : [ \"qiyzm2jjcxqs1c9bb85qoa4h43jv1mxgddzveblppsvh8f\", \"cb9od4mvmnpqncdm8mvaku\", \"cjndxmddwci0fepqfzrnvg4296w8dgx3vlv9xf8gvapzssh2i1xpxr1fd0j6r5yazbiir5v87g09gk3qvsmmhisktg757eyzfp49l146coeq12f87epnlbjwtxks8ybobcgt95xve6kdlu9etq87zjphsck\", \"htr06x9mkvnwvqqss5q6x24i1k1s1tg3dzaaq3nx8s0j76skmj8tls45epwkjqgwnh8zr9f4biu19gtyifflsgtl9hxfvmorg8\" ]\n  } ],\n  \"etag\" : \"pariatur\",\n  \"version\" : 1917838649\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60794e25-6048-360b-99e1-0aa5653ccb20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b51f3c40-238e-3ff5-851c-3a15ecf724d7",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/ooqrufqr4gjoyz2y3u86ohoiolsyxcdy10t2cyxefvssf9n3svv4sv948q4am7ydm0dx3cpmtq4tq5hfim2pgrsyy55pgo2bu331dvgvcqa4cwolteoh8w1vbeuw33hdm57qk90hc9zgthwdmkynzghb61kj7ankcno2hec8chnt9edz0nb0z5eawrjx8:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"o7450cb1fn4o09bbji6yzleyd0yelhw59wwjfslxw1qcj5m6eaofhs2fys1uyknabgpl9i46ymixu4db4i1s97c0jiom1dcw2ubtvnu0f6dpa4emeupgiz8u4h7ino5rahbetj4tpxazrq3tqz5j5b6zd5rrv886g3gku1nziy57sptulrgqu0hvz6f8nl2uubqczdln\",\n      \"description\" : \"Illum dolor ipsa et voluptate eum voluptas. Sit aliquam exercitationem. Tempore ea esse ad quia ratione at doloribus. Itaque dolorem incidunt inventore sit delectus.\",\n      \"location\" : \"9cy3i5sfnyafu8173alin04l41qab44vrlwdy2toycs1yd3n6vl9u6ogjgj5lef65wltcixze2smt5oz8dsnh5041h6pv2gamyinx1voebsebq1hqo5acilc940i2oqkn7jbsnnscgphxqlvnnr8vrmxgs1sj99v8u00llq654nruvds\",\n      \"title\" : \"Ut aperiam est incidunt.\"\n    },\n    \"role\" : \"0ut00xcfl4f8lhy3uym4e0psagsmkg55bpyddfgs\",\n    \"members\" : [ \"fbmaeo09tal\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"izty8s2dv2628uksxf0tfwg39r73we4qgss7gj5hlwg6p0nq7n4freqdr3ap99urixyils8qc35on97cm9qcpgep8pz5ih4w39k72gua8yfefhbobsstays35uvl2xc4t8oaslpr6hde9o81y94qaok4w9wiuj7bf7g2a07c4l0g8aub4r9fclyijzczt6clhlwrt5x5\",\n      \"description\" : \"Beatae omnis sit perspiciatis excepturi non et. Dicta in perspiciatis. Debitis et voluptas est rerum hic.\",\n      \"location\" : \"z26ksf1qmzvrnsyxl86bkjqgdz0l66j9krbt6is9pirezktnxuy3tz71hvle4wn93fa580w0z02zkpfltl670dzaz1fxylzydewiiecl8agwzji799qfj0ech57pr4ah9skmlgilpxmkjpjc6\",\n      \"title\" : \"Voluptate officia totam rerum voluptatem sunt deserunt.\"\n    },\n    \"role\" : \"p087wsw2zbpqirzhn8tlzsc7q14adxxqv92plz3j\",\n    \"members\" : [ \"tr0206qctdu6r7b4qkpsx8ifa4x88e320oh4l8452vo9ngnhfsdbkhhy6gfe6oij0te13paf12kosp90n7gzzn0t1n96xw98d68sspui231e0md82stvmiha8ar3kj3ij09qhs9zt9nkji7n4r80k5ln00vjzjlbiqjfdh2lmc7q0izlx1ux9abvbm\", \"e0rd7we0omii8rh9vfrnaln7fxhfyuig1fm4b80twyxi8vqf1d0e4u4c7dnorst2pthpso5furkg6dk36db0d2tt5gl4fill03s65t433cws5882nas\", \"ar0g6byjracbxn9afan5op1nbcx8unveso0sae1jfqqz5guuwy58fhcn652t1kcssz5i0y0wqhq9gjo30qpi61i4hsfiaiyttiq5wfqv80tye16dnos7sxjspdkzf5s9of4pitc3z7l\", \"vts7xqylc1iwn96ppmp9aebybnt3mstml73vacjb4kaall8rbvt3\", \"xotop2znx376nya90oozyaekrud9jv5er5rq0e660wxkbn2ymacwdmgrm0y44wehye5nlxte4ve6ed52bv7ags99uka9drztagobsaln7bvfjqtfrnfgjntmho2k0kjhe\", \"1csg0iep28p2tey1j4vqxs0gj4woorfocttm9sj0dnamwennhsrjbmglic6phuhbz5hod0pl7mwaf9rrphxvm00aqm6pouqm84up91z4yxj2zngr5wlf2xmokfxr1b\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"mvch6ga4wwfvit4r6ycsmi5lkjswakqplcx2rlgxb4zy9gq1v3040m8d0w5e5pw3xaato9s29zf0whs3gjf44ym70mx2a8q2mtbbc6eiho37t29xf37ke2xm5g0vbzegphn4llq\",\n      \"description\" : \"Alias illo harum ullam iusto excepturi et. Unde aperiam id. Ut consectetur soluta non quis. Tempore et dolores vero corrupti molestias est tempore.\",\n      \"location\" : \"as9l6nyj0v6tpp1tq6jes45akbrl1kud3iyuif\",\n      \"title\" : \"Rerum ipsum repellat qui.\"\n    },\n    \"role\" : \"d9je1j63pno6sh0f88epkkbagt9z5t4s\",\n    \"members\" : [ \"jboks3w4xnd365x47o8dh1jsg2elnlvcqunmv2go1seah6zjql0qkedq9t9glgytlpfwf\", \"qhro54fyeo3xxmesscrcq2n8s3h0hlymxr462hdumo4flvjssqxtw1gnh1jzaf5sq6mjq0sq5k8h1fr\", \"94tc95tong1jbizd4fcl0h419ix45noye5w6ov7ztafdolqop0fewvidpdukdc1fwwg3j724gz4d58\", \"avj8lkkwcvhuhzyw4hcekwm2f2gkordfwd6v91g4fh34d8q01qq7spmphducqr8lcv1tkflipwd6yna8yteryx9jh7mpu7rzbrkmq3y6kzdsi6ke8d132l2trcqdwwy7tb\" ]\n  } ],\n  \"etag\" : \"eeeet\",\n  \"version\" : 793841731\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b51f3c40-238e-3ff5-851c-3a15ecf724d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "866b6bda-67b8-3e6b-9806-2deddc49b073",
    "name" : "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND i...",
    "request" : {
      "urlPath" : "/v1beta1/pzxhr61pu02l4is0xfsb8zkpekxstf9jwk8jj8xdbcnao29a75g7z7f54jdzzxk5dhhhbftpz2zrmontpin8hixz6968dsaqcukjnn5u5x9do0fdy1rblsp7uy0g9egadk50c4i2ae3c0af6v7u471zxuzyjlc1lbr854yrb/attestors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"iorp1maoxnbghvlptxmy4wdgj9e7082jurzlpqay2ekji9jdsejc0almxi30zd1z4yl6qsjxiuwv3ltq65rwe0jmsqwvlewy7i4muugw9wccmc51vv7tqcr4o6ayevzt0fy27ip7b7ii6s3ox73010il42x32okrv\",\n    \"noteReference\" : \"w86viv7gk6b2rgivfde28zv2ra8dds0rkier59tcdoxu86b4vu3v6sglvwhqy54gar49d2cf8raea5ui3pcz5qls74nlze3m675etyn5nlz4ig2fc46t46495y71z0irouchjq41pkyy84xv5swmtv7asekejiatdt6e8qtc22acvkac2xys8awsdoz0a\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"18sjbbhk6u2eu0diavugvvr1b40mg9qnutgnk1ic3h6nsgstxa5xkt0lgomlxt8jjbrti446asy36htvyw9paq0uhcpo45qwhd9hwvbqelqy30tgmf2x55gyybmbdo86bzy6hzgkn7db1tr8sx310zqz1h970snp2ep1541giawfe4bboelgpwkn9rl\",\n        \"signatureAlgorithm\" : \"ECDSA_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"tj01vrxaycpxklhw6de47s9239e8stu7lmqxlndussbhce9tqd6l8qrl3cy\",\n      \"comment\" : \"eiwxsrhjtfjbeh6ypcgri1b4zaxd33cvhg8anzp5ro7r7vd0x1p9eb5ljbrh65fu7kv6vq8hirbgptopvkys5pp5216eshkmlksie92ztrfwowc4y6pxmtbezas21wnyexhg588rpqfcwbo76fguhzmmu3vg\",\n      \"id\" : \"n61o\"\n    } ]\n  },\n  \"name\" : \"Erasmo Ankunding\",\n  \"description\" : \"Magnam ipsum ea quaerat quos. Iste ab fugiat sunt. Consequatur laudantium et at. Officiis quaerat et et et aut qui enim.\",\n  \"etag\" : \"iusto\",\n  \"updateTime\" : \"2022-11-02T16:50:07.613925Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "866b6bda-67b8-3e6b-9806-2deddc49b073",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.create",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "3a4167b8-86dd-38e7-85d0-4ed8f3c8026f",
    "name" : "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/un294ark2b44vcfv07l8ebx7b0ennswqb8qr9ij7j4min6560ajntp21ejtvfw9tox7oy6eyaqrc4tb6ojgy8k09pwbwxyw66u0byqggyc9y99x5d8nzpebjk0av1gi95u715ahq06lk1tztq0uk3241evggc1vi4qn6ru3ywa3x2bmp1/attestors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestors\" : [ {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"2q7tq5p8h3lu0p1fy78x4lfv9crigp5pq76pyim13gh9ubpqdmfd3d1w9cd2nfxwp0r6123vuq7xyizadirsiqy0nt\",\n      \"noteReference\" : \"rypd42jd35\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"jqau2le45qv1rvf4d6j1o5b1z4fhwjoeowweris2m9tw5zrgxdaoa771j5isn7emgj20rrzc6tjd68oduezmhrd952nw0tb4rvnveqthushsr0iij25y1b5gzu4buxn5f43ysx8pho4d01x7s0xq2d3s3uf3z7e0ehzvgv6hbhg7hed5d5q8vgndce4qx8omrv34jkl\",\n        \"comment\" : \"gc4xhpm671zhzxg2joegod8i5w6z46io9gd5jf\",\n        \"id\" : \"2t8y\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"n5j9uw2avkei43pfaf5fm484ke80bhd969o3lmn1nkvnvs550zpmv50ceyi3sxotgu08dqv0\",\n        \"comment\" : \"oyyomg4v9g5gs9n5680wr12fw31erdceti\",\n        \"id\" : \"yh3y\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"3nngpjsvos2s6e6tl6basue0vkwd9z7wsvqpozc59mghbj448zw2paz3jxjlhm2jad5ukwau436fym0zec29xoluubpr8iwe0hjo193a8j1rznlxqkui8xuf8yywvx1w3bipv3hw2xt7uh7rtl8d2lm8yhq9f39f3j4rq9ahpje\",\n        \"comment\" : \"u9cgtgxucae4fam3zljeiafzwtzpqva5rm\",\n        \"id\" : \"nh02\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"5f5rhgk8pga1umlw1jetkktyeevu5l2t1mtcuaew35xyp4c32f95zexamzdvmpzu9p0fsi5ld3w198niidpsklaw9n2xvf6apzyfig225p4zngcbgpyqgvh4axpknq4hl5jpoc4imc4szvp9fyll3quvnhbcjp1rpqkxwa97c7cbk\",\n        \"comment\" : \"198icsc7icvmzp6ggka44j7pr4ifh2ni2wguwa1woh42jf7445mjbfzrgasgt8rpa05qf4pkd9crnum71q1wq47disidugzhclb5kd6axruk3ecux9jji76\",\n        \"id\" : \"76pq\"\n      } ]\n    },\n    \"name\" : \"Kristyn Parker\",\n    \"description\" : \"Aut nemo hic sit ipsam dolores modi. Magni nostrum ex nulla facilis consectetur aspernatur est. Deserunt nihil corporis consequatur.\",\n    \"etag\" : \"aliquam\",\n    \"updateTime\" : \"2022-06-28T14:37:07.611113Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"lzj44u5t1qo0xa6dp1c93kil4fyvjhwp9cz2196zcsifh9jsmjpmbq4qldmospaxmlrwa26o973f4vr273fa7wr7r9awm62eoxgiqu9iwuwwmgn08lqbb2jwwsw7gcghv9840n38pqoq6wkd7w923k46y2spwjk50wn6fr43hv0597896p\",\n      \"noteReference\" : \"3wm7ylpwo5p3yz5teynppzxf2zqmr23mn864fn97npwz0a01fvcj1ruqr3gilep9666orqx79h10jwmw5ksayvnxkh4th2f1wvyobraxcpimespygapvx21ngpw2gw06l46ed6cte2xvlvtf8m9ld97ih7vlx2kjk4uxoqe8wyx\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"o02rvifjfq6lqmlcymr1vnw1n8tcmvwnulhlkqysakar4aaf586rbe2hn30k0w5n0a84wl8bgj72i2wy9tmwrymxls24v81uv4rgmjaiqlcn8qzathww5jz7wirbomg4x7hdgpdkjjdi1ajn277ivqj\",\n        \"comment\" : \"7wfxvqohk4ubi429ydbgnqcwbfdgp5lbl8pyzcbi05eyxxqiu74\",\n        \"id\" : \"1y3k\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"y33asxmr43j5afou2jqefs7tnnk0pbfo5icueehcisc1vbddty04eda29m0bciql5ydjr3b87q4tdpucl4ic6neypqk1d35ikzsabkqqij9mynt6cavpy0efeh4anf11h6sqlxr29itg26vnv7fcf25k0x5a762po2xt\",\n        \"comment\" : \"zqjh6ex73gqwl82vcxu7p686rcnk0zponqth46yg7jit5deagirzl5yxl4nmxvjhb\",\n        \"id\" : \"0y7s\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"x6snpm95dqljuv7ryapr5kn861c1o1cx06cjo2zsm2uvrbi9glfin68876f71a3zrpg7f3x3xd356e281uyd8ksj8dwiq\",\n        \"comment\" : \"3a26tk69nuvl00r4rnp3ym1y5ugdk569p553qa3eztshtw934r1yfqazhb8zyjzgpsqozhlgah3x7mtz8246dailjj84g63yrzx5slnlbiij2q2ko33shg3rce23y0qcejuhd2hnm5v9qgly77iowd7ebtk1ifxgf4otmoopx9r43txqmetq5luga0rlhufodtxab\",\n        \"id\" : \"p0hs\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"uzcqcjvwshh5jdshl4mbdi2dfv8otrokhtv6i45nd0zhb0cwes3brm1mcigleu1b5dybbgk03z4bkjpbjg7fqanv19k9beoeb77y16e6cls4ddcsywidm774zm4aacya9yi5dnk6fmaajrng915fpo8184d0gzznlgiim2a8p\",\n        \"comment\" : \"xqpduic0xmg3oca0cgj1xe4sone9d30zfh9pq8gzcv2qt9hw2bfdarn0u5qv2d7vh4nqcov2ogknkk962zh\",\n        \"id\" : \"0718\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"q8dbs6thskz5uyjlf1awn3j59e8mt6qprf25ejcozeakvxfdcuuaprtkd8rkhb6fi3rgjcjjp62mosrh2qsnikajfjxpw9k7czbsrrm8z0vll4h60wkfl3swm993xfe1s\",\n        \"comment\" : \"2dufhnplg1wlavbhwh4j2hurziqbli2fatebkeme4zxw46kd3vchjm647p18vdipgmn1ptihbcxku24np4rlxsm6bo3krridolhoccbuycsl4jupoddzvw2gwgyiw4fiqp0imri1ft4q15ja72rjaqlhvdp720hwiupc76v78p78\",\n        \"id\" : \"5u22\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"kl13hsuzxcy2xyunvo95ph7drw7cbkr7fiyulp14ja7xwzitkds94ie92y95ozm2zcsokbm16xedo7ee3sakzqa970yyrx4lqb3\",\n        \"comment\" : \"j91vcbzsv8bhblk47bqte3par01ji8k3mak9xmfe1cx75idfl8dwvpkvkkpzae2ucff6nd9zcpgu515v464t8fj163zm34tbx5pvbda777z9gasjhf66k2pir5oa99dv9um352cgzua518a0a2op\",\n        \"id\" : \"jjr8\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"boqrbdd9dv8pkfpeqo63f0n9u6lcq20wck4n8x1x0j190fv3pe1sh5zr7j7k8yejtw1h1k6j8shee0ywd\",\n        \"comment\" : \"j6icr09nttfdgg0kx0sobv6geaegryly5h43bmfimbttjpy8epgit5jihvcr6fldilkxc5dp3f5k7r9jglgkbz2ah3e7dw0ueaoc36ue8\",\n        \"id\" : \"f50n\"\n      } ]\n    },\n    \"name\" : \"Mrs. Gwendolyn Ruecker\",\n    \"description\" : \"Dignissimos sed officiis iure. Maxime culpa ut unde eaque labore rem. Adipisci quisquam totam quia provident ut. Odit vero laboriosam esse eum.\",\n    \"etag\" : \"dolores\",\n    \"updateTime\" : \"2022-06-08T15:51:07.61198Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"w2tvmqkilkjtafb2baqqbl23dzg1wwc96bv6f3p4b0umh1rb74ed9753tu9at2kb11l38zggml\",\n      \"noteReference\" : \"qdwzmvirum0hcirhhite1jzzcdal0nhnw4b5wgj0mmc8pp5p4edjrz8nr2inoekfp2mbqxghltpjo06enasu0tqm3wpkb2lmsvtc288aswwbxjsoznpmjnli5slkj0pold6xu6vve95bcla6j8dsqmtt9s02\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"l7rrybuqbi3tyh03k9zupd7czmxvdpt1ly3wtw0t6gbia442ft4d34girbshksklko4raql5mh13kg34text338mp2aay7cal4ipu1v78yxkvfqx07eap812fmdk0advpri6s2n7bfohtknjmdq4nhtaoo1tye09hljmz7pngg5mkj3tbrmfbcut\",\n        \"comment\" : \"u9rrulpyv72a6gjumfv09rkal42siedi2ye2otvle8qepiehvat1thwhnc7epbsa448a3vr1ssywybee09wlwz3o30ag1lj25opmrjfymauv2b6hmnw3i6y541kyewn25it4k92hvnqoby3bxp1cf406\",\n        \"id\" : \"97v1\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"8oly\",\n        \"comment\" : \"yppaubmm9fhcpzn3aouj0uklahjjhfclem8x1r7sz00xrojelcr3bmvrq6wlpo87xvy2tburx7sqby5ctfnoyw7vzfkeu86b\",\n        \"id\" : \"v3f8\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"dph9z3hosi6idbns37hlvk1jijzv5y0r46iyu58hy5dmdtqlw1pmfyc8chnjc0e69nrgtko4xmg88ggqgemylj6hye9w8uk2hw1baolo6g2c7a8ei1gen3f6byh1vsaf2qbkiggroflj2ditn325ah0cztj34qdpf4zb61jk3cfdtu27iy503ykd3cilmb7wxm2vw\",\n        \"comment\" : \"uo0qbswczifib5buso1f4afa049kjy6y7x52q6s4gaglw2zwh7jpwngqfwumwehtcnykrfj6q36rlqa9brgrraev9uykyo6eox3va7wm1udj9jxtv7q87l8kd5xck04jlpwkzng4cexaww0hw8qqbtelg5jc46wmcnszbx\",\n        \"id\" : \"73hk\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"x6w24036sn5d3k62hempfpvlqe4g7cswdcvl7eddh7d39ry10cmpvevy3nk4djguro\",\n        \"comment\" : \"vse1coi0t9z27gzvxdofuoz8jdvur3thfvczi0hpm9hnu3a356ktn\",\n        \"id\" : \"x797\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"8pxvnggjysdri1vnwiu76ka64en09xh1644ztkxwuiz1zk1775d0efbe370b7cexuzgy4vvsachiyjpj1sk1ds3347fgkhq6057qjq2n0umbnybjk1gumnytxkbeh83q0mhdvxuw\",\n        \"comment\" : \"9tm2c5kb2evupavd3jckd2i8gnysdryc4gzb0r98b0hpm3c11ma5j8nqjk1ls7wjww7o9qn0ipzeg9i5op6wg0u1jqv1mxs49rk9ogdaamuf4dqsbwgcg2kg9ywl\",\n        \"id\" : \"a872\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"b3v25mhgddh06tsfhc6ahh9kd7fc75k4vyeglx4z4laliwrltqtqolei03bejcmlnfhfxwvts0ksoc8k33d0qckgntv3kbe2om4d6kylmtasoamas5zoox1vtv1voxueqej08bqo9x9\",\n        \"comment\" : \"y9um9a1v235oyoocq3y8jnmq8ssevtahq256knjbqdb932a0wpx5ligfdgtoywytvkxik9ik0992e94m6i0o21w5l94u1ot5m\",\n        \"id\" : \"db60\"\n      } ]\n    },\n    \"name\" : \"Cherly Bayer\",\n    \"description\" : \"Perferendis voluptas magni sit consequatur qui exercitationem animi. Occaecati et ipsum qui facere. Laboriosam consequatur facilis qui architecto quia suscipit.\",\n    \"etag\" : \"placeat\",\n    \"updateTime\" : \"2022-05-20T15:23:07.612745Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"8wv71lndlufkjun5yvqec31jf50mv9k43p9mazvymhxv4jxcq3r3nnwrtofw9llrn6yn0zkeulninnqjefuxofc8zjm4du3og9b75xsd782062ayia2ky8lh1bu653ymbtwxegpzr1um3\",\n      \"noteReference\" : \"whptcm0eos93020j5ej4fxxitg1out1m4ww7tz4c7wiapq71savhsx5a337l87qayaatcmqchsmm8aijmv4dh4vr5lv8yp03loaj8bwqthannchgjnti6smgkm0z2ph2x6d\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"7z5yudi59xwy3riivouybws52pk1v4vaw3hwljlgxzeyfqpqrv4ix7uczxulemeaam3iuwjpkhcfjl8ivnvrqqs0w3s0qtau51scpubwxg11d6jdj676o2ski4t2nxtxdgrmqvv\",\n        \"comment\" : \"vml2ab9zklvy9ttmyt0ecs6crpht1wezutn05xfbsfotx4z5x8kp8mtqbukfvxyr6xr1ywo8y4rw9hlsczo14uo89c5giqmhgrotqiy88jtctjdpb5jz1g23rqh82tzwdieelhya09h0rxwm6\",\n        \"id\" : \"342o\"\n      } ]\n    },\n    \"name\" : \"Dr. Rosario Botsford\",\n    \"description\" : \"Quia et expedita nulla aut. Amet error amet sint nobis laboriosam nihil doloremque. Facere dolor blanditiis eveniet ipsam ducimus.\",\n    \"etag\" : \"quas\",\n    \"updateTime\" : \"2022-09-01T15:18:07.613005Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"074lbskexxgmvp6vji9mavhpxeb62ll5b31hpbf8jglmuijzl2jsolb29hj5jcq9t3men0wxitd0usuv6wa6mhk7st4cazo294cxo1y4fwwdxk7i1k6na908\",\n      \"noteReference\" : \"jvl9f2xp916zf5m8vin6rc79b2byuy8gkvyz5dpms4mszwun\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"pykmqko540cybnt4vbeuiin02b1sjhrwqbzcrb4x5v4n14iczh351phmorofsit2ozuas2pdxnw1b56lpg42x1j6i2ie498731bjdowp25ldqbdvubf932gskmaz6ik0v7g1d6xztcmhpsubijyay\",\n        \"comment\" : \"rfq227qhfanf0329639o5xf4bldnbelx5233t4n9phci206sd58smhw3a586zdzw1ckbaxbrp0h37i\",\n        \"id\" : \"n86n\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"lpdzv2mpls0v96jp0zu24key2785xmmfhaxxhgkx0fl648xtrua8vc9twy7ygh91ykrjigtwl3iu9pm5cf4zax9wafz28heolh054imk1ra758sl9l9cgy3nsb0xl2hl1usrouhvf0aw\",\n        \"comment\" : \"uexodx8qabcl1rui0s4zcxnbfwj1fa2hl9nrna3lkafzutea7bf20km122raf4vjdd303w9fpk28t1eucuyxo4jh1888rh2ftzyp881yjwbcj8dc8rs7fmo78eru3dv3y5ytqtvcf28lvhk6bg7stmdfe1ukrjtlktdt9hdi9en11mu6d4i1uz70w0b3gcdijepnl00\",\n        \"id\" : \"167b\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"gmtcverm8yqh9s2vkq4dmkx6u8vemou22vkf6g44ac\",\n        \"comment\" : \"4b1z05o18e5eu9rcy6tvkn4seriqa\",\n        \"id\" : \"53qg\"\n      } ]\n    },\n    \"name\" : \"Tania Roob\",\n    \"description\" : \"Aliquam qui natus. Quia id consectetur corporis eum. Repellendus eius quasi quam architecto rerum facilis.\",\n    \"etag\" : \"ipsam\",\n    \"updateTime\" : \"2022-07-05T15:50:07.613455Z\"\n  } ],\n  \"nextPageToken\" : \"5kw5nw58wp277vhfasr6z2tu5v9aukgpas61u2sooqhffxpar6wsqe64a50aqqe9dewu6gwxy6qssoydrdf1345r6zudecjnv2m7ffsiesf6819vmn0nkkjmqv33idsfiwr8cqsprith27p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a4167b8-86dd-38e7-85d0-4ed8f3c8026f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.list",
          "schema" : {
            "description" : "Response message for BinauthzManagementService.ListAttestors.",
            "properties" : {
              "attestors" : {
                "description" : "The list of attestors.",
                "items" : {
                  "$ref" : "#/components/schemas/Attestor"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results. Pass this value in the ListAttestorsRequest.page_token field in the subsequent call to the `ListAttestors` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "26059297-776f-32fb-a511-3baae17b9ae6",
    "name" : "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Arlen+Cremin",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"bkonqiqt43dse4u038u7ox23l5gl55o0f7rn9nvd5i07badj\",\n    \"noteReference\" : \"5wqrguh3wfz84okhw6c3l3ybkc9b\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"qwy78vt7mtvvh8b0zc3y0djen0y8z5k7t0za3jren\",\n        \"signatureAlgorithm\" : \"ECDSA_P521_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"m6q3c7wuz2nyjbbmqnwuahanbwzabarj3u0417w1b8t7rlj6645qtythh1uubxlm36cjjpcj3dh71awdr901caqks2w7bpy6y0sp7tvkrfbb1mt090zhma1jm6n6wdxwk6ygcxirzjntgvfyguhdfw1n9val2hvb1tlh\",\n      \"comment\" : \"rece601fdqsd3h4pfappqb6apnthamfylh63skfak4d3d7md9kanlk2bomyr84ms8ukw80afp8cf8m4tqqmg6ogtvx3h6lgns1ti4l1nn4rn5fc1lrbzaip41qq1byelna3ryeo2men5dx1wb\",\n      \"id\" : \"12d2\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"9ng9wh8at2k5hdrybwjj2j1ipcmspj6lv\",\n        \"signatureAlgorithm\" : \"ECDSA_P256_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"vdw2oc6h75797o5eyyz3zy191h9ao11k236z5p4uj303jfbdckcqs4pj3xyjqq0hf7imrur24mzg0mjpi0oakcgxuj55zxbkzyh71ar9zp7cfilwkci92i5pvoatcidggd22h6f2t0d0zuxy2ezdzx6hweklp6ju8i\",\n      \"comment\" : \"dmz462pcri19j9jve2pkow4ow909rbk0l4rj8yfe7n8derxj1k8gi846lm57c27s0fulbu6gi5owzz6b9odawi89h28qmcimepxzo3fy3ksg75m92635urk6qhxwkif0b7g4vtf7nkoplgp3g2udnqbhu3t4w4d4cmho\",\n      \"id\" : \"r47j\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"lf47dbtpox8sjk8asvyslc2b4vol4pimjsidb04347q43keuyh624h85gqgbq8a4cu4h5h5ewnyylu2j0slp1r9l9pwjbm29h14vamj1cn38far94m6rs81gpt7737i51zfjn3y4ksh81eftlztxs6f9zmm5aoyd46khcwiwxdhohrpyf8n33jlsvngjz\",\n        \"signatureAlgorithm\" : \"SIGNATURE_ALGORITHM_UNSPECIFIED\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"jbgmpb1slav5gag6640yx7xwc1tqvis20i\",\n      \"comment\" : \"5lpagwaiy8f561uf9mfrsbq5l8fcedjss8r0bhtls0yc9uoyaet57rml1wfx63apxf3\",\n      \"id\" : \"g364\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"gv40us3koco66seq42pxefsexxwox5ojsvbrcx175vl468v56uubnn7ln4up7h5r102cp3lrs3soqucue5ij4omnkc3hyyj6y2rk07cck691d61ghvop3cyg0z4hqrzhbd35as6uhfmw4tid5ocdmzy7v\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_3072_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"33t851p5dp001r58dhw5tkog2iub40o7b0mx555qjfqwlztr5ny9squvofnk64z7b4j07u7wxlvsi0sx610q535hhy9bflrnbqm71g7ohiu8lk2\",\n      \"comment\" : \"r9jy5zdk0fsr3jbkmj3pvzs3ba2hko3iia2hwvmu5bq2b1dnw3nisxf2vj7a5nec8zgtm9dtwlwzi4uiwuwq3e6a232kgv5ovch7y3tqksheq1t7jy1iyu0u0m7y5e1o7ecudqxqiwm5\",\n      \"id\" : \"l0vc\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"tfnli7atzee4e6sr04wn021luf6w4vy9rdr8lknbzmwouaj8s2wfdt8c0a3msso1rfom680hje4xwh13toylm402yjrqlvpwlqpgvncbyh6uslwjye3kdkpqbwrh9wrpuov\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P384_SHA384\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"2z97hx2nq8lxf7e3nxks6kg7q4wno3j8kjuvyuc65fvfa8yv6403leyfbd2cl8045i9z8bo9g55f6n5sefodivhdee4w1mrad7b8tlf\",\n      \"comment\" : \"08rro4b2t47576g3jn24pk5cn2ahb1zz0lngugjo8c26occta6449d4dv5myo3g87b40luj8z50fj89vio1wl0dmubqj26hfty7lm8ybatgj4fb87luobvgfa17mnqc32m2hgkl09zaen49xpoesm1ce83gqaduhmiry7q4s3ayfh7fdfbdon3ug0c8nsx\",\n      \"id\" : \"d175\"\n    } ]\n  },\n  \"name\" : \"Alba Walker\",\n  \"description\" : \"Voluptates sunt voluptate sit sapiente corrupti debitis quibusdam. Suscipit eaque omnis quae. Qui atque omnis sit velit praesentium. Accusamus expedita sapiente eaque quaerat aut nemo rerum. Veritatis\",\n  \"etag\" : \"sed\",\n  \"updateTime\" : \"2023-01-01T16:48:07.610395Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26059297-776f-32fb-a511-3baae17b9ae6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.update",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "156f53fb-3492-3e1a-ae84-d8b6ac7f5274",
    "name" : "Gets the current system policy in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/Herman+Waelchi",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clusterAdmissionRules\" : { },\n  \"kubernetesNamespaceAdmissionRules\" : { },\n  \"globalPolicyEvaluationMode\" : \"DISABLE\",\n  \"kubernetesServiceAccountAdmissionRules\" : { },\n  \"defaultAdmissionRule\" : {\n    \"enforcementMode\" : \"ENFORCEMENT_MODE_UNSPECIFIED\",\n    \"requireAttestationsBy\" : [ \"7fw2hw5rf6nhdkj34n0vk6vr9x00f90hualjpu0v9rymr8j24qo5xt31rqs77by6kxxlf3o18lgc7pcmx2jemhsj3xx9tgwnhg1mfck3bigkfv3gbf2e6cwrae2fwrk31lwtl5pjnk3tpxitnel4u0unoin53p78pu40txl73zd3nwfz0i34zqadb8uune2d5au\", \"ey0forfr829gzrit3c4cndz64zn7gnrjxe8gomb8a8ogci0bq1ionfm7qqyikt7t2pc1s0yeka5kusmmuyiyyiuppbp4bdce\" ],\n    \"evaluationMode\" : \"REQUIRE_ATTESTATION\"\n  },\n  \"istioServiceIdentityAdmissionRules\" : { },\n  \"name\" : \"Ressie Ankunding\",\n  \"description\" : \"Et quia officiis possimus rerum quo labore. Placeat incidunt sint. Quo quia beatae. Enim voluptas eos asperiores vel explicabo maiores. Alias architecto distinctio officiis.\",\n  \"etag\" : \"provident\",\n  \"updateTime\" : \"2022-03-28T14:08:07.609284Z\",\n  \"admissionWhitelistPatterns\" : [ {\n    \"namePattern\" : \"70r3xai96ibdm6lw5y08feoe43qbuwewvcb5rnzvrlf332rvzquego8zbdx6fsed4qwg42e0199dad22vxvu8z7tptn9kozsw7fizdug4yxduch5cmn8h6xcu02b0vgcwwe956o4s\"\n  }, {\n    \"namePattern\" : \"pwgko3hh0kffs48yhiks894g627dilgxzks6secvc3vhel4wmcedaond4r7n9eybw0ujp2wo13oau4knnxzdzas7wg750c633aot3kr49e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "156f53fb-3492-3e1a-ae84-d8b6ac7f5274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.systempolicy.getPolicy",
          "schema" : {
            "description" : "A policy for Binary Authorization.",
            "properties" : {
              "admissionWhitelistPatterns" : {
                "description" : "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies.",
                "items" : {
                  "$ref" : "#/components/schemas/AdmissionWhitelistPattern"
                },
                "type" : "array"
              },
              "clusterAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-cluster admission rules. Cluster spec format: `location.clusterId`. There can be at most one admission rule per cluster spec. A `location` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For `clusterId` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters.",
                "type" : "object"
              },
              "defaultAdmissionRule" : {
                "$ref" : "#/components/schemas/AdmissionRule"
              },
              "description" : {
                "description" : "Optional. A descriptive comment.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the policy has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "globalPolicyEvaluationMode" : {
                "description" : "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy.",
                "enum" : [ "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED", "ENABLE", "DISABLE" ],
                "type" : "string"
              },
              "istioServiceIdentityAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-istio-service-identity admission rules. Istio service identity spec format: `spiffe:///ns//sa/` or `/ns//sa/` e.g. `spiffe://example.com/ns/test-ns/sa/default`",
                "type" : "object"
              },
              "kubernetesNamespaceAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: `[a-z.-]+`, e.g. `some-namespace`",
                "type" : "object"
              },
              "kubernetesServiceAccountAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-service-account admission rules. Service account spec format: `namespace:serviceaccount`. e.g. `test-ns:default`",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name, in the format `projects/*/policy`. There is at most one policy per project.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the policy was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ef42dcb7-0381-3706-990c-0f71cf80dd49",
    "name" : "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Randal+Effertz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef42dcb7-0381-3706-990c-0f71cf80dd49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "97dcf4ce-dff0-3dea-a1e3-c2dc5ca1c22e",
    "name" : "Returns whether the given Attestation for the given image URI was signed by the ...",
    "request" : {
      "urlPath" : "/v1beta1/jf2ozf5ibzeyykfrlr2pnlhzh22xetxeh7g88zbl97m13ala2ud1981i6jcoyx6eeyqa0b7pnefkqa521tnm9eszy0xrglbmrelm5gr51k69xig393w2bebnsfygxcgmf8k49sx1ccmq9co92xvabwg98eul96503fkv9l3i6vc5dvzx9b1mw9tajei3rjufaglxdi3:validateAttestationOccurrence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"RESULT_UNSPECIFIED\",\n  \"denialReason\" : \"my12gtv32gzkubgmpllehp7651glmgaa6bi3jhhszl9sf1tpvpqhshlwh3uo3to3rfosnm9zyxdnitd6sdy8lvsgf35ks5nwhx0rfcr6uqceyckdbqudy1y0l85vl6oa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97dcf4ce-dff0-3dea-a1e3-c2dc5ca1c22e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.validateAttestationOccurrence",
          "schema" : {
            "description" : "Response message for ValidationHelperV1.ValidateAttestationOccurrence.",
            "properties" : {
              "denialReason" : {
                "description" : "The reason for denial if the Attestation couldn't be validated.",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the Attestation validation.",
                "enum" : [ "RESULT_UNSPECIFIED", "VERIFIED", "ATTESTATION_NOT_VERIFIABLE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  } ]
}