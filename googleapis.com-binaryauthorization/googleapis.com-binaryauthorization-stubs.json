{
  "mappings" : [ {
    "id" : "9da31807-aa59-468e-b879-0de91aa556b3",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/l0blv2bylzw3kjyeqeol8je1reuq63i9bnqxf5h7sa:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"tp2enc57sg6p52wofzgmz3u3xli1wx1wwlq77hpxipf8nhdcxyjiowa338mpcb26eslwe31psvs3ejjwrywwel0s619keem82\", \"opv892fgtdzktj3unykajrsb0pvgijldcy2dv4wdm18pkww38wd1jelnuuk6eh\", \"552op16am0asoi3z01k6nrv22hgma1uvv6k27asyw6stqqdix3phzucevsfmxkio4qlonsihoylnkc4lolyug1clybovazmnijg8ldpnp221ha5t1j\", \"q809sghvyq93bj02dpxjkxkzhekm4ftwtl\", \"w8jht8wye0ar43mir6jz6li7j9hr3po37pgewnrnlysehqrpht6zwo12k50xwtnt1v1u6ceyh2klffib0s43lnayj2zdt9tc2qovsa1zl4vuwzopg8926x0usa6xj265pqk24xgz80bjw54u9c92q6bjnixbdzh84b2vi9qqo1ii6a0f2zx\", \"vornk1yjk9ofkv67x6y7zewvbbqzigcc\", \"uo2ljwmypyw6lay6n6nrrt11mbgxsdkh0k8uidpcvt5zs2d16arxyiauqcswm\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9da31807-aa59-468e-b879-0de91aa556b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.197055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d5083d48-9501-4aef-ae45-5416c17988fc",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/0u2672i1fretn64l77mxygn283b50dppph3tl76cnqp9fql3kszej8y1v0jz47zkwdkld3d06bc3tt94e11q288njqthdv94a70det01wrmqu7nfhdc0x8e09txu2s0wy2iy8g9g7hlzsbfd9k3l7xnpdwb8rav423gone7g9i3:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"mths1816ayzdr5wvgj514501oah18ma5c\",\n      \"description\" : \"Explicabo corrupti minima. Delectus voluptates aut quia necessitatibus aut. Et sit molestiae. Voluptates et qui amet officiis.\",\n      \"location\" : \"cfuswljpyaqekwa60izs5imj3pirda9dt\",\n      \"title\" : \"Voluptate et laboriosam iure perferendis earum suscipit est.\"\n    },\n    \"role\" : \"ql9nlpt41jbpd4027vrsgwaveulzxtjh7l55hwqjusl3ia1ytgr08g28dyonuulhbo115j8ocs1dpl5w58h51ei\",\n    \"members\" : [ \"mzvmeazn1dqibg6ynoxxkliwclv9w60gj3imd7d69crhqomibqivm0cfycvxu2c5el\", \"45eh2rtudsrtq6ca4nvn86y4k0kmop7dg46nt9y7xf5bir4ej4g9sns1nrf25ju849yb4f3pxo0rag684ppoeje1xv3w1p1m7nnl7qe3lfljbbfvyd3yed2it\", \"0h1vd9c472u8x2t7g2au18zke4uzsqmfexc6u8e55i0jlsooj0jpox6jtqs5ubq0nf5d7o0ay69v3fa\", \"0ulzet2fvl\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"4i9kxg2btegdykreg2fehddl59vop2f7sb1m8c30pcqqf9bglkwzp6mdomsdb2ajszjivcla4z0ugkinc9ucdy72lpcb79uqnk62ddpog0asblwbsvqb913ko7aca07wt9kl\",\n      \"description\" : \"Nostrum dolorem voluptate aut aliquid. Consequatur est vero voluptatum ut rerum error et. Dolorem sed nesciunt. Dolorem quod dolor maiores laudantium autem mollitia. Labore ut sunt ut et.\",\n      \"location\" : \"nj38lsuwrp\",\n      \"title\" : \"Eius temporibus ratione et voluptas deserunt.\"\n    },\n    \"role\" : \"scbr4gvxeomhbexhu990nzrpn8ewoqyspubcywnlmgdgue36w7bjweedjt5q9125htj4t0munri3n5hkq1bdpaejkbhszq71bf5fkqleex47z93n90aztj4fr6jzplv0ngvedbeemas4zkyj83ksbp2x03uyyxqamqh\",\n    \"members\" : [ \"fih3jyhd3dto80qhz4q0v1nm8j6tieu0gz5ufbjifyakwdzb3uqe0hq2098vn7x37znglaoladn9zs1sulrysky1vlw0pein8jsftz\", \"21mexnmzmkiz3dr2i0eytxgxbtpcd64etvczf\", \"wlknzpnwv02hra95g9oain61lh8866ciq4hp5eu1l5ykqdy6idejeyccjiztv9kotpaugszz8b4nrxq2yd\", \"28p2f9c47gam9kego40f9l56z1b862tapcbyltllj3umx8owz1aexprjdi21jarv\", \"708rqeop408giaa6i65y0aoz9snfg0y8szqufz5a4ieszl1wzilgfe32qxpc8r56xx6zc585agrraqot1\", \"vc3utvdbhn2hdu02dsp0rlm7enqb6gb6cpzzuexqdvi2b6r5n3qz29tgfzc47wxqgbu0v07r10y7j0arq1znaq5ewb7a73\", \"6l9k2nuht38pwit6898zp95ydld2l97thdre0zr22uw853jfjytouzu2bwq7qc2wa5kst51yqy9t2l39ji8043u7ne88g1z125hfg3jdmgvnf7jjf5k7akv1shuholcpk3ej7sxnlcl8gl9qcamyqej1a3hmii38glmw8db571zy4fc\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dyovrod6imd7drup75slnnqvq3jo3kzd1snb0egkmggm1gcv51llsli0618m39d3g34a96p860l09hs703vi5g6\",\n      \"description\" : \"Earum repellendus maiores molestias amet autem. Sunt voluptas debitis adipisci repellat quia vero. Rerum qui ea et inventore nihil est odit.\",\n      \"location\" : \"4ne30la9hd7fc2r3zhuy0dnkjwz7wiy8fb6ff66vx9h9na02zjyvap3y8yv3d8tsfkkji1b5ord0z7n3wzzyrsphls12xntjgtoelpgftlpww30woqfb96inz5vk19f003edo2l1luvda11fnfgqay5zeeb0rnxal1m8z8n0rk4ea8swyf82lqnl5ez091u\",\n      \"title\" : \"Veritatis voluptatum facere.\"\n    },\n    \"role\" : \"aa9xnepxud4e8f94vxxomcbmw1axjgs3c7ngtukms5bn4me8ytfi1edr\",\n    \"members\" : [ \"p0kggso39ie82m3wi1lrk6myhe4l1x2sgwn72wafelxh1w26p3f9hax3\", \"s4qc13f8lv66gn9hcv5q1gmvl1lqlvct4aas3t4ftlkumb870r7a185x8cgzymks1o7ud8h9fjcygs0eeowji25gquvyhbtoqdx7ane7bqqtlr15nuw50y69c3irbw53w2bzuetg0hro3yxtzyu831hk920e2rg8qanq5ohg3hdfxj\", \"ei0db9oml7cylcwy30fl5ncft51cxmknam5bw9xzl1wgx9iwc3gsc67lfq2xh4gqadq56kbsj1\", \"hnssre0870hj6pys2rjpktxxzryx344dbl9aemdxk73psd72uv1urcn9a2hmetu8in03i8hh7b4pq0vr983gif2lyw21n0ydvw2g8lg3ko2leucs0vdlga7624wrv34ndi21zc6vw5qa8sws63hbe9gnu70wljxywi5ytdsiqba0qwdvrto0wpm1vx28sdnfknzvs4\", \"mo1oc5upnev76cihtj8wlroc38nwxbfnb8u8baedzm68ik4zymiqprrvt9nm2c4frwsx0lt\", \"epo6u9iwosjsycekarcvjhcf5dsy3m1yl81j20md6pssxpxh30dqtjkl76gl0\", \"ghuwgte2wta7pipb638u24ryqkavlxudh9gmbxhvhwf8sd0vy350vf245xhat0sjxel2rvhbgbs5ioxnrzyo4m4jz31eyc1bdl3eywhunc5i8m0w37vweucsk9qph5u29js43ju57xg31zg6gyouc5rmogg1hfnbo5bablowwnmoxoe0gha5q9c\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"98r9fn87j56pao0txou46e3n57hba2gj9ziwuje93tbqnkcs0oe71rei3khkqum84zosiupsv7zxeq618arx3k3mq9rmyopy6h9dbeqwy542csm0xtop00xsiv3fy6k46lsq94htt0s4z4xhm379c9hlthlfeesupef59ghksax4pv6xbwi7w2lad0587io\",\n      \"description\" : \"Omnis nesciunt quia autem deleniti officiis necessitatibus. Eius rerum quia cum hic aut ab nulla. Necessitatibus in est qui mollitia debitis beatae nisi. Vel minus atque repellat omnis optio id nam.\",\n      \"location\" : \"idh5gvc2v7jw12nipikvrny4rl3eiwgs6qpqgiudli0j72l7i0kird55n29n1c9jw6qbpoe1tuirtfvau8ijhdoldmbwoslnb6riqf9etupd5u9g2xfc9fc170stuiqoh6otb6eq3w1afyyki5970gk9e14qgwsdoyxesmbu4ym09nrriuiiq31kqm871q\",\n      \"title\" : \"Ut nostrum aut.\"\n    },\n    \"role\" : \"mw85umyznlgsnof5vztukmbt64e12wbyy3cj7uoyyfb8nm2zox5039tao20rqahj069ngp7ro5x75xv9t9d34m15opzp63z\",\n    \"members\" : [ \"hviixq4oud2s1ok54nich0ciqb00p109gorpyefqmd99ywseltd4lbx4n6lk55aeig9nfkmaqtpa6v2va0edv1oqygijnvh3ng7hy8qvt934c4i2spigts1kz8xp4pyxvmg2luez8uxy5gfsym7l9\", \"g0ls7hb4lbzp85nclyx2hqiw52r52ojrfu9972k5uf8pgksikaqhkp76rztgjtjah\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2id3strjodrg4jkoq1jo52587qsuaavkx8swv7r42tdvnb6u63xu2uz79k0vfbel4vunv5hb4d4tafoow69wbqqn6nroxz3nu2dkp29k45z6of14wlnpwolb9skq05lb43bba\",\n      \"description\" : \"Corporis similique quasi ea nostrum sed earum. Ea vel iure aliquid. Et minima beatae doloremque consequatur harum debitis. Sint sed facilis.\",\n      \"location\" : \"eyfu1n8yptf606ejrir48kr69uhra29\",\n      \"title\" : \"Vel quia eos saepe est consequatur ab.\"\n    },\n    \"role\" : \"zf6nnkdx2fo8t0ocmd55t69gki7l3gy9pkl6ucvt37vw06663kucvr3ezqinmplb1mdnkrbi60u6nvjdwprcxoej40xnnodw8gf6wfhwxeroybzipo3kt6h7n6105gqmpdz383tik4n9tgjds9c8i44x2z2emt17tex\",\n    \"members\" : [ \"472c5j5u2fafvwyap03vp2szgko588ydsg7s11kb4pj9wphosmmoeqkuhnlc1bl35zpjcyrz13\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"pknmaiyoy30myo6zt1jzdbwt49he7gydojfmrxhylafwccgqat7wvn12qhix2ytzrxe4dmi9zfu15nxw4u0gqjnef6uli9926dmcy6p4v9zl5bd5vib0h9hv6kkx3i6ikzhtgmbon1t7sr0a908kpvf080mjaqps5014xwkr42f8zvzisuv\",\n      \"description\" : \"Placeat illo nisi inventore animi recusandae. Voluptatem eligendi asperiores voluptatem repellendus quidem aliquam. Vero hic est. Labore aliquid et quas.\",\n      \"location\" : \"8p6bbvbav3pah9fb39lhg1s6cm5xe89y1smraluisr40j5pnvl9vdyocoxs3mufmme3j2yehtvlsvltbyzcb1o6hw80x2cbvft506lsj41\",\n      \"title\" : \"Inventore veritatis deleniti illum qui error voluptate non.\"\n    },\n    \"role\" : \"63kflk5e5ojts5deazp3opmge0xeb4pmv8deg173eeupsr5fhk3bdagea528q5u7pjpugmuvt8imbjbt2ezg9dxso8u51pxmf8y2x1xl14nosk2aejpc03wnqf9how4auj22u7gaa49vi362lcl15vhnwgjpfvrct32zhmgdha\",\n    \"members\" : [ \"agsrfhfzokl1u8ljrg6xmz4gcv21s3av29ckbrb8tu43f5059wixu40vpgorqffyi11sj46d33l6fqcfpdhqnconucm7a2mgv9qfyi55kmk04cbxz0j0d9ak6mzlplfkoghl0c3wxw1iysg44tfeosy2rud81irm\", \"llywjsnivwl4yipflskup9wkxg8om4sq8w4u4gfxegk0q3qy4ay3dvtvln8tfys8s2a04hymy46un1ymuwhznqe5q8ypvosala7aw86aso19jzpfbz\", \"feoyvidxxh4uqxnb91y5r5faxmzg111iszku8u15l1bw2dashokk1tna5m541o5thydayhteemoewgcu46442nhppmtpn18xkkyrrmzp5dh4543z76r1ite48hlc1skcjb3wofx03pgxlrkycxkrmh29cb8d\" ]\n  } ],\n  \"etag\" : \"voluptatem\",\n  \"version\" : 1875721117\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5083d48-9501-4aef-ae45-5416c17988fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.196931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "41bf5ed1-eaea-45d4-8f29-887999504ddf",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/ii1foplyzf1r9mvany9y23cc7v17j6basf46go1qsh5:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"qde02tact1jm524dsfycfxu5234ujbtitc3edubivni2g0xxfso5nehjk772ue2rjk2fz4l4qjhvj2jnhcdz4ob2hkv0ibuq1yf7sdf13qrvhzjt0czehxc7p6skfyj7ed3y2cnu44gz7fwrq0lmurztkw6ui97gkr4g0\",\n      \"description\" : \"Repellendus aut totam illum inventore aliquam incidunt perspiciatis. Dolore eaque ipsum temporibus dolor. Totam quia dignissimos excepturi expedita voluptas dolores.\",\n      \"location\" : \"ezj1icbv42pc0es2ld6t8trvavvt7irnrndtbddntog1uzhsczbo4j2zq2q7kc64ewf1ziwxxpyqu6o67h0iwsacrd34ik2j2nr1t7hl0tijn527jqkpx21plm33ybzfhko894fg630yvpvr2vw5mywmo6oh399ga5zfkdw0nrkhy1mm1\",\n      \"title\" : \"Error enim rerum dolor enim et.\"\n    },\n    \"role\" : \"qwv53cpt76nf8lllznsmqvunwd94hbzu8w46jfz3xagdcsz2uunq2m9gbiobws2b4rgyzvpn2ddibal8s5abm8yf7c40la08mj48c3i32j9ja0kxn8uv68kpw7iyi7xtie248\",\n    \"members\" : [ \"9ekllrhcsl0kbay5mm15wf3tac31isnvkg5cnp4z99g3ocrkzay1y0rh2l8w4g9xz88auvissgbusgv1hcryjdjssci46x4fiv4bmnpugzkk1y1pe600u8f2j0ka45rh2xu3q8nm5ic3te7exoc6d3f0oiqqx20chumdzubjc0ztmgkr7o8yypbh5uac7zej6hb79\", \"g5y3emav5d6cu85t75x7k7fayxkj295tdokqrwafvdowrqy55gb6m482qh4cm9lbpwe7ak9dj5snvyb2w6spbczjloxeadtvct66bu95s86tl81yw681wng893ahuergizniogwoppfix1s592vs0aqynqnhzj8qvx2l0we2u\", \"edskwwdpqkau8nkg2bke2s4q12copo6o9a5mvruv8oqnrahj1333mkkgw2adgbbxpg6rli7us1nm0hv30oo956n1qxbgok8uue8r8zdqesaegtvuh4jk08pq9o8x1qgfs9upsrsfn4ppzc4i93hfjvmpke84evwh4wt6q2suhd288j4p8\", \"l8dl5arem20bczg18b7kdn0hxifjyl9oslzi7kgwd1b380poq30sn5mvk8a0v4wqaywxlync0b382eil5jm0e45demy0uhsscgknazit8v6kw4j12hp5f0lreoda413r5vy50gold0pof318h6goueylsa5iuzcyyz0ye02xevnt4yf5xutcrx96l338eowiq88mrz\", \"8x47mvygntam0vnpx7qrrhagk5i7rqikbpcn0v2n8w4r1tzyppx7k89v2honkiu9k6nk1j1ygpazewkaka5au96rtwwnmsi6jrpuwqpgwci4367ns1zsknawunbza90c8lc1q7hl7glzvdq4grj0ry32nipfk3xdssxdrc9i1newnc2ilg0\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"m3ui80t8r4xthe344py0t9tv3d\",\n      \"description\" : \"Quis modi voluptas nulla veniam tempore. Hic quod rem ab. Magni aut voluptas.\",\n      \"location\" : \"kqofmvac8r63m9poek05nu\",\n      \"title\" : \"Voluptas unde dolore magnam alias qui.\"\n    },\n    \"role\" : \"9wuuysahsmdhosj5meo16vlumhpkzr5yzogvrc305ftt9anhkjblapuvvg40hnogk79vix1zehx54u6x0prz1ynedauyfj\",\n    \"members\" : [ \"8r5lexw945m3rqweriwl8mzm0rukaqo4z7qoxwy56xqb3cxv2fkhw570j6b7veg5n6rtr0hwfd59b4c99x87zr6ai34li7rgd0afe\", \"ofxggrc46sd8b2c4e3pupqdsmgan3man2bzczplhzgl3raxdvp53hrwlnd5e84hu7c6ati7n5uba3286ujgznmi8umn6s4ls83uy7gi9vr6gf8pyhs543rv2w\", \"jhxfq8dmcj0f4f5trihlg0eq6c3lf\", \"rkj8tg5df8fzjoay06c6ijwb5mujlttejm7dnsffnjus1mw7qjfbd9beivgi0ghe3jmusofzbmh6umerg1buhlqpm58h9bac637006bvnhv3oo4ocv68rlu2s42khdd0vh6vhltubec1rw2dtams2kk4vhoubwmvg5f\", \"klrlfihsnfe408w0jhyfh6ivse583azxjmet97vrlsjfcb599emteg761\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"znvh1rphsdqof8j7nz0t0d522wigv69dqv2o95rrcbi13sxde70f8ktvh2dvstnzasrltf6sa7dg6qgbgm0rw2wpfch7j7xyep034may5foi6ha4bzxwq336oxw4cxna2zeatq8f6irm5bhk92r7cr0vpl893r2v3c4j92y2gpxhkmznu7pjf1\",\n      \"description\" : \"Qui illo deleniti repellendus exercitationem aliquid. Beatae quam quo nostrum omnis. Tempora asperiores est ea harum. Et quos neque minus autem.\",\n      \"location\" : \"bp7lhbdespebxksngayp8a8g8ob59dq7hvgumlit4naht59rf2idcggb1q25tbnhqm1nyz7szmq49qww2ts9cyqbrc8lu346ka59c04aqja6xnf1ln3\",\n      \"title\" : \"Excepturi velit molestias id.\"\n    },\n    \"role\" : \"ft8o7z6qb5w44bwk9qu6sskhopklnuultw1udozj46cj1oc1en1rqm9nwaqhpujibb3e0f0auduq5pnpz6y4s0c3hjccg4kiealtq2a5uw8drlzn6z6il4frebo8qbsi7a7b4nqy9e43fxxvdv84y0wt3yh2it9rcf2bs8\",\n    \"members\" : [ \"vi1jj8ks7bdf22zzhn5tazscevnfwycpvdileko2gdduroy0eq\", \"8vdhpfmam7a5o86kv11q8gjoa27p3xalalwhd2zeheabkjnzkwasal6vhgvs44ydkqsu2n9tylyl8jjd8cfnrmpmow\", \"rzymqidfp5l9ghjbo6qdzduh1nqzuirqzrsyb247zln464gq4mjwhhfjaklifu5zkjhyfnoo8r3gl1f6bsolhg7zc00goheb38fl854w8fmd5bgvi51zralxas4c8g7rca4s9wclagcj6kdi1gas0jhp\", \"t5vddncz6wrw28eg8rc5wipr0fh0ftq1n1l9y9n8tfd7g9ejn5hir8xnyaqrrl765x31f4qcuq3w0562gw3ow2seyyunsuj62tk\", \"1fnrwf7m0r7uqh\", \"w1dzbmykvz0sq3j2awspedxfs791lq2uydcbcv9bqk07y6cra9zliv7c4isuugjugg8sm6fznt2mx6z8r6s59th9amlzhjaou5f8ndb6n2870e2cac31wl0m64a1woybfh20i6unlhsvlyxj\", \"2ngjqnoufhxyqu0noo56de83mdmdr4r4njoijf7udirhtpt6fkg6shx98d449szgt8h7ah2zjt10fjd456muc40ams9t41ns\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5ftof1zv2djkw0\",\n      \"description\" : \"Sed aliquid id earum. Et ipsa excepturi labore voluptas quia nulla. Omnis aspernatur sunt.\",\n      \"location\" : \"japrlf65hqkasj4vigpqdrjldhn6gs6lbkamjcw1u5s8rheg1yhlo8a8atn6owgvpyjk5icsv8pmtthsod8wd1fn4sqczx5y74tylik8g\",\n      \"title\" : \"Dolorem omnis quos exercitationem assumenda.\"\n    },\n    \"role\" : \"f3lx2098lvb82fl84nkk0aujoncshmcq0r3np8a5bdb7nhj0jkkcz41m0yydh52c8eau4zhipyz9mz3cvuxdsz0uhzo4kb0z9t5g0uo9ekmm61pjfypls792rih57bjcsaps51lwaxk2cxw7raru7d\",\n    \"members\" : [ \"t1sbt6zdc4qaujc1w5sug0xunojyr5dxs5omhepizuybpctjygihq5449usfiyf\", \"jc8g6ing7krfm4fpwpatp0f6a8ggsvny43492vvm6l7r6eiv66plt7jehdd6r6nucc3o\", \"azroyzqhu5drlluen53t72qquxsapukrpejqxp966etnzwxoyz52nk75d6dl79g76t8wkccn8xwby0\", \"n6qxonliobrykuczl7lxop5j4nmym59rdze5co3il8s4bm29w5dodfbzs8y692dt56vzjfyn4j4nrdo52qgyctjzo36mf13l6viqn5smxhutfc4tvgzb\", \"byoq9ezw4kfhbnsm8aehqz9raoabm4v7j1qege0h2opo7bxoz22ind7zi2d3xmk53jphuqkhthyqrryb1r1cwc2oqu7drn6xssprnmnha6\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kr9abz2vl8r21dz0898c6raixmb27\",\n      \"description\" : \"Fuga voluptate aliquid at. Animi quasi quia et cupiditate repellat est. Sint ad hic tempore omnis corrupti.\",\n      \"location\" : \"mjmolasdjrdiikvozt8ymw0ey157ecjp406v5gbea1tamjqmspldzs2sxkk0u9ngs4vctf14315cbvsjgnt8zes56dz5e5h\",\n      \"title\" : \"Ratione illo eos perferendis et dolorem.\"\n    },\n    \"role\" : \"rweanuif7fwfv0ks6e7\",\n    \"members\" : [ \"jzp0gvrun4xq76gqwbblaur7s3r3bi6udwlys3pt02x7bcphl1rv8mb6fnmoo4frehf497z99bk9ii77k\", \"d9afd6iinesq2ph\", \"a1kj59t7f2mtt4wvp27ds3mqkgmiir4dhe23xi9tpc4tsf5284txja64fgx9s2fmgppxaofvmw18h76m9521834j65xw2jjuot20pl0d0aacljuzpk41hlxwgij3gf41hyl1d2wbsqp7romsgb6rlton675bm6jb34yviyywx5\", \"deds9xafgiojdtplp5ctlzfd7f5i0g2417h49h2k0xxeeq3evvlyqi2ogjqnxs53u253d7kimciyf78csmrwxds2l1dnff0ak\", \"oup7kieeiu\", \"36p035866h4rbbqkkgy3\", \"85sdp9srs5ks2s8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"48wadkalcsu2hq5qcsktcdzkvkxx4jttujz7wx5rfb\",\n      \"description\" : \"Nam magni id est quo ducimus unde. Sed magni maiores veritatis architecto qui vel et. Enim sequi nulla earum aperiam. Deserunt ut eum voluptate est consequatur.\",\n      \"location\" : \"coja11jt79gbv13xzmfz9mor80i2461mnot134r1ssv4iweeslvd0rtp3kou9mlfirxxcnfl5n1n9tgsqxg387z0gyst85bzolg1pcdcqd3k64zuphdjehac25sgac3g\",\n      \"title\" : \"A non velit ut officiis provident excepturi.\"\n    },\n    \"role\" : \"4gv3crfi6k81hbxu1avz1dsjcigbarr58xjpui0gan1ejsplrowo9y5i7mhj5nid4hmdyquu5ijvjf80uwahl2l7oyh9k6qxr24hfbi7l6y4qwu\",\n    \"members\" : [ \"t574l0g7gtehrj3unvbn54xmdc1xw7mgjxjwoe0t0tfoqvg28tjcgw5vq\" ]\n  } ],\n  \"etag\" : \"eeeea\",\n  \"version\" : 1993693849\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41bf5ed1-eaea-45d4-8f29-887999504ddf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.196033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.policy.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "049bd640-33da-4023-a12d-86e0b597ed59",
    "name" : "Creates an attestor, and returns a copy of the new attestor. Returns NOT_FOUND i...",
    "request" : {
      "urlPath" : "/v1beta1/jxycw7ighevvcq3ak0rvi26dc0wpbyw8qvcbv0oe0j6o2cpp8hrennl63obd9/attestors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"uv27qihfnrfiim28krs6015kyfqj4xwl4dd4x45sns546vhpjebcphu9zvxc7a1co1dn\",\n    \"noteReference\" : \"y4drckqfxs25m88\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"9j9s9ichu6t2r3hlrmvvgodpbup40pnehc26pqki8m4t4dfjzpfwu0157153axs4b7isc4e30dro5fpyjx0gbydoba0drrm9tpxeaah12c2pyx42tijis9hi001eu\",\n        \"signatureAlgorithm\" : \"EC_SIGN_P256_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"zx5cnrsro7do3yg5qp7haxt3ut311lhpk47l6ge6g78d5uzpf\",\n      \"comment\" : \"iy36iffzucvirzhj7hytq4oc3xalcm4x7wk7xzwywiv0qnkw2hofy6h9r3nbpufek64fkn53gbmd50rb\",\n      \"id\" : \"b43h\"\n    } ]\n  },\n  \"name\" : \"Ardelle Leuschke Jr.\",\n  \"description\" : \"Deleniti dolore in et sed vel. Culpa velit ad. Nulla fuga aperiam doloribus ea ea. Consequatur in amet eaque.\",\n  \"etag\" : \"nesciunt\",\n  \"updateTime\" : \"2022-11-07T14:16:07.194929Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "049bd640-33da-4023-a12d-86e0b597ed59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.19502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.create",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "bd37e44b-b166-48cc-b157-aecee4bd02dd",
    "name" : "Lists attestors. Returns INVALID_ARGUMENT if the project does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/bb0nr62qgeub2ubo6k0qjdod6z14dmmjz684qxr4rwinj5o24xv9arjk8ulwq7axwv3ef3qhw9eg71hp5q23cj7y1p29cmo2e8vy4ycnvwl40thtophd6xcp2x3af4fmh3i3j04dr5yj4q023wpan4tirsa7x/attestors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestors\" : [ {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"e4b7f93ogqopibmpkrs1e8jhij0g05xadlg18xk4y5p1knjrflaksi2oyjaldf6g9li64edg5801iktth18f7iiteyn0lsmnq5xp4aqr2bl0c6znuql30g3b13l1n88hf18vuf9t53w4rp22ldhs9s\",\n      \"noteReference\" : \"q44zbzx8hhikwiv86d1gpsq600q7qeojus347zwgkhr4dkq921hcgcrqtlljf0r93qk9hzopw1p1g3tgjvg0q2265gprmh8mqwrftjnbplfwryix2uo58dj4jq121ghkxp8az\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"o9nlkwegh13wf37iqcokk8mazaoh13ytz903udsoo1wtmho59dakfp5mcyg4d1zi7c4je4oua633w4i1mdjytnya012xac4wol5y46koql28xqulrb54faq48swzf2k2ahzwrv9co03o00o6vnyu8jxyo69rhddvt24d43bpbm1due896id558bf97x\",\n        \"comment\" : \"9gtenfcvst1qv3m2wzg9lov5bb0hsaipy049pz3a3yosp6lcvgk3h4qp93hwgz67sv6cwfng89c6tntdllm0wmvpu3te5sgpv0hjpwzcjj19nljeuqq7qyrjb4w4dwmmqaryqpk3vkbecgenxfjwcttkfuat2szs6nxyc6spooxre52bu87foe97r\",\n        \"id\" : \"yza7\"\n      } ]\n    },\n    \"name\" : \"Horacio Shields\",\n    \"description\" : \"Porro ducimus harum sit omnis. Quidem dolor rerum explicabo ut. Vero tenetur nesciunt et velit. Est dolor sint ducimus laudantium.\",\n    \"etag\" : \"tempora\",\n    \"updateTime\" : \"2022-10-11T15:36:07.19409Z\"\n  }, {\n    \"userOwnedDrydockNote\" : {\n      \"delegationServiceAccountEmail\" : \"widfkyujnq3r1w0mxvhxzctwjq34g7jkor5st\",\n      \"noteReference\" : \"cy7q54110zz3djlhmy0483x7ptbeq0uribrheqhbtaypzf0elf48v2tp\",\n      \"publicKeys\" : [ {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"hsxjn78kjuq6xy58ulg\",\n        \"comment\" : \"wy2yjg536fh6ytdjqyhmjjwj97s75jg4jggcfw9qfx6po9ohuwdwjwbmss7ljv6cxfkn0q44l9kxz2xvwkpwh9d5\",\n        \"id\" : \"q6r9\"\n      }, {\n        \"pkixPublicKey\" : { },\n        \"asciiArmoredPgpPublicKey\" : \"ulmd7fwyqx40qe4845u41t564jwm2x9xszuos10kljg0xq72840bjrixbzpe15n775cclotoljvmgrc23yslv81nxrjvtd0ya31icogzq4qff3id8mv4nkweju01g1db62xiq83vl6gieco0rcot02a94h5z4hrgaprj7hghp22odfnl9l5f1negce9ui\",\n        \"comment\" : \"vx5uhjkuea5b099atlzcg\",\n        \"id\" : \"m20i\"\n      } ]\n    },\n    \"name\" : \"Mrs. Adrian Hansen\",\n    \"description\" : \"Eaque et deleniti eius quasi a quia fugit. Qui corrupti praesentium aut sequi minima. Nisi aliquam id. Vel fugit sequi dolores et deserunt. Quo nam odit in.\",\n    \"etag\" : \"fugiat\",\n    \"updateTime\" : \"2022-09-25T12:00:07.194472Z\"\n  } ],\n  \"nextPageToken\" : \"g9gm3t22hthvmbmqzrxlouvixv6x27bzhnk3l58t7fyi2z2cdh3ylao01nyxmimm4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd37e44b-b166-48cc-b157-aecee4bd02dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.194602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.list",
          "schema" : {
            "description" : "Response message for BinauthzManagementService.ListAttestors.",
            "properties" : {
              "attestors" : {
                "description" : "The list of attestors.",
                "items" : {
                  "$ref" : "#/components/schemas/Attestor"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve the next page of results. Pass this value in the ListAttestorsRequest.page_token field in the subsequent call to the `ListAttestors` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "130dbd0a-c998-4d55-8b70-0ac4d25bfefa",
    "name" : "Updates an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Chance+Mueller",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userOwnedDrydockNote\" : {\n    \"delegationServiceAccountEmail\" : \"txfhpsv4adx0ccupn99pp08ro7vdoxoc3ku5knnraimgagv3k4yfh82yneambwnbsolp6dgw1xnyjwcmtq8f21ur7qnvja\",\n    \"noteReference\" : \"79f240kwc47kwee0mmwx3nhn028ncgpjz44555q1iac1xdh73i5ygfsa5\",\n    \"publicKeys\" : [ {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"6r349syrvbxi5zf4q790grh2rirzae1s3xxct9lrwzuuadm0qdx0ym7ep9l4vbh1tjc16zmotzld\",\n        \"signatureAlgorithm\" : \"RSA_PSS_4096_SHA512\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"298pem7d6uso9sk209yu\",\n      \"comment\" : \"7jajqlnyk5je1jpi63yhehdws72xqcurbettidkrnwyl8xez9xou4u1wwg1fhv542vpmr3gnmsebc\",\n      \"id\" : \"29t6\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"i9oguy0tbe3tym8plifyu2neqylggvr\",\n        \"signatureAlgorithm\" : \"RSA_SIGN_PSS_3072_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"38v2ypakrnhtrdzcwq4kxbilmydpvwnyvoolj5smhilt1m9knj1zfshsxixp0rgli6vum4wgvciuhr\",\n      \"comment\" : \"4nyoehv0x1ouk9x3zedw5y8kh5u0goawwlvc7zipu3la5x4nlhbwmpo8nz3wwtkb6h4x5ogczfuvdcay03zri88bcaiokn27zu3fkbawk5wf36uf0drdusqdm1n0cqpq2l559bi1o6xwyvtekasxov1e5t\",\n      \"id\" : \"3t5t\"\n    }, {\n      \"pkixPublicKey\" : {\n        \"publicKeyPem\" : \"qo1g2ljkuokca7vto72z8nvm1iwutbpy07o5ji74samrrhgagpso0bt1deb1hq5g7p3862kmc\",\n        \"signatureAlgorithm\" : \"RSA_PSS_4096_SHA256\"\n      },\n      \"asciiArmoredPgpPublicKey\" : \"xx4jifv852v4q5kzl689q7hu13228up993z7f18c2f72r2lsao6wruw1klk3g353p2wi5ve3jhoilrcdewnx2i3dhvb7pd5ndger6fm9evkc8sex7a6t\",\n      \"comment\" : \"nhomamoho5hvme9up40t77brvjkcv0y63z334v9nfc269duzghb8cpppbl4hnp7hyfvscel4ub9q2so0ga9worgiltzluzbmkh7d1k4dcx6yluy78np6e6stwi2zhe4vre0lm9emh1g364orgwwaz6thd4tnp8cvt1y50\",\n      \"id\" : \"a16c\"\n    } ]\n  },\n  \"name\" : \"Blake Collier\",\n  \"description\" : \"Exercitationem blanditiis exercitationem. Voluptas repellat quia aliquid minus quibusdam placeat consequatur. Ratione earum error sed velit molestiae. Repellat repellendus quibusdam quae modi vel offi\",\n  \"etag\" : \"eeeet\",\n  \"updateTime\" : \"2022-04-25T15:35:07.193656Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "130dbd0a-c998-4d55-8b70-0ac4d25bfefa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.193794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.update",
          "schema" : {
            "description" : "An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated.",
            "properties" : {
              "description" : {
                "description" : "Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated.",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the attestor was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userOwnedDrydockNote" : {
                "$ref" : "#/components/schemas/UserOwnedDrydockNote"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "606823c9-f9e6-48ed-9193-671210d7cd93",
    "name" : "Gets the current system policy in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/Alecia+Doyle+MD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clusterAdmissionRules\" : { },\n  \"kubernetesNamespaceAdmissionRules\" : { },\n  \"globalPolicyEvaluationMode\" : \"GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED\",\n  \"kubernetesServiceAccountAdmissionRules\" : { },\n  \"defaultAdmissionRule\" : {\n    \"enforcementMode\" : \"ENFORCED_BLOCK_AND_AUDIT_LOG\",\n    \"requireAttestationsBy\" : [ \"qj91yl7sbc5s72hfc7s91rxebhya7wah13gu3el3cnoo8riuckou40mqtssgej7bk1qvdcidtewkbhg7r4utywt3z0vkutkub5w5ceg2x4dygkol855i\" ],\n    \"evaluationMode\" : \"REQUIRE_ATTESTATION\"\n  },\n  \"istioServiceIdentityAdmissionRules\" : { },\n  \"name\" : \"Leana Davis\",\n  \"description\" : \"Et omnis quae. Sapiente repellendus ratione voluptatibus tempore debitis facere. Eius mollitia et a consectetur ex.\",\n  \"etag\" : \"delectus\",\n  \"updateTime\" : \"2023-01-30T15:38:07.192668Z\",\n  \"admissionWhitelistPatterns\" : [ {\n    \"namePattern\" : \"0xc0ajj3t2wmr26ygzpiyqteb1b2573yt1atqdbidoqz03lfobn9cz5r7f7zie5bwqowqpqbjchz9mng7qa14rqmwe6ghbsxwdm5e6e4oalrbpwsttvl5\"\n  }, {\n    \"namePattern\" : \"hrbr9xu3y6i7zn13esuhjwzvfvgjcl0xemmzm4moe4vo9d2todd72i95nplmvp6vm3gk8a0geanjyydl\"\n  }, {\n    \"namePattern\" : \"mdtrxqq2t0rzzd9xbrdu7mrtqabhi2gvvum5mj49qdftjya4dxma7ayiudlxs7c1rm4g3\"\n  }, {\n    \"namePattern\" : \"pathazxjnmdamzfw6cd1fg4nzg2moevov5b0ozbl86tzo4t9f2emkoflpws1ga9bkbt\"\n  }, {\n    \"namePattern\" : \"1n7zsoits1dd86p82g1g3zurqr1xf63e6ha5z6ugrvful23mukcme3j9zcs5xbadlj3rcy567h9088xb\"\n  }, {\n    \"namePattern\" : \"wby5s7jw62t0577whhk49s\"\n  }, {\n    \"namePattern\" : \"q8woxp41zn5yxe72ne4moh9m4uayj3vxyfyi6ea8m37ksd17d5b94g1i05x39mvaq84f2dh\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "606823c9-f9e6-48ed-9193-671210d7cd93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.192984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.systempolicy.getPolicy",
          "schema" : {
            "description" : "A policy for Binary Authorization.",
            "properties" : {
              "admissionWhitelistPatterns" : {
                "description" : "Optional. Admission policy allowlisting. A matching admission request will always be permitted. This feature is typically used to exclude Google or third-party infrastructure images from Binary Authorization policies.",
                "items" : {
                  "$ref" : "#/components/schemas/AdmissionWhitelistPattern"
                },
                "type" : "array"
              },
              "clusterAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-cluster admission rules. Cluster spec format: `location.clusterId`. There can be at most one admission rule per cluster spec. A `location` is either a compute zone (e.g. us-central1-a) or a region (e.g. us-central1). For `clusterId` syntax restrictions see https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters.",
                "type" : "object"
              },
              "defaultAdmissionRule" : {
                "$ref" : "#/components/schemas/AdmissionRule"
              },
              "description" : {
                "description" : "Optional. A descriptive comment.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. A checksum, returned by the server, that can be sent on update requests to ensure the policy has an up-to-date value before attempting to update it. See https://google.aip.dev/154.",
                "type" : "string"
              },
              "globalPolicyEvaluationMode" : {
                "description" : "Optional. Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not covered by the global policy will be subject to the project admission policy. This setting has no effect when specified inside a global admission policy.",
                "enum" : [ "GLOBAL_POLICY_EVALUATION_MODE_UNSPECIFIED", "ENABLE", "DISABLE" ],
                "type" : "string"
              },
              "istioServiceIdentityAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-istio-service-identity admission rules. Istio service identity spec format: `spiffe:///ns//sa/` or `/ns//sa/` e.g. `spiffe://example.com/ns/test-ns/sa/default`",
                "type" : "object"
              },
              "kubernetesNamespaceAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-namespace admission rules. K8s namespace spec format: `[a-z.-]+`, e.g. `some-namespace`",
                "type" : "object"
              },
              "kubernetesServiceAccountAdmissionRules" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/AdmissionRule"
                },
                "description" : "Optional. Per-kubernetes-service-account admission rules. Service account spec format: `namespace:serviceaccount`. e.g. `test-ns:default`",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name, in the format `projects/*/policy`. There is at most one policy per project.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time when the policy was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d6b49e35-a73c-4cbe-b78c-4e511a4cb3d2",
    "name" : "Deletes an attestor. Returns NOT_FOUND if the attestor does not exist.",
    "request" : {
      "urlPath" : "/v1beta1/Denisha+Ortiz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6b49e35-a73c-4cbe-b78c-4e511a4cb3d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.192427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "79f581bd-9a97-4dec-b374-9e9194a4cd94",
    "name" : "Returns whether the given Attestation for the given image URI was signed by the ...",
    "request" : {
      "urlPath" : "/v1beta1/hh71uaoyq1ekhzzungc8vtreufq7phddkui8j4i5vh8jqs70xsg16ahsycaeh32q1puk2w5k3wgf7s54yho9qymfbjm9v9r5owrmfyla:validateAttestationOccurrence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"RESULT_UNSPECIFIED\",\n  \"denialReason\" : \"1klmnz4b3enfrcpzz3vk0sh15hdtbwfc9oecuo2nvwpvyog7mzxti55ho54de36qn2u0syiark6hm3efd7ngi5ax53k50e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79f581bd-9a97-4dec-b374-9e9194a4cd94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.192288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "binaryauthorization.projects.attestors.validateAttestationOccurrence",
          "schema" : {
            "description" : "Response message for ValidationHelperV1.ValidateAttestationOccurrence.",
            "properties" : {
              "denialReason" : {
                "description" : "The reason for denial if the Attestation couldn't be validated.",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the Attestation validation.",
                "enum" : [ "RESULT_UNSPECIFIED", "VERIFIED", "ATTESTATION_NOT_VERIFIABLE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  } ]
}