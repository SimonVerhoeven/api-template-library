{
  "mappings" : [ {
    "id" : "099e669b-0cb6-4bce-aa78-bdc123073992",
    "name" : "Creates a model in Firebase ML. The longrunning operation will eventually return...",
    "request" : {
      "urlPath" : "/v1beta2/ll98km9n5lx8yc0p0brdj9yzl3i36fd5fzv96o1xyao6/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Sam Halvorson\",\n  \"error\" : {\n    \"code\" : 1795674022,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quisquam sint molestiae qui. Aut vel voluptas hic tenetur eaque et. Nulla exercitationem iure voluptatem sit est. Quis sapiente omnis eligendi deleniti nihil harum fugiat. Qui est voluptatem porro omn\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "099e669b-0cb6-4bce-aa78-bdc123073992",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:43.2466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d900944e-524e-43e6-b45a-98453ba4bae5",
    "name" : "Lists the models",
    "request" : {
      "urlPath" : "/v1beta2/exxcqwuxgfsdu2na7d5h3lzs2riy58me8hhgoagj5o4ise72898kj5dtg2givs2ygtov2hos044y31incn98ot3j644jgsqk2z0oru94qm2/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"models\" : [ {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/672791\",\n      \"automlModel\" : \"zth6ry1dg38pt6izi9uir94z70sp0n6z48lbn4a0o02ommx8bnqy\",\n      \"sizeBytes\" : \"9vw0f82uzygdtd9tj75zxff4hxa82qphgei9p\"\n    },\n    \"createTime\" : \"2022-09-18T13:17:43.240237Z\",\n    \"modelHash\" : \"cv31womw3gj5xwt3pctafqr616agp1kwlcclc5dqxlof61hf4br5lt6arpjpfkfyuts1erl0grxwnjct7jaabjpfr3ypazjbyu085p4e62fv9sbv4mz81f05poffi98zpo3iygo7hq59nlsxajajmlzqtsnjyvqu79iv0zfw8n0c7g4pte5nvvqd07t9b55\",\n    \"displayName\" : \"Jan Lebsack\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mai Beier\",\n      \"error\" : {\n        \"code\" : 509720082,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Id neque ducimus dicta ut voluptas. Rem vitae alias deserunt laborum. Exercitationem culpa laboriosam.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Melony Anderson\",\n    \"etag\" : \"eeeet\",\n    \"updateTime\" : \"2022-10-16T11:50:43.240489Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1450606033,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Ut aliquid voluptatem et. A harum atque. Molestias deserunt atque nemo consequatur tempora omnis in.\"\n      }\n    },\n    \"tags\" : [ \"loarmo1lyvsfkxhdbxdfkzuiqg1946pg3ugsq3hv4t43qbz2g0p4ugt04zp62ywi0hjyiyoek99xdz95io0cl7pyfc4e4dyk3o6euue3gl31pvmn3uoz7ox3sgu3cw4bvydmnmm9eej43xnfk9rmw8nbdf3gsadyqgtb4ehhj7ngbsoytnwnyyw73c84cbb5uisxi3v3\", \"2kf9sishfzockpzv0jigm9kpqrkapt5f1eo8h772uw\", \"azvfbk2r8fryhdo4r1vb12oz39gjh7ydl22ihitqfc5jvnyeeuhct6hazovjbwwrel81cah7bu3zewxqr9wn1etd\", \"6sr49r37fvwtyeihqfmj2mqcmx83r39azvfulo0od0iu94fmjve9ifh7tlav38t66tniv2alidtovwfroc0nrvfjs8oq99d1qrdez5xq92rtszt\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/337064\",\n      \"automlModel\" : \"gqs9mje7enmpbxo4820m8aot5cp57esz7f7aplunybcd6v7czuxx4hnst0wuo286w8wkei28r49pomiyskqfnlt58rsnv5kolj2e1nr6glh84ezejme3rwu1pfh03irrym696woxxe3ngm\",\n      \"sizeBytes\" : \"jox56cq1ex1psv2047w9u7xnf4lektzhoukhycbz2rv95znlq9zjc9pm1e7jhc5f7m87h0o9ktywf3qc4nthth0cm09l5aas6fkew9y39dj268jg\"\n    },\n    \"createTime\" : \"2022-04-24T13:27:43.240707Z\",\n    \"modelHash\" : \"74inzeyxjz3ievayu4kmxbobiqn2lsa4f7r0xfluigcdwrydsnph73lvbfiymg2ru2tqgsnjqj9f17hkcc829induo2w\",\n    \"displayName\" : \"Warner Kulas III\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Sheri Schumm\",\n      \"error\" : {\n        \"code\" : 2037795352,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Voluptatum soluta numquam quis vero dolorem repellendus impedit. Iusto ut velit quia. Ea unde et illum odio cupiditate quaerat veniam. Illo saepe eos minus cumque. Numquam eaque aut ad dicta et cum do\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Dr. Tambra Weimann\",\n      \"error\" : {\n        \"code\" : 1425280350,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Aut ipsam culpa ea omnis non voluptatem. Sapiente illo maxime. Magnam ut corporis nobis.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Maragret Tromp I\",\n      \"error\" : {\n        \"code\" : 1378618424,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Sapiente et nam hic et aperiam iusto labore. Nemo aut maxime facere esse nisi est quidem. Et amet praesentium dicta in dolorem aperiam.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Claretta Wolff\",\n      \"error\" : {\n        \"code\" : 927489626,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Qui autem ducimus. Doloremque molestiae et explicabo occaecati. Amet voluptatem maiores repellat quo et.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Eugene Bernhard\",\n      \"error\" : {\n        \"code\" : 1342948886,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ratione nulla nisi excepturi odit laudantium. Et commodi non inventore enim fugiat. Beatae dolorem dolorem. Repellendus velit natus laudantium ut sit voluptatem voluptas.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Palmira O'Keefe V\",\n      \"error\" : {\n        \"code\" : 1978833767,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Perspiciatis iusto laboriosam sapiente veritatis accusantium. Dicta ullam aliquam quia. Rem possimus quia amet libero sed illum.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Valrie Graham\",\n      \"error\" : {\n        \"code\" : 1537517124,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Maiores dolore voluptatem ipsa doloribus et odio odit. Porro ut quia. Consectetur soluta dolor in veritatis.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Hollis Parker\",\n    \"etag\" : \"pariatur\",\n    \"updateTime\" : \"2022-06-11T14:55:43.241546Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 891333644,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Consequuntur accusamus asperiores dolores deleniti non qui consequatur. Doloribus quia qui qui molestiae veritatis rerum. Repellat voluptas omnis vel accusantium dolor officia quibusdam.\"\n      }\n    },\n    \"tags\" : [ \"p0l05qs0jrnde21hya4kdzajsca5kgtyu2ghngnp6peg83kpdog00k1k5xrd02wlfr2hpl68ie9k3h0wqbleb36ymmu9olylidr61kt6c52dhw1miuc7ldd5u9wolu0jc5hjymlqkwrz4135ks9diye8ulu2ljku3bu8\", \"qgawzhg81tmuafsztwh0dbdhe545bo13rho6k9ykttz9saf8dw20iw90tdb1fzgsfiqsnq137xp5cj8z3n1djel\", \"yv16n6e5wuayr7qzonrlrv3rowssk2bjqhiqrp7wo2lgdysbflpyivsg647ecioamlqczzwgkzcggvotv7sdsj0455n5kit9sid6sm\", \"w64k1yq7jfq2ravqgy2zq219qus83cyp3pyi2d4th5bgnn40r75z9g9miju9b9pndxkhl8keb9axt1u2yb08\", \"166kc2kzwy48qw09aqrx0gblsow35ddo3fmleyenc1bnglghxb3yx6qq0opk39p5ctnvxzbq0u8emsx4xv3f6kanxkidl84f4tlwppzfflezlifyia9c7ssitvzcrslzr8hyi5ovjy7wgtut883hfckoiu9gqx60tt5ni20pz8ag8f5y60\", \"rxyaujdorvlxa42sre8i7b6vvz3r1em9sepnr06yj3t12wg035oy6tmwc7wzxjye8pw8yw9olzaivwyfivfio2qh5xv7dfc3cp7bsxbkj9t1uio45i8sooz2wupb0fjp3dnevfnyzjwned6slrz6rls5bir22azw\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/657764\",\n      \"automlModel\" : \"71mmqobipw8kc7iyr3ah07xt5f2pl1873yl28e709m03t0jaadf33r0ha052o37wmad8b2h74nsd3ouo3br3yy3o2rx4v5cp60zya6pnnlp80q99uv7sskizmbhc6v\",\n      \"sizeBytes\" : \"3eskhd7hq0qtp6vs68ogb2bd12gpez4q5v96bxdcxl50babxw38wf3g7iuz7lcmqfg75y7rh19e7358ymkeoiv7cl2rb0hzs3qneyu0p0q1k2yd61ss4oag31dqvfva\"\n    },\n    \"createTime\" : \"2022-06-21T15:31:43.241786Z\",\n    \"modelHash\" : \"0qxlao4iw4i4qf2k1ryybtewbohb2hpjxq2krwx80iidknx0xsegj8c6usgh8n16ijqic743wqbhu44zjfr720q381a5cs0uathrd1ncs722y9z969cf21ytkphrc71y19ubyv5bdbinvjyxj2igx0nqfkmwqckbc1yync6nnw69ktqwtmdvt8eys8hr4sxd\",\n    \"displayName\" : \"Noble Parisian\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Rosalinda Harvey\",\n      \"error\" : {\n        \"code\" : 1708622165,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Earum in consectetur rerum quasi optio. Ipsam sequi sint praesentium repellendus et vel non. Voluptatem perferendis voluptatibus iure sunt est aut.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Kiera Koelpin\",\n      \"error\" : {\n        \"code\" : 2025723337,\n        \"details\" : [ { } ],\n        \"message\" : \"Illum non aperiam. Qui sunt dolorem consequatur officiis quo ipsam. Ratione et ducimus at sit rem dolores necessitatibus.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Stanley Klein\",\n      \"error\" : {\n        \"code\" : 108553306,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Modi animi accusantium. Sapiente hic rem error. Quia similique quidem ratione dolores.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Dr. Adrian Waelchi\",\n      \"error\" : {\n        \"code\" : 734391854,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Adipisci quos eos accusamus sint. Tempore delectus autem. Et quis omnis dolores animi. Laudantium velit culpa laudantium a. Reiciendis ipsa maxime.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Miss Austin Klein\",\n      \"error\" : {\n        \"code\" : 902044419,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quod sit facere quod voluptatem eos. Necessitatibus sed ullam voluptatibus. Dolores voluptates aperiam beatae a omnis est molestias.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Vince Walter\",\n    \"etag\" : \"dolor\",\n    \"updateTime\" : \"2022-10-19T15:20:43.242423Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 927750783,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Libero dolorem dolor commodi totam. Voluptatem beatae eum qui. Est cumque qui et maiores quae beatae omnis. Veniam quisquam repellat.\"\n      }\n    },\n    \"tags\" : [ \"8fu4wyl73xwozdlmrnpi4h2zirsf1fqmn1slndkcxn691n03aqbisqw997ckm4rqy77uhx157qwmrtc6y5vp5qa3ofn89qel5byzqa6nvrppgkznluauimqjiblf2cz9hzpxhy1y3ry6t2ay3nf1p5y6mzjhcr1shllzb2n\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/113202\",\n      \"automlModel\" : \"nyuv3ddnjndgb5thdowulu35gqlafxwz0xuzr1tpvkjaozhepu0oo74gpauyt5o77f3zdgwz2cz0jlexoh7velr17n2gq2vdc7cjguac4zxb4fvkxgkviwqcme6lk53j82eh3ycadqh6jxh99z4x6zi2n1igljy7qi58omgkaw\",\n      \"sizeBytes\" : \"s3f8zpk14m8jydggjrm7m213spe2hq1khukzpkc8hd6nzz51piwirjuolpzjhulqu6rvgnv6e5zi6fb594520vd4rs45df52trfmsdfr34pccdthw0pt56i6bnpodnbbf5w3e3hyb1154qg194o8t9ogii2omwoybjjutjgwkn4xj8osz2mw8j0qy4754yv\"\n    },\n    \"createTime\" : \"2022-07-19T13:22:43.242643Z\",\n    \"modelHash\" : \"5n0hi85jd3tp4zgf2wzj2a3tcmt2z047x38aoyckt4vuln2asbu2addc0j4drm4cmby4h4\",\n    \"displayName\" : \"Wilfred Kiehn\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Duncan Rohan\",\n      \"error\" : {\n        \"code\" : 2147256692,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Temporibus fuga laboriosam. Quasi earum perspiciatis rerum qui distinctio et architecto. Nihil id eos voluptatem asperiores veritatis doloribus quos. Ex cupiditate illum quasi quasi fugiat rerum moles\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Jamey Sipes\",\n      \"error\" : {\n        \"code\" : 1535751362,\n        \"details\" : [ { } ],\n        \"message\" : \"Explicabo aut totam totam ipsam consequatur incidunt aliquam. Explicabo illo et voluptatem doloribus. Dolorum est iure. Asperiores sit rerum aut voluptatem sit non consectetur. Est molestias ut.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Lizzette Schultz\",\n      \"error\" : {\n        \"code\" : 1084421494,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Pariatur praesentium voluptatem a assumenda nesciunt aut. Magni assumenda ab architecto ipsa. Nihil id magni autem est.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Maile Strosin IV\",\n      \"error\" : {\n        \"code\" : 1683370395,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Voluptatibus itaque vel qui explicabo quia. Qui eos dolorem eaque. Fugiat ut sed velit adipisci praesentium impedit. Mollitia consequatur quo quisquam impedit aut.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Rigoberto Powlowski IV\",\n      \"error\" : {\n        \"code\" : 2043385037,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Maiores ab ut. Inventore in rerum dolorum reiciendis. Aliquam consequatur voluptas sed maxime quos. Voluptates cupiditate debitis laudantium.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Dr. Cletus Bailey\",\n      \"error\" : {\n        \"code\" : 2051947189,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Officia quo officia incidunt unde tempore modi. Libero assumenda nihil ut soluta. Quo consectetur dicta sed hic odio consequatur ut.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Rosana Von\",\n    \"etag\" : \"quaerat\",\n    \"updateTime\" : \"2022-09-28T14:39:43.243387Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 323234370,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ab odit cum voluptas officia ullam suscipit. Nisi reprehenderit modi totam qui provident aut error. Id nisi alias voluptatem. Adipisci sed et.\"\n      }\n    },\n    \"tags\" : [ \"sa5y8gld3e07cnhtnb1aj8qdvqsbqq7orz4eh3ueg2tk3pe3biniaarpizlfghoo0ly372nbt874ua51z7noq1lfdvtexyl6gb55xjozs8q5p4twfrcmmuqqqfza7996eqi7qo6u7xxo0levoqnv8o4q0jwu0mstairbd4j9q4ddjvbjxwf3i7tksyg5audn4a\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/379093\",\n      \"automlModel\" : \"idcvwp0q6p4b5sea9lv0461klxp5guvpl3wt9xaieq20mxima6r16r\",\n      \"sizeBytes\" : \"802uwsghm8559m0b8qmh9hs3ygsdskd3c492j2048r3jexrf5ip97v7xw4d45odnzycvcyfao5z8tr5n33ldg2u7pa0o032sij37mp\"\n    },\n    \"createTime\" : \"2023-02-17T13:07:43.243594Z\",\n    \"modelHash\" : \"x9gz4\",\n    \"displayName\" : \"Jerrell Hessel\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mrs. Nathanial Jaskolski\",\n      \"error\" : {\n        \"code\" : 1138694197,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Iusto aliquam quia culpa est et dicta. Laboriosam dolores aut iusto. Ab aliquid et nulla expedita et non consequuntur.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Tyrone Rath\",\n      \"error\" : {\n        \"code\" : 825741716,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Nulla adipisci molestiae velit. Et consectetur sed consequatur unde. Corporis et autem quaerat eos iusto. Est molestiae reiciendis sunt et ex.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Benedict Klein\",\n      \"error\" : {\n        \"code\" : 2055721646,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Eligendi dolorum magni. Eligendi est est. Voluptatem enim sit praesentium molestiae ducimus occaecati.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Mr. Lee Tillman\",\n    \"etag\" : \"quia\",\n    \"updateTime\" : \"2023-01-18T14:55:43.244325Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 412579224,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"In nulla eum sapiente. Saepe iure laborum sunt eos tempore. Velit dolore temporibus ullam.\"\n      }\n    },\n    \"tags\" : [ \"h2rl6xtwgq4tr44zmqt4l0raigtpe8r31wduodls6lkl3futd4591gdf2j6uxvdfqngra2ajaiz3w9qk9shjbo9ikagp0fbrpyd0t5rvi75plcflkn5jn6k3u8rfmztyx2d0s8grwn6o81mrr5sh6353da6wfnmkvy6l30ecgwekt0qmlx0sqkdl4vn\", \"6r1sowtr7qxbw9pfwwuozry5xcjzsyfwhj\", \"lnsxaw3p35lc8dx1map2jr3mcbtvl8hicsnvga3btzinnbt27iik134nykegm1sqojn63u6m23pu682mvqm91w7zmtthp8zutlsuhdaw0mziylzg656y6lgmpnn2rwd8owf4rqpf\", \"t4odd5bebx996dpzj0enepqsttztj1wt00ub6hdr53qnhsexc8oynroxlfwanh9ecx7nxtso6k6obpsdlgapdjwwzduo9k527l023eqrpo74\", \"w25tum167fmubn4u6aeogd2ceys5xbdyalv6t89hoirps8g2202ub9p1l6h8bjgdp2yrltj4734abi\", \"iolpgbzlz4p359oemg8hjw322oa5iky1gdvx51fdgx0mc1rw76ibeqjea03xwith59be9cj48h77r6bu1whgwmn6855cebqq539bwk13lxti79iggv3vymk00ccntlpmwjddn028to3a02efguqc7x2eycl9o69lei7cmeptyz4wxhdeyi55wu\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/118813\",\n      \"automlModel\" : \"3uakh50xot5xtfnzmrzouwf2zhphjotlqt7nfyhtxqgoazf6h289atovug2skp4hlm1n19z7cjh30m53rltl76jjew7ezzt1vox86i07i7kv79cfckh1t5kwi5yl9jimxh2jreuh5i6a2j76s3ooe3vkafw1uht4wo5jkp30jo2n9x7bzerioa\",\n      \"sizeBytes\" : \"kr6inq05lheinst59d9ioiybet30y3wxqvinvmp5skpngrusahjsacf8iln67pfe74gjxoa9k20vfxpgxcyvx3m7mydyygai1yc\"\n    },\n    \"createTime\" : \"2022-09-13T13:45:43.244545Z\",\n    \"modelHash\" : \"hbbenps8ohloejoemhz3x432c57qoxb1nqcvw9tot8iv8oki75onhvq6f2k2o6v21cuw8kasz77cxvttqapipo7wwdlp86jf65vtdsvih79a12n\",\n    \"displayName\" : \"Jane Herman\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Herbert Johnson\",\n      \"error\" : {\n        \"code\" : 1940755656,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui velit vero perspiciatis ad aliquam. Eos nulla eum ducimus. Eos dicta cum et veniam officiis voluptatem et.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Blaine Harris\",\n      \"error\" : {\n        \"code\" : 725233245,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Error minima sed et dolore sint aliquam voluptas. Velit velit sed aperiam illo facere non corporis. Laborum itaque expedita. Est rem earum culpa eum.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Anibal Farrell\",\n      \"error\" : {\n        \"code\" : 946551814,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut iusto explicabo fugit rerum id possimus. Sit architecto veniam et. Sint aut vel dolor hic quod reiciendis. Minima esse tempore alias aut dolor dignissimos laborum. Esse maxime optio omnis reprehend\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Stan Zieme\",\n      \"error\" : {\n        \"code\" : 584131731,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Corporis laudantium quam. Fugit rerum natus maiores. Sit velit non et.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Alline Bergnaum\",\n      \"error\" : {\n        \"code\" : 1561955552,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut harum accusantium culpa. Cumque sequi in natus odio dolores et. Fuga sapiente dolores sed inventore distinctio repudiandae labore. Est ut magni.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Sun Muller\",\n      \"error\" : {\n        \"code\" : 622510030,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Et aut adipisci et blanditiis. Aut dolore magni voluptatum. Qui quaerat est voluptas in quibusdam ad omnis. Accusantium accusamus in sunt quasi omnis aut voluptates. Perspiciatis sit ipsam illo.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Verna Douglas\",\n      \"error\" : {\n        \"code\" : 190420742,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Suscipit ea dolor facere voluptas provident sapiente quo. Velit officiis quibusdam aliquam quidem autem. Quas aut nostrum aspernatur. Exercitationem quae et placeat fuga corporis possimus.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mrs. Tyron Swift\",\n      \"error\" : {\n        \"code\" : 110097814,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Tempora aliquam recusandae sint officia et. Omnis vel in accusamus velit ad aut voluptates. Sunt cumque officia fugit ut asperiores non. Fugit modi fuga distinctio laudantium.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Meda Weber\",\n    \"etag\" : \"voluptates\",\n    \"updateTime\" : \"2022-06-18T14:00:43.245509Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 1292766712,\n        \"details\" : [ { } ],\n        \"message\" : \"Voluptatibus dolorem quis tempore illo deserunt eligendi. Accusantium consequatur iste maxime ea commodi minima dolores. Quia quo ea porro iusto officia.\"\n      }\n    },\n    \"tags\" : [ \"n9hgvws10qqjihocahtrf8dvg67qc4zmmsktrtsenq0cjqfqu5soj68y70yatc1w2e4j0wdzr553qtpltep433le35xmowrhh0kich4v30f91zd4fxafzgy3zn4ebdqwcseilb8nsnjkzcvwpkxpvwfjj8aq8yc2i7cjpmy7xxdmvyvt3cnjbjespmkj2bz7l93qyn\", \"2wy4c4ttmz50kvble2vjqa3l4da67ffzg55prbzsjptm3ky1fvh905mqv\", \"wmmu1yhztbn2w68h3bxnvcs3pb16sk11dsbtx57mt1ie454brgwtaimncsw8blnx6emz0mfvay2rxp8j14gwztme2phge0nbipgvnn3yushjrt0n9f94qpr2rmvv0uth6h97fczzc10sm1l9qtbljf25mf0zdu1wq2s3qsp5yrbxea66l2pjlayr4o6a59001\", \"lfih1p83rkd0ghri5vhs1h02o19tji1x0z77n9b2nfhuuhdwziu5ifay3lxdp6q2eh2lvt0supec0tr6ycno7mjybq1f4dwpq92a7kjoc9iwhz3q8mkdtvh746qsx7zsk2wn8c0atr93mu2yrn\", \"tm2pme4kgv844meyh5tv9uu1zu21xylzwuf5nq9lavdbz6s8ib8yi\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/707098\",\n      \"automlModel\" : \"02be7b67ij0oueb27w41eyrsugb4mwppmje9mn4u8xpjhwojmwed9hck7o7720chkt75rvtgsy18ibs84uj9f2mibz8fqn69ypqqoucfl2ksiznvwkp11h02rvag6lc3quj5fxu1cbaqkz2e0hq4uyqorjxljdt5iwahj8afmmjvgk\",\n      \"sizeBytes\" : \"wysqu7n30tti4t0h4to0zmvqdicaas3\"\n    },\n    \"createTime\" : \"2022-07-10T12:04:43.245746Z\",\n    \"modelHash\" : \"7ebnfcjqbgbxc1ap4vxc5xii3t30tqk6wtu3chyfwxukxfvq66hcrtvp03nhq8yelmk2dyv9r9yc6ajt4q23fzleuz81\",\n    \"displayName\" : \"Lady Lueilwitz\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Moses Runte\",\n      \"error\" : {\n        \"code\" : 1887358402,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Eos quam ut. Sint quidem nostrum eligendi. Occaecati rerum harum aspernatur hic sunt cumque. Quas enim corrupti at molestiae.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Alvin Effertz\",\n    \"etag\" : \"dignissimos\",\n    \"updateTime\" : \"2022-05-29T12:22:43.245979Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1819070299,\n        \"details\" : [ { } ],\n        \"message\" : \"Enim et vel animi fugit voluptatum quod ea. Et fugit sint. Enim dolore alias ipsa velit delectus minima.\"\n      }\n    },\n    \"tags\" : [ \"pcqkqalsssghg1cjy96is9q4z8brpnkje5ppw5edrgxujeg0xhyl973gxejkrl0ek9wfh5ca4gk9\", \"ctqrurvn8lftc5sq4yq8qjk1rbn3y1c8px0uu3u0cginghuzjjy65l9r93elobtrko\", \"ri5fjagdgvkr2jd4usvovy27fvv1m7k75m314mn6yyto2x39fafak8jkvhcthz1oku2pnbejifnqalxl0ha1\", \"ri3m5dxwyxygkayst6ganz8tjkx63dqd4nnye0pw5ncmu56phdwi1hx\" ]\n  } ],\n  \"nextPageToken\" : \"cz4oy64xa5qnsptp76pkjrcb0wlag8cz3ipi3q55ukfl0mxp64mx9y4iltbd2ygt4ksbjxtl5h73czdmegjmge58rahp5ipy36dqyafx4yyvtv9p2e0noxl031xv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d900944e-524e-43e6-b45a-98453ba4bae5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:43.246368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.list",
          "schema" : {
            "description" : "The response for list models",
            "properties" : {
              "models" : {
                "description" : "The list of models",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "ed158655-f44d-45af-8e2c-92be3c499e41",
    "name" : "Gets Download information for a model. This is meant for downloading model resou...",
    "request" : {
      "urlPath" : "/v1beta2/Gaston+Dickinson:download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelFormat\" : \"MODEL_FORMAT_UNSPECIFIED\",\n  \"expireTime\" : \"2023-01-30T15:10:43.239837Z\",\n  \"downloadUri\" : \"https://web.example.mocklab.io/403932\",\n  \"sizeBytes\" : \"gww8l7csvcfxrkan6cxj8qw5w7hw061gwibqi68utqqq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed158655-f44d-45af-8e2c-92be3c499e41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:43.240068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.download",
          "schema" : {
            "description" : "The response for downloading a model to device.",
            "properties" : {
              "downloadUri" : {
                "description" : "Output only. A download URI for the model/zip file.",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "modelFormat" : {
                "description" : "Output only. The format of the model being downloaded.",
                "enum" : [ "MODEL_FORMAT_UNSPECIFIED", "TFLITE" ],
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the file(s), if this information is available.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "9127bae8-cc17-4d5f-b09b-fa0a2240e4a9",
    "name" : "Updates a model. The longrunning operation will eventually return a Model.",
    "request" : {
      "urlPath" : "/v1beta2/Chester+Haag",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Loriann Doyle\",\n  \"error\" : {\n    \"code\" : 1941983937,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Culpa officia est atque aut libero impedit eius. Et est molestiae expedita aliquid aut et. Maiores perferendis omnis saepe ut rerum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9127bae8-cc17-4d5f-b09b-fa0a2240e4a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:43.239777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "37cbe929-d0f9-49d9-bf55-bdd5969fa983",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta2/Antonette+Dickens+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Gale Schneider\",\n  \"error\" : {\n    \"code\" : 1459908047,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Suscipit ut facere sint autem aut minima cumque. Natus et qui consequatur dolores nesciunt. Placeat laborum aut qui minima nisi optio accusamus. Amet suscipit vel qui. Similique et nesciunt minima off\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37cbe929-d0f9-49d9-bf55-bdd5969fa983",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:43.239564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b305608c-c4d9-42d3-91ee-27b50db12e07",
    "name" : "Deletes a model",
    "request" : {
      "urlPath" : "/v1beta2/Ozzie+Feil+III",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b305608c-c4d9-42d3-91ee-27b50db12e07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:43.239267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}