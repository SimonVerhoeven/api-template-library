{
  "mappings" : [ {
    "id" : "33e6b648-a1da-4f81-a668-be4f6e479333",
    "name" : "Creates a model in Firebase ML. The longrunning operation will eventually return...",
    "request" : {
      "urlPath" : "/v1beta2/szl0ixs5rr8ixq8k7xl4uaee1q7yu/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Greta Dickens\",\n  \"error\" : {\n    \"code\" : 266605436,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Magnam est magnam alias id officia molestiae. Consequatur non consequatur commodi dolores. Suscipit consectetur blanditiis ea porro quae qui et. Totam eligendi et. Et qui officia nisi aut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33e6b648-a1da-4f81-a668-be4f6e479333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:05.520297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a77d024e-284c-4967-b5a8-57acae37874e",
    "name" : "Lists the models",
    "request" : {
      "urlPath" : "/v1beta2/l7ct1e6044i/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"models\" : [ {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/193889\",\n      \"automlModel\" : \"huz9ha0ow6ckw2qf13g6no8aa1wna9677fl6otepnsrbo79snyfdpaj9bsggh0u9ya51tc33plq6fd548p2xy3fzs9\",\n      \"sizeBytes\" : \"8y4tixkk40d57t8zus32kk49y151xflj\"\n    },\n    \"createTime\" : \"2022-11-02T11:32:05.516327Z\",\n    \"modelHash\" : \"vq11jl4oecoyr7ybaapedhe6hu8mmhs7pv1xbxtryjkd9pjy8chjy2qsfl1giv8f11roj0ihc881zr4wgy7qapkhcx8dkwn0674rz76c6v786ytdeuthr5zr4w9seu4hiuc0v29dc3y8bm30l2ke6vfcm34tm7bjx7rp\",\n    \"displayName\" : \"Venus Sporer MD\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Fallon Fay\",\n      \"error\" : {\n        \"code\" : 752900246,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Et laboriosam consectetur quia libero cum quod id. Corrupti voluptatibus expedita qui eum quia. Et quasi perferendis nesciunt. Sed esse cumque aliquid et laborum.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Jonah Frami\",\n      \"error\" : {\n        \"code\" : 171221505,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Aspernatur quia explicabo harum dolor sed quis numquam. Incidunt voluptatem sint repellendus aut vero voluptas. Quaerat dolorum mollitia impedit suscipit mollitia.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Calista Dach\",\n      \"error\" : {\n        \"code\" : 1546422948,\n        \"details\" : [ { } ],\n        \"message\" : \"Est consequatur iure blanditiis molestiae quibusdam reprehenderit sed. Praesentium et debitis nihil ea. Quidem placeat blanditiis. Corrupti consectetur ab enim.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Valene Bergnaum\",\n    \"etag\" : \"omnis\",\n    \"updateTime\" : \"2022-05-27T09:25:05.516808Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 154114309,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Nam aspernatur voluptatem et delectus unde. Dolorum at asperiores qui rerum est nulla ab. Illo ab libero ullam qui sequi consequatur non.\"\n      }\n    },\n    \"tags\" : [ \"bsa4rqsf7587dapkxzrozuribjz1lvexln12fuyt1gcrtoxfm640wq6xww02qtz8qu0pyhw6pln5t72rrjqv1o0ti1jnedsqkiro72eq9fn5xynf9nes8jfjpi97zr42uf91zjweh3g30cqszls1jzpx\", \"xnbmc0l3stlu0xuw5qkdnrate3zi73up4a8espdrvc6ancmaznq3ljze6qwlle6t3n5dfhjirbc850x0b6juygoc224gxbui5sudcgsrz639vz8q491obby\", \"h63kg9p0ubcs33c0n4y3vxwus2cy2xge0y6nckpl8yovdv3kcv52re2sa6lnjgu9hwtvocn5u4q8djy3adbj391a1em7lnp53b2iu7zq3v71dpihfqghsd7c1bnqg89a0kgc6qsi7m6epnqz0zg19gtyuvt8xka\", \"jb1n6mpxnb75wjsvlccv9w2vshk8svh4uenbex1b2hsy8hehkw4c11b1kfi8rms4wt6lh\", \"cnifgu5uj553dpynvdriygh8xan3hc8wzu6h1ekgq7bjb8igor871nbuhiyhlwcg2dcmtt2f86snemmuxc8g0m53759bnphyzo09xyefn2ftdgq67q8e060r33ijn4khqjdeftkk0fe3rpccx37fmeb1c8n4tgvb4d4do3hxax\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/946569\",\n      \"automlModel\" : \"f7ly19ml3gh94l5nzr2frnpppo4k28hxkq1l44doyzxiomlkopmoq65rvxy3tpdp32apj4zxbezwypt3pogk7si3p8ke6mylj2eifpk37yphddpea5grmgk48y12fm5eldb8r5v6mn90hakmv3yx46e8of9\",\n      \"sizeBytes\" : \"932hnwgm5vjvix57q0c3251ckwms082sm5eg5v9y55wdzv8annxea55sxmjftcerm0x8oylzdgxdt2af7694psunjvi91j8nnuxtz1v9jo4j8ud7m429uljeezu309fnbg9rf541op\"\n    },\n    \"createTime\" : \"2023-01-12T11:48:05.517042Z\",\n    \"modelHash\" : \"30jybo6u6d4idz7slyj26ks7vqprxzfs4f5u504yijcsot2uu8yxda8qwmyyuq\",\n    \"displayName\" : \"Karol Spencer\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Denae Casper III\",\n      \"error\" : {\n        \"code\" : 509724114,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Est quis iure aliquid harum quod nam. Et reiciendis adipisci. Aspernatur aut dolor atque et exercitationem molestias voluptas.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mr. Donette Funk\",\n      \"error\" : {\n        \"code\" : 1029812196,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quo porro rerum odio laudantium officiis. Ut aperiam excepturi sunt culpa aperiam facere nihil. Incidunt officia sit.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Tressa O'Conner PhD\",\n    \"etag\" : \"minus\",\n    \"updateTime\" : \"2023-01-09T09:06:05.517401Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 20760090,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Repellendus tempora at. Aut nemo assumenda mollitia ullam. Incidunt doloremque ut non quidem nesciunt soluta. Quia aut recusandae assumenda sequi adipisci mollitia nam. Nesciunt est sapiente.\"\n      }\n    },\n    \"tags\" : [ \"r8nep8zvvftdw87e6udfo07zhdfo8zx8lpu5086vw26srabasghl6ef4p2oa0rreu604dkgfdlv3phpc51idwmvg85fr02egi3qiw1rjy21y1666aj56d5v9swwy9pmga8vvkflq7ora486\", \"s228idgngg3aqqaloy81ywxzzz3o1r0kfgn5n3aenia0mzec3uradc1rgskbd9\", \"d314yl1xcunmry10sfdnhlij1qwe1a2ak0q2mrg0maf3a39nooede65he2fshqhzqdp2jh4ifqvm3g89gpsc7png9zkuk98fqxu5pq1bge9pe10vxoxo6\", \"op7zk9f98vcnr2qvyygtt4944kz9iqhdijxl6jvgl8vgu7et7egvomgbwm1p6dgp2an1gudf64tk1pp11diddjmsr87emsfda2iid5r7r\", \"x43ixu3y732ugwp5vc4d7uxjkvza6u633oubz4d0ynt\", \"m60aku73f78rccxvxdlrwy1pbgrbbwgas2xprif\", \"zsoatlsf4b3lol3e5cykcyr8qjfv6w9jebl3eg1udd0b1ohz9fot5noufnhhxbdcwvatc12ldfkeb0b61rhbtxe6s4z14kq0cegynhq3xo5l3rlt2mtfkc1xvis0yqi43feyqvmyssw5taz1zizd1bud0d1m1fzefv56f90hj40u1p9nd\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/998744\",\n      \"automlModel\" : \"xiahwb7yvl4tj4ab5r9mdhe0f2\",\n      \"sizeBytes\" : \"9xst85nv8d9dc5stuty9cdfxironkdwwl2r3yofp1h7oh3cwmcwkuap57cayh3hchp9ph4dtnz\"\n    },\n    \"createTime\" : \"2022-09-26T09:53:05.517628Z\",\n    \"modelHash\" : \"j2gym9ozbnfqf9er42cs0pmr4qlqsic5ca1g9v9xx3orh732q5io89ey3tfooa02v54cr7hc7pc4op3asmbll2rrwrmoim23op52wd4gcgnn6m3h65k9jzkfenucit8vx4b24uwxsz1u5eyxpqxa60l5ivzu01wj\",\n    \"displayName\" : \"Adolph Krajcik\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Andres Feest\",\n      \"error\" : {\n        \"code\" : 477437988,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Hic omnis voluptas vero amet expedita. Aliquid pariatur doloribus. Ullam sapiente a et et aliquam. Et est aspernatur ab.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Cornelius Lynch\",\n      \"error\" : {\n        \"code\" : 1757299453,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Distinctio facilis qui. Vel impedit architecto at quo molestiae. Provident et assumenda ipsam quis et. Rerum dolorum amet. Ea quo praesentium in.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Eveline O'Keefe\",\n    \"etag\" : \"molestias\",\n    \"updateTime\" : \"2022-06-21T09:39:05.517978Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1232429685,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut officiis quo nam. Voluptatem cumque debitis quos debitis. Minus omnis debitis distinctio placeat. Incidunt ut iure quae.\"\n      }\n    },\n    \"tags\" : [ \"ne2cjvs69ns8uff63ckeua7lj23o4r4fimgjsohvtedoanwzudea7ptjqbrx6nu3x1r788qeapkyt8nta3wvbrp\", \"8ks4lfzzo0rd3oz3i1yph8lrxtx282fmh8anpdb58ogoybcu3qcwy1s3qf05i7xbzgokfmmvx5z9505in78qslwd81vo1hi0d6egt7wmotv7f8iw9ymmydhuoj93jsskndpdhjpivagj4a78ot78c1bmf9qsizggi0pars5ng2\", \"8bjhspddcketcvuz0kkq45wx\", \"4noizkjcsrdqxkj2eqtai6ixlmarb87ytebh446kx1r2l55\", \"3xrexrdmojvyb9boc148zk5mnadakuqo9wrsg9cp1h6ishh840g6c7vscqa3q7hgjlbwueyrmizkcoj84ot\", \"4qd7nbalk2wj1n76epadrsyd43daizqpul5qo51ru29wj8xjzyivh1xos2or3uaw8kel014ip90qpvwl6x9hgu9v7swby2ovihzhubyddlla2wqtk794vdtdizeq6yo20q51jqq2vfiy\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/005005\",\n      \"automlModel\" : \"vhz3g6654l0b72cp6hytt4xz4vbip8d0s7tir5gr5q0azgjt3v3xlreh30em3b9vd9qsclddjj9id86tkapew04rsv61j5vlgrqprhkqcenpnlfynfs9b0tc7yl6zu52r1uxb6pv2hxhe8bzfzag6bq30cnawb86hztpxgj4ouvhtkq\",\n      \"sizeBytes\" : \"vc211v1w3tee568ucypp2yc9\"\n    },\n    \"createTime\" : \"2022-05-07T10:37:05.518203Z\",\n    \"modelHash\" : \"h42b3lpni5syz9sb5udmpoectax1ke7udxxu8dkd13jrim3s6yvotumz3zmedtic2cf1bxhsvtmee3h3lm2da1dbdq8nsel5sapw6tzwem26qhybj32f4pn7znh7i9d5vvhfdjbcn4tevfahg9sgofa05do9qjheznten95hvh40nhw4zb331i0hbapjpj2loec\",\n    \"displayName\" : \"Guillermo Goldner MD\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Anh Kiehn\",\n      \"error\" : {\n        \"code\" : 1698122827,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Est inventore quis eligendi facilis. Facere quia recusandae tempora adipisci. Omnis quis fugit. Et et et est vitae. Id aut nostrum maxime quibusdam est est deleniti.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Rob Mohr\",\n      \"error\" : {\n        \"code\" : 535214830,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Numquam alias non sunt eos accusantium. Ducimus sapiente tenetur. Laboriosam magni eos mollitia cupiditate perferendis quis. Enim impedit id est distinctio.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mariam Kuvalis\",\n      \"error\" : {\n        \"code\" : 1835868245,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Reprehenderit sed architecto. Corporis unde natus illo. Recusandae odio deleniti. Nihil molestiae voluptatum consequatur dignissimos modi officia corrupti.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Jean Gorczany\",\n      \"error\" : {\n        \"code\" : 1178540004,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Quisquam doloremque et architecto soluta debitis dicta. Vel non dolores ipsam temporibus ullam. Nam vel soluta aut libero sed autem.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Claudine Reynolds\",\n      \"error\" : {\n        \"code\" : 810547564,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Velit deleniti rerum asperiores rerum officia et. Eum est accusantium quam repellat in quasi. Dolorem id iure sed consequatur vel distinctio. Asperiores voluptate aliquam occaecati.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mitsue Berge\",\n      \"error\" : {\n        \"code\" : 1678348728,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Impedit rerum quos est nostrum omnis. Inventore corporis velit. Dicta laboriosam possimus est possimus distinctio. Et consequuntur illo velit fugit.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Wendi Upton\",\n      \"error\" : {\n        \"code\" : 1658383231,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Aut omnis repellat repellendus. Ullam atque cum aperiam tempora et. Fuga eos enim. Nihil explicabo eligendi adipisci ullam quae.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Tyrell Anderson\",\n      \"error\" : {\n        \"code\" : 520550563,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Sed sit praesentium dolores quaerat nam quia. Et ut modi quo voluptatem ullam. Doloremque atque doloribus et et. Ut quo rerum cupiditate. Qui aliquam in facere rerum.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Delora Gutmann\",\n    \"etag\" : \"incidunt\",\n    \"updateTime\" : \"2022-08-27T10:21:05.519185Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 135826133,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Aliquam quod laboriosam quam aliquid perferendis porro. Impedit officiis aut voluptatibus. Ut porro in consequatur. Eum voluptatum exercitationem nam. Cum sint minima vero at sit accusamus vel.\"\n      }\n    },\n    \"tags\" : [ \"tw8exvrqy5g1hifjkauy5phot4smnnh1wdglk7o6dez2t1hdui7b9h36znx0gplv6mokmxwubtv5k7wkltqz6ir9u6h1qp4cb87pjrxdht06nas7ojixg\", \"ijttbojqfs5zu3qsjpruggctf2z1p37saxzavalok82r1h24clkhew07opy8o55wldgsjqo3hr38h\", \"oir9v40pwvl0bi3t8mnieq7iono8svjqcmho176h6xed6t35c9vk9jfbgs4fulm4bcbxhc34sa7gggupkgoq0qek6jf7x2vvqt19whqlfvh6uztpz7szn9auz7\", \"7ehy1ucku1w9k8s04v80v8ph5tcj13u7icomght78lpvfy9c6uy77z2d7b6ao25gm2ia79r57ji8m7ps57wq1sih4da68x5r64344hic42avhhyannoljptlle0aj0dnzm6w4biulqmd4dm0rdgbq80hh\", \"h7433vvmspi0ru\", \"9gcsjf74drrs6c0gpdhw8en8cts7803vybdrak3lf1zrfvzszhwowslssczsh9hrp9bpohf1a0cqtbdofrq0k1ohozvi01yd83xtcrm4oz3lyw9xaqv5a31r8sqm2gdds819kk12z28zg1c6nqm8pcqan7a8d5qsg16zj9v\", \"xuussfh7n6f501fdy868c6w1hdcmjacfjj5v5jjee817ykt8zujg0dhhagrdjgww43pchxhlpcv5gfc7e89g80dfinja\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/920042\",\n      \"automlModel\" : \"mm9fflxydv9ve52z4tx5ycncusmd5xh7gi1y05skkl5na129cxsthxupeehl2iysmw40aseksavdl5ath\",\n      \"sizeBytes\" : \"sfo9ybl079j2q5klugiog05zppvai5m4w4c2i6qq6d3ccv9gutymp7cip9fqgp5757lp1uxcstd8onjsen0rqt77aybbkz89p1exln81kx8b42osujur7zde3a34l47px6wnku9yn19fvzv5pba\"\n    },\n    \"createTime\" : \"2022-04-14T08:36:05.51944Z\",\n    \"modelHash\" : \"8wwnyp2u20xtcbelznb2g7oykkf6u2vltg5eswsvo3wc2fx928amftk96wxnfdoc0fupxisw3l2fsgonpel4ocgq9a1ibo5rzhi0awd2pjl8n1t36xaty5oezxgdeo2xra5jahsdp90pa\",\n    \"displayName\" : \"Erin Marks\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Lenny Hickle\",\n      \"error\" : {\n        \"code\" : 181964525,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Id sed et recusandae et dolor. Tenetur ipsum quo ea vel rerum omnis ea. Nemo dolorum aut.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Ms. Vida Kozey\",\n      \"error\" : {\n        \"code\" : 1394859076,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Nihil quasi magni quis. Aut voluptas perspiciatis. Quia eos natus maiores praesentium consequatur nihil.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Maritza Ritchie\",\n    \"etag\" : \"quo\",\n    \"updateTime\" : \"2022-10-05T09:19:05.51979Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 584619360,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Voluptatem labore possimus molestiae et dolorem. Velit nobis laborum. Laudantium mollitia temporibus culpa quis sint.\"\n      }\n    },\n    \"tags\" : [ \"n30ss4lll7jk75blgkl67fz0jrp7ojzrl0lr0280na1vb84kkiza50p5asuvw2lks85143xrz5jqgokk79i5o6z00ym7y3ow7q047zc71sh6h3u6olm1g2c13n7x3e3k44bvi\", \"1nzpcidhi97e4rb2x86sve759zyclllp\", \"23gk9m3ttbsf332duquj59fqwlcqae6tnez8k4dm8pi5ma2e9wnl1gdlbfrudmo4bgnhutrkj8v5xtb14ov6hpcggg6q0dyozylr6y58nz26i1uel4715jehru26036omvo5vgrwn2stehh1vav3toq117vddcqj03mkrcuxw61m5fiuze70560dlnpsr3gz\", \"gfu3bwt2r0798xoknr81f\" ]\n  } ],\n  \"nextPageToken\" : \"u81gdkk0333nedybdvwzj5sy67on9vwze\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a77d024e-284c-4967-b5a8-57acae37874e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:05.520072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.list",
          "schema" : {
            "description" : "The response for list models",
            "properties" : {
              "models" : {
                "description" : "The list of models",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "c818f574-f0f8-409d-b8d1-9109cc6f734f",
    "name" : "Gets Download information for a model. This is meant for downloading model resou...",
    "request" : {
      "urlPath" : "/v1beta2/Jacinto+Wolf:download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelFormat\" : \"MODEL_FORMAT_UNSPECIFIED\",\n  \"expireTime\" : \"2022-12-20T12:12:05.51594Z\",\n  \"downloadUri\" : \"https://web.example.mocklab.io/622508\",\n  \"sizeBytes\" : \"1wy4ia2xx0748sstt421saty7ym5prmea4uv3r0rh29fh2awnqvsws0prpno2g7f7st6mpwl65vvo7ucv1xrzqfvxsid4oxfjdnwez2vqsh2uxm807hxlmlad6wwzwkhy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c818f574-f0f8-409d-b8d1-9109cc6f734f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:05.516162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.download",
          "schema" : {
            "description" : "The response for downloading a model to device.",
            "properties" : {
              "downloadUri" : {
                "description" : "Output only. A download URI for the model/zip file.",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "modelFormat" : {
                "description" : "Output only. The format of the model being downloaded.",
                "enum" : [ "MODEL_FORMAT_UNSPECIFIED", "TFLITE" ],
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the file(s), if this information is available.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "930a53f9-6a3a-4e99-921f-3bc4c5d8a219",
    "name" : "Updates a model. The longrunning operation will eventually return a Model.",
    "request" : {
      "urlPath" : "/v1beta2/Cesar+Nicolas",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Willie Schowalter\",\n  \"error\" : {\n    \"code\" : 1475016812,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Et perferendis debitis blanditiis non incidunt error. Quae a aliquam est qui quod accusantium maxime. Porro qui eius assumenda non voluptas suscipit quia. Unde eveniet est eius modi.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "930a53f9-6a3a-4e99-921f-3bc4c5d8a219",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:05.51588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "20534ff1-edd0-49cb-9c9b-7baef9f56896",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta2/Tova+Haag",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Maxima Casper\",\n  \"error\" : {\n    \"code\" : 1803169433,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Repellat qui at vitae. Ad ratione omnis quod. Nostrum mollitia consequuntur quia praesentium ex.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20534ff1-edd0-49cb-9c9b-7baef9f56896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:05.515648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "8e452493-3670-4f14-8243-9521c51c52f5",
    "name" : "Deletes a model",
    "request" : {
      "urlPath" : "/v1beta2/Danyell+Roberts",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e452493-3670-4f14-8243-9521c51c52f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:05.515296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}