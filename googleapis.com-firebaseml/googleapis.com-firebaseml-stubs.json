{
  "mappings" : [ {
    "id" : "3b6e25cc-8584-42be-a19d-60fa58002752",
    "name" : "Creates a model in Firebase ML. The longrunning operation will eventually return...",
    "request" : {
      "urlPath" : "/v1beta2/qqqnue48dqijfnv3h36je4mpkode0gsssqdfuk4llgokv1ljm8zm50zuk4etxk8ml82i1df06r1mlg495nmuibx3yw5awve1ieawlppcjlzcffz6cepb16wcfo2a2gi5u9994pfeg98/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Gil Lang\",\n  \"error\" : {\n    \"code\" : 1086180728,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"In commodi eius qui aut dignissimos. Aut et est debitis. Ea temporibus dolorem voluptatem et. Placeat omnis rem. Molestiae quo odit atque sunt dicta.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b6e25cc-8584-42be-a19d-60fa58002752",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:27.760938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6bd5409a-f8f1-43ce-8e3e-e873e184f9c9",
    "name" : "Lists the models",
    "request" : {
      "urlPath" : "/v1beta2/t8xjs2u0jb42bb24hejcb6o28xyt26e607vgueirhlpl46eb1b7gducl3351odmow7ljucunxnz4vp7c3qio7fuv5crz/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"models\" : [ {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/340713\",\n      \"automlModel\" : \"ptme37qjticojlk9b8lriumfqignmiparprvjsj84e6d4uyp4i628ivi92uxe0394u10os194fqcz2mwveibtyfxmopxscmdd2cda25g49cnjvp7ntp2svbenenlqdygavxfbfej\",\n      \"sizeBytes\" : \"mujzi5raz52a7smc00v0lrjpjgafvp7xvn59sm0am4sl071g0cdaj0b3ihx5spxxgfi93ulj7ke2zc4cu9llg89n11n7p9qodyqv\"\n    },\n    \"createTime\" : \"2023-02-06T14:09:27.755308Z\",\n    \"modelHash\" : \"03gu88ewg9eu3psonhggo7ttd8nvipmmubklr3gxchxbfypyy20o947p5x4dbfdnnasykai01kpvj3uoub5siltkkz4hx4pxbbr5e3dq7ua258vsg25nzw34lrfoxiy9ozj6b40\",\n    \"displayName\" : \"Miss Baumbach\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Augustus Harvey\",\n      \"error\" : {\n        \"code\" : 334895635,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Quidem dolorem cumque sit et. Sequi a quidem quia dignissimos adipisci. Est quaerat veniam beatae consectetur. Adipisci in nemo quis perferendis.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Dwain Stanton\",\n    \"etag\" : \"ratione\",\n    \"updateTime\" : \"2022-09-04T14:12:27.755584Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 63392060,\n        \"details\" : [ { } ],\n        \"message\" : \"Repudiandae autem quam. Neque blanditiis odio. Maiores et doloremque. Ut quasi nihil. Quo quas sint necessitatibus.\"\n      }\n    },\n    \"tags\" : [ \"99q8d5ns7zc9gw60ms0mmx7kkyqr37mvngsalun7s2tcrlxl49r65rrpmxia97n4al6avtdqdfj5ahg0aiwjgz1thmrrly\", \"gybt5c015vvy02u7bhk0ncbesoeelaov191up3vd0bvwoauguptd6vb8mwt2h169ojqlnge5v1xooedffqafqbgg6f4873wue9we5zu357jsxprc3aukrb13wm\", \"evqdf55b4090htse49v351bngsqgvdnitb46fsupyxj6isr2x1or\", \"2ng9wg5evxnl79wlzc415f3tg4aofyr4xiiwjsc9yxtv09ecikuteqio89lh2c54emkxsrbw8vp4s5hzu8p7p6joptqecsuqq\", \"37ajxaa620q9yjqi4kk0tq52mbxn6zinwqzgfyq1vv284grfv8wmu5vjhkh2n9qge2b0e9r1drb3tdud9hish943oc1f4yt11vge33c2exeyke2daei7tyk2scjla0j218hfywr\", \"5mqyo8jjnbhjn0giqnc6jggqanu54g07omxucp2b77vt7k5jeev16kirm7raujjh3xtyvyo34kbmvgwwtm1p2a2yymrtla12f0afhiimv9hvvdr9a5yirafqyrkanbaxz6b4\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/973912\",\n      \"automlModel\" : \"ehcvfy3k0ujs2f2fnkriidqcrrp17lf4ciso9zmxqihx78z6bg0tnd86lutd1uxkf\",\n      \"sizeBytes\" : \"ulz2t4phi2t5h0ay1glemcs6hs3k7qk7ub8031g4pjjm426qeeati8ibrcch0pqvea26zxpf27ds5s4penytnlibtn5g2bxgj2ku9wy4m\"\n    },\n    \"createTime\" : \"2023-01-08T13:41:27.755808Z\",\n    \"modelHash\" : \"k3ouvkf2tcz4lnu0mi567gc948z44sta08cclllyeauaew1sda\",\n    \"displayName\" : \"Kimbra Kshlerin Jr.\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mrs. Mozella Gusikowski\",\n      \"error\" : {\n        \"code\" : 1877406269,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Non eos facere qui sit. Accusantium minus beatae. Perspiciatis aut aut. Saepe sit sunt. Qui mollitia dolor recusandae illum nulla facilis.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Gerald McClure\",\n    \"etag\" : \"autem\",\n    \"updateTime\" : \"2022-06-08T16:59:27.756094Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 2094289261,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptate enim vel quod fugiat. Temporibus quibusdam autem asperiores odit dolore. Nobis est voluptas commodi. Temporibus earum voluptatem blanditiis officiis id excepturi. Qui nostrum quisquam maiore\"\n      }\n    },\n    \"tags\" : [ \"g5o1hc56fac4mkr9drzdb9ndilk5o2wdwxh7o1dyx9beko8415g3t9lt29bsmepw0hb9hphvv0tysl61ir1bmyckwgeqa5ljosg8wp9cuzis83dn5ki5g2q1kp54afo2nqanwhufo76ve5y0lh2adbqyuput3vfqx8dv7dqvwr8bb1f760yem\", \"cq3qlnh87f68fsz03axags3b2s11ll1agpc9113g94ko6tk4jlfj7gby6dmdx47l9tchvjmjcqmfcc0wtieje7usx59k73hx\", \"3osaav8dc7eiagqv38620h67pn3bg3ael403n1typn8dixi4vuwsc0tnu3d63grj0c1y7tl0m9ucxilbcy6epb310jresy9w75g4\", \"dz2u4u22bczvnmnor4jlstjmlvsds43e2d7f58kycuik4hc8spq7uuzqqy2h61fgghlrd6fbyajcyykmylg1yx6xt1ve4qs54bosdg61b5h3pgywa94znj8y2974djcigyebtmsri7h0k025\", \"jgmolg1sl8p5\", \"r1qyf651037dm8zmajd7izwmqfxderelq7so95yujmjm6a9wky\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/380573\",\n      \"automlModel\" : \"5zjne85ggzrzttfdfc3zqkrjld4t2lkdwn3fczh5simxhbndf0xkfjg78kb6jcwe204ip802h3lcw86fp7angmiazsdlmv5i5mhaommwyn7\",\n      \"sizeBytes\" : \"qm1g0wfj0ero4rmg7vel6englvzicvk7yeqlt4cueg\"\n    },\n    \"createTime\" : \"2022-07-16T16:15:27.756331Z\",\n    \"modelHash\" : \"p4rdis12ankb50ch9o6ocjfwnu7e\",\n    \"displayName\" : \"Arturo Metz\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Porter Kassulke\",\n      \"error\" : {\n        \"code\" : 196424947,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Inventore nobis nulla nulla exercitationem. Dolores nam ea quo dolorum perspiciatis ut. Doloribus hic vel aliquam et voluptatibus at. Placeat deleniti magnam et.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Ms. Sumiko Bartell\",\n      \"error\" : {\n        \"code\" : 1866718026,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quibusdam ut est qui reprehenderit. Qui quibusdam distinctio qui corrupti omnis excepturi quo. Accusamus minima est quia voluptatum rem. Voluptas itaque quisquam dolores magnam placeat debitis.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Louisa Wunsch\",\n      \"error\" : {\n        \"code\" : 1642022189,\n        \"details\" : [ { } ],\n        \"message\" : \"Mollitia molestiae consequuntur explicabo. Placeat omnis repellendus expedita nulla dolore. Dolores ratione vel molestiae ducimus laborum quo consequuntur. Qui consequuntur excepturi incidunt velit au\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Miss Shin Friesen\",\n      \"error\" : {\n        \"code\" : 795114822,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut atque voluptatem cum eum. Ut assumenda unde et occaecati sint. Quidem ipsam ducimus. Quia adipisci nisi mollitia ut.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Shad Kling\",\n      \"error\" : {\n        \"code\" : 1768833716,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Facilis odit beatae quo. Dolor ut fugiat ut in. Pariatur unde odio eum nam quo. Placeat qui assumenda iste delectus dolor.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Rod Wilderman\",\n      \"error\" : {\n        \"code\" : 1658432975,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Exercitationem minima atque et. Amet blanditiis dolor eos cumque quibusdam. Tempore officiis illum natus dolores in. Quia dolor ut et cum voluptates aliquam sunt. Harum voluptatem mollitia aut nisi.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Ernesto Orn\",\n    \"etag\" : \"illo\",\n    \"updateTime\" : \"2022-10-02T13:40:27.75719Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 1526834933,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Ut possimus et. Sit doloribus rem excepturi. Sint similique ut laboriosam dignissimos.\"\n      }\n    },\n    \"tags\" : [ \"ehwuw328gw9fhzq38us059toea01uapdrc882wbdr6mq5wc6gqokixza50a0bksncfdnd8mdmt4l9x283gryg2tlfdn9g9kjdi7h0vr47dte3qt7791v942xn2s74bdiixu13\", \"ks34alnidlr1mf6g9y8p3790zllvv88uviccl238icvm5zouq4ig1vfjob0kb4oqn0e77bt1d3qj0wyh2j9c8yjnp8f6tnewg2185pr29fa0361o9owo4botewaiqlq9629gtmsiv44lupgomied127\", \"vp75297ey30vu44nqh61ghahco0whd3dpufy0j\", \"101e5z8cd3bt07d7reuogotr8u6eza6usywhlrm0tb19o8el0cvjm9pk52czf91s9l3t6j2bbo1ba9jxdw9xrhnlep6jgvtbnzvz77h3cat3e0swmt2iijg1gr6srs3j7daphwrw0o3dq159vtlfzbfdjf2tyof7i620zpf7f7q2le99r23ea5ekfe\", \"2sllea5u75t8w9x5q7ug2exnkog30uw1hg969mmh1zh4dr3o0owb2qyt798zmdsvuc6ctksrqb6gtrlmq0py2yd7ctokk\", \"njqfyae8tkbw6ogvrsfaat1k3smxws5f7knqqwzbccjhwt1171pkzm0r3mqenq2q8pmrep\", \"mtn27gk34ztuz7bpyw76kul52pzlnt6t0v977rtr6ae7gu8\", \"uuxw0jg1gfkpby86ynf54mlth312z0pnra6gwzbpzd8kibg6gu4lgih1mnmdvrato1czcp8jjjr4gqw49ux3mu5h3wk6q69s1r8o6bsmht8jfvi0vr2tj0\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/337932\",\n      \"automlModel\" : \"3ygviyp8ale9dokal4ju\",\n      \"sizeBytes\" : \"0a20\"\n    },\n    \"createTime\" : \"2022-11-29T16:14:27.757428Z\",\n    \"modelHash\" : \"xqv8rfzra2lxrsxx33l4dcnz2cz6tc4xjgi00tx645tr9o6fouv5fgkgze1436iddm5x0cimg32uyynropsbd0y8mwza6t29728u6len0\",\n    \"displayName\" : \"Mr. Jimmy Wunsch\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Sherika Koepp\",\n      \"error\" : {\n        \"code\" : 434439120,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Dolor reprehenderit cumque delectus voluptate sed dicta magnam. Molestiae nihil incidunt. Quidem dolores magnam dolorum facilis. Atque a vitae nam.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Harvey Weimann\",\n      \"error\" : {\n        \"code\" : 943691854,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Facere necessitatibus quis possimus rerum voluptas qui adipisci. Sit est est asperiores ipsam sunt amet tenetur. Laborum sint a libero quidem dolorum. Et reiciendis expedita odit. Est sed deleniti asp\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Lanette Hane\",\n      \"error\" : {\n        \"code\" : 101013118,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Eos eaque et. Eum veniam fugit id voluptas minus animi quae. Aut nemo sint. Sit cum officiis ratione nihil quae molestiae.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Gabriel Kub\",\n      \"error\" : {\n        \"code\" : 608793125,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Labore nihil odit id sed autem rerum. Tenetur sed corrupti assumenda libero voluptatem corporis. Commodi dolorem quae quasi est dolores vel exercitationem. Consequatur iusto exercitationem corporis. Q\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Phillip Yost\",\n      \"error\" : {\n        \"code\" : 1211835653,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Sed aspernatur odio velit. Nulla aliquid est quo fuga vero in. In illum architecto debitis. Eius et deserunt maxime ratione quia modi aut. Perferendis quos consequuntur consequuntur voluptas.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Jacquline Parisian DDS\",\n      \"error\" : {\n        \"code\" : 1422054220,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ducimus qui sint vel nostrum aut molestiae quas. Quo consequatur eius qui quam quidem necessitatibus. Sunt rerum consequatur at ut quidem ut mollitia.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Luis Heaney I\",\n      \"error\" : {\n        \"code\" : 1638936049,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut sunt ipsum voluptatem numquam ratione perspiciatis aliquid. Eos est nesciunt vero consequatur expedita sit. Est doloremque ut atque autem ipsa repellat. Nesciunt expedita in autem ipsam voluptas. T\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Kent Ritchie\",\n      \"error\" : {\n        \"code\" : 1342398939,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Sit delectus voluptas. Velit eaque velit necessitatibus impedit delectus. Et odio iste.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Guadalupe Jacobson\",\n    \"etag\" : \"illo\",\n    \"updateTime\" : \"2022-08-28T16:14:27.758527Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1218250569,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Quo ipsam rerum quis repellat. Fugiat magni rerum nisi esse asperiores. Blanditiis deserunt pariatur.\"\n      }\n    },\n    \"tags\" : [ \"vmnvyhlf1saxc2sd3anlqtret64q7e1dcmdsjxzfxr87gy89851e7vxg6f0er6t1u1pzpe6kzuu7aph6nu97z95156l3zks8sc1jfdsphqlppv3choa01qfn8o9cmz92emlomme61ec\", \"tpjmc4r491byssd0ug8p6bo5qxlzduoxayninz429j4hf369f3jagn3m3kielxwo096hyipvrvao1bhjvis9mysjbjmf8vfxzuqhr97ae6d9o5igxevuejfdy758\", \"vp2lhc8l9h9mdcaimqjmy2m7lt141dql\", \"hl6wpotpaupujm28lleksho0hbodsbaj3r2pu65brwhiigrrdtx8pakgkxcqknveaq8o07g\", \"dxzp6452qnmn7c6ljsdr3uhrjrukzfmncyit9044xmlaq9r3jekxn1zzmsd2ycj3juzsf3hfuq97ljyy2p9oh2wd236mzr12n14slxnugp541tk7dpz6wvdy90euy\", \"adqxkutay84olc8qao\", \"6k378ty8prd31sczmwctpdcsugnz8wy4me34dljgcwdndm42bi3\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/646365\",\n      \"automlModel\" : \"dx20pvxqgp3li9o71ai0ss531cwadktgzpl6mu2yfe18zrog525t0b9ksw9sw6n2d9hzaymlsnu3fa1ofv7bxoru78ad0fbn4kqyhtuk6xwylyqxztchzryiatbnrr2po7sk7cde6wsgajfbnqwcjzvrgtbf0a7uk6u1d4kzrjavvllk972g725xesw1b16ip\",\n      \"sizeBytes\" : \"0ulkrb93k9p11jcluvag3z2h5oraa5tffhyktqi6ny8rsgszgtnk6xeqqw7koxq\"\n    },\n    \"createTime\" : \"2023-03-05T14:40:27.758761Z\",\n    \"modelHash\" : \"44ry3mcuztdm2\",\n    \"displayName\" : \"Leontine Predovic MD\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Dr. Elbert Waters\",\n      \"error\" : {\n        \"code\" : 1970847865,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Quo et sint eveniet distinctio quis. Voluptas consequatur dolore asperiores. Voluptatem expedita vero. Molestiae voluptatem cum explicabo.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Miss Scottie Hyatt\",\n      \"error\" : {\n        \"code\" : 5696093,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Officiis culpa aut nam quas similique molestiae. Saepe sint ut quisquam. Distinctio esse cupiditate. Nulla dolores blanditiis veritatis veritatis distinctio delectus.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Hipolito Lueilwitz\",\n    \"etag\" : \"amet\",\n    \"updateTime\" : \"2023-02-17T13:48:27.759145Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 116334755,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Ut sunt ut consequatur odio. Necessitatibus et neque amet rerum dolore omnis. Eum voluptatem dolorem harum. Cupiditate facilis corrupti sed nam ea. Dolorem minus et aut quos excepturi ipsa officia.\"\n      }\n    },\n    \"tags\" : [ \"y2almeqoeexckbr\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/617922\",\n      \"automlModel\" : \"puqkazfenmmryce8v7j0s28j1ak5tror9ge0sq19noxrkcm3ee508qniflniqdrldijyqoa456xnqaqmhzqit5bhq7adxf\",\n      \"sizeBytes\" : \"pxd7qd8ms39ufv181cdeju8s2fxgd5fm\"\n    },\n    \"createTime\" : \"2022-07-25T16:48:27.759345Z\",\n    \"modelHash\" : \"9rbcv0cvkezsxgn9qywgj9ddqsgp7tdj6hfbuoydgpsjrzrj34v4du14qgbw4ftkhox9zyf5p4fzxpf4grmaib3zescuaeqixiqoq3bwxgvvserd8t62f8umy9j2huaeifimvm51rpxxbmzlbsi\",\n    \"displayName\" : \"Rodrick Auer\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Narcisa Thiel\",\n      \"error\" : {\n        \"code\" : 2137925431,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Alias sit id quia consequuntur. Ea velit possimus quas. Adipisci impedit ut repudiandae facilis. Qui est blanditiis laudantium. Soluta veritatis accusantium deserunt voluptatem excepturi alias corrupt\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Louis Murphy\",\n      \"error\" : {\n        \"code\" : 484602562,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut dolores temporibus quibusdam tempora. Qui voluptate ullam illo. Animi consequatur perferendis culpa quaerat optio. Non ut sint minus. Reprehenderit laborum quia omnis.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Alonso Graham\",\n      \"error\" : {\n        \"code\" : 17264140,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Nulla vel natus. Minus laboriosam ut natus earum. Tempora quasi nisi quam cupiditate qui non. Vel vel et nemo debitis. Est atque quo cum et.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Darius Wisoky\",\n      \"error\" : {\n        \"code\" : 773481464,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Eum eius itaque est voluptas aut magni dolor. Dolore est voluptatem consequatur. Voluptas rerum itaque enim molestias perferendis. Sapiente blanditiis architecto consectetur velit. Eum est aut rem ut \"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Alex Conroy\",\n      \"error\" : {\n        \"code\" : 1258582729,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sed aperiam dolore tempora odit aliquid. Recusandae unde enim molestiae quaerat modi officia. Consequatur qui voluptas blanditiis vitae aut. Et recusandae eveniet nulla dolorum animi error.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Catarina Balistreri\",\n      \"error\" : {\n        \"code\" : 1881409969,\n        \"details\" : [ { } ],\n        \"message\" : \"Eaque labore quia praesentium. Aut voluptas nihil quo voluptatem ipsam. Saepe est et officiis amet sed. Commodi sit quis voluptatum.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Brandon Rutherford\",\n      \"error\" : {\n        \"code\" : 1843770562,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Non praesentium porro quaerat. In quia aut. Et corporis quae ratione et.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Francis Collins PhD\",\n      \"error\" : {\n        \"code\" : 958947545,\n        \"details\" : [ { } ],\n        \"message\" : \"Asperiores dolores sed. Numquam sed maxime ipsa est cupiditate qui. Non quod dolor.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Ray Monahan V\",\n    \"etag\" : \"uuuut\",\n    \"updateTime\" : \"2022-10-06T16:48:27.760406Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1733738629,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Rerum repudiandae quos. Voluptatibus expedita sit tenetur. Iusto ratione id. Magni porro placeat ullam nemo et mollitia. Placeat et ut minus.\"\n      }\n    },\n    \"tags\" : [ \"1zgt5a7dijbp2hbbesnhrh5ko7r47116puarggaykiui2h061l4oihsl3wlqc08\", \"n6d129732ogip1uvuuhus5ttpdol10g096uyn7wtlql95\" ]\n  } ],\n  \"nextPageToken\" : \"wcsc9wkkjbaw6qqkv65e9h4b72zquj1hndacmlcepdvexbgvyrd96p8t45pd3vpkfnx34h0ozzaytvart4wu6ag8vyaask3degwef47awzvtvzhs59pghbmif8jptor2k2gxyhwg8rlxzb05ln90em9553wb9hluoolfz15m8bpe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bd5409a-f8f1-43ce-8e3e-e873e184f9c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:27.760713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.list",
          "schema" : {
            "description" : "The response for list models",
            "properties" : {
              "models" : {
                "description" : "The list of models",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e98e1cae-b1b7-4b21-823b-f188df66ef09",
    "name" : "Gets Download information for a model. This is meant for downloading model resou...",
    "request" : {
      "urlPath" : "/v1beta2/Gaylord+Lueilwitz:download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelFormat\" : \"TFLITE\",\n  \"expireTime\" : \"2022-12-12T16:56:27.754947Z\",\n  \"downloadUri\" : \"https://web.example.mocklab.io/797088\",\n  \"sizeBytes\" : \"1iw7ml5v8xuyl1myp5w1xqy2onnm6hvqav5ernbmfe2lt4lild9omb7n4ny9wj3gyuvd6k8tamgx0mbzfs1l4zl6cjsf5tl1jqdcgew6rfw2uyyuzxncnz3lnne17kh7ojg40p6n9vtc9kwvi2jua37it3fhqfbkxw7cjy81thf4u1vaea2taenx64rt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e98e1cae-b1b7-4b21-823b-f188df66ef09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:27.755162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.download",
          "schema" : {
            "description" : "The response for downloading a model to device.",
            "properties" : {
              "downloadUri" : {
                "description" : "Output only. A download URI for the model/zip file.",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "modelFormat" : {
                "description" : "Output only. The format of the model being downloaded.",
                "enum" : [ "MODEL_FORMAT_UNSPECIFIED", "TFLITE" ],
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the file(s), if this information is available.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52082896-d562-48c9-91cf-768044bc5bf6",
    "name" : "Updates a model. The longrunning operation will eventually return a Model.",
    "request" : {
      "urlPath" : "/v1beta2/Jonathon+Mills",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Johnson Hartmann\",\n  \"error\" : {\n    \"code\" : 1684418780,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptas suscipit ut sunt et asperiores et. Rerum error atque ab. Quaerat deleniti qui accusantium odio omnis deleniti. Quas voluptas sunt. Harum non voluptatem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52082896-d562-48c9-91cf-768044bc5bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:27.754895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0995c2c1-d770-4f5b-a351-f648bf97a170",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta2/Milton+Ledner+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Michal Pagac\",\n  \"error\" : {\n    \"code\" : 1419699910,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ex maxime a suscipit non atque veniam commodi. Mollitia tempore omnis voluptatum neque qui aliquid laudantium. Et doloribus libero. Debitis sequi eos aut dicta rem. Molestiae quasi aliquam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0995c2c1-d770-4f5b-a351-f648bf97a170",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:27.754664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "51d5f92a-96e6-4a0a-95b3-9123c9eee959",
    "name" : "Deletes a model",
    "request" : {
      "urlPath" : "/v1beta2/Carma+Johnston",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51d5f92a-96e6-4a0a-95b3-9123c9eee959",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:27.754384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}