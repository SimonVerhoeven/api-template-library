{
  "mappings" : [ {
    "id" : "602c6acb-7ec0-445a-9b11-569934e4398c",
    "name" : "Creates a model in Firebase ML. The longrunning operation will eventually return...",
    "request" : {
      "urlPath" : "/v1beta2/wxacub2zrdn856lks28zy6bfwdyh3qx615nntqhj/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Major Brekke\",\n  \"error\" : {\n    \"code\" : 328808090,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Mollitia illum mollitia vel consequatur. Ipsa voluptatem et dolor et explicabo. Est nisi id. Enim alias voluptates laudantium iste. Aperiam similique doloribus fugiat magni ratione.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "602c6acb-7ec0-445a-9b11-569934e4398c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:15.152056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6618a9c8-f84d-4857-9e35-3711df471c85",
    "name" : "Lists the models",
    "request" : {
      "urlPath" : "/v1beta2/ao5iet15kb393t4nnl9ts6wu2qbh49gebhnkrvli9wjdkd3aihbu2sd1odid1q04x0ex3q22ojbycgcev0eksqinthzj2ozmnhkdtorxshxuo23a2ssbz1hp4u47df2pw0s0ld5cxebbv4ve7z7b24fejcjxdwt0ut27074r2h4vasdb2e1kdrbjk37932b13/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"models\" : [ {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/291716\",\n      \"automlModel\" : \"8vqyqk1cqsu3cagel3mpf9s58ug2gqn5h3yz4n3ov59nhxhuj050xrbgwpcmrpb0wzaxzekx2f8ugpt984ra\",\n      \"sizeBytes\" : \"7x97r662qegm96ioz5ugeyn9t9zlu7ou0un9tm9vf9p2tpyi1zatoptiqtdtoiyp4t26wwedc3craw3u3ocz14o9fnqcu26uq6l2canzcw1shif62q67tpfuj5kd44xybqlrlm7prp42n5wvygah868abxg8l8\"\n    },\n    \"createTime\" : \"2022-08-01T16:33:15.148008Z\",\n    \"modelHash\" : \"47pnrd397z3zygd8an1oob8n2dyi6our0exgw3f5qzbz5iaamrz7jvyjmrbbkk6cc0q5tir5yg5av82v5d8m789z3zv2lvx82ib8tsqvb9pimkvaq8nic4tt3iwfrhxu0nu5pyc1fnrpalx0ywu7q6roagol46k6qk9avsiyw5a4xv73ca74ydep9cointig28hxp68\",\n    \"displayName\" : \"Jada Bernhard\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Cletus Gorczany\",\n      \"error\" : {\n        \"code\" : 1786114375,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quaerat nostrum non est eum sed. Et soluta magni. Ea consequatur explicabo nulla commodi suscipit.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Phillip Reinger\",\n      \"error\" : {\n        \"code\" : 913795909,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Molestias quo doloribus nesciunt qui. Nihil amet ratione asperiores sunt quo non. Aliquid labore sunt ut atque ut. Dolor neque voluptatum adipisci alias nam eos. Et quisquam explicabo est porro sequi \"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Jackeline Ullrich\",\n    \"etag\" : \"totam\",\n    \"updateTime\" : \"2023-03-02T15:08:15.148414Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 2080434824,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quis aut aliquam consequatur amet voluptatem. Est eos possimus aliquid libero maiores sequi. Veritatis id corrupti numquam temporibus reiciendis ullam consectetur. Voluptatum et et.\"\n      }\n    },\n    \"tags\" : [ \"dtahnbnmiun4hqlf665uokyhqk9wwl8jespgoqa7k0l1gx0wfhiibqedt9i84m99x4dfhkzmlc1hui6c93v8maaxdmmnm7yg61zlceacizrz1bjkn9aointpjks026w9q4p09kzop50hqpz6oataa3w65y987kmejd15h\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/341159\",\n      \"automlModel\" : \"uhsqwzrzbz97db7hduc06dw35qop8jl1pruqmrax4kugzx92s8z4ia71f1exa109pq7qx2a7wrnjskasilqb18zocsqxou8q2bxxi1614fnhg8rz3mxqos7lxj2p2t2vwgywkfg7zalt10nr3tkrq6wke3oq4z1b3v9hal\",\n      \"sizeBytes\" : \"bapvj1kysvxoydsdxtu1mse8dvn824jelz9xoit6gzclf07ek975qzzcv88mawi0g7ycv5v6hjsh3y8uj60demvx2051nl2c4ubd1caquru3zf70u8301kfcl95oyi6g24prsmaxlma8lhwusnlmppictgeaxjauet8\"\n    },\n    \"createTime\" : \"2022-06-05T15:12:15.148645Z\",\n    \"modelHash\" : \"j4l0fclb8ldtynmqxviiy2nc57w5j90l0i87v8jq6o60ppv28zzr1e4odr4tqtkdispfrkogqxi23onsi9w3on1at29hy8551crg9777jglem06rzjm3\",\n    \"displayName\" : \"Carey Wilkinson\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Chana Waelchi IV\",\n      \"error\" : {\n        \"code\" : 1049362868,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Molestiae qui earum assumenda debitis autem nostrum porro. Optio sit error rerum qui saepe. Earum voluptatem dolor aut qui. Odio et possimus quia vel quas. Exercitationem quae aut.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Trena Schneider\",\n      \"error\" : {\n        \"code\" : 948165768,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Dolores commodi exercitationem aperiam. Cum ut reprehenderit. Occaecati et ut voluptas. Ipsam et deleniti debitis culpa consequatur.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Norberto Ruecker Sr.\",\n      \"error\" : {\n        \"code\" : 602652356,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui doloremque est voluptatem reiciendis voluptatem quis. Debitis reprehenderit corporis rerum in. Pariatur dolores mollitia impedit quam beatae possimus.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Micheal Quigley\",\n      \"error\" : {\n        \"code\" : 922841647,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Tempora quia veritatis quia placeat voluptas. Et vitae illo. Accusantium et odit ut provident ut quae impedit.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Melanie Bode\",\n      \"error\" : {\n        \"code\" : 1246725215,\n        \"details\" : [ { } ],\n        \"message\" : \"Deleniti et excepturi in dolor qui illo. Sequi necessitatibus culpa. Impedit quis non quo odit. Ipsum rerum et. Autem omnis dignissimos expedita officiis qui veniam.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Kandis Hirthe\",\n    \"etag\" : \"recusandae\",\n    \"updateTime\" : \"2022-10-13T17:10:15.14935Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 242804293,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptas id voluptates temporibus numquam. Ut suscipit voluptatum omnis dolor et eos natus. Eum sed delectus consequuntur unde alias quod. Mollitia consectetur blanditiis harum omnis.\"\n      }\n    },\n    \"tags\" : [ \"p7esq866dovdwmmohe91of68eivmmw5chj30onl31dues6cmlt3ukydv5q5c28mta7f73n1msy5xqf8rpd5r3abzp1cf2mq4hphg\", \"x1ewi03hx4zzmbx1iyosjg3nlc76m3c8jbimpfxvukl9f1zirn1p\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/782749\",\n      \"automlModel\" : \"y5fyun4jcbxm8gsknbey8qvn4dr6r89fk49y3na4xjtvovdiyv8hhh6rdm1di02gsjks9bvfabmxasiawhoegj6m62nwkvk56m6ye7motgpt96mxnhin2b6ddlf2hx8ehsd\",\n      \"sizeBytes\" : \"fz8wb0cc1bms40mhloatkwv56xp4lawdcpd8dg1qyc8d0deyjsoxqcalukmz38dgjsdukevj57au14e07v32ytilpweqbyb1bhpbeeg3uk9m2uspflo4wl1mxodcjojokm46tngm28xx962zfrvu4x54y43uhgotfdfgvqh8cud4omr4eo0cqxt77dbjnoq8j\"\n    },\n    \"createTime\" : \"2022-12-20T15:37:15.149575Z\",\n    \"modelHash\" : \"1s2d25yr7chzybkdoprwj\",\n    \"displayName\" : \"Mason Grant V\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Stepanie Beatty\",\n      \"error\" : {\n        \"code\" : 251030719,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Voluptatem cum voluptas iure atque eligendi porro. Recusandae esse a neque repudiandae eum consequatur sapiente. Aut minus omnis culpa ullam dolores nam. Soluta voluptas id sit. Enim totam ad cumque.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Trey Barton\",\n    \"etag\" : \"eeeet\",\n    \"updateTime\" : \"2022-03-22T15:58:15.149846Z\",\n    \"state\" : {\n      \"published\" : true,\n      \"validationError\" : {\n        \"code\" : 1034699543,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Quia sed magni architecto saepe cum eos voluptates. Fugiat quia itaque ut iusto nihil autem corporis. Vero quos perspiciatis ab totam et quae. Sint impedit velit quo quo velit. Ullam qui commodi et di\"\n      }\n    },\n    \"tags\" : [ \"lmsvrwzlso7tqyb8qz5ze7c79nm1qjjkpc1cled5huwlq3nnhzphnsalx1h8mn0woic0ix8mlhzczj2klgwrdv0hq95sk96jtf9iibefsdpr3f0bxjge4dfxxhua4cdi59ci28vl3xmc0yur1gbs41uihsc5e8647ads0eh3az6xgg6dubiflkxz7pnxa60\", \"1n8zri3wbsvcb3jrdioxqugfbax5rtwor3p5ibivcg0y9qito88jmpoi20k5y19lkpdfshbc54rxovpizzcnsr8vqjdl5gggviny2cc1mrjfnecgcrdmbzmhdzg1awo52xvarn71vudae3zyye2k\", \"kxqaxegdzx25v0wfhxvtkqfjzpb5bygxo0b5k9u225x4g6tuynfmg352uhbumlvuma2xp8jcya3g4sci8zi5btckngrjfzrf0sihcm9iebvqyv11n7pri8uk3hcnk0hcuhtqhcsi6l6e8jeiodw\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/269705\",\n      \"automlModel\" : \"q3ikcpcniys7zxdqft2wd02idcsqev93mcp02upw9w8ryelcacluwgnufqogq5yub59zj5snz7f0vi5pvctbroaep\",\n      \"sizeBytes\" : \"cykjoqtxwi45f5kwfa3cwx2z1h6uudu8\"\n    },\n    \"createTime\" : \"2022-12-14T17:57:15.150087Z\",\n    \"modelHash\" : \"651x87h44w27cxssfqqivy8mzgpu1crg9b72sze9bjvg8c8376b5gm0o5s04mwe78dwgynaq8oywf7rvrsrkzztcynxub\",\n    \"displayName\" : \"Troy Kohler\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Gordon Feil\",\n      \"error\" : {\n        \"code\" : 276317764,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Facilis excepturi quibusdam. Consequatur voluptatum dolores in. Eos reprehenderit voluptatibus praesentium ad placeat magnam. Quia aut nemo ipsam.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Shonna Walter\",\n      \"error\" : {\n        \"code\" : 450453221,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Fugiat modi expedita aspernatur. Ut ipsam molestiae quia quos. Et error ab tempore soluta pariatur dolores. Quae nostrum doloribus sed vel animi praesentium cum.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Marlyn Mraz\",\n      \"error\" : {\n        \"code\" : 1550777245,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptas excepturi ea repudiandae molestiae qui aliquid. Culpa repudiandae libero sequi. Nesciunt mollitia illum repudiandae. Eos totam beatae eum.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Margarito Lang V\",\n      \"error\" : {\n        \"code\" : 884052440,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ipsa et animi voluptatum atque provident maxime ipsum. Architecto possimus voluptatibus recusandae voluptates voluptatem. Reprehenderit voluptatem at dolore labore.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Miss Lona Rice\",\n      \"error\" : {\n        \"code\" : 105344176,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Eum deleniti molestiae sed ab aspernatur occaecati. Temporibus veniam laudantium. Reprehenderit adipisci iste.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Chad Rogahn\",\n    \"etag\" : \"est\",\n    \"updateTime\" : \"2022-03-26T17:26:15.150802Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 288375533,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Nihil maiores consequatur modi libero non nobis et. Asperiores modi id quia commodi culpa soluta enim. Aut et earum. A sapiente soluta repudiandae pariatur. Voluptatem aut ipsam est.\"\n      }\n    },\n    \"tags\" : [ \"upz7\", \"9384zu5s9azis0ruti5nzi2ogd42f5l0ymhoiha5tzhxyfwvfnayoyn6wcipu79fjdkve7tltd0cn9jpnud6o5lyyimiahdpq9nlc3hdh4e0uklj7ux8p2i3e3gxqu6d9cxf0\", \"d258aak5u8n57vs7eduauybdc8l69rcnlqeqn4kl5eciw2gpd9zcb5n8d9gezcf5p5fggu50i7a31hfg4t8jljfmjc1h0ru7fney1vjtdhbu2lcuxen\", \"l0i1zdgwmqa0cnwakk33wm5lgzxwius9zf3dcbpjufdykkl3mkvjkwtnhpkw2wtz\", \"2xzyvot58s8b9g0wthgabqpvmkff8e2i96lkjzbd6oege91ohw3a32mu2pn8nvbq7pmmmmkjx2xl0bji7rzem41st2ovin6vtpeedwpihqfbkl9y2twwrfotmick3hsdvh96plgbt0h9g8vifh5rasd6269bz1\", \"ize0xvkkw32gwc47cq5fh7uypjmfasqn1qo7okpy2pinje979tttxmib6i53npx7ovredferv777sbv1io7p7nczsv5wwsajwdr0eladnkmr71473gky1zmoc2coxxp5ornx5acrjha0zq6793sphlq3h9jrffy75agu4aqh64s\", \"u38gkwpotee35wdexahd0qhoeztmpxgxfwvbjvrub4ocjwddpaxtwt951aeig\", \"13auw7rapv4mkv0eyqrbtyrmgivs8cdh0ova7ybf3c7iooc2oq6765pj500y6fvres5sitgp2sjg93h8jlk7hmq213payiu13t78l19v4y5xyq9zr90chx2gkqdy6fk3sn21w08hbgphhzvbdce\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/418837\",\n      \"automlModel\" : \"afc63ks2bk62u8q1lg2hhgggsunxaor2keob2ljtipjhv9ml421aqnsnosbudxd9xjyp1i8z5qc284nd4zs5olks3klgmvdrleav4do41qfhb1zhwtf04ht7vt\",\n      \"sizeBytes\" : \"ugmnffmo8gb2i2smtx3euwhw4c3muxbw0efg1er3qaispbcyp8bz2p52xm8537l0nnnhlpv18rbd00gbfrpbrmtxevkp48rmd2bt72tlvbs9qpuimz4js9q0x0kyr23curr\"\n    },\n    \"createTime\" : \"2022-11-14T16:43:15.151068Z\",\n    \"modelHash\" : \"4r86ma6gv8wc57qtdbfbjj7bd7uyf780yfnuo7roxjo1ccfoftvzws74hlm8ote5e5942yqmll51zza7l7w0n1apyv03srkknorgrmjojpu\",\n    \"displayName\" : \"Tad Thompson\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Brenton Schoen\",\n      \"error\" : {\n        \"code\" : 961460515,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Molestiae ipsam doloremque magnam mollitia impedit atque deleniti. Nihil voluptas dolor. Maxime ut sed quos.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Hong Mayert V\",\n      \"error\" : {\n        \"code\" : 1933375817,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Dolores repellendus tempora earum accusamus. Laboriosam aliquid non. Quam quas fuga rerum odit doloribus aut ipsum.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Shoshana Hand\",\n      \"error\" : {\n        \"code\" : 360474079,\n        \"details\" : [ { } ],\n        \"message\" : \"Vero et nam iusto mollitia. Ea tempora quaerat rerum neque molestias porro autem. Consequatur rerum dolores vel vitae ut.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"Oscar Gutkowski\",\n    \"etag\" : \"explicabo\",\n    \"updateTime\" : \"2022-09-13T16:17:15.151538Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1024170570,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Debitis earum quibusdam possimus rem. Quam ut occaecati rerum et impedit explicabo. Rerum placeat rerum iusto voluptas.\"\n      }\n    },\n    \"tags\" : [ \"4i034ooo4fgk6y1b6tkizqblex9xis\", \"o1xqw6mzf7qudk0etakrzc6fkdsebnijf2rhr0hcrt2igk5q3h4oipkx3sr\", \"nmpzwuu0aslvil2ad3awb57s0uwzr3wl28dp73bzecyr08mew1rodkupnekxi15c2n7wd9dksl39qupk2hkfjqlz5laowfen69t8qn47kvn2vpe1dsfi7yitn857y1jwespelv9xtj71cf964\", \"x2sc6ytz883w85k8dzef01jhocl7l2nbgmk2ptayho4t88l5a3bhewrkz7otj7g4rg4hmpbv8zyyd4fmhovd3eigmrhjufka7w4jcdtb7xwlhmy3zd83e\" ]\n  } ],\n  \"nextPageToken\" : \"5s55ml5i40x2hpkvpkelb536zt8ch9154484ht1fijp88e8ypg9wp0057a0xnkcgfhwl2kt5j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6618a9c8-f84d-4857-9e35-3711df471c85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:15.151832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.list",
          "schema" : {
            "description" : "The response for list models",
            "properties" : {
              "models" : {
                "description" : "The list of models",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a273ee76-a629-422a-9240-958de834dacf",
    "name" : "Gets Download information for a model. This is meant for downloading model resou...",
    "request" : {
      "urlPath" : "/v1beta2/Vincent+McCullough:download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelFormat\" : \"MODEL_FORMAT_UNSPECIFIED\",\n  \"expireTime\" : \"2023-01-05T15:14:15.147605Z\",\n  \"downloadUri\" : \"https://web.example.mocklab.io/741768\",\n  \"sizeBytes\" : \"twp2m35bmiwnjnl69e9bsxrc0b0oa2corlbfa7f0ffv6bqhks8avdm69r87obfe4dd8dei0e6wfnone3hcsqlfvsyn8kh5jfzp9ijnpwhqnvvj875d8g88xur4j4qgqhpkt4tdytek3ijre\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a273ee76-a629-422a-9240-958de834dacf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:15.147836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.download",
          "schema" : {
            "description" : "The response for downloading a model to device.",
            "properties" : {
              "downloadUri" : {
                "description" : "Output only. A download URI for the model/zip file.",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "modelFormat" : {
                "description" : "Output only. The format of the model being downloaded.",
                "enum" : [ "MODEL_FORMAT_UNSPECIFIED", "TFLITE" ],
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the file(s), if this information is available.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a48739e4-eff7-47d4-9958-f27225059623",
    "name" : "Updates a model. The longrunning operation will eventually return a Model.",
    "request" : {
      "urlPath" : "/v1beta2/Cleora+Schamberger",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tran Buckridge\",\n  \"error\" : {\n    \"code\" : 299338911,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Eum et sint eum quia. Sit eum et quis. Maxime voluptas in saepe tenetur aperiam similique aut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a48739e4-eff7-47d4-9958-f27225059623",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:15.147545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65df462f-99b9-4fe0-904d-71a97aee3121",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta2/Awilda+Keebler",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Natalie Aufderhar\",\n  \"error\" : {\n    \"code\" : 2093782743,\n    \"details\" : [ { } ],\n    \"message\" : \"Autem a aperiam aliquam incidunt numquam sed. Qui libero ut dolores dolorum repellat dolorem. Rerum earum et. Fugiat exercitationem ipsam assumenda dolor est fugit occaecati. Voluptatem consequuntur e\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65df462f-99b9-4fe0-904d-71a97aee3121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:15.147305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bf5e0ebf-96f7-45ef-9279-1842a344b98c",
    "name" : "Deletes a model",
    "request" : {
      "urlPath" : "/v1beta2/Kieth+Corwin",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf5e0ebf-96f7-45ef-9279-1842a344b98c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:15.146991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}