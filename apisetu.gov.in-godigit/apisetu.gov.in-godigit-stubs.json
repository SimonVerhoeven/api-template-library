{
  "mappings" : [ {
    "id" : "d1510922-db0e-4ef2-9889-df91d2919bed",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1510922-db0e-4ef2-9889-df91d2919bed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "12d72020-054b-42e0-a08c-efe688cadb15",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12d72020-054b-42e0-a08c-efe688cadb15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7e2006b9-b34c-4c2e-92fe-a19311ee4ccd",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e2006b9-b34c-4c2e-92fe-a19311ee4ccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d88652b8-46f4-45e3-bf00-7c02af3f47b0",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d88652b8-46f4-45e3-bf00-7c02af3f47b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.75273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f8e68bd4-0dc3-4754-bd0a-d1a03465c688",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8e68bd4-0dc3-4754-bd0a-d1a03465c688",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "92c7bd5b-f8a6-4946-aea3-34e6dcd62620",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92c7bd5b-f8a6-4946-aea3-34e6dcd62620",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "65cbe937-6620-4927-8514-ec38d90613af",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65cbe937-6620-4927-8514-ec38d90613af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "188cf6c2-3c9b-46a3-8f2f-4dc1a4c4e5b3",
    "name" : "Insurance Policy - Two Wheeler (application/pdf)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "188cf6c2-3c9b-46a3-8f2f-4dc1a4c4e5b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "be3a76c8-7426-4229-acb5-b693c08f2367",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be3a76c8-7426-4229-acb5-b693c08f2367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.75243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "7bc5006c-2fc2-406e-9aa9-f9c4f3a8253b",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bc5006c-2fc2-406e-9aa9-f9c4f3a8253b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "13a97776-8e64-4dc8-9cfc-a656d41b237d",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13a97776-8e64-4dc8-9cfc-a656d41b237d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "331a194c-8b6b-4d25-9edc-0f8504c7de09",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "331a194c-8b6b-4d25-9edc-0f8504c7de09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "1c6bbff2-5735-4557-b6fd-dd2e19ef7635",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c6bbff2-5735-4557-b6fd-dd2e19ef7635",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.75218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "b4754f47-0d82-4deb-9055-6842fd096a97",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4754f47-0d82-4deb-9055-6842fd096a97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "915a4e36-4f58-43fb-a836-24e44d5c1a06",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "915a4e36-4f58-43fb-a836-24e44d5c1a06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.752054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "9e2937d8-bbd2-4a08-8235-7dc0c024a419",
    "name" : "Insurance Policy - Commercial Vehicle (application/pdf)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "9e2937d8-bbd2-4a08-8235-7dc0c024a419",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "7cd919dd-9e0e-4c62-94fb-87a17f4b2896",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cd919dd-9e0e-4c62-94fb-87a17f4b2896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "fd353070-2996-4d07-813a-e174a2ad2190",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd353070-2996-4d07-813a-e174a2ad2190",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e4b8f620-774e-479f-9520-e768591583b3",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4b8f620-774e-479f-9520-e768591583b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "ea97b491-4e96-40c7-b826-8d41ee6e278a",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea97b491-4e96-40c7-b826-8d41ee6e278a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "60a33ba6-27f2-443b-8dc7-0fb596cc9076",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60a33ba6-27f2-443b-8dc7-0fb596cc9076",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.75165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "c30415d5-a029-44cb-9268-d6db5923e19e",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c30415d5-a029-44cb-9268-d6db5923e19e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "4968fc23-57b7-4fb3-abf2-e00a3bc8712d",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4968fc23-57b7-4fb3-abf2-e00a3bc8712d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "aa92dcbd-3dc5-4e3c-a70a-c2e225c51fee",
    "name" : "Insurance Policy - Car (application/pdf)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "aa92dcbd-3dc5-4e3c-a70a-c2e225c51fee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.751356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc"
        }
      }
    },
    "insertionIndex" : 23
  } ]
}