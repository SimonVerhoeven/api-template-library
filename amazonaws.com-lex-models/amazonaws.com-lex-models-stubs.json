{
  "mappings" : [ {
    "id" : "c8ee5cba-16a3-4ce0-a343-2d99030ce5bc",
    "name" : "Removes tags from a bot, bot alias or bot channel.",
    "request" : {
      "urlPath" : "/tags/udlf6o0fdftf8nbaiivnp7q1zrbds1rxbmjl1nxh25s13zqekj36cy8jjaqx5ly5s8mb8otcjdzxqx5n5r9on1bcb10h32almo59d54ktcd6dqsfgyyc3znoxfhojs4lr4wccdegh0wkwpzod5y2884ifuuv5ap9xl8vfmf5eu8oujt3wqzv1uirohb149j8jcl24sv30ep1040giur9jy9r43ay6o3bxv9tzgmajl4v5rjzpyevdjty72qyks5e#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "wc2cva7ac5n1mpvw92io0ne4gngd9auuvw5"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8ee5cba-16a3-4ce0-a343-2d99030ce5bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.733827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "a6231b3c-3bca-46f2-9131-78368fee9710",
    "name" : "Removes tags from a bot, bot alias or bot channel.",
    "request" : {
      "urlPath" : "/tags/cy8jz2edej1gofql65cq0h6r0ad1q2pp87d6qfnw7qx8nsj5cqv197fet8t9mtc9ugvq674oqxr69vhbzso743gs7q5ydok6t80yeo3xoyi1zixr5s782ammr6w2c6f7vpu4j9ls1fdnjf6a7e88b318n9xaenaxud0nsrlld5m7kta0t2rf9uwk0v6qw3gbgpmj#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "a1voyr0dy2y8fs8rfrfd603ls7ttqabft84rd"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6231b3c-3bca-46f2-9131-78368fee9710",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.733535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "ee75f769-c1c4-4fc7-9b1f-3be6c39973f6",
    "name" : "Removes tags from a bot, bot alias or bot channel.",
    "request" : {
      "urlPath" : "/tags/ynikgruwp36hdr4umeoaiaerupagie4ayjyv82hik41fhauka4w32dqy84nlkwpyz7zueha9e150mmzoq37e9dayvd7tiqofvis7nlz6nk6edfcnqojtecjtbpeur04xcmmh5lacrntflxh0in2r6ud8s054rke7rxvbkhr06qg53p5oacv70lj2emmlzo6lk4s7ytndsn5amqx25eqrlrufl27yanz8fna8upi00obxbglb5ijuoo605ujv9aywgp0d1usxsr2ls8wnosbjx6q5tgu0zr68vkigxrgnyl6g4d3l48kodznhvgkt58hloe4kipjq0pnlon2trqsgjq5h1w2mmopir8qdvi8b06af3qgsyp63fb7w4iqw2kyww957ko0uznuw2fq2t261ib6z40u5afaqarseuj7mmhmfbpc6gx0qoxe254diphv9eo62sd973cwkd89dripist6b3efs3atx91p7u0xuf7bvp0mqmg7pefjhysc9x39gtiglt7bvh4cjm2m5d8s328tiuoce67j5brgkc6x5n9d21574zerc1b7afzssjunqjv7s0i5pkv8vdpywueogboa6g17lb0gjpvfh42s6jy762vagcgbjvkhq7ukv72vp5jin5e1xip8f1a9hnvo1x2ehu5tgi3rovj62a31xfiim9us65cnaxuazrzdesg5773qubr07ofxvq0q533h3css6wolwyzxv8ie4p55z752nxadu9odyqpy7egrl3e3jwhbqnedwlj3oaquazirsa8905b97046494v1lbcmefejbk44lm3ykdxhxslpoin9sqkqkhl2urasfuxxyclmlxtdawdmrq1bed1rgc1oxkbbbquh8kxxg3954bwsy2t1drq53i0beu#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "wsfg102o6rw79w4n6oo4nru7njdmukptiiwqzggarnel4nt8k4tysd0simmrxllg6tlunqyg50chnefq3e7351jf79u7dcp2ko5qr00dpu3qqxyxa3vcstlcggd3z9gyx"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee75f769-c1c4-4fc7-9b1f-3be6c39973f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.73323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "75430670-56ac-49ce-92dd-a531950c981c",
    "name" : "Removes tags from a bot, bot alias or bot channel.",
    "request" : {
      "urlPath" : "/tags/xycf3vv9o0vsm6wpipv6uqk1zlyhooqrcsj49e02iigwe384gkmdv9ouonrdzi3k6532mu4e338iz1x83vmep71b3dqu1ptnb0a8i2wuhobmopdnrvx69rn28lbxqrwgb5wbyctlm0ujl7ub4jl5avmpfmktdmara1zqqza2srvqr7ay2vemtx2isd7sbkdswz1b1etrl21e6opyxc2mxva47h0zwm639w9f3yoob5t1ho1mxpn5rbfngv5d60l1lzs99oxrwugsda4qy3ou3mlszqkko2mpt043zmsxq87il1frdp16j0o55i0lk8gjnkjmkljrkcyhlvqbccvxu9jgc4x7ymdrwjkitlgw5wriny54obhum57olfggfs7p9n4yx20n3g8ogzndiujab88t8swl3qv5o6ifhf72x2cc7652oqdtaqmn56t1prgwy4ekc25d70nyebffoeker21ah9n5p1wtwksija9aoy619it0krnmdakr26r5pi1o4u5heupv6jnvx33yh0ahtk4wh8ssqrc18jk0rbv6skd59qkbchqquudnfceoehg8mad056jpyflaaypds76idyf32heapan1wvxpa9rz4rlww5q7c9615ldgwjbp67zl1n2fultgidof2mzp286yjb8yf7lzu8xi4trly6alwzu9wovbsv3uegkelo8owhte3mxfuoyoi5ggbwjhwig87s1ugj5m1tb0gl9j1n9zwi4kvufsx61lxb30qbb3di2gdbsn03rguac3nufray75hthv2w6jra7it3e4m3jdwhcv00va17p0v50jfrzsfb6r0t5h0pihr1rgxcit9gbhp1w0z8s0yffh2mb7tro9pvw83el8u999uzp6x1jv3422itfeab0r3lyl9y4fwrors8emo8sy786hijhdmv#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "nwdqo5uabyelofr17s684imatn39mm3w66c7hxw1ih70suc6wbfger58pgk4g6qbwrbxc71edolwygms"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75430670-56ac-49ce-92dd-a531950c981c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.732449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "a4a1b66b-8c87-4ffd-8843-5678bd341118",
    "name" : "Removes tags from a bot, bot alias or bot channel.",
    "request" : {
      "urlPath" : "/tags/0v2r7lxes26ag4i6toob6kklcblvesvb1c18dt8grv5f3xceveg87etktpqbtm8tdw8z2qvx2h4fvxg0axvb6vcakshm28w94nafadv753hdfzyqu9b4dgxtwifzl386d5xped7zwie2b81f27liyxdf22hivf4nlfg7p7w4rowszcpenty189kta01sjoreccftzr245ncfo2g0dp0x76tr40t8hpltm3y2kc42vmdp4nnewidvspxefinqqi3tzaluxb6tdomt2ydav4nrxpbk1jhfk5kiylgpt4xbffpsjlnl7brg8ws6gxuue8e48e380692gjos51knskampqrroep4l8ejxme33qxfdi59rp9kq5jandxtrpssvo6fp2l1lo1zaarhhfxbtw9b2r5rj62nmdeonxwmanu0bxt3886y48mlqgwga1ywxnlpszfvugkngltwuoswkp4pnmyqibirxxkgxcqfavqoc5m256cs9f1yizivn2hp0kir3s929b5u4tgtlru4ry8xyzokjs7hpsww1b59f14f4urkd2pyibh5wnxegw0swcx9hmgv9tgq46n3psx7h0f7qbpnvusgqlqz90r5d686jrbbp1jfpzwtqvrggqfceryy69zyptptfntvlhf6yfn6zmwon5pagxmujpeflmnh28onuzkwb0sr2t7p3#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "gjonmlanpm5e6prxh4erw5fslo99jkhrz3zcmbt54hs1rctnq6l9lk8pmzld7c7m6kxsu8mi0art"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4a1b66b-8c87-4ffd-8843-5678bd341118",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.731933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    }
  }, {
    "id" : "638c5704-6b4e-48ec-bcf0-450813b2cc33",
    "name" : "Removes tags from a bot, bot alias or bot channel.",
    "request" : {
      "urlPath" : "/tags/k01ivy81d958tx4qjtwysewthmiba4vex9i8dudp9puslun2d32t9b44p0dcnznyql40l1o35hkv8w2at5tjm9bas3ii5x1nyz6ms4tnjta17asifg2hv1ghtjvscc9qmgvtph9hhfyp80i8ujpjclwo5d2o911ayfhene3m42jgh1be0760hjtj8h54u14rxcqhhps1bss2w7bvyv0q7lzrdiilde7p4dbaocjmb52b7978381jl#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "c055svxoztsess0bgwb5awh3hh2w6mc7ya01bb4hzgmxb20teo0phge5snktiouj6icn251m1a"
        }
      }
    },
    "response" : {
      "status" : 204,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "638c5704-6b4e-48ec-bcf0-450813b2cc33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.73146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UntagResource",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9744107-b9d5-4732-bec4-010f5008d6bd",
    "name" : "Starts a job to import a resource to Amazon Lex.",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9744107-b9d5-4732-bec4-010f5008d6bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.731099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    }
  }, {
    "id" : "613b5e57-4ddc-4291-bb2c-819db70a1cb1",
    "name" : "Starts a job to import a resource to Amazon Lex.",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "613b5e57-4ddc-4291-bb2c-819db70a1cb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.730936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    }
  }, {
    "id" : "0974a122-c310-42f2-b7ea-a874fbab01ed",
    "name" : "Starts a job to import a resource to Amazon Lex.",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0974a122-c310-42f2-b7ea-a874fbab01ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.730787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    }
  }, {
    "id" : "954294db-81e6-4e10-b66d-ab45ea3ccfb9",
    "name" : "Starts a job to import a resource to Amazon Lex.",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"importStatus\" : { },\n  \"importId\" : { },\n  \"createdDate\" : { },\n  \"mergeStrategy\" : { },\n  \"name\" : { },\n  \"resourceType\" : { },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "954294db-81e6-4e10-b66d-ab45ea3ccfb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.730611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartImport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name given to the import job."
                } ]
              },
              "resourceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResourceType"
                }, {
                  "description" : "The type of resource to import."
                } ]
              },
              "mergeStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MergeStrategy"
                }, {
                  "description" : "The action to take when there is a merge conflict."
                } ]
              },
              "importId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The identifier for the specific import job."
                } ]
              },
              "importStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportStatus"
                }, {
                  "description" : "The status of the import job. If the status is <code>FAILED</code>, you can get the reason for the failure using the <code>GetImport</code> operation."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "A list of tags added to the imported bot."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp for the date and time that the import job was requested."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3bb10325-84c5-4955-9cca-037ed35e2212",
    "name" : "<p>Creates a custom slot type or replaces an existing custom slot type.</p> <p>T...",
    "request" : {
      "urlPath" : "/slottypes/o_es_Q_Lt_bkfwG_MiRlxyo_F_E_hGTyv_A_TY_z_t_Q_w_qs_aW_Ol_Pc_cEwtm_G_StRtJ_qX_s_W_Adw_CWuDtq_qgA_xn_ZW/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bb10325-84c5-4955-9cca-037ed35e2212",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.729988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutSlotType"
        }
      }
    }
  }, {
    "id" : "5e8220ce-72de-4a8f-9295-78b83140786c",
    "name" : "<p>Creates a custom slot type or replaces an existing custom slot type.</p> <p>T...",
    "request" : {
      "urlPath" : "/slottypes/LDeY_y_sP_Mh_IRkzv_N_UZVx_E_W_F_g_Z_t_Y_N_O_og_Y_H_rC_h_M_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e8220ce-72de-4a8f-9295-78b83140786c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.729753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutSlotType"
        }
      }
    }
  }, {
    "id" : "11a08649-1184-4503-a89b-45d053340a47",
    "name" : "<p>Creates a custom slot type or replaces an existing custom slot type.</p> <p>T...",
    "request" : {
      "urlPath" : "/slottypes/tFHP_HZ_Xvb_w_GGXmWx_S_VEx_u_d_H_i_xJ_F_Ih_E_T_Y_F_H_O_IN_D_K_I_St_PxNw_P_CPHx_Q_b_O_yb_I/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11a08649-1184-4503-a89b-45d053340a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.729488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutSlotType"
        }
      }
    }
  }, {
    "id" : "dfc89ec6-7f97-4d82-943e-f9df94b80a3e",
    "name" : "<p>Creates a custom slot type or replaces an existing custom slot type.</p> <p>T...",
    "request" : {
      "urlPath" : "/slottypes/c_aqk_U_NI_X_S_ONh_c_x_tEZ_ck_ZiVf_bAEgPa_M_AUF_f_A_u_p_EyITSyrqj_zjc_n_F_mAI_S_m_W/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfc89ec6-7f97-4d82-943e-f9df94b80a3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.729158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutSlotType"
        }
      }
    }
  }, {
    "id" : "daf0dd54-0956-4af7-8f3b-444d470f4696",
    "name" : "<p>Creates a custom slot type or replaces an existing custom slot type.</p> <p>T...",
    "request" : {
      "urlPath" : "/slottypes/wgX_sWyas_Ux_S_A_d_Vnb_wsTA_l_sgI_vJ_cJF/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daf0dd54-0956-4af7-8f3b-444d470f4696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.72882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutSlotType"
        }
      }
    }
  }, {
    "id" : "7f265bcb-8267-4cff-bccb-34e7c0d8a5ef",
    "name" : "<p>Creates a custom slot type or replaces an existing custom slot type.</p> <p>T...",
    "request" : {
      "urlPath" : "/slottypes/F_z_CHPgE_g_R_f_O_tgI_T_e_I_Em_yU_yC/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"version\" : \"$LATEST\",\n  \"name\" : \"DocPizzaSauceType\",\n  \"checksum\" : \"cfd00ed1-775d-4357-947c-aca7e73b44ba\",\n  \"createdDate\" : 1.49435644223E9,\n  \"description\" : \"Available pizza sauces\",\n  \"enumerationValues\" : [ {\n    \"value\" : \"red\"\n  }, {\n    \"value\" : \"white\"\n  } ],\n  \"lastUpdatedDate\" : 1.49435644223E9\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f265bcb-8267-4cff-bccb-34e7c0d8a5ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.728437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutSlotType",
          "schema" : {
            "type" : "object",
            "example" : {
              "version" : "$LATEST",
              "name" : "DocPizzaSauceType",
              "checksum" : "cfd00ed1-775d-4357-947c-aca7e73b44ba",
              "createdDate" : 1494356442.23,
              "description" : "Available pizza sauces",
              "enumerationValues" : [ {
                "value" : "red"
              }, {
                "value" : "white"
              } ],
              "lastUpdatedDate" : 1494356442.23
            },
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeName"
                }, {
                  "description" : "The name of the slot type."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the slot type."
                } ]
              },
              "enumerationValues" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EnumerationValues"
                }, {
                  "description" : "A list of <code>EnumerationValue</code> objects that defines the values that the slot type can take."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the slot type was updated. When you create a slot type, the creation date and last update date are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the slot type was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the slot type. For a new slot type, the version is always <code>$LATEST</code>. "
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the <code>$LATEST</code> version of the slot type."
                } ]
              },
              "valueSelectionStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueSelectionStrategy"
                }, {
                  "description" : "The slot resolution strategy that Amazon Lex uses to determine the value of the slot. For more information, see <a>PutSlotType</a>."
                } ]
              },
              "createVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : " <code>True</code> if a new version of the slot type was created. If the <code>createVersion</code> field was not specified in the request, the <code>createVersion</code> field is set to false in the response."
                } ]
              },
              "parentSlotTypeSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomOrBuiltinSlotTypeName"
                }, {
                  "description" : "The built-in slot type used as the parent of the slot type."
                } ]
              },
              "slotTypeConfigurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeConfigurations"
                }, {
                  "description" : "Configuration information that extends the parent built-in slot type."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7c617660-de4d-4f06-aac2-f051bc08c3fe",
    "name" : "<p>Creates an intent or replaces an existing intent.</p> <p>To define the intera...",
    "request" : {
      "urlPath" : "/intents/m_lV_OAyu_k_lt_K_w_HeYMmL_k_y_Y_o_xNKroq_ywBXH_NtX_FHa_j_P_v_Q_eE_W_MihQ_Hg_R_wm_YT_FRWCGLt_z_T_a/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c617660-de4d-4f06-aac2-f051bc08c3fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.727421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutIntent"
        }
      }
    }
  }, {
    "id" : "5ed5d13a-2304-45de-abe8-162bb04d703a",
    "name" : "<p>Creates an intent or replaces an existing intent.</p> <p>To define the intera...",
    "request" : {
      "urlPath" : "/intents/A_RNrMS_kvA_c_paGXb_dCSq_E_t_qW_I_o_gTghBYHSnKiz_bTAuRx_Ty_JO_G_f_Gb_mhzP_rd_Ei_i_KQQ/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ed5d13a-2304-45de-abe8-162bb04d703a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.727194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutIntent"
        }
      }
    }
  }, {
    "id" : "9a6c1726-54b1-484b-9d20-70f72a054f6f",
    "name" : "<p>Creates an intent or replaces an existing intent.</p> <p>To define the intera...",
    "request" : {
      "urlPath" : "/intents/W_T_c_H_l_x_n_n_eO_Cla_g_RP_LdiF_A_PQQ_EV_xN_GE_w_nzO_r_YO_N_F_s_m_k_JiLg_oI_i_I_K_m_LKebVzJG_y_u_j_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a6c1726-54b1-484b-9d20-70f72a054f6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.726984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutIntent"
        }
      }
    }
  }, {
    "id" : "98100f46-4a66-4b16-a75b-dd52ec3dfd63",
    "name" : "<p>Creates an intent or replaces an existing intent.</p> <p>To define the intera...",
    "request" : {
      "urlPath" : "/intents/f_D_pjRvKG_d_H_y_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98100f46-4a66-4b16-a75b-dd52ec3dfd63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.726772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutIntent"
        }
      }
    }
  }, {
    "id" : "f4ed7a2b-9b98-4321-8afc-992b33d35d85",
    "name" : "<p>Creates an intent or replaces an existing intent.</p> <p>To define the intera...",
    "request" : {
      "urlPath" : "/intents/xc_a_M_c_ebfS_IqQ_h_tyBmJ_J_RjgFw_XaR_IvT_eLllN_i_pb_x_Keq_S_CX_Qz_NDnZWf_M_Hr_E_O_Hl_r_h_r_g_n_hjx_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4ed7a2b-9b98-4321-8afc-992b33d35d85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.726565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutIntent"
        }
      }
    }
  }, {
    "id" : "59bab638-b521-4bd3-b0e7-fe74ecbc94d3",
    "name" : "<p>Creates an intent or replaces an existing intent.</p> <p>To define the intera...",
    "request" : {
      "urlPath" : "/intents/omIz_y_R_rqiHtkBc/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"version\" : \"$LATEST\",\n  \"name\" : \"DocOrderPizza\",\n  \"checksum\" : \"ca9bc13d-afc8-4706-bbaf-091f7a5935d6\",\n  \"conclusionStatement\" : {\n    \"messages\" : [ {\n      \"content\" : \"All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\",\n      \"contentType\" : \"PlainText\"\n    } ],\n    \"responseCard\" : \"foo\"\n  },\n  \"confirmationPrompt\" : {\n    \"maxAttempts\" : 1,\n    \"messages\" : [ {\n      \"content\" : \"Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"createdDate\" : 1.494359783453E9,\n  \"description\" : \"Order a pizza from a local pizzeria.\",\n  \"fulfillmentActivity\" : {\n    \"type\" : \"ReturnIntent\"\n  },\n  \"lastUpdatedDate\" : 1.494359783453E9,\n  \"rejectionStatement\" : {\n    \"messages\" : [ {\n      \"content\" : \"Ok, I'll cancel your order.\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"I cancelled your order.\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"sampleUtterances\" : [ \"Order me a pizza.\", \"Order me a {Type} pizza.\", \"I want a {Crust} crust {Type} pizza\", \"I want a {Crust} crust {Type} pizza with {Sauce} sauce.\" ],\n  \"slots\" : [ {\n    \"name\" : \"Sauce\",\n    \"description\" : \"The type of sauce to use on the pizza.\",\n    \"priority\" : 3,\n    \"sampleUtterances\" : [ \"Make it {Sauce} sauce.\", \"I'd like {Sauce} sauce.\" ],\n    \"slotConstraint\" : \"Required\",\n    \"slotType\" : \"DocPizzaSauceType\",\n    \"slotTypeVersion\" : \"$LATEST\",\n    \"valueElicitationPrompt\" : {\n      \"maxAttempts\" : 1,\n      \"messages\" : [ {\n        \"content\" : \"White or red sauce?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"Garlic or tomato sauce?\",\n        \"contentType\" : \"PlainText\"\n      } ]\n    }\n  }, {\n    \"name\" : \"Type\",\n    \"description\" : \"The type of pizza to order.\",\n    \"priority\" : 1,\n    \"sampleUtterances\" : [ \"Get me a {Type} pizza.\", \"A {Type} pizza please.\", \"I'd like a {Type} pizza.\" ],\n    \"slotConstraint\" : \"Required\",\n    \"slotType\" : \"DocPizzaType\",\n    \"slotTypeVersion\" : \"$LATEST\",\n    \"valueElicitationPrompt\" : {\n      \"maxAttempts\" : 1,\n      \"messages\" : [ {\n        \"content\" : \"What type of pizza would you like?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"Vegie or cheese pizza?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"I can get you a vegie or a cheese pizza.\",\n        \"contentType\" : \"PlainText\"\n      } ]\n    }\n  }, {\n    \"name\" : \"Crust\",\n    \"description\" : \"The type of pizza crust to order.\",\n    \"priority\" : 2,\n    \"sampleUtterances\" : [ \"Make it a {Crust} crust.\", \"I'd like a {Crust} crust.\" ],\n    \"slotConstraint\" : \"Required\",\n    \"slotType\" : \"DocPizzaCrustType\",\n    \"slotTypeVersion\" : \"$LATEST\",\n    \"valueElicitationPrompt\" : {\n      \"maxAttempts\" : 1,\n      \"messages\" : [ {\n        \"content\" : \"What type of crust would you like?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"Thick or thin crust?\",\n        \"contentType\" : \"PlainText\"\n      } ]\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59bab638-b521-4bd3-b0e7-fe74ecbc94d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.726197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutIntent",
          "schema" : {
            "type" : "object",
            "example" : {
              "version" : "$LATEST",
              "name" : "DocOrderPizza",
              "checksum" : "ca9bc13d-afc8-4706-bbaf-091f7a5935d6",
              "conclusionStatement" : {
                "messages" : [ {
                  "content" : "All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.",
                  "contentType" : "PlainText"
                }, {
                  "content" : "OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.",
                  "contentType" : "PlainText"
                } ],
                "responseCard" : "foo"
              },
              "confirmationPrompt" : {
                "maxAttempts" : 1,
                "messages" : [ {
                  "content" : "Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?",
                  "contentType" : "PlainText"
                } ]
              },
              "createdDate" : 1494359783.453,
              "description" : "Order a pizza from a local pizzeria.",
              "fulfillmentActivity" : {
                "type" : "ReturnIntent"
              },
              "lastUpdatedDate" : 1494359783.453,
              "rejectionStatement" : {
                "messages" : [ {
                  "content" : "Ok, I'll cancel your order.",
                  "contentType" : "PlainText"
                }, {
                  "content" : "I cancelled your order.",
                  "contentType" : "PlainText"
                } ]
              },
              "sampleUtterances" : [ "Order me a pizza.", "Order me a {Type} pizza.", "I want a {Crust} crust {Type} pizza", "I want a {Crust} crust {Type} pizza with {Sauce} sauce." ],
              "slots" : [ {
                "name" : "Sauce",
                "description" : "The type of sauce to use on the pizza.",
                "priority" : 3,
                "sampleUtterances" : [ "Make it {Sauce} sauce.", "I'd like {Sauce} sauce." ],
                "slotConstraint" : "Required",
                "slotType" : "DocPizzaSauceType",
                "slotTypeVersion" : "$LATEST",
                "valueElicitationPrompt" : {
                  "maxAttempts" : 1,
                  "messages" : [ {
                    "content" : "White or red sauce?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "Garlic or tomato sauce?",
                    "contentType" : "PlainText"
                  } ]
                }
              }, {
                "name" : "Type",
                "description" : "The type of pizza to order.",
                "priority" : 1,
                "sampleUtterances" : [ "Get me a {Type} pizza.", "A {Type} pizza please.", "I'd like a {Type} pizza." ],
                "slotConstraint" : "Required",
                "slotType" : "DocPizzaType",
                "slotTypeVersion" : "$LATEST",
                "valueElicitationPrompt" : {
                  "maxAttempts" : 1,
                  "messages" : [ {
                    "content" : "What type of pizza would you like?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "Vegie or cheese pizza?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "I can get you a vegie or a cheese pizza.",
                    "contentType" : "PlainText"
                  } ]
                }
              }, {
                "name" : "Crust",
                "description" : "The type of pizza crust to order.",
                "priority" : 2,
                "sampleUtterances" : [ "Make it a {Crust} crust.", "I'd like a {Crust} crust." ],
                "slotConstraint" : "Required",
                "slotType" : "DocPizzaCrustType",
                "slotTypeVersion" : "$LATEST",
                "valueElicitationPrompt" : {
                  "maxAttempts" : 1,
                  "messages" : [ {
                    "content" : "What type of crust would you like?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "Thick or thin crust?",
                    "contentType" : "PlainText"
                  } ]
                }
              } ]
            },
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentName"
                }, {
                  "description" : "The name of the intent."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the intent."
                } ]
              },
              "slots" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotList"
                }, {
                  "description" : "An array of intent slots that are configured for the intent."
                } ]
              },
              "sampleUtterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentUtteranceList"
                }, {
                  "description" : " An array of sample utterances that are configured for the intent. "
                } ]
              },
              "confirmationPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prompt"
                }, {
                  "description" : "If defined in the intent, Amazon Lex prompts the user to confirm the intent before fulfilling it."
                } ]
              },
              "rejectionStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "If the user answers \"no\" to the question defined in <code>confirmationPrompt</code> Amazon Lex responds with this statement to acknowledge that the intent was canceled. "
                } ]
              },
              "followUpPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FollowUpPrompt"
                }, {
                  "description" : "If defined in the intent, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled."
                } ]
              },
              "conclusionStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "After the Lambda function specified in the<code>fulfillmentActivity</code>intent fulfills the intent, Amazon Lex conveys this statement to the user."
                } ]
              },
              "dialogCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CodeHook"
                }, {
                  "description" : "If defined in the intent, Amazon Lex invokes this Lambda function for each user input."
                } ]
              },
              "fulfillmentActivity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FulfillmentActivity"
                }, {
                  "description" : "If defined in the intent, Amazon Lex invokes this Lambda function to fulfill the intent after the user provides all of the information required by the intent."
                } ]
              },
              "parentIntentSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinIntentSignature"
                }, {
                  "description" : "A unique identifier for the built-in intent that this intent is based on."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the intent was updated. When you create a resource, the creation date and last update dates are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the intent was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the intent. For a new intent, the version is always <code>$LATEST</code>."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the <code>$LATEST</code>version of the intent created or updated."
                } ]
              },
              "createVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : " <code>True</code> if a new version of the intent was created. If the <code>createVersion</code> field was not specified in the request, the <code>createVersion</code> field is set to false in the response."
                } ]
              },
              "kendraConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KendraConfiguration"
                }, {
                  "description" : "Configuration information, if any, required to connect to an Amazon Kendra index and use the <code>AMAZON.KendraSearchIntent</code> intent."
                } ]
              },
              "inputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InputContextList"
                }, {
                  "description" : "An array of <code>InputContext</code> objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user."
                } ]
              },
              "outputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OutputContextList"
                }, {
                  "description" : "An array of <code>OutputContext</code> objects that lists the contexts that the intent activates when the intent is fulfilled."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "235220a5-cbb9-4a3d-8915-cdcfc687b470",
    "name" : "<p>Creates an Amazon Lex conversational bot or replaces an existing bot. When yo...",
    "request" : {
      "urlPath" : "/bots/X_T_lm_L_Fx_Ei_YFt_O_Bq_v_f_v_YEyI_B_nCjB_rKo_Ydf_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "235220a5-cbb9-4a3d-8915-cdcfc687b470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.724976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBot"
        }
      }
    }
  }, {
    "id" : "9d36acee-fb7e-49c0-b643-cf9399a9542f",
    "name" : "<p>Creates an Amazon Lex conversational bot or replaces an existing bot. When yo...",
    "request" : {
      "urlPath" : "/bots/C_u_M_f_S_r_H_pi_nr_a_LSHqcKd_R_aNe_a_dARVzb_k_WB_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d36acee-fb7e-49c0-b643-cf9399a9542f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.724604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBot"
        }
      }
    }
  }, {
    "id" : "4d0a84e3-01ac-4a5c-949c-310d9254c0ee",
    "name" : "<p>Creates an Amazon Lex conversational bot or replaces an existing bot. When yo...",
    "request" : {
      "urlPath" : "/bots/s_C_xpp_vvDVozW_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d0a84e3-01ac-4a5c-949c-310d9254c0ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.724303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBot"
        }
      }
    }
  }, {
    "id" : "a78d9603-ab57-4f54-b3be-d429a58550e0",
    "name" : "<p>Creates an Amazon Lex conversational bot or replaces an existing bot. When yo...",
    "request" : {
      "urlPath" : "/bots/skajn_J_rd_K_fo_sprx_U_GoSkd_is_ZfI_u_C_G_j_sbL_wr/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a78d9603-ab57-4f54-b3be-d429a58550e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.724096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBot"
        }
      }
    }
  }, {
    "id" : "8020495b-06dd-4a11-a3ea-e0134a292b20",
    "name" : "<p>Creates an Amazon Lex conversational bot or replaces an existing bot. When yo...",
    "request" : {
      "urlPath" : "/bots/Jk_a_h_GVf_X_L_Ll_h_kl_AEKyfx_N_y_/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8020495b-06dd-4a11-a3ea-e0134a292b20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.723802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBot"
        }
      }
    }
  }, {
    "id" : "09b3004a-bb2f-42cc-a627-e5e6fd79e79f",
    "name" : "<p>Creates an Amazon Lex conversational bot or replaces an existing bot. When yo...",
    "request" : {
      "urlPath" : "/bots/zWLLf_Uy_Z_w_KXP_r_H_SDYieGuc_Py_HUsK_L_H_sZ/versions/$LATEST",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"version\" : \"$LATEST\",\n  \"name\" : \"DocOrderPizzaBot\",\n  \"abortStatement\" : {\n    \"messages\" : [ {\n      \"content\" : \"I don't understand. Can you try again?\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"I'm sorry, I don't understand.\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"checksum\" : \"20172ee3-fa06-49b2-bbc5-667c090303e9\",\n  \"childDirected\" : true,\n  \"clarificationPrompt\" : {\n    \"maxAttempts\" : 1,\n    \"messages\" : [ {\n      \"content\" : \"I'm sorry, I didn't hear that. Can you repeate what you just said?\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"Can you say that again?\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"createdDate\" : 1.494360160133E9,\n  \"description\" : \"Orders a pizza from a local pizzeria.\",\n  \"idleSessionTTLInSeconds\" : 300,\n  \"intents\" : [ {\n    \"intentName\" : \"DocOrderPizza\",\n    \"intentVersion\" : \"$LATEST\"\n  } ],\n  \"lastUpdatedDate\" : 1.494360160133E9,\n  \"locale\" : \"en-US\",\n  \"status\" : \"NOT_BUILT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b3004a-bb2f-42cc-a627-e5e6fd79e79f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.723465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBot",
          "schema" : {
            "type" : "object",
            "example" : {
              "version" : "$LATEST",
              "name" : "DocOrderPizzaBot",
              "abortStatement" : {
                "messages" : [ {
                  "content" : "I don't understand. Can you try again?",
                  "contentType" : "PlainText"
                }, {
                  "content" : "I'm sorry, I don't understand.",
                  "contentType" : "PlainText"
                } ]
              },
              "checksum" : "20172ee3-fa06-49b2-bbc5-667c090303e9",
              "childDirected" : true,
              "clarificationPrompt" : {
                "maxAttempts" : 1,
                "messages" : [ {
                  "content" : "I'm sorry, I didn't hear that. Can you repeate what you just said?",
                  "contentType" : "PlainText"
                }, {
                  "content" : "Can you say that again?",
                  "contentType" : "PlainText"
                } ]
              },
              "createdDate" : 1494360160.133,
              "description" : "Orders a pizza from a local pizzeria.",
              "idleSessionTTLInSeconds" : 300,
              "intents" : [ {
                "intentName" : "DocOrderPizza",
                "intentVersion" : "$LATEST"
              } ],
              "lastUpdatedDate" : 1494360160.133,
              "locale" : "en-US",
              "status" : "NOT_BUILT"
            },
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the bot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the bot."
                } ]
              },
              "intents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentList"
                }, {
                  "description" : "An array of <code>Intent</code> objects. For more information, see <a>PutBot</a>."
                } ]
              },
              "enableModelImprovements" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "Indicates whether the bot uses accuracy improvements. <code>true</code> indicates that the bot is using the improvements, otherwise, <code>false</code>."
                } ]
              },
              "nluIntentConfidenceThreshold" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfidenceThreshold"
                }, {
                  "description" : "The score that determines where Amazon Lex inserts the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a <a href=\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\">PostContent</a> or <a href=\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a> response. <code>AMAZON.FallbackIntent</code> is inserted if the confidence score for all intents is below this value. <code>AMAZON.KendraSearchIntent</code> is only inserted if it is configured for the bot."
                } ]
              },
              "clarificationPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prompt"
                }, {
                  "description" : " The prompts that Amazon Lex uses when it doesn't understand the user's intent. For more information, see <a>PutBot</a>. "
                } ]
              },
              "abortStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "The message that Amazon Lex uses to cancel a conversation. For more information, see <a>PutBot</a>."
                } ]
              },
              "status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Status"
                }, {
                  "description" : "<p> When you send a request to create a bot with <code>processBehavior</code> set to <code>BUILD</code>, Amazon Lex sets the <code>status</code> response element to <code>BUILDING</code>.</p> <p>In the <code>READY_BASIC_TESTING</code> state you can test the bot with user inputs that exactly match the utterances configured for the bot's intents and values in the slot types.</p> <p>If Amazon Lex can't build the bot, Amazon Lex sets <code>status</code> to <code>FAILED</code>. Amazon Lex returns the reason for the failure in the <code>failureReason</code> response element. </p> <p>When you set <code>processBehavior</code> to <code>SAVE</code>, Amazon Lex sets the status code to <code>NOT BUILT</code>.</p> <p>When the bot is in the <code>READY</code> state you can test and publish the bot.</p>"
                } ]
              },
              "failureReason" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that it failed to build the bot."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot was updated. When you create a resource, the creation date and last updated date are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot was created."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The maximum length of time that Amazon Lex retains the data gathered in a conversation. For more information, see <a>PutBot</a>."
                } ]
              },
              "voiceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see <a>PutBot</a>."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the bot that you created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the bot. For a new bot, the version is always <code>$LATEST</code>."
                } ]
              },
              "locale" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Locale"
                }, {
                  "description" : " The target locale for the bot. "
                } ]
              },
              "childDirected" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "<p>For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By specifying <code>true</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is not</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code> field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon Lex FAQ.</a> </p>"
                } ]
              },
              "createVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : " <code>True</code> if a new version of the bot was created. If the <code>createVersion</code> field was not specified in the request, the <code>createVersion</code> field is set to false in the response."
                } ]
              },
              "detectSentiment" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : " <code>true</code> if the bot is configured to send user utterances to Amazon Comprehend for sentiment analysis. If the <code>detectSentiment</code> field was not specified in the request, the <code>detectSentiment</code> field is <code>false</code> in the response."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "A list of tags associated with the bot."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "391f0b5c-49bd-4c87-b447-586795ba3f5c",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/3vphsyo6jh5qx65nncb1pw1iedsb1vtgx4gsvk7howky3q5hw8xnymco7evkx3yb6h76qofqu0xbxqzh2667ndie5xeoyr67ig6c3qktznzo7cyd8gcgmfivy6wjywx3ljtxp5xqv7mxhhfkc0xaj459wt9koap12t8u127xs7l305it4xrigq2uke4f5cr0aabup1xi07u9zjuelzs4rb2gqq7p0jtjtm318lsl938njkrpqn7i7vll9ctt5bbz2iygenfmkvfuuje4d3k28zeyj4ag4r9xnwd3bvj9k4ftq5n1kla437h3quetestfeyosw8bp0sg1j6lx43vb3zgwrmhoy2easj814vsbnhedn10k1finwestxg3mkgumh7nisbd8amp100aqb0vdjx3meh4a07djguem6ez25jl2lscrtf2o3sxb4rkt3a4hydi9gi2mfc64awcncazkcetnw4n6c3y3fytsdzwo66414emdsbauu4kgmb1dbssnfbd2aacws73z2rpfpw7q295g986b5dyce78oy7w6ml7ucii77jyyqupt78yn9nfx35ox1ipy07gtbwdjlfj1lnf5ihdyv6wzsonp3qeot9245tsdo9qw8w8lrtwzzm8v7dftlgvbbnqowcy24jb1pcoh5mdiqyzrwxzs1fypcpe00ul2oyivz4up2y1krvjghxeq2sgk8wbxff1d6rnfyz6tog042cdug86odnfh5b9qf6jv8duwrud9k17zo3sxm26egkvh6hhz00jcbswjp1rsqbc43h1ojfh7miseqs114hg8bwzzcgvcig",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "391f0b5c-49bd-4c87-b447-586795ba3f5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.721886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "55bed833-3e07-4f9a-aacd-a28f481eae0c",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/tdr5",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55bed833-3e07-4f9a-aacd-a28f481eae0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.721574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "f00dc051-8a29-4acd-b280-097fe88f9aa8",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/9nz6br3jhhi57jbofxkfeoy4920hbl7pmz46uvffthhn916l9qgd6hwcb9ec01wsb3wo19vgv9b7qxmiphhn6hvat7ezsj4ygigvhocxdeuafkv5o549rx1y9k9rg1jrdguo12odtjp8ar4lsqw6gxch93lv7wcza6sri17nlx9kb87nbxxne5h9z00kaok2zrmfsf747f5rmg6dv1zs0h8o9cyup5v103udmumpi9t4dvhh6z3gwgt1q2t0bb1n9vehxv1rd8xdb86pie8cykzolifb9etv6up6w6ssejp36xjjpe2grob5w5vjyh17vdjdn3mysfqlqhhi282nq759ejijfy3ewr9i8e90fnr1cnkqwrmaoyxu3mfor379ewy8kfjuvb5kgx4wdc5htyvafla2bunyn5mweqht7sq1px9682wnkhawplb8udpms6qybiyv9eoa3kyihmhtlwj8vgbblh3y55tdepwm4vnwz6ce3znzdzy2cytvb6zl7ovadtx085p6lzn8cpak4yev0dh7d0lrgrwscbuj54oek32sbli9dhhpznb0a7nwpx1gwsjfjnv596z0su4d9nxidg0u3v7h32xq8akmmumyb0ktbova327xmzfsos6ogbk29y8da6uankq0w0zeoc7me4s3w1srurqbj4g",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f00dc051-8a29-4acd-b280-097fe88f9aa8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.72134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "03e74ed4-d160-4757-ad55-f1ea88f948a0",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/lidzsb2jhq9pdhhu1i56o2ttdfcf7xfw8s5fsoii5r1x90a5atmgxmcxlxohbft99l34oocmb7y3dab1f18xrr2o9xe3p7dem5ld3g823zf1yhun6xmbfeoyxmi3mdcq0va61q1ycrwxbgbqo7nrd6tmdy9rpadl3ly3uc7j8z52lsfrd5gug3uxt35uyx6wrpysvq0p5a2frr65p026od3q5mojib4b404hsmyvghf2dv0hc069u5v2lq9ocei129iigm1llshmcc0qe8uap6zdgxkgogxm5e6nblv5kf6qnwvpiicohonq8li2v0t0x1uomnig5yws7hsiygz538q1nnt8tzpk9zlqw1mgooavjqhcp3r76oxjfund4sahfc8rda955uknvc77i7t8bboju0uxqnw8top86ylacsvssdh8qjn3lmyepjo4noqck6ihuym09ed9tn9vt0bkx38wwsgym0tq4fdnuh9yrngsvm074i8zxgpsn36vj691170g97ylg97s1st4plef4gbzmc7ufmxzz2qhscd56qy5gz5ot15ibwwcxyh1xc2ga7bnypdlabhbjqsszl5fx608oj6watn5qk4k3t7dovga2li3hiyavx8aexhdl82x7rz28gr2s8riq9umqwpnrhgfhoyx2ptx5suf8uw8u8r0q1kklb9u4roiz6t06ts9rtk9nkrqycraadiq03p33mnou1iyozcsedlaqdbsgnypjqejhn02byuosi2fxfhzvn1wldxzcv21gi5tm877ps8zex33ghzlkkwlephzpiz2mrio5ajqwu2w82fnl2tui32b8svnhtr9w1mdvx1v864cih5dpxkshq",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03e74ed4-d160-4757-ad55-f1ea88f948a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.720812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "c33f1d5e-588a-4448-ac66-c435adcd42dc",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/23q6zfo2pl31crqvjueylu0k9p2zrkedku2myqkkg8yy4j349awfd1ph17c4las083rq7lygyhz47suuk1hu5dhqrph4gkmga6aang6739rvyzoqy46b6ga75ozeo81t6mipujwwc0setyxpluyuvd2c4b2zyvkogzn822bnrxk2j2kws41y9rm6gbsflxpooeli6px818j2dzjqipznj3xran3xi6ukrq1gc48nq6bju9gn9153mhlpsbfilqsmfclmc3x0zi2hfv7rwpq4deofb0uehonix74fodzoygr337m6f46vpsvpwlicvmyixnjhd8ca5hen3084q3er9ouz5vmxm3fvglw992ylagsynpsicxxh6dsmodu9yeo2s46aswqfze43h4v6bmnt3pfsbjzbk4mue91qxin82eyk4r5ya3gaprtr0i70wm4733qllhrmh1vaiz1t13lpsq3ydxp4hq455irhfr0qeuuw3g9zo71a3cg1otuy0dsoqnjsg47lv9rjk27dz64pijm8stwb4zhsopf33uwuzrynx5gxugv92gbscdiy2cvidplhtkr55zcn11vxhih630w7qysk235kzm4flm7y7xosh6ij4nyu89xvpzntzilkchotg7h1smqqo3rlr0auqk5vtltdpwttnohietlfwa6symvvfsexcl6btvhzd4qfvuofqurauztn1lafuc59nbezbps",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c33f1d5e-588a-4448-ac66-c435adcd42dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.720217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    }
  }, {
    "id" : "406e0027-ac3c-4ae0-9f94-52f6bc028efb",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/jb4hcnz4azx4xm2bw6mqd3upaemq3myre9drp1hni7970ijk2uiz635404vog4kxbbt7uoz4q0wegvb9nnjgdwww3cdkhselaonas9a5lszrq4gq5hv5bn19udxh2rovb0zf7r2z2ox1u28i3oo7z0lfb5rrudav67aauovtv96xoltq9b6ke2we5n53u5wogdbv60120hvp7f42zhwv8a1x1zy3e8t37yvjz089rdjbo72tlz2x1z6d1tjdpd3sdilxgf3j1abe3fhpnepocu6mnhmdkllfhpdlem84j2irnnyom6se5mwk5vat6ja0bvskcdi443hk",
      "method" : "POST"
    },
    "response" : {
      "status" : 204,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "406e0027-ac3c-4ae0-9f94-52f6bc028efb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.719917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "TagResource",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "61c2cf4f-1614-4c36-acc6-74acf663aac2",
    "name" : "Gets a list of tags associated with the specified resource. Only bots, bot alias...",
    "request" : {
      "urlPath" : "/tags/gavng0w7bvx24kg2o56xfufxaasuzh9to4d4zti986o5phdauai4kphxpim5bf8bqtguo7yaal1l1dyu8s92i7a0oprco9rvph0p7vq3bonrcvg3xbm079j44xzbuc65ik01wk033mwwi8t5m7us5fva9nsmd8xzwihei3rndte7fv0jrkurajqiq7kt9f5n8r7xjvfrurlkzkpuzlrqf74jzlhd67lmhiaxm8hn5e7bywdhqcc0lf6mxd1h4wlrsh2yb7sqzwqwgynm9n3pieb6w74drl2vs6q8vnwt7ef8ufby8b6toon4328hcui6mmf78d6vix2dqutgid74qmfcq4nxdgnn9ddb7nka4jv9p7qmgzin7zmy3be5zutrq44d8csnwh1rvjld1y58lcg1vpp62tqetlzbfy6hii6zth602ymxbsmic4cqnwo79k7j0942rkwh9m2hyzqd8v2om56bsreve7o8bhcfzacag5f5651geauolkccuz5q11iylr9zhf1kzibrlvfy8smyz56hqbwnm2hqsr8b19x50iul4z33y2gpzck7ebn30pwqdcrjg6mg55n4inb4cjuebxus84i2wkk8h242ewxlctxv8d9kt37d3w3iu26z1x926hrhuldwn0jn6bdrrzoew5sn205rr5zie6mkdywx866076tcpun0dnttm2e5o4prr53vaj81p6w23a3mn1irfoqn00qj9ecybt55e0ufwwok33kypfhte6mhjnv31no5sq5aohmizxea3lgx7gu8laqoyno5uv9uopl4hdscxs32q4fchpb05cuurrpm8i3r5hr9s2b8lxauowdmrtvfh9yh1r3isol6xefdafczpxzins53mtajx3q8owspt8s2ydb2v3bvsszowao7wkt4zi1b7d2a4gcny9x9eng62hsq2geeinzg0g0es2lmhid2wfw17076bok8yoa4k54h7or1y4wgbwq946wo3crt",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61c2cf4f-1614-4c36-acc6-74acf663aac2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.719569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    }
  }, {
    "id" : "84296a26-dd32-4d51-8801-ce32350c022e",
    "name" : "Gets a list of tags associated with the specified resource. Only bots, bot alias...",
    "request" : {
      "urlPath" : "/tags/o8wzpn70hqtybiyc1zf3",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84296a26-dd32-4d51-8801-ce32350c022e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.719223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    }
  }, {
    "id" : "634d970b-a94d-4a26-a122-006bf317da03",
    "name" : "Gets a list of tags associated with the specified resource. Only bots, bot alias...",
    "request" : {
      "urlPath" : "/tags/jdx4kf07p3efa65pw50v33e3yjhoru8kajupx8apiyyyxh80eut4vlup7e6dlxidob8ywsl57nlik5tysm1qjpqgkjg19fk0rpnnytecn36naumzaux6gf6bvn2ri83wt8v3v1hcetm4nvpn0hr8xbp6z4wstfj9hohv6eiffa0ilqrurj9je90lk6as65s4aq8nje4jwx0thtz4dprslkvo6ktncn5v2p96b696cj2c2hbmbvfb4ymg8qwkz7ccc9e96mj3nr78tyhzxb3zb1g3k5vgs6np8bh732vzptyt51qj4j2drjvrx8vqzkykuqmq7i0s2q3a0o9mmzg07y9fbnmjz9jp5z70lysr2hy8ufkowy26wb2vy7vzlhc23dmxt5dl1j0r485x34bc57k8qf3h487sjt6u59wlzj4qmu5e1qvpbghozs0zxt2g1azza1p38xeajpoxg7fvibb8e9w2fapkdgi8v8rjk2vmnw2keklrd3sltri179me7wystvklr960zpaqtzz5te4yx5jy4cjl3xjk372uujj9j6dvnzh41vljivl5bp5qd417zqes7jqkmczbiit1hqt0ga7g05kf9fx61pfdrl0blzk790dbyytm4dx1hksls56l6cro6i8ffjshbt83sopzww8w16wx80gctj0hpaucc0i7eybxi51tdgbnyb5qqwsertb8yvjxqi7wpn1wd38nghy0gr30ul1kk00ea7pny1z0vmuy83jd3htz4eav1gfh7fn9e6bhftubmaus056bzn9aqb2nplbu5dzz4nycfxj2twt9t5xx1g57ho2xv3jbtjl3aegki3rfcakfpr0ffmyyq3bfkilrza9da8w8dlqczkebf3uqjx65oq9jqa97xgnlugm9zk8oetw89489bfflcrsw2khvwqq7k",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "634d970b-a94d-4a26-a122-006bf317da03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.718964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    }
  }, {
    "id" : "59efdcee-e767-4832-9888-fffee5bb71d7",
    "name" : "Gets a list of tags associated with the specified resource. Only bots, bot alias...",
    "request" : {
      "urlPath" : "/tags/7dsf8efkk5px2wqqalvg7sdmmjhwlrhgkcaer69ydw7dxvdxknewrdx0e1m16ts087dn8bgil8s0qktci8rjljzzk8w7smnaib662h14itvydf6e6w0f3vujgadqqg3hskorp9n6yxsbvlwfij4el7nv20fu4mreo9yeiyc2muongdqck0zquq9bu9xb7pdw80z3wglozmpey3xxq09h2g6wzf3xnwt0ej4ab3h5jutljbtlxzqhqaf6fs5567d9jfq7ooa03hzq3e9x252xdvbghhk5auncrv2inetyz2yuk7awjmi843ofg22erebl6dyzfq5nn811xyjbt59kqanmh7hw4mbjcr83w68u6g5sz0ppb730nd3idzz4xi125mrwywzbaqn1gcgfnoov07l2mkywretfpq7f6n5jilwdoej0ss47kk1n1gmqljxmvykwwgrid3qduqwx1qjfgt2gib1484nm9wnk39pbduzfyd4d43annl6yk38479z4dq7h3wqucjqx9y29fb7rxom5pa40m7fr5pjcwt8xjyj9el89k6o77a1r0dciads7j4tave09a6jldrvkpsobg0pn0gsc2b160lghohd594skbamer073dpubvjwszpgyci47yx1e4cc9g464ufmnd1y3nx4480yz7kmatr07ne2ue1b6alzz4tjxewcixv7ql3kou1smay6enb43nakfj896imd1fuieu2sbg9r34708vw2nsxonlumgkf1dd28opfxtv6hjby8a9chwvfjbj307w9a94q0nwwjp4xs5hj2fxtknbdpnscbamqfffe08ii66m9q6smvroporjo6j1k92irwaeqxnehiuu6naq3aldnppp7u71fsujcuian6jlsoo748kgxfbpzqoroy8k6kjntv",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59efdcee-e767-4832-9888-fffee5bb71d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.718605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    }
  }, {
    "id" : "2c2f405c-c576-47aa-ad08-3d92504a69db",
    "name" : "Gets a list of tags associated with the specified resource. Only bots, bot alias...",
    "request" : {
      "urlPath" : "/tags/zvutji4dvjad91m2z93ghqpj4u1dno4e2yr97l10qrpvehcyavft7iemb1kjrvmh2wrltaax798aa4j1xnc5t6wqbywg0riu0mdss6uwf3z2w2x8uchmzmvib65v1sgkiki0eglhg9xjaw7jfbulxuvu7s9ijnozitdc1fstwgygysm8cg42myovo9x0ymiwwe3n9pt4zcb71swdv621bve0tl4kebm72mzzgihxr1wz27v6ae124sth6bz0qx8ey6ee8sog260zn8dqcflhd5l7gk1600cn72v9qkel747ou24tti5lhev9tkgoa46ee67gyzz5bz27su20ir2oejts3ecshlqm29eb80w0421el1puaev568gf6vqfo04bjo66rznpoeb288c85y93yq8jkv5ltssm1yi9d49k3a1zreq5zjvjh7az7hyquobid0wc4neizn6p8fd1hveh51cjjq52cab4ducrx4nyuh37fjc9245eovfo6itcjmpnkf09b0ig3vnfyanom7d4rh01mgvueux73ppgkihxej308w2b6vl86rxvati737cd0t1iihak8mj5cqkh99qd0m8dm5me4yc4q20si7fiw7pwnafyzxb1ngzvjjwo26ahha1yfcqmik839aunkadz1706nw0ykbrjq9ld7i1hfqevtptjhxomz2pxt0pe4t5qjprv8yiyikb0hrk392n049896agtwcmj7wk0nl7ljroef1jy8hqjqc49ozc354k9nzvikej3qjdho96gz5i",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c2f405c-c576-47aa-ad08-3d92504a69db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.71817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListTagsForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags associated with a resource."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "be680654-c1ee-41bd-abe1-30281647748f",
    "name" : "<p>Use the <code>GetUtterancesView</code> operation to get information about the...",
    "request" : {
      "urlPath" : "/bots/lbHT_XK_S_B_e_iR_I_dR_mL_e_Du_orbs_g_EjI_ia_Q_Rbd_/utterances#view=aggregation&bot_versions&status_type",
      "method" : "GET",
      "queryParameters" : {
        "view" : {
          "equalTo" : "aggregation"
        },
        "bot_versions" : {
          "equalTo" : "e3p5g56z8a865euyk0i4jxi4a0cqi9cpyzps9kogmzln7ufcl5mvl7lgswekluv13img1alg30dhsk8em33g7m9t1fymgnj5xs77v5xiyhhnn1tezrsnt8a6ztbeh9ebsbq"
        },
        "status_type" : {
          "equalTo" : "Missed"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be680654-c1ee-41bd-abe1-30281647748f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.717354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUtterancesView"
        }
      }
    }
  }, {
    "id" : "bdd7156f-f109-4fae-ab07-d88ef9c93169",
    "name" : "<p>Use the <code>GetUtterancesView</code> operation to get information about the...",
    "request" : {
      "urlPath" : "/bots/M_m_AZ_PoCkzC_ECXb_x_IM_qJh_g_J_g_fz_E_w_GSxg_ih_M/utterances#view=aggregation&bot_versions&status_type",
      "method" : "GET",
      "queryParameters" : {
        "view" : {
          "equalTo" : "aggregation"
        },
        "bot_versions" : {
          "equalTo" : "xcnz0a53fvqanyq0zxfwnarx6yfje1ztqomx2vuw3pliyrf65bo41beo89ogjgby0gicxcl5dmq1c13w3jkbmtaga0qqbhc2muc95oitghuqp07r3v5uvsmnn0iwomr56pgr706uh3uufveyyim93e3jhoyehh0yi"
        },
        "status_type" : {
          "equalTo" : "Detected"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdd7156f-f109-4fae-ab07-d88ef9c93169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.716862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUtterancesView"
        }
      }
    }
  }, {
    "id" : "5fa63696-5e89-4867-b127-f67880373ee5",
    "name" : "<p>Use the <code>GetUtterancesView</code> operation to get information about the...",
    "request" : {
      "urlPath" : "/bots/FUh_I_Rs_WJ_ZE_fM_S_XI_eu_Zow_wcwZGA_TeH_F_xMLW_dK/utterances#view=aggregation&bot_versions&status_type",
      "method" : "GET",
      "queryParameters" : {
        "view" : {
          "equalTo" : "aggregation"
        },
        "bot_versions" : {
          "equalTo" : "xp1jjt7hopzwopar2iykm5zk9r7yy2vsdx5cn5tcx40mm2k3syvmfe20cwz0ljmn72lm68rv9kvpkzqmycmg9wnyml5qv1ww3rc4c6o5g5duu85bdyjdjsnds917amiwlyf0oni665dhox23"
        },
        "status_type" : {
          "equalTo" : "Missed"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fa63696-5e89-4867-b127-f67880373ee5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.716362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUtterancesView"
        }
      }
    }
  }, {
    "id" : "aa03d786-86f6-4835-bb26-0cd296da1983",
    "name" : "<p>Use the <code>GetUtterancesView</code> operation to get information about the...",
    "request" : {
      "urlPath" : "/bots/Ye_A_iYJ_yNkkm_d_/utterances#view=aggregation&bot_versions&status_type",
      "method" : "GET",
      "queryParameters" : {
        "view" : {
          "equalTo" : "aggregation"
        },
        "bot_versions" : {
          "equalTo" : "ncgksbqfunf35xqyweqmp3zsd6wtas4rfvomyci0s9tsdp4i2ww0tymhspqfr2nkka4pdapyxh3nva5hk98qf36lcujtbk85cp5y4832tx3oyh"
        },
        "status_type" : {
          "equalTo" : "Detected"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"utterances\" : { },\n  \"botName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa03d786-86f6-4835-bb26-0cd296da1983",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.715793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetUtterancesView",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the bot for which utterance information was returned."
                } ]
              },
              "utterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ListsOfUtterances"
                }, {
                  "description" : "An array of <a>UtteranceList</a> objects, each containing a list of <a>UtteranceData</a> objects describing the utterances that were processed by your bot. The response contains a maximum of 100 <code>UtteranceData</code> objects for each version. Amazon Lex returns the most frequent utterances received by the bot in the last 15 days."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3c83529d-8702-456d-8753-fa24bd40779c",
    "name" : "<p>Returns slot type information as follows: </p> <ul> <li> <p>If you specify th...",
    "request" : {
      "urlPath" : "/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c83529d-8702-456d-8753-fa24bd40779c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.714951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypes"
        }
      }
    }
  }, {
    "id" : "2aa37586-6495-4845-bb2b-403f6f035c87",
    "name" : "<p>Returns slot type information as follows: </p> <ul> <li> <p>If you specify th...",
    "request" : {
      "urlPath" : "/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2aa37586-6495-4845-bb2b-403f6f035c87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.714765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypes"
        }
      }
    }
  }, {
    "id" : "3fcd8c15-e32a-4402-b274-8f6521da7f98",
    "name" : "<p>Returns slot type information as follows: </p> <ul> <li> <p>If you specify th...",
    "request" : {
      "urlPath" : "/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fcd8c15-e32a-4402-b274-8f6521da7f98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.71458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypes"
        }
      }
    }
  }, {
    "id" : "f51f8f6b-4fef-4536-8e9e-ee4d124043da",
    "name" : "<p>Returns slot type information as follows: </p> <ul> <li> <p>If you specify th...",
    "request" : {
      "urlPath" : "/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f51f8f6b-4fef-4536-8e9e-ee4d124043da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.714403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypes"
        }
      }
    }
  }, {
    "id" : "51cd3cd6-dbf0-41a5-be89-660d301593b7",
    "name" : "<p>Returns slot type information as follows: </p> <ul> <li> <p>If you specify th...",
    "request" : {
      "urlPath" : "/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"slotTypes\" : [ {\n    \"version\" : \"$LATEST\",\n    \"name\" : \"DocPizzaCrustType\",\n    \"createdDate\" : 1.494359274403E9,\n    \"description\" : \"Available crust types\",\n    \"lastUpdatedDate\" : 1.494359274403E9\n  }, {\n    \"version\" : \"$LATEST\",\n    \"name\" : \"DocPizzaSauceType\",\n    \"createdDate\" : 1.49435644223E9,\n    \"description\" : \"Available pizza sauces\",\n    \"lastUpdatedDate\" : 1.49435644223E9\n  }, {\n    \"version\" : \"$LATEST\",\n    \"name\" : \"DocPizzaType\",\n    \"createdDate\" : 1.494359198656E9,\n    \"description\" : \"Available pizzas\",\n    \"lastUpdatedDate\" : 1.494359198656E9\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51cd3cd6-dbf0-41a5-be89-660d301593b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.71409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypes",
          "schema" : {
            "type" : "object",
            "example" : {
              "slotTypes" : [ {
                "version" : "$LATEST",
                "name" : "DocPizzaCrustType",
                "createdDate" : 1494359274.403,
                "description" : "Available crust types",
                "lastUpdatedDate" : 1494359274.403
              }, {
                "version" : "$LATEST",
                "name" : "DocPizzaSauceType",
                "createdDate" : 1494356442.23,
                "description" : "Available pizza sauces",
                "lastUpdatedDate" : 1494356442.23
              }, {
                "version" : "$LATEST",
                "name" : "DocPizzaType",
                "createdDate" : 1494359198.656,
                "description" : "Available pizzas",
                "lastUpdatedDate" : 1494359198.656
              } ]
            },
            "properties" : {
              "slotTypes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeMetadataList"
                }, {
                  "description" : "An array of objects, one for each slot type, that provides information such as the name of the slot type, the version, and a description."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "If the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of slot types."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "bfa78fa4-d083-47cf-82b7-c85cb3cb70fa",
    "name" : "<p>Gets information about all versions of a slot type.</p> <p>The <code>GetSlotT...",
    "request" : {
      "urlPath" : "/slottypes/IvF_Lm_m_B_e_M_Ke_qP_RI_ll_kAO_mQ_W_Yqc_nHFPf_O_NwXTrZ_gT_RKpO_xkx_Owm_WM_wF_G_Z_OR_eHYeR_UDo_d_N_Z_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfa78fa4-d083-47cf-82b7-c85cb3cb70fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.713462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypeVersions"
        }
      }
    }
  }, {
    "id" : "be1bd19a-b7a1-4413-a2de-b1dc85f0d685",
    "name" : "<p>Gets information about all versions of a slot type.</p> <p>The <code>GetSlotT...",
    "request" : {
      "urlPath" : "/slottypes/Q_X_Vh_pu_l_X_J_X_Hb_vb_Baz_WxDaY_D_R_o_H_dJ_v_P_n_GnoF_y_Nof_L_KL_k_ZmYd_IHjE_EO_aPz_biA_q_GBtWd_Pz/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be1bd19a-b7a1-4413-a2de-b1dc85f0d685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.713174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypeVersions"
        }
      }
    }
  }, {
    "id" : "5bd47052-83b1-40c5-8a3e-da44f690b8df",
    "name" : "<p>Gets information about all versions of a slot type.</p> <p>The <code>GetSlotT...",
    "request" : {
      "urlPath" : "/slottypes/P_th_Cj_b_EaRP_tN_EDf_YP_z_o_NI_yM_b_nY_v_ptP_Gs_L_Tm_o_D_YORfM_iH_LLTwRtnGIob/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bd47052-83b1-40c5-8a3e-da44f690b8df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.712816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypeVersions"
        }
      }
    }
  }, {
    "id" : "40af076b-2a10-4f64-8f35-392810f421bd",
    "name" : "<p>Gets information about all versions of a slot type.</p> <p>The <code>GetSlotT...",
    "request" : {
      "urlPath" : "/slottypes/DJ_X_R_N_tBVnU_h_c_T_V_k_S_F_r_G_pHj_N_d_d_AV_O_ng_bq_V_t_cx_e_b_M_y_Pix_NiaA_wB_JtA_mQ_Q_P_jM_z_phQ/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40af076b-2a10-4f64-8f35-392810f421bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.712559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypeVersions"
        }
      }
    }
  }, {
    "id" : "8b83023a-829a-45c1-8711-17f36705444c",
    "name" : "<p>Gets information about all versions of a slot type.</p> <p>The <code>GetSlotT...",
    "request" : {
      "urlPath" : "/slottypes/sBk_A_c_R_vh_Yrug_yI_v_E_e_qEBi_aw_wiB_f_pTQ_U_U_RpkG_qNmr_W_KeHb_Ynb_VR_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"slotTypes\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b83023a-829a-45c1-8711-17f36705444c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.71219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotTypeVersions",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotTypes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeMetadataList"
                }, {
                  "description" : "An array of <code>SlotTypeMetadata</code> objects, one for each numbered version of the slot type plus one for the <code>$LATEST</code> version."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A pagination token for fetching the next page of slot type versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a5f92ee1-117e-4c4e-8c1d-73ba9221a7a7",
    "name" : "<p>Returns information about a specific version of a slot type. In addition to s...",
    "request" : {
      "urlPath" : "/slottypes/cW_o_Oh_O_aTJ_u_U_XF_Ine_kHLjL_M/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5f92ee1-117e-4c4e-8c1d-73ba9221a7a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.711326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotType"
        }
      }
    }
  }, {
    "id" : "f454e1ae-59d8-4219-b035-47074df1b8e3",
    "name" : "<p>Returns information about a specific version of a slot type. In addition to s...",
    "request" : {
      "urlPath" : "/slottypes/KA_Oe_gU_A_Xr_Vax_U_I_EwCOZ_cwM_m_kf_KME_uy_o_Rg_o_Z_NCFOl_bOdUaT_sO_jaQU_z_bP_x_PM_V_o_m_QLKJZ_V_SH/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f454e1ae-59d8-4219-b035-47074df1b8e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.710978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotType"
        }
      }
    }
  }, {
    "id" : "add72449-bedb-4cbe-8180-7e361b5ee39a",
    "name" : "<p>Returns information about a specific version of a slot type. In addition to s...",
    "request" : {
      "urlPath" : "/slottypes/dR_p_aHryF_D_m_L_X_D_l_HSdC_mmS_oR_l_VQ_M_h_saqlI_P_Z_t_X_O_oJuR_CuUDu_SyM_qH_z_Oq_MA_wQ_VH_S_D_RNxO/versions/50058896144480390795979479",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "add72449-bedb-4cbe-8180-7e361b5ee39a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.710589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotType"
        }
      }
    }
  }, {
    "id" : "ffb8acba-fcc3-4b88-8015-d31e3a65d3b7",
    "name" : "<p>Returns information about a specific version of a slot type. In addition to s...",
    "request" : {
      "urlPath" : "/slottypes/kbQ_V_yD_b_c_P_u_S_QL_m_JewH_P_R_u_jTd_Cy_h_HL_P_h_STt_BjS_O_LaFHlK_Rh_L_YZ_h_At_CN_UP_SkG_Xwh_DZiU_/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffb8acba-fcc3-4b88-8015-d31e3a65d3b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.710254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotType"
        }
      }
    }
  }, {
    "id" : "ba21e1f0-0115-4e76-9612-05b45b9128d3",
    "name" : "<p>Returns information about a specific version of a slot type. In addition to s...",
    "request" : {
      "urlPath" : "/slottypes/KXN_MjC_R_jQS_s_dE_S_R_W_MS_Ha_M_gV_elAxwv_B_kr_dyT_lXh_B_n_uWGk_Q_Jt_hffS_Cq_k_on_XY_HYN_k_r_pYV_X_/versions/23872475998815",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"version\" : \"$LATEST\",\n  \"name\" : \"DocPizzaCrustType\",\n  \"checksum\" : \"210b3d5a-90a3-4b22-ac7e-f50c2c71095f\",\n  \"createdDate\" : 1.494359274403E9,\n  \"description\" : \"Available crust types\",\n  \"enumerationValues\" : [ {\n    \"value\" : \"thick\"\n  }, {\n    \"value\" : \"thin\"\n  } ],\n  \"lastUpdatedDate\" : 1.494359274403E9\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba21e1f0-0115-4e76-9612-05b45b9128d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.709814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetSlotType",
          "schema" : {
            "type" : "object",
            "example" : {
              "version" : "$LATEST",
              "name" : "DocPizzaCrustType",
              "checksum" : "210b3d5a-90a3-4b22-ac7e-f50c2c71095f",
              "createdDate" : 1494359274.403,
              "description" : "Available crust types",
              "enumerationValues" : [ {
                "value" : "thick"
              }, {
                "value" : "thin"
              } ],
              "lastUpdatedDate" : 1494359274.403
            },
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeName"
                }, {
                  "description" : "The name of the slot type."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the slot type."
                } ]
              },
              "enumerationValues" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EnumerationValues"
                }, {
                  "description" : "A list of <code>EnumerationValue</code> objects that defines the values that the slot type can take."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the slot type was updated. When you create a resource, the creation date and last update date are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the slot type was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the slot type."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the <code>$LATEST</code> version of the slot type."
                } ]
              },
              "valueSelectionStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueSelectionStrategy"
                }, {
                  "description" : "The strategy that Amazon Lex uses to determine the value of the slot. For more information, see <a>PutSlotType</a>."
                } ]
              },
              "parentSlotTypeSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomOrBuiltinSlotTypeName"
                }, {
                  "description" : "The built-in slot type used as a parent for the slot type."
                } ]
              },
              "slotTypeConfigurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeConfigurations"
                }, {
                  "description" : "Configuration information that extends the parent built-in slot type."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "cdf098f1-69ba-4515-beba-d1c68175a2d1",
    "name" : "<p>Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot ...",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdf098f1-69ba-4515-beba-d1c68175a2d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.707192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartMigration"
        }
      }
    }
  }, {
    "id" : "36bff92d-89b8-4141-a3a3-43ddb79b0967",
    "name" : "<p>Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot ...",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36bff92d-89b8-4141-a3a3-43ddb79b0967",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.706821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartMigration"
        }
      }
    }
  }, {
    "id" : "d191dc9c-2df4-462d-b501-950ffd964a7d",
    "name" : "<p>Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot ...",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d191dc9c-2df4-462d-b501-950ffd964a7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.70658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartMigration"
        }
      }
    }
  }, {
    "id" : "6a8518a4-f91e-4acf-87e1-9b76e6fe0f12",
    "name" : "<p>Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot ...",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a8518a4-f91e-4acf-87e1-9b76e6fe0f12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.706355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartMigration"
        }
      }
    }
  }, {
    "id" : "060ee63c-7f2c-4e69-9a50-114a71be574b",
    "name" : "<p>Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot ...",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "060ee63c-7f2c-4e69-9a50-114a71be574b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.706137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartMigration"
        }
      }
    }
  }, {
    "id" : "e2e5a354-3c38-4957-8079-964264d5111d",
    "name" : "<p>Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate your bot ...",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"v2BotId\" : { },\n  \"migrationId\" : { },\n  \"v1BotVersion\" : { },\n  \"v2BotRole\" : { },\n  \"v1BotName\" : { },\n  \"v1BotLocale\" : { },\n  \"migrationStrategy\" : { },\n  \"migrationTimestamp\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2e5a354-3c38-4957-8079-964264d5111d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.705888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "StartMigration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "v1BotName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2."
                } ]
              },
              "v1BotVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the bot to migrate to Amazon Lex V2. "
                } ]
              },
              "v1BotLocale" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Locale"
                }, {
                  "description" : "The locale used for the Amazon Lex V1 bot. "
                } ]
              },
              "v2BotId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/V2BotId"
                }, {
                  "description" : "The unique identifier for the Amazon Lex V2 bot. "
                } ]
              },
              "v2BotRole" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IamRoleArn"
                }, {
                  "description" : "The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot."
                } ]
              },
              "migrationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationId"
                }, {
                  "description" : "The unique identifier that Amazon Lex assigned to the migration."
                } ]
              },
              "migrationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationStrategy"
                }, {
                  "description" : "The strategy used to conduct the migration."
                } ]
              },
              "migrationTimestamp" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the migration started."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "180b716a-ec01-4555-9d90-8efef26cae00",
    "name" : "Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "180b716a-ec01-4555-9d90-8efef26cae00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.705119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigrations"
        }
      }
    }
  }, {
    "id" : "25c08fe3-3008-4f85-be1e-2125d5311f69",
    "name" : "Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25c08fe3-3008-4f85-be1e-2125d5311f69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.704951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigrations"
        }
      }
    }
  }, {
    "id" : "bcb9c21f-3215-47c4-9959-02db4c4bbece",
    "name" : "Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcb9c21f-3215-47c4-9959-02db4c4bbece",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.70478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigrations"
        }
      }
    }
  }, {
    "id" : "43205bdd-a6fa-400d-b355-abc865e68d55",
    "name" : "Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.",
    "request" : {
      "urlPath" : "/migrations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"migrationSummaries\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43205bdd-a6fa-400d-b355-abc865e68d55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.704588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigrations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "migrationSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationSummaryList"
                }, {
                  "description" : "An array of summaries for migrations from Amazon Lex V1 to Amazon Lex V2. To see details of the migration, use the <code>migrationId</code> from the summary in a call to the operation."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "If the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of migrations."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5417f094-f2de-4af3-8599-e3487f231bfd",
    "name" : "Provides details about an ongoing or complete migration from an Amazon Lex V1 bo...",
    "request" : {
      "urlPath" : "/migrations/vEjhRlb9bh",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5417f094-f2de-4af3-8599-e3487f231bfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.704201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigration"
        }
      }
    }
  }, {
    "id" : "5181beda-897d-489b-95b6-e8290b1b18bc",
    "name" : "Provides details about an ongoing or complete migration from an Amazon Lex V1 bo...",
    "request" : {
      "urlPath" : "/migrations/7vGtCqC03T",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5181beda-897d-489b-95b6-e8290b1b18bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.703975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigration"
        }
      }
    }
  }, {
    "id" : "93e2df05-4677-4b87-8316-7bf488ef3b5c",
    "name" : "Provides details about an ongoing or complete migration from an Amazon Lex V1 bo...",
    "request" : {
      "urlPath" : "/migrations/Sy2zzkWZYY",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93e2df05-4677-4b87-8316-7bf488ef3b5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.70375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigration"
        }
      }
    }
  }, {
    "id" : "9e7061a3-22df-4fae-bbd8-be2943e26fa7",
    "name" : "Provides details about an ongoing or complete migration from an Amazon Lex V1 bo...",
    "request" : {
      "urlPath" : "/migrations/7N4YWu2cxS",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e7061a3-22df-4fae-bbd8-be2943e26fa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.703509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigration"
        }
      }
    }
  }, {
    "id" : "055c73ec-70e9-4b2f-8cc7-b3923f18ed10",
    "name" : "Provides details about an ongoing or complete migration from an Amazon Lex V1 bo...",
    "request" : {
      "urlPath" : "/migrations/Jhe6TisFUw",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"alerts\" : { },\n  \"migrationId\" : { },\n  \"v2BotId\" : { },\n  \"v1BotVersion\" : { },\n  \"v2BotRole\" : { },\n  \"v1BotName\" : { },\n  \"migrationStatus\" : { },\n  \"v1BotLocale\" : { },\n  \"migrationStrategy\" : { },\n  \"migrationTimestamp\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "055c73ec-70e9-4b2f-8cc7-b3923f18ed10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.70319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetMigration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "migrationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationId"
                }, {
                  "description" : "The unique identifier of the migration. This is the same as the identifier used when calling the <code>GetMigration</code> operation."
                } ]
              },
              "v1BotName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the Amazon Lex V1 bot migrated to Amazon Lex V2."
                } ]
              },
              "v1BotVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the Amazon Lex V1 bot migrated to Amazon Lex V2."
                } ]
              },
              "v1BotLocale" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Locale"
                }, {
                  "description" : "The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2."
                } ]
              },
              "v2BotId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/V2BotId"
                }, {
                  "description" : "The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1 is being migrated to."
                } ]
              },
              "v2BotRole" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IamRoleArn"
                }, {
                  "description" : "The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot."
                } ]
              },
              "migrationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationStatus"
                }, {
                  "description" : "Indicates the status of the migration. When the status is <code>COMPLETE</code> the migration is finished and the bot is available in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete the migration."
                } ]
              },
              "migrationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationStrategy"
                }, {
                  "description" : "<p>The strategy used to conduct the migration.</p> <ul> <li> <p> <code>CREATE_NEW</code> - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.</p> </li> <li> <p> <code>UPDATE_EXISTING</code> - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn't change any other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2 bot.</p> </li> </ul>"
                } ]
              },
              "migrationTimestamp" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the migration started."
                } ]
              },
              "alerts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MigrationAlerts"
                }, {
                  "description" : "<p>A list of alerts and warnings that indicate issues with the migration for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has a different implementation if Amazon Lex V2.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/migrate.html\">Migrating a bot</a> in the <i>Amazon Lex V2 developer guide</i>.</p>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d74f538c-ab57-41be-a6d3-bc0dce47f0a1",
    "name" : "<p>Returns intent information as follows: </p> <ul> <li> <p>If you specify the <...",
    "request" : {
      "urlPath" : "/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d74f538c-ab57-41be-a6d3-bc0dce47f0a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.70169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntents"
        }
      }
    }
  }, {
    "id" : "a8112b09-8655-4df0-a4a5-b8760a15a319",
    "name" : "<p>Returns intent information as follows: </p> <ul> <li> <p>If you specify the <...",
    "request" : {
      "urlPath" : "/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8112b09-8655-4df0-a4a5-b8760a15a319",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.701465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntents"
        }
      }
    }
  }, {
    "id" : "3067b6eb-2dc5-404d-945a-a2ea47aba468",
    "name" : "<p>Returns intent information as follows: </p> <ul> <li> <p>If you specify the <...",
    "request" : {
      "urlPath" : "/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3067b6eb-2dc5-404d-945a-a2ea47aba468",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.701123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntents"
        }
      }
    }
  }, {
    "id" : "330bcda2-747f-416d-9ff9-acaaf4a7d92d",
    "name" : "<p>Returns intent information as follows: </p> <ul> <li> <p>If you specify the <...",
    "request" : {
      "urlPath" : "/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "330bcda2-747f-416d-9ff9-acaaf4a7d92d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.700318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntents"
        }
      }
    }
  }, {
    "id" : "4c373c1e-382a-41d6-b550-034145e02009",
    "name" : "<p>Returns intent information as follows: </p> <ul> <li> <p>If you specify the <...",
    "request" : {
      "urlPath" : "/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intents\" : [ {\n    \"version\" : \"$LATEST\",\n    \"name\" : \"DocOrderPizza\",\n    \"createdDate\" : 1.494359783453E9,\n    \"description\" : \"Order a pizza from a local pizzeria.\",\n    \"lastUpdatedDate\" : 1.494359783453E9\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c373c1e-382a-41d6-b550-034145e02009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.699902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntents",
          "schema" : {
            "type" : "object",
            "example" : {
              "intents" : [ {
                "version" : "$LATEST",
                "name" : "DocOrderPizza",
                "createdDate" : 1494359783.453,
                "description" : "Order a pizza from a local pizzeria.",
                "lastUpdatedDate" : 1494359783.453
              } ]
            },
            "properties" : {
              "intents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentMetadataList"
                }, {
                  "description" : "An array of <code>Intent</code> objects. For more information, see <a>PutBot</a>."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "If the response is truncated, the response includes a pagination token that you can specify in your next request to fetch the next page of intents. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0983ff08-bf6b-419f-8d16-f285b0cb6455",
    "name" : "<p>Gets information about all of the versions of an intent.</p> <p>The <code>Get...",
    "request" : {
      "urlPath" : "/intents/W_UgkfU_J_m_S_C_r_X_bom_w_Pn_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0983ff08-bf6b-419f-8d16-f285b0cb6455",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.699357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntentVersions"
        }
      }
    }
  }, {
    "id" : "5bd21a2b-cdbc-4cd5-adf2-32bc5eff7392",
    "name" : "<p>Gets information about all of the versions of an intent.</p> <p>The <code>Get...",
    "request" : {
      "urlPath" : "/intents/JfpAz_JV_v_AJ_rFas_g_H_wnl_ld_P_s_T_zm_n_F_g_o_uT_f_R_ZJr_d_jzWf_T_Sn_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bd21a2b-cdbc-4cd5-adf2-32bc5eff7392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.699057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntentVersions"
        }
      }
    }
  }, {
    "id" : "97b7a450-ef3f-4069-b99a-d7da0f858483",
    "name" : "<p>Gets information about all of the versions of an intent.</p> <p>The <code>Get...",
    "request" : {
      "urlPath" : "/intents/v_Gf_LhQoKH_ZvMz_Cy_eX_C_N_Or/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97b7a450-ef3f-4069-b99a-d7da0f858483",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.6987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntentVersions"
        }
      }
    }
  }, {
    "id" : "43052323-4951-4a5e-afab-a59da936e5d1",
    "name" : "<p>Gets information about all of the versions of an intent.</p> <p>The <code>Get...",
    "request" : {
      "urlPath" : "/intents/j_U_z_QT_P_UDF_r_n_KDFR_J_c_jl_SG_zYm_R_AkJ_e_u_jt_uE_S_rWh_BD_PZjO_N_uPPRi_I_Q_h_l_GsEd_PUF_M_y_EK_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43052323-4951-4a5e-afab-a59da936e5d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.698409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntentVersions"
        }
      }
    }
  }, {
    "id" : "3b4de289-afcd-41ae-b1ed-2e0cefee148e",
    "name" : "<p>Gets information about all of the versions of an intent.</p> <p>The <code>Get...",
    "request" : {
      "urlPath" : "/intents/Ok_m_P_M_tv_mv_G_Bm_rPvdr_P_ZzIf_bs_if_sONlw_eN_QM_X_a_ZJ_kZ_N_q_uos_Z_s_c_O_JFe_O_io_BC_Dn_C_cyb_M_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intents\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b4de289-afcd-41ae-b1ed-2e0cefee148e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.698005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntentVersions",
          "schema" : {
            "type" : "object",
            "properties" : {
              "intents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentMetadataList"
                }, {
                  "description" : "An array of <code>IntentMetadata</code> objects, one for each numbered version of the intent plus one for the <code>$LATEST</code> version."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A pagination token for fetching the next page of intent versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1d385e10-3d2e-413b-88ee-1b9f19a92edb",
    "name" : "Gets information about an import job started with the <code>StartImport</code> o...",
    "request" : {
      "urlPath" : "/imports/b705",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d385e10-3d2e-413b-88ee-1b9f19a92edb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.69733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetImport"
        }
      }
    }
  }, {
    "id" : "f01e825c-3a40-4e67-a14c-4970762f266b",
    "name" : "Gets information about an import job started with the <code>StartImport</code> o...",
    "request" : {
      "urlPath" : "/imports/y127",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f01e825c-3a40-4e67-a14c-4970762f266b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.69668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetImport"
        }
      }
    }
  }, {
    "id" : "49944da3-f245-4782-8f55-f89c2e15373e",
    "name" : "Gets information about an import job started with the <code>StartImport</code> o...",
    "request" : {
      "urlPath" : "/imports/0j12",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49944da3-f245-4782-8f55-f89c2e15373e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.696085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetImport"
        }
      }
    }
  }, {
    "id" : "f37b0121-80c1-46a7-a6b0-ca3711038977",
    "name" : "Gets information about an import job started with the <code>StartImport</code> o...",
    "request" : {
      "urlPath" : "/imports/j4h5",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f37b0121-80c1-46a7-a6b0-ca3711038977",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.695298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetImport"
        }
      }
    }
  }, {
    "id" : "dcb5a73e-d127-4bca-839b-891400ff139c",
    "name" : "Gets information about an import job started with the <code>StartImport</code> o...",
    "request" : {
      "urlPath" : "/imports/4542",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importStatus\" : { },\n  \"importId\" : { },\n  \"createdDate\" : { },\n  \"mergeStrategy\" : { },\n  \"failureReason\" : { },\n  \"name\" : { },\n  \"resourceType\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcb5a73e-d127-4bca-839b-891400ff139c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.694688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetImport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name given to the import job."
                } ]
              },
              "resourceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResourceType"
                }, {
                  "description" : "The type of resource imported."
                } ]
              },
              "mergeStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MergeStrategy"
                }, {
                  "description" : "The action taken when there was a conflict between an existing resource and a resource in the import file."
                } ]
              },
              "importId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The identifier for the specific import job."
                } ]
              },
              "importStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportStatus"
                }, {
                  "description" : "The status of the import job. If the status is <code>FAILED</code>, you can get the reason for the failure from the <code>failureReason</code> field."
                } ]
              },
              "failureReason" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/StringList"
                }, {
                  "description" : "A string that describes why an import job failed to complete."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp for the date and time that the import job was created."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2fd02138-13bb-4487-a264-c42ae5c1fbf9",
    "name" : "Exports the contents of a Amazon Lex resource in a specified format. ",
    "request" : {
      "urlPath" : "/exports/#name&version&resourceType&exportType",
      "method" : "GET",
      "queryParameters" : {
        "exportType" : {
          "equalTo" : "ALEXA_SKILLS_KIT"
        },
        "name" : {
          "equalTo" : "KFFFBRdCsXsQM"
        },
        "version" : {
          "equalTo" : "6956567982457371292175982549756055372592022927"
        },
        "resourceType" : {
          "equalTo" : "INTENT"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fd02138-13bb-4487-a264-c42ae5c1fbf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.693354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExport"
        }
      }
    }
  }, {
    "id" : "e8f91019-8cf5-41de-8312-1ca737592377",
    "name" : "Exports the contents of a Amazon Lex resource in a specified format. ",
    "request" : {
      "urlPath" : "/exports/#name&version&resourceType&exportType",
      "method" : "GET",
      "queryParameters" : {
        "exportType" : {
          "equalTo" : "ALEXA_SKILLS_KIT"
        },
        "name" : {
          "equalTo" : "LvcmEaLKltTdYuPFyrpmejYrFkQuuyZNQFFwm_NMXCvgtHWnokoRGJcRVxmJsLFA_JtODECVDitrvZMpIFTE_xTOOunWGJ"
        },
        "version" : {
          "equalTo" : "704480361892594"
        },
        "resourceType" : {
          "equalTo" : "SLOT_TYPE"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8f91019-8cf5-41de-8312-1ca737592377",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.692613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExport"
        }
      }
    }
  }, {
    "id" : "c061659b-8a71-4230-9e9c-d0a676b808ac",
    "name" : "Exports the contents of a Amazon Lex resource in a specified format. ",
    "request" : {
      "urlPath" : "/exports/#name&version&resourceType&exportType",
      "method" : "GET",
      "queryParameters" : {
        "exportType" : {
          "equalTo" : "LEX"
        },
        "name" : {
          "equalTo" : "cfHvUshcMeu_HehxOH"
        },
        "version" : {
          "equalTo" : "202090243579812721555483258078590108319294864457419687"
        },
        "resourceType" : {
          "equalTo" : "INTENT"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c061659b-8a71-4230-9e9c-d0a676b808ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.691946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExport"
        }
      }
    }
  }, {
    "id" : "a8f76d7c-069c-492b-bfc3-f65c06ee0780",
    "name" : "Exports the contents of a Amazon Lex resource in a specified format. ",
    "request" : {
      "urlPath" : "/exports/#name&version&resourceType&exportType",
      "method" : "GET",
      "queryParameters" : {
        "exportType" : {
          "equalTo" : "ALEXA_SKILLS_KIT"
        },
        "name" : {
          "equalTo" : "fmtRy"
        },
        "version" : {
          "equalTo" : "3212935093781102717636094489647327111758149513113459087730811889"
        },
        "resourceType" : {
          "equalTo" : "INTENT"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8f76d7c-069c-492b-bfc3-f65c06ee0780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.691323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExport"
        }
      }
    }
  }, {
    "id" : "ac5fd29a-285e-4068-8e3c-53887c9ab360",
    "name" : "Exports the contents of a Amazon Lex resource in a specified format. ",
    "request" : {
      "urlPath" : "/exports/#name&version&resourceType&exportType",
      "method" : "GET",
      "queryParameters" : {
        "exportType" : {
          "equalTo" : "LEX"
        },
        "name" : {
          "equalTo" : "pbzHWiITIhjIAQtNOqxqURAHfomGyFIReeMQxGhVJjsUsmgORhYpbhUneAkDZmLdiMrxRVlHae"
        },
        "version" : {
          "equalTo" : "8510"
        },
        "resourceType" : {
          "equalTo" : "INTENT"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exportStatus\" : { },\n  \"exportType\" : { },\n  \"failureReason\" : { },\n  \"name\" : { },\n  \"version\" : { },\n  \"url\" : { },\n  \"resourceType\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac5fd29a-285e-4068-8e3c-53887c9ab360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.689013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetExport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name of the bot being exported."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NumericalVersion"
                }, {
                  "description" : "The version of the bot being exported."
                } ]
              },
              "resourceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResourceType"
                }, {
                  "description" : "The type of the exported resource."
                } ]
              },
              "exportType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportType"
                }, {
                  "description" : "The format of the exported data."
                } ]
              },
              "exportStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportStatus"
                }, {
                  "description" : "<p>The status of the export. </p> <ul> <li> <p> <code>IN_PROGRESS</code> - The export is in progress.</p> </li> <li> <p> <code>READY</code> - The export is complete.</p> </li> <li> <p> <code>FAILED</code> - The export could not be completed.</p> </li> </ul>"
                } ]
              },
              "failureReason" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that it failed to export the resource."
                } ]
              },
              "url" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An S3 pre-signed URL that provides the location of the exported resource. The exported resource is a ZIP archive that contains the exported resource in JSON format. The structure of the archive may change. Your code should not rely on the archive structure."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e6292392-4250-49a3-bc25-603063376fd5",
    "name" : "<p>Gets a list of built-in slot types that meet the specified criteria.</p> <p>F...",
    "request" : {
      "urlPath" : "/builtins/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6292392-4250-49a3-bc25-603063376fd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.687359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinSlotTypes"
        }
      }
    }
  }, {
    "id" : "82a213a9-64a8-43b7-a0a9-c6cb079db44f",
    "name" : "<p>Gets a list of built-in slot types that meet the specified criteria.</p> <p>F...",
    "request" : {
      "urlPath" : "/builtins/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82a213a9-64a8-43b7-a0a9-c6cb079db44f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.687135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinSlotTypes"
        }
      }
    }
  }, {
    "id" : "b6f28bd1-cf20-4166-a92d-c7ad8a981bc4",
    "name" : "<p>Gets a list of built-in slot types that meet the specified criteria.</p> <p>F...",
    "request" : {
      "urlPath" : "/builtins/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6f28bd1-cf20-4166-a92d-c7ad8a981bc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.686887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinSlotTypes"
        }
      }
    }
  }, {
    "id" : "a049c5ad-4098-47ff-a86b-45712d5f36fe",
    "name" : "<p>Gets a list of built-in slot types that meet the specified criteria.</p> <p>F...",
    "request" : {
      "urlPath" : "/builtins/slottypes/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"slotTypes\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a049c5ad-4098-47ff-a86b-45712d5f36fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.68665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinSlotTypes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotTypes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinSlotTypeMetadataList"
                }, {
                  "description" : "An array of <code>BuiltInSlotTypeMetadata</code> objects, one entry for each slot type returned."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "If the response is truncated, the response includes a pagination token that you can use in your next request to fetch the next page of slot types."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "90be6222-0f4c-44ac-a9de-3b416e9309a8",
    "name" : "<p>Gets a list of built-in intents that meet the specified criteria.</p> <p>This...",
    "request" : {
      "urlPath" : "/builtins/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90be6222-0f4c-44ac-a9de-3b416e9309a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.686172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntents"
        }
      }
    }
  }, {
    "id" : "a6a95137-8814-44d7-927e-e5f461ed3956",
    "name" : "<p>Gets a list of built-in intents that meet the specified criteria.</p> <p>This...",
    "request" : {
      "urlPath" : "/builtins/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6a95137-8814-44d7-927e-e5f461ed3956",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.68598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntents"
        }
      }
    }
  }, {
    "id" : "ac2a8a8b-0db5-4849-9de5-6e177239b154",
    "name" : "<p>Gets a list of built-in intents that meet the specified criteria.</p> <p>This...",
    "request" : {
      "urlPath" : "/builtins/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac2a8a8b-0db5-4849-9de5-6e177239b154",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.685743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntents"
        }
      }
    }
  }, {
    "id" : "c17c37cb-39d0-4297-a207-764f98643fa7",
    "name" : "<p>Gets a list of built-in intents that meet the specified criteria.</p> <p>This...",
    "request" : {
      "urlPath" : "/builtins/intents/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intents\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c17c37cb-39d0-4297-a207-764f98643fa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.685491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntents",
          "schema" : {
            "type" : "object",
            "properties" : {
              "intents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinIntentMetadataList"
                }, {
                  "description" : "An array of <code>builtinIntentMetadata</code> objects, one for each intent in the response."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A pagination token that fetches the next page of intents. If the response to this API call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of intents, specify the pagination token in the next request."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2089e7cb-6748-4762-825d-3d813625fe4c",
    "name" : "<p>Returns information about a built-in intent.</p> <p>This operation requires p...",
    "request" : {
      "urlPath" : "/builtins/intents/1m82nzjp63f1gt353rm1pnldqrz4eginv3aauz0tkkihzdvhbij4nxg9te7vjuugvcntun7f",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2089e7cb-6748-4762-825d-3d813625fe4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.683809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntent"
        }
      }
    }
  }, {
    "id" : "a75a6e4a-c7b7-4246-ad34-6525982000ca",
    "name" : "<p>Returns information about a built-in intent.</p> <p>This operation requires p...",
    "request" : {
      "urlPath" : "/builtins/intents/xze5ykhm1fwfpv",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a75a6e4a-c7b7-4246-ad34-6525982000ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.683548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntent"
        }
      }
    }
  }, {
    "id" : "f4e81bc8-af77-4d4a-b173-3698e31611a4",
    "name" : "<p>Returns information about a built-in intent.</p> <p>This operation requires p...",
    "request" : {
      "urlPath" : "/builtins/intents/mzwt69t9awivgtg3h9cztmxgxm6728ilyj259bxzmxefb333oyyrem8zloyygew51r2pudzo6x40yb9jjv7o4g6tt3rzsria9xydmnymkww647hemw0",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4e81bc8-af77-4d4a-b173-3698e31611a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.683283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntent"
        }
      }
    }
  }, {
    "id" : "8d4da046-0f74-41fc-8f42-57122db729b6",
    "name" : "<p>Returns information about a built-in intent.</p> <p>This operation requires p...",
    "request" : {
      "urlPath" : "/builtins/intents/siv7wbr48hy9k",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d4da046-0f74-41fc-8f42-57122db729b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.682947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntent"
        }
      }
    }
  }, {
    "id" : "e274dbb2-70bc-4cea-b5ac-b1cf984ab43a",
    "name" : "<p>Returns information about a built-in intent.</p> <p>This operation requires p...",
    "request" : {
      "urlPath" : "/builtins/intents/dp3dg3zp7vzjbzcwr6yon1j5osxk7evebxkgswkcu0vbqb43zmj62yz2c0gks2dsulyi764zbupj6dkr6r3t51tbfoahw1ozmlon",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"slots\" : { },\n  \"supportedLocales\" : { },\n  \"signature\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e274dbb2-70bc-4cea-b5ac-b1cf984ab43a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.681988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBuiltinIntent",
          "schema" : {
            "type" : "object",
            "properties" : {
              "signature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinIntentSignature"
                }, {
                  "description" : "The unique identifier for a built-in intent."
                } ]
              },
              "supportedLocales" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleList"
                }, {
                  "description" : "A list of locales that the intent supports."
                } ]
              },
              "slots" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinIntentSlotList"
                }, {
                  "description" : "An array of <code>BuiltinIntentSlot</code> objects, one entry for each slot type in the intent."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "344cffb2-f6d4-44c6-8693-1c0af64b835c",
    "name" : "<p>Returns bot information as follows: </p> <ul> <li> <p>If you provide the <cod...",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "344cffb2-f6d4-44c6-8693-1c0af64b835c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.681259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBots"
        }
      }
    }
  }, {
    "id" : "f24a1bbb-350c-41cd-93d3-a8b37902d6f0",
    "name" : "<p>Returns bot information as follows: </p> <ul> <li> <p>If you provide the <cod...",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f24a1bbb-350c-41cd-93d3-a8b37902d6f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.681043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBots"
        }
      }
    }
  }, {
    "id" : "0d7ee8d3-2001-4271-8834-77424961743a",
    "name" : "<p>Returns bot information as follows: </p> <ul> <li> <p>If you provide the <cod...",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d7ee8d3-2001-4271-8834-77424961743a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.68084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBots"
        }
      }
    }
  }, {
    "id" : "ee68f600-338a-41f9-a9eb-da6c53cf98e8",
    "name" : "<p>Returns bot information as follows: </p> <ul> <li> <p>If you provide the <cod...",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee68f600-338a-41f9-a9eb-da6c53cf98e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.680597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBots"
        }
      }
    }
  }, {
    "id" : "b9de91fd-df02-4e68-b99b-29236d09df4e",
    "name" : "<p>Returns bot information as follows: </p> <ul> <li> <p>If you provide the <cod...",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bots\" : [ {\n    \"version\" : \"$LATEST\",\n    \"name\" : \"DocOrderPizzaBot\",\n    \"createdDate\" : 1.494360160133E9,\n    \"description\" : \"Orders a pizza from a local pizzeria.\",\n    \"lastUpdatedDate\" : 1.494360160133E9,\n    \"status\" : \"NOT_BUILT\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9de91fd-df02-4e68-b99b-29236d09df4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.680177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBots",
          "schema" : {
            "type" : "object",
            "example" : {
              "bots" : [ {
                "version" : "$LATEST",
                "name" : "DocOrderPizzaBot",
                "createdDate" : 1494360160.133,
                "description" : "Orders a pizza from a local pizzeria.",
                "lastUpdatedDate" : 1494360160.133,
                "status" : "NOT_BUILT"
              } ]
            },
            "properties" : {
              "bots" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotMetadataList"
                }, {
                  "description" : "An array of <code>botMetadata</code> objects, with one entry for each bot. "
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "If the response is truncated, it includes a pagination token that you can specify in your next request to fetch the next page of bots. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d735beb0-892e-4a23-a0a1-dd237eba39a1",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>GetBotV...",
    "request" : {
      "urlPath" : "/bots/cc_s_W_z_zJd_CMk_UpTe_w_Tv_kb_v_W_M_w_Kt_Q_Nl_TwB_/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d735beb0-892e-4a23-a0a1-dd237eba39a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.668348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotVersions"
        }
      }
    }
  }, {
    "id" : "035827be-af05-4dba-9d7d-492341bf52ee",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>GetBotV...",
    "request" : {
      "urlPath" : "/bots/T_C_G_h_L_Y_Yj_y_l_bX_Na_gdnj_v_J_NX_va_j_u_p_dS_k/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "035827be-af05-4dba-9d7d-492341bf52ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.667968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotVersions"
        }
      }
    }
  }, {
    "id" : "29b2b874-7698-447b-912d-912856476bf3",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>GetBotV...",
    "request" : {
      "urlPath" : "/bots/bO_BcN_h_rt_GPG_ope_MFd_f/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29b2b874-7698-447b-912d-912856476bf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.667666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotVersions"
        }
      }
    }
  }, {
    "id" : "6e74e994-f861-4e98-aad7-b778429cc211",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>GetBotV...",
    "request" : {
      "urlPath" : "/bots/Py_nB_V_l_k_b_L_s_yG_P_Z_KpS_BG_WU_yBd_He_F_bbWDQn/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e74e994-f861-4e98-aad7-b778429cc211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.667303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotVersions"
        }
      }
    }
  }, {
    "id" : "e1500f73-f3f0-441a-b182-779239fbe7f7",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>GetBotV...",
    "request" : {
      "urlPath" : "/bots/Y_C_hCkoFc_w_jGeF_k_a_b_Q_H_a_h_h_CmKJ_e_A_cVD_x_C/versions/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bots\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1500f73-f3f0-441a-b182-779239fbe7f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.66658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotVersions",
          "schema" : {
            "type" : "object",
            "properties" : {
              "bots" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotMetadataList"
                }, {
                  "description" : "An array of <code>BotMetadata</code> objects, one for each numbered version of the bot plus one for the <code>$LATEST</code> version."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A pagination token for fetching the next page of bot versions. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of versions, specify the pagination token in the next request. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "12129826-5b7c-47db-82ea-d85bc97a2787",
    "name" : "<p> Returns a list of all of the channels associated with the specified bot. </p...",
    "request" : {
      "urlPath" : "/bots/coK_jA_sFr_Z_Cy_I_pA_FK_I_T/aliases/X_RIlMRgx_Ai_W_B_Xvu_zC_i_BFSiEm_pDK_J_i_D_K_b_g/channels/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12129826-5b7c-47db-82ea-d85bc97a2787",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.665501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociations"
        }
      }
    }
  }, {
    "id" : "2c490555-e27b-4a9a-bd85-6fbc58d11cec",
    "name" : "<p> Returns a list of all of the channels associated with the specified bot. </p...",
    "request" : {
      "urlPath" : "/bots/V_Hr_mq_I_t_EAafe_Et_V_z_u_SZZr_Do_/aliases/C_fK_bS_t_P_cb_E_S_I_cZP_M_a_XEKQ_BKTq_FAvk_IAxp_L_LS_i_ZO_Xl_/channels/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c490555-e27b-4a9a-bd85-6fbc58d11cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.663754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociations"
        }
      }
    }
  }, {
    "id" : "62810957-015a-46d2-a9b3-0224dfcc4755",
    "name" : "<p> Returns a list of all of the channels associated with the specified bot. </p...",
    "request" : {
      "urlPath" : "/bots/Y_LUm_N_L_V_a_T_rf_C_Rk/aliases/sp_c_NKf_mC_y_Vu_Oy_yi_p_RGtd_SO_Nn_t_mH_xXn_L_A_T_c_C_ccyxJ_T_i_M_Ko_sW_V_N_H_h_X_gdZ_rjp_D_IQQ_X_p/channels/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62810957-015a-46d2-a9b3-0224dfcc4755",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.662554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociations"
        }
      }
    }
  }, {
    "id" : "3d054e4f-04a8-4d7b-b998-c2b1f0c10a2f",
    "name" : "<p> Returns a list of all of the channels associated with the specified bot. </p...",
    "request" : {
      "urlPath" : "/bots/k_b_bsYS_UsVK/aliases/-/channels/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botChannelAssociations\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d054e4f-04a8-4d7b-b998-c2b1f0c10a2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.662157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botChannelAssociations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotChannelAssociationList"
                }, {
                  "description" : "An array of objects, one for each association, that provides information about the Amazon Lex bot and its association with the channel. "
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A pagination token that fetches the next page of associations. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of associations, specify the pagination token in the next request. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d937ccd1-9d7b-49a1-b684-6abb46e628a6",
    "name" : "<p>Returns a list of aliases for a specified Amazon Lex bot.</p> <p>This operati...",
    "request" : {
      "urlPath" : "/bots/nw_l_qnjaq_f_hEIO_e_A_s_jt_qYG_qT_Xt_kB_P_Y_y_OnNJ/aliases/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d937ccd1-9d7b-49a1-b684-6abb46e628a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.661352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAliases"
        }
      }
    }
  }, {
    "id" : "94dc76eb-e642-4731-85bb-b9a3ff7abc18",
    "name" : "<p>Returns a list of aliases for a specified Amazon Lex bot.</p> <p>This operati...",
    "request" : {
      "urlPath" : "/bots/EQpKl_Cj_WXS_T_BSgLd_iF_m_K_H_t_y_MUsI_pG_Hh_Bzlsc/aliases/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94dc76eb-e642-4731-85bb-b9a3ff7abc18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.660843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAliases"
        }
      }
    }
  }, {
    "id" : "9908cbe0-ee86-4d28-ab07-7a7263dbc39d",
    "name" : "<p>Returns a list of aliases for a specified Amazon Lex bot.</p> <p>This operati...",
    "request" : {
      "urlPath" : "/bots/E_w_l_A_he_l_A_A_v_C_PZ/aliases/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9908cbe0-ee86-4d28-ab07-7a7263dbc39d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.660504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAliases"
        }
      }
    }
  }, {
    "id" : "7b984d4a-d6bf-4be6-90fe-698216b5ea43",
    "name" : "<p>Returns a list of aliases for a specified Amazon Lex bot.</p> <p>This operati...",
    "request" : {
      "urlPath" : "/bots/TXE_mYe_C_Z_L_v_N_t_vO_oQ_r_cC_c_O_Byp_d_f_b_q_Z_/aliases/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"BotAliases\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b984d4a-d6bf-4be6-90fe-698216b5ea43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.660142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAliases",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BotAliases" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasMetadataList"
                }, {
                  "description" : "An array of <code>BotAliasMetadata</code> objects, each describing a bot alias."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A pagination token for fetching next page of aliases. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of aliases, specify the pagination token in the next request. "
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "167ead99-0aca-415b-ad68-154669a9cd6e",
    "name" : "<p>Returns metadata information for a specific bot. You must provide the bot nam...",
    "request" : {
      "urlPath" : "/bots/bB_tcD_Cbv_T_c_egEuEx_BX_u_jmB_EpQt_d_v_M_mi_g_pv_/versions/gewlz4vds6zyfyfz2zcvwu37sim3yj51wftxftutl8h1r41k9g0jdreeldls07s2vrt1iczrad1pgct781tortcg7qrrodmssj9sxkjrv6axljz5sst2bmlqntkprawsgu5f67dcg8wumluip47aomc",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "167ead99-0aca-415b-ad68-154669a9cd6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.658717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBot"
        }
      }
    }
  }, {
    "id" : "42c8e072-9593-4679-bed5-7b5172b6cfdd",
    "name" : "<p>Returns metadata information for a specific bot. You must provide the bot nam...",
    "request" : {
      "urlPath" : "/bots/c_q_Dj_aqA_/versions/w8uf7yu9hwxo0xdf7yyqiqnw57aqrzuv9drcc1xpwml7fd0prgaajj4td3fr9puexpazuc9ku8wo92m7rjeqr4wmaxdmy6ag7o8999mpoji5",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42c8e072-9593-4679-bed5-7b5172b6cfdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.658324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBot"
        }
      }
    }
  }, {
    "id" : "d466301d-9969-4147-bf18-05c2cdee4692",
    "name" : "<p>Returns metadata information for a specific bot. You must provide the bot nam...",
    "request" : {
      "urlPath" : "/bots/d_/versions/ehawx6ofjgj3ptj3mws0k0d9pp77h8w58frko23utwv9di17sjjkd1rroczma2lqznl4j6tjtceim9dxhdl0oy5o6xq3cvi7z59e3gkhyfwjly9m4t75yencb87it1xw67mogu29ga0lypfp5dxkz1t8z4ky2akmum0c269e",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d466301d-9969-4147-bf18-05c2cdee4692",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.657898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBot"
        }
      }
    }
  }, {
    "id" : "fc285468-adb9-47e9-af2c-705f5163defe",
    "name" : "<p>Returns metadata information for a specific bot. You must provide the bot nam...",
    "request" : {
      "urlPath" : "/bots/m_F_q_Z_dS_J_np_V_eLXM_BG_eW_ClI_b_HX_g_V_BB_JdX_e/versions/tlden3xxh79f9rbwmnx0a2wkaoumjtwtdv6q10rmlc3s96khydpbqxg7bomhopb3evpxwjv43wbk6vr9tsk79k9a69vhakzx3eyzgnucm0",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc285468-adb9-47e9-af2c-705f5163defe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.65732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBot"
        }
      }
    }
  }, {
    "id" : "59b2a511-e3db-473c-8f14-080d84540193",
    "name" : "<p>Returns metadata information for a specific bot. You must provide the bot nam...",
    "request" : {
      "urlPath" : "/bots/NF_pm_Q_mZfA_RxexX_x_P_EajsP_qWG_uqHOq_T_rp_MtO_A_/versions/mqwcis376qnfgeo4nawys295cv0kl9ycohpow92t6rf440ox",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"version\" : \"$LATEST\",\n  \"name\" : \"DocOrderPizzaBot\",\n  \"abortStatement\" : {\n    \"messages\" : [ {\n      \"content\" : \"I don't understand. Can you try again?\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"I'm sorry, I don't understand.\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"checksum\" : \"20172ee3-fa06-49b2-bbc5-667c090303e9\",\n  \"childDirected\" : true,\n  \"clarificationPrompt\" : {\n    \"maxAttempts\" : 1,\n    \"messages\" : [ {\n      \"content\" : \"I'm sorry, I didn't hear that. Can you repeate what you just said?\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"Can you say that again?\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"createdDate\" : 1.494360160133E9,\n  \"description\" : \"Orders a pizza from a local pizzeria.\",\n  \"idleSessionTTLInSeconds\" : 300,\n  \"intents\" : [ {\n    \"intentName\" : \"DocOrderPizza\",\n    \"intentVersion\" : \"$LATEST\"\n  } ],\n  \"lastUpdatedDate\" : 1.494360160133E9,\n  \"locale\" : \"en-US\",\n  \"status\" : \"NOT_BUILT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59b2a511-e3db-473c-8f14-080d84540193",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.656433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBot",
          "schema" : {
            "type" : "object",
            "example" : {
              "version" : "$LATEST",
              "name" : "DocOrderPizzaBot",
              "abortStatement" : {
                "messages" : [ {
                  "content" : "I don't understand. Can you try again?",
                  "contentType" : "PlainText"
                }, {
                  "content" : "I'm sorry, I don't understand.",
                  "contentType" : "PlainText"
                } ]
              },
              "checksum" : "20172ee3-fa06-49b2-bbc5-667c090303e9",
              "childDirected" : true,
              "clarificationPrompt" : {
                "maxAttempts" : 1,
                "messages" : [ {
                  "content" : "I'm sorry, I didn't hear that. Can you repeate what you just said?",
                  "contentType" : "PlainText"
                }, {
                  "content" : "Can you say that again?",
                  "contentType" : "PlainText"
                } ]
              },
              "createdDate" : 1494360160.133,
              "description" : "Orders a pizza from a local pizzeria.",
              "idleSessionTTLInSeconds" : 300,
              "intents" : [ {
                "intentName" : "DocOrderPizza",
                "intentVersion" : "$LATEST"
              } ],
              "lastUpdatedDate" : 1494360160.133,
              "locale" : "en-US",
              "status" : "NOT_BUILT"
            },
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the bot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the bot."
                } ]
              },
              "intents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentList"
                }, {
                  "description" : "An array of <code>intent</code> objects. For more information, see <a>PutBot</a>."
                } ]
              },
              "enableModelImprovements" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "Indicates whether the bot uses accuracy improvements. <code>true</code> indicates that the bot is using the improvements, otherwise, <code>false</code>."
                } ]
              },
              "nluIntentConfidenceThreshold" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfidenceThreshold"
                }, {
                  "description" : "The score that determines where Amazon Lex inserts the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a <a href=\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\">PostContent</a> or <a href=\"https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a> response. <code>AMAZON.FallbackIntent</code> is inserted if the confidence score for all intents is below this value. <code>AMAZON.KendraSearchIntent</code> is only inserted if it is configured for the bot."
                } ]
              },
              "clarificationPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prompt"
                }, {
                  "description" : "The message Amazon Lex uses when it doesn't understand the user's request. For more information, see <a>PutBot</a>. "
                } ]
              },
              "abortStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "The message that Amazon Lex returns when the user elects to end the conversation without completing it. For more information, see <a>PutBot</a>."
                } ]
              },
              "status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Status"
                }, {
                  "description" : "<p>The status of the bot. </p> <p>When the status is <code>BUILDING</code> Amazon Lex is building the bot for testing and use.</p> <p>If the status of the bot is <code>READY_BASIC_TESTING</code>, you can test the bot using the exact utterances specified in the bot's intents. When the bot is ready for full testing or to run, the status is <code>READY</code>.</p> <p>If there was a problem with building the bot, the status is <code>FAILED</code> and the <code>failureReason</code> field explains why the bot did not build.</p> <p>If the bot was saved but not built, the status is <code>NOT_BUILT</code>.</p>"
                } ]
              },
              "failureReason" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "If <code>status</code> is <code>FAILED</code>, Amazon Lex explains why it failed to build the bot."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot was updated. When you create a resource, the creation date and last updated date are the same. "
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot was created."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see <a>PutBot</a>."
                } ]
              },
              "voiceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see <a>PutBot</a>."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the bot used to identify a specific revision of the bot's <code>$LATEST</code> version."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the bot. For a new bot, the version is always <code>$LATEST</code>."
                } ]
              },
              "locale" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Locale"
                }, {
                  "description" : " The target locale for the bot. "
                } ]
              },
              "childDirected" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "<p>For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By specifying <code>true</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is not</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code> field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon Lex FAQ.</a> </p>"
                } ]
              },
              "detectSentiment" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "Indicates whether user utterances should be sent to Amazon Comprehend for sentiment analysis."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ed3478ad-8caf-40d6-9b1e-18f8039cb3e2",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users... (application/json)",
    "request" : {
      "urlPath" : "/bots/C_O_h_Pf_XKcJfi_PM_X_IL_C_Ft_Sn_v_e_hZ_pXt_bx_T_N_/utterances/get9",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed3478ad-8caf-40d6-9b1e-18f8039cb3e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.65231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    }
  }, {
    "id" : "95a6c1a3-dc8c-4043-82c0-6069c1d10d82",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users... (application/json)",
    "request" : {
      "urlPath" : "/bots/s_e_b_Bel_M_Zkrl_e_ht_vvw_Y_t_t_vw_XJF_h_Mm_B_T_u_/utterances/56kg",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95a6c1a3-dc8c-4043-82c0-6069c1d10d82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.650338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    }
  }, {
    "id" : "953b1f9e-048c-4ad8-a6a8-466028663601",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users... (application/json)",
    "request" : {
      "urlPath" : "/bots/C_/utterances/1plf",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "953b1f9e-048c-4ad8-a6a8-466028663601",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.647999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    }
  }, {
    "id" : "1e36e636-ada5-4b7b-9afa-7ea882178074",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users... (application/json)",
    "request" : {
      "urlPath" : "/bots/u_Y_wG_M_I_Iat_xQ_YZi_T_LB_RviU_B_GXrh_FwSM_D_d_b_/utterances/kksj",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e36e636-ada5-4b7b-9afa-7ea882178074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.646961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    }
  }, {
    "id" : "35090a78-13e7-45ff-b000-27156a552dae",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users... - 204",
    "request" : {
      "urlPath" : "/bots/uvrac_h_Dbi_hvJ_KshVx_p_T_POsh_V_e_D_sM_qY_AO_r_P_/utterances/cf2d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "35090a78-13e7-45ff-b000-27156a552dae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.64599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    }
  }, {
    "id" : "105a07ef-14bc-4a2b-9c07-62b17df4e641",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/s_x_mQ_di_yV_u_h_n_IdPm_Us_R_sstOi_w_a_fRED_zp_ugRYy_S_vuH_vycMY_i_Om_/version/162193683614882134044437",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "105a07ef-14bc-4a2b-9c07-62b17df4e641",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.644504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "69d1532e-fb3a-428d-a3dc-2ccd6cfca3fa",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/fqJ_iM_iPMv_t_Pymz_Z_E_aB_IES_Wm_XW_v_l_lcwJt_a_jwOWTM_LgbHfGvx_RLq_Q_d_LerN_Y_d_I_Mo_ZZh_UEy_sSA_dD/version/802517106612612255357278411",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69d1532e-fb3a-428d-a3dc-2ccd6cfca3fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.643288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "e87fa083-7063-4a1c-b232-4fcf89aacb6b",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/C_s_CU_J/version/0243973917133453882781885699626665710205477298482341742145700745",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e87fa083-7063-4a1c-b232-4fcf89aacb6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.642807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "e767a9ae-547f-4559-9f4d-da5e12dd0387",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/lA_aAg_C_ol_V_oeJ_Gh_n_rj_Fg_o_eqTDL_B_qW_k_JY_oMw_ce_B_zq_Qv_E_nSQj_ZV_c_He_O_I_k_j_j_V_tj_z_zsPA_n/version/56200937502634443191",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e767a9ae-547f-4559-9f4d-da5e12dd0387",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.641899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "e907c660-77bc-43e4-af77-9655d6679cbd",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/dzmOx_e_N_Zf_g_m_H_Oy_l_GPSN_tp_R_R_RK_MAfF_hW_JpUp_OYxl_k_ze_tO_i_m_s_F_iywpc_Mn_TxNJt_xK_b_P_OM_E_/version/13451823046315924986066152958252105477882854966935958812440247",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e907c660-77bc-43e4-af77-9655d6679cbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.641283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "44c1a89e-6d81-437f-855c-dcabdf5c63df",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/w_kO_FpVwYIp_c_Wp_Q_QcIT_Yc_GTjD_fa_C_t_ZzP_jA_q_n_T_r_x_M_f_d_X_nyR_RGs_rPGC_S_T_ij_o_uW_k_T_lF_h_r/version/3905058883462766161046672133526608096673341580139874438419903539",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44c1a89e-6d81-437f-855c-dcabdf5c63df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.640767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "02362785-c491-4eb0-b935-89041f97b893",
    "name" : "<p>Deletes a specific version of a slot type. To delete all versions of a slot t... - 204",
    "request" : {
      "urlPath" : "/slottypes/B_C_u_w_JQ_S_ny_Q_P_RJ_fU_H_Sj_oYp_u_LRDjf_l_PjO_cjBM_O_G_b_fa_u_bVE_A_TJ_B_c_q_Lr_wY_HEe_G_/version/1564528987524687817715860183449331801132117658152092390354",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "02362785-c491-4eb0-b935-89041f97b893",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.640054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "4fb461e3-5a10-4af5-8b61-fc9237d4f208",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/PgKS_H_N_Q_Y_Gqs_Avi_V_Qp_VaBTc_veVRM_e_G_Fn_oF_v_G_GeMUxIq_vw_e_LE_b_ciI_XhK_f_Y_w_XYQ_E_Wl_T_x_V_q",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fb461e3-5a10-4af5-8b61-fc9237d4f208",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.639427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "25e1744e-c639-4f52-9f6e-f8d2c9138526",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/d_e_I_B_o_M_WkK_o_B",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25e1744e-c639-4f52-9f6e-f8d2c9138526",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.639059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "5bdf1322-9280-4335-bd94-563efbd78370",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/x_h_cCX_oR_T_RO_u_A_fAmST_he_yaf_ym_v_hUKm_P_sD_R_ZBznkCG_P_K_GWF_JB_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bdf1322-9280-4335-bd94-563efbd78370",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.63872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "6b7ee9a5-90ee-44f6-b9ae-d57ab5a81813",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/x_g_A_uH_rSx_n_XVeR_mL_Ft_j_Aa_U_o_j_zyh_l_X_cc_qqxtw_n_f_RN_ot_YWWj_Ng_o_PO_gjg_aIU_m_Mga_WL_kThaGP",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b7ee9a5-90ee-44f6-b9ae-d57ab5a81813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.638295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "407192c7-c848-4acf-b35b-844f7616e63a",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/qe_DXM_dQqA_ci_nU_u_a_iRj_Go_Hy_Nh_Ifb_R_v_T_U_sHcX_DTI_h",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "407192c7-c848-4acf-b35b-844f7616e63a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.637697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "31652388-bcbd-478e-97bc-7e28c432c7f3",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... (application/json)",
    "request" : {
      "urlPath" : "/slottypes/zozk_BsvZjq_p_N_Y_g_k_yCMwgj_l_l_XN_uT",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31652388-bcbd-478e-97bc-7e28c432c7f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.635385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "cd107f74-aaa9-469c-b8d0-5531691bdfe6",
    "name" : "<p>Deletes all versions of the slot type, including the <code>$LATEST</code> ver... - 204",
    "request" : {
      "urlPath" : "/slottypes/Gg_v_u_d_dP_PvH_Z_nQ_yf_dWRsH_p_N_dVMwt_Xi_WqL_lbV_VSf_J_cCEM_Tqi_L_t_DyF_PO_q_RahqHmg_y_rjZ_pa_z_nT",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cd107f74-aaa9-469c-b8d0-5531691bdfe6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.633861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    }
  }, {
    "id" : "efa87385-d963-460e-9c1d-94bbd8b0b3fd",
    "name" : "<p> Returns information about an intent. In addition to the intent name, you mus...",
    "request" : {
      "urlPath" : "/intents/jW_Wuxq_s_qaD_xN_C_h_my_r_Ma_v_Jme_vak_GN_b_aF_s_Smj_U_F_oyHpU_AV_za_qe_sMoP_WXaU_o_jjb_y_N_KM_R_T_A/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efa87385-d963-460e-9c1d-94bbd8b0b3fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.631283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntent"
        }
      }
    }
  }, {
    "id" : "520e970a-1fcf-40b3-b531-39af863b1bfa",
    "name" : "<p> Returns information about an intent. In addition to the intent name, you mus...",
    "request" : {
      "urlPath" : "/intents/V_mWIBy_a_Z_F_EeAFY/versions/7412851504911338294751604215957104165786748232083377351534397678",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "520e970a-1fcf-40b3-b531-39af863b1bfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.62983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntent"
        }
      }
    }
  }, {
    "id" : "3d70207b-f2a7-423a-afae-600eeb6b4eeb",
    "name" : "<p> Returns information about an intent. In addition to the intent name, you mus...",
    "request" : {
      "urlPath" : "/intents/x_v_j_yfi_Ss_I_KwKZ_eXzrRUx_qO_lFDsn_O_t_pUy_E_ahP_B_Fg_fC_mXb_oC_Hn_P_OKQscM_o_Lo_d_BI_ztCCbW_w_TeJ/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d70207b-f2a7-423a-afae-600eeb6b4eeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.628687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntent"
        }
      }
    }
  }, {
    "id" : "702a759d-80ab-41b6-bf23-185b9f70ff3e",
    "name" : "<p> Returns information about an intent. In addition to the intent name, you mus...",
    "request" : {
      "urlPath" : "/intents/MqJ_XA_B_f_W_hKc_S_Uhw_K_/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "702a759d-80ab-41b6-bf23-185b9f70ff3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.627812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntent"
        }
      }
    }
  }, {
    "id" : "9aa80e41-b3d9-4aa7-9bc1-9e4b60e3e9c4",
    "name" : "<p> Returns information about an intent. In addition to the intent name, you mus...",
    "request" : {
      "urlPath" : "/intents/qC_an_d_VWjns_Xl_XBR_bASk_l_jyql_a_eb/versions/%24LATEST",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"version\" : \"$LATEST\",\n  \"name\" : \"DocOrderPizza\",\n  \"checksum\" : \"ca9bc13d-afc8-4706-bbaf-091f7a5935d6\",\n  \"conclusionStatement\" : {\n    \"messages\" : [ {\n      \"content\" : \"All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.\",\n      \"contentType\" : \"PlainText\"\n    } ],\n    \"responseCard\" : \"foo\"\n  },\n  \"confirmationPrompt\" : {\n    \"maxAttempts\" : 1,\n    \"messages\" : [ {\n      \"content\" : \"Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"createdDate\" : 1.494359783453E9,\n  \"description\" : \"Order a pizza from a local pizzeria.\",\n  \"fulfillmentActivity\" : {\n    \"type\" : \"ReturnIntent\"\n  },\n  \"lastUpdatedDate\" : 1.494359783453E9,\n  \"rejectionStatement\" : {\n    \"messages\" : [ {\n      \"content\" : \"Ok, I'll cancel your order.\",\n      \"contentType\" : \"PlainText\"\n    }, {\n      \"content\" : \"I cancelled your order.\",\n      \"contentType\" : \"PlainText\"\n    } ]\n  },\n  \"sampleUtterances\" : [ \"Order me a pizza.\", \"Order me a {Type} pizza.\", \"I want a {Crust} crust {Type} pizza\", \"I want a {Crust} crust {Type} pizza with {Sauce} sauce.\" ],\n  \"slots\" : [ {\n    \"name\" : \"Type\",\n    \"description\" : \"The type of pizza to order.\",\n    \"priority\" : 1,\n    \"sampleUtterances\" : [ \"Get me a {Type} pizza.\", \"A {Type} pizza please.\", \"I'd like a {Type} pizza.\" ],\n    \"slotConstraint\" : \"Required\",\n    \"slotType\" : \"DocPizzaType\",\n    \"slotTypeVersion\" : \"$LATEST\",\n    \"valueElicitationPrompt\" : {\n      \"maxAttempts\" : 1,\n      \"messages\" : [ {\n        \"content\" : \"What type of pizza would you like?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"Vegie or cheese pizza?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"I can get you a vegie or a cheese pizza.\",\n        \"contentType\" : \"PlainText\"\n      } ]\n    }\n  }, {\n    \"name\" : \"Crust\",\n    \"description\" : \"The type of pizza crust to order.\",\n    \"priority\" : 2,\n    \"sampleUtterances\" : [ \"Make it a {Crust} crust.\", \"I'd like a {Crust} crust.\" ],\n    \"slotConstraint\" : \"Required\",\n    \"slotType\" : \"DocPizzaCrustType\",\n    \"slotTypeVersion\" : \"$LATEST\",\n    \"valueElicitationPrompt\" : {\n      \"maxAttempts\" : 1,\n      \"messages\" : [ {\n        \"content\" : \"What type of crust would you like?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"Thick or thin crust?\",\n        \"contentType\" : \"PlainText\"\n      } ]\n    }\n  }, {\n    \"name\" : \"Sauce\",\n    \"description\" : \"The type of sauce to use on the pizza.\",\n    \"priority\" : 3,\n    \"sampleUtterances\" : [ \"Make it {Sauce} sauce.\", \"I'd like {Sauce} sauce.\" ],\n    \"slotConstraint\" : \"Required\",\n    \"slotType\" : \"DocPizzaSauceType\",\n    \"slotTypeVersion\" : \"$LATEST\",\n    \"valueElicitationPrompt\" : {\n      \"maxAttempts\" : 1,\n      \"messages\" : [ {\n        \"content\" : \"White or red sauce?\",\n        \"contentType\" : \"PlainText\"\n      }, {\n        \"content\" : \"Garlic or tomato sauce?\",\n        \"contentType\" : \"PlainText\"\n      } ]\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9aa80e41-b3d9-4aa7-9bc1-9e4b60e3e9c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.626475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetIntent",
          "schema" : {
            "type" : "object",
            "example" : {
              "version" : "$LATEST",
              "name" : "DocOrderPizza",
              "checksum" : "ca9bc13d-afc8-4706-bbaf-091f7a5935d6",
              "conclusionStatement" : {
                "messages" : [ {
                  "content" : "All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.",
                  "contentType" : "PlainText"
                }, {
                  "content" : "OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.",
                  "contentType" : "PlainText"
                } ],
                "responseCard" : "foo"
              },
              "confirmationPrompt" : {
                "maxAttempts" : 1,
                "messages" : [ {
                  "content" : "Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?",
                  "contentType" : "PlainText"
                } ]
              },
              "createdDate" : 1494359783.453,
              "description" : "Order a pizza from a local pizzeria.",
              "fulfillmentActivity" : {
                "type" : "ReturnIntent"
              },
              "lastUpdatedDate" : 1494359783.453,
              "rejectionStatement" : {
                "messages" : [ {
                  "content" : "Ok, I'll cancel your order.",
                  "contentType" : "PlainText"
                }, {
                  "content" : "I cancelled your order.",
                  "contentType" : "PlainText"
                } ]
              },
              "sampleUtterances" : [ "Order me a pizza.", "Order me a {Type} pizza.", "I want a {Crust} crust {Type} pizza", "I want a {Crust} crust {Type} pizza with {Sauce} sauce." ],
              "slots" : [ {
                "name" : "Type",
                "description" : "The type of pizza to order.",
                "priority" : 1,
                "sampleUtterances" : [ "Get me a {Type} pizza.", "A {Type} pizza please.", "I'd like a {Type} pizza." ],
                "slotConstraint" : "Required",
                "slotType" : "DocPizzaType",
                "slotTypeVersion" : "$LATEST",
                "valueElicitationPrompt" : {
                  "maxAttempts" : 1,
                  "messages" : [ {
                    "content" : "What type of pizza would you like?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "Vegie or cheese pizza?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "I can get you a vegie or a cheese pizza.",
                    "contentType" : "PlainText"
                  } ]
                }
              }, {
                "name" : "Crust",
                "description" : "The type of pizza crust to order.",
                "priority" : 2,
                "sampleUtterances" : [ "Make it a {Crust} crust.", "I'd like a {Crust} crust." ],
                "slotConstraint" : "Required",
                "slotType" : "DocPizzaCrustType",
                "slotTypeVersion" : "$LATEST",
                "valueElicitationPrompt" : {
                  "maxAttempts" : 1,
                  "messages" : [ {
                    "content" : "What type of crust would you like?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "Thick or thin crust?",
                    "contentType" : "PlainText"
                  } ]
                }
              }, {
                "name" : "Sauce",
                "description" : "The type of sauce to use on the pizza.",
                "priority" : 3,
                "sampleUtterances" : [ "Make it {Sauce} sauce.", "I'd like {Sauce} sauce." ],
                "slotConstraint" : "Required",
                "slotType" : "DocPizzaSauceType",
                "slotTypeVersion" : "$LATEST",
                "valueElicitationPrompt" : {
                  "maxAttempts" : 1,
                  "messages" : [ {
                    "content" : "White or red sauce?",
                    "contentType" : "PlainText"
                  }, {
                    "content" : "Garlic or tomato sauce?",
                    "contentType" : "PlainText"
                  } ]
                }
              } ]
            },
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentName"
                }, {
                  "description" : "The name of the intent."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the intent."
                } ]
              },
              "slots" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotList"
                }, {
                  "description" : "An array of intent slots configured for the intent."
                } ]
              },
              "sampleUtterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentUtteranceList"
                }, {
                  "description" : "An array of sample utterances configured for the intent."
                } ]
              },
              "confirmationPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prompt"
                }, {
                  "description" : "If defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling the user's request. For more information, see <a>PutIntent</a>. "
                } ]
              },
              "rejectionStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "If the user answers \"no\" to the question defined in <code>confirmationPrompt</code>, Amazon Lex responds with this statement to acknowledge that the intent was canceled. "
                } ]
              },
              "followUpPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FollowUpPrompt"
                }, {
                  "description" : "If defined in the bot, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled. For more information, see <a>PutIntent</a>."
                } ]
              },
              "conclusionStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "After the Lambda function specified in the <code>fulfillmentActivity</code> element fulfills the intent, Amazon Lex conveys this statement to the user."
                } ]
              },
              "dialogCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CodeHook"
                }, {
                  "description" : "If defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user input. For more information, see <a>PutIntent</a>. "
                } ]
              },
              "fulfillmentActivity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FulfillmentActivity"
                }, {
                  "description" : "Describes how the intent is fulfilled. For more information, see <a>PutIntent</a>. "
                } ]
              },
              "parentIntentSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinIntentSignature"
                }, {
                  "description" : "A unique identifier for a built-in intent."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the intent was updated. When you create a resource, the creation date and the last updated date are the same. "
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the intent was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the intent."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the intent."
                } ]
              },
              "kendraConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KendraConfiguration"
                }, {
                  "description" : "Configuration information, if any, to connect to an Amazon Kendra index with the <code>AMAZON.KendraSearchIntent</code> intent."
                } ]
              },
              "inputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InputContextList"
                }, {
                  "description" : "An array of <code>InputContext</code> objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user."
                } ]
              },
              "outputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OutputContextList"
                }, {
                  "description" : "An array of <code>OutputContext</code> objects that lists the contexts that the intent activates when the intent is fulfilled."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "89b10886-55c6-4b66-9da1-1cc15943fd0d",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... (application/json)",
    "request" : {
      "urlPath" : "/intents/pX_w_e_eVUj_t_P_bh_Z_LK_E_Q_G_v_S_sw_jHxD_D_W_Q_ixeD_Dl_mN_wyfpzg_oXT_O_QUQ_b_lY_M_e_Y_ft/versions/0519231767537100675212890606476507447793845622772202645136429975",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89b10886-55c6-4b66-9da1-1cc15943fd0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.62188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "45d95f20-a587-44ed-8896-4a8152158e18",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... (application/json)",
    "request" : {
      "urlPath" : "/intents/mFqQ_uFKm_wsVsxpdKe_Weix_F_uKn_LY_CSc_di_sI_dKmD_y_g_W_x_rzsG_VH_MOlu_Cy_Y_c_wliQP_QTI_tC_Ag_I_XK_zR/versions/9047017983945632881700916200489570512906407999935202172715175889",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45d95f20-a587-44ed-8896-4a8152158e18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.621198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "ef74aac7-07f4-4d07-bf0f-cf8727fd96c9",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... (application/json)",
    "request" : {
      "urlPath" : "/intents/dNmQjckCkK_d_IJYZ_J_AGo_d_lT_bI_HYN_H_N_vsQ_z_GA_bEL_F_cI_qm_ZB_Q_WX_D_Yz_u_t_e_ur_TV_/versions/9726351435213928131936668838520380172178031099311652540872964828",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef74aac7-07f4-4d07-bf0f-cf8727fd96c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.62075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "d4a161ea-9061-4b32-ac7a-00bed59f338b",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... (application/json)",
    "request" : {
      "urlPath" : "/intents/Iw_Gf_F_x_dHQ_Kx_l_Tk_Ch_pT_w_NgbB_Y_dSMTEA_C_R_KY_p/versions/748893999627186977029052021",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4a161ea-9061-4b32-ac7a-00bed59f338b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.620316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "9fb66aeb-9c36-4653-a1d8-fb6b146f627d",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... (application/json)",
    "request" : {
      "urlPath" : "/intents/aM_eN_wC_q_g_ClUrPJ_cTrmv_L_I_E_/versions/228657",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fb66aeb-9c36-4653-a1d8-fb6b146f627d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.619861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "89ae6b80-e796-4084-9ed6-be60fa27f4b5",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... (application/json)",
    "request" : {
      "urlPath" : "/intents/B_F_hI_u_aG_A_m_mME_Kasl_cma_u_UIa_t_O_C/versions/0752316102093292690965925618909790840159520449805489",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89ae6b80-e796-4084-9ed6-be60fa27f4b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.619356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "68dc435d-8f17-4474-b9bb-65e226e7fed8",
    "name" : "<p>Deletes a specific version of an intent. To delete all versions of a intent, ... - 204",
    "request" : {
      "urlPath" : "/intents/r_wZ_h_T_Cqot_vSoVx_tCcj_i_sVE_D_n_Jzh_/versions/841084554201076877637187756911664709383106",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "68dc435d-8f17-4474-b9bb-65e226e7fed8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.618888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntentVersion"
        }
      }
    }
  }, {
    "id" : "e0362534-4a0a-48fe-bff2-2a28cb4816a9",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... (application/json)",
    "request" : {
      "urlPath" : "/intents/AV_C_yys_hg_UB_dN_v_ZFr_c_vS_ec_u_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0362534-4a0a-48fe-bff2-2a28cb4816a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.617682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "aff2e19f-7cba-4bcd-9f0e-01279f0b2f28",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... (application/json)",
    "request" : {
      "urlPath" : "/intents/L_W_Zt_v_yg_hBCRJU_Ktqlp_T_d_F_z_dG_d_F_Bu_A_Oe_fph_ykIb_kX_zsp_R_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aff2e19f-7cba-4bcd-9f0e-01279f0b2f28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.6165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "6673f3e5-09a3-49ea-9569-7d54b88fe1ef",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... (application/json)",
    "request" : {
      "urlPath" : "/intents/Ekyu_vlT_aOuUf_d_P_C_zJ_B_A_Q_BVqMwl_XtsR_j_x_EvE_XuU_JY_OI_W_v_gwt_l_S_H_kI_Lg_c_v",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6673f3e5-09a3-49ea-9569-7d54b88fe1ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.614828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "6a141eee-af33-4d90-a391-61fc1180586c",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... (application/json)",
    "request" : {
      "urlPath" : "/intents/Vpw_M_P_JK_Ti_tQFIFvwvvc_Wc_tx_T_LC_NL_wFj_p_Xc_fo_U_dm_t_Yc_Wq_h_fI_Mp_s_UxX_ab_fYvE_e_D_vm_Jh_XrG_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a141eee-af33-4d90-a391-61fc1180586c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.610186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "0ced09a4-6088-49ac-aeed-df3e706f18b1",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... (application/json)",
    "request" : {
      "urlPath" : "/intents/ivy_B_z_AkH_M_g_dud_Z_mnqj_i_ps_U_Y_Iz_Rg_WR_qO_gB_WV_c_s_kVmY_W_t_ef_td_LM_q_Q_K_Vz_i_X_J_H_Xm_rB_i",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ced09a4-6088-49ac-aeed-df3e706f18b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.609734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "8f3a03f9-ef73-420c-8ab5-81f0c8049d10",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... (application/json)",
    "request" : {
      "urlPath" : "/intents/SeOmF_j_JP_N_tq_Whf",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f3a03f9-ef73-420c-8ab5-81f0c8049d10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.609198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "32ae0132-3421-47b9-8c2a-17ca832df70b",
    "name" : "<p>Deletes all versions of the intent, including the <code>$LATEST</code> versio... - 204",
    "request" : {
      "urlPath" : "/intents/g_u_r_jEowVqSy_OY_Oo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "32ae0132-3421-47b9-8c2a-17ca832df70b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.608095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    }
  }, {
    "id" : "6fb152d0-0140-4b92-8058-3141a0ac49a3",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... (application/json)",
    "request" : {
      "urlPath" : "/bots/I_y_oY_yYTV_XRkg_bQzkerAR_xI_TX_GQddb_y_u_dn_a_P_C/versions/1523486362966409253972088802556552942830760356708734364361014657",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fb152d0-0140-4b92-8058-3141a0ac49a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.606695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "c371a2c6-de17-4961-add4-b490872ebcaa",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... (application/json)",
    "request" : {
      "urlPath" : "/bots/u_Zn_RqFl_SiDXD_N_P_w_K_VYX_Mwr_PN_moK_HB_IlzTD_i_/versions/80221223419137490004146185488093404526860",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c371a2c6-de17-4961-add4-b490872ebcaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.606215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "c5cefa35-6717-4d9c-a0d3-262e66330608",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... (application/json)",
    "request" : {
      "urlPath" : "/bots/m_Sb_ZXu_HBwDLNrIi_Z_x_rOhx_CP_TNKtWo_M_tJT_mQ_IaG/versions/33252565810831449545143458768578629554804953839538742220387979",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5cefa35-6717-4d9c-a0d3-262e66330608",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.605716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "ed1e49a8-ce73-4b5e-9d5d-2aa194349ee7",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... (application/json)",
    "request" : {
      "urlPath" : "/bots/K_OI_PE_Y_e_JVRj_DA_b/versions/438",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed1e49a8-ce73-4b5e-9d5d-2aa194349ee7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.605203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "1f7ed030-54a8-4f53-87a4-536b509b8745",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... (application/json)",
    "request" : {
      "urlPath" : "/bots/JS_mlb_wX_SInvbFIGT_w_K_RBOP_/versions/671408117210350592942428470505753085",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f7ed030-54a8-4f53-87a4-536b509b8745",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.604451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "621dc2fb-0325-4ea4-b843-ef37b089f4db",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... (application/json)",
    "request" : {
      "urlPath" : "/bots/egY_tp_lIaC_IWKlf_J_O_fvdl_BAEg_y_A_zelg_U_EY_FCZ_/versions/12449007729245618163322324549946",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "621dc2fb-0325-4ea4-b843-ef37b089f4db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.602343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "a8aa8813-d93b-41bb-855f-a90c72b023b1",
    "name" : "<p>Deletes a specific version of a bot. To delete all versions of a bot, use the... - 204",
    "request" : {
      "urlPath" : "/bots/Hg_ms_ip_v_u_U_c_pEqkLH_N_s_/versions/3956190490310434235115413103764181406149555727935",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a8aa8813-d93b-41bb-855f-a90c72b023b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.601059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    }
  }, {
    "id" : "0137e177-6373-4528-bbc1-78296426fff9",
    "name" : "<p>Returns information about the association between an Amazon Lex bot and a mes...",
    "request" : {
      "urlPath" : "/bots/v_V_m_IBiY_Wy_sRY_vBc_N_Pm_XLi_jt_Gfr_MlqjTgnPp_g_/aliases/l_Vjlt_fJ_n_H_ZC_oi_A_V_J_u_xdwmo_iTYRCPT_O_h_uA_v_R_hhEyO_YBa_P_Yx_CQ_umiQOj_k_pD_a_yj_Z_x_y_gGMZ_O/channels/z_bXC_faQ_A_C_x_m_XZo_iCRbZ_t_p_ycqn_mr_aQaA_nR_B_bQW_Up_m_bmXX_f_B_RrLA_pI_m_x_r_zH_KdOz_Gu_WP_OsQ_",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0137e177-6373-4528-bbc1-78296426fff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.599482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "162cb974-a980-44d7-904f-a2be6c314231",
    "name" : "<p>Returns information about the association between an Amazon Lex bot and a mes...",
    "request" : {
      "urlPath" : "/bots/SN_R_cM_X_MVRPB_v_rW_S_D_sc_VhV_f_J_L_r_g_QT_NHW_G/aliases/yTa/channels/z_pPO_s_Pb_d_wrS_",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "162cb974-a980-44d7-904f-a2be6c314231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.598905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "00aff178-6284-4c49-bd21-df0a4f0a99de",
    "name" : "<p>Returns information about the association between an Amazon Lex bot and a mes...",
    "request" : {
      "urlPath" : "/bots/ZY_g_V_d_GA_kL_Eh_s_rUG_j_O_y_mj_mC_ydqn_k_wU_X_bJ/aliases/o_hII_hd_Z_ISwt_Cd_d_nd_PF_A_jI_y_s_T_LR_P_jA_J_g_eTYkjvIbbY_kNa_H_Oy_uC_TG_mJrV_ch_U_A_XY_D_y_FD_C_/channels/s_rL_b_NGwKnuN_qT_S_Ey",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00aff178-6284-4c49-bd21-df0a4f0a99de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.598381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "85b12024-e891-4cdc-91ee-f40e151baeab",
    "name" : "<p>Returns information about the association between an Amazon Lex bot and a mes...",
    "request" : {
      "urlPath" : "/bots/g_KU_uwI_t_b_tp_RlL_unS_h_W_QJx_tM_x_It_S_Mi_o_yh_/aliases/NDV_uw_s_ICa_EIEPNJ_H_gWxNZSi_k_lQwc_DZ_FNJfm_nx_KF_i_qu_T_GV_ah_dVxFe_R_w_A_JL_M_O_ZY_LyARAN_j_p_o_/channels/fA_V_lF_lo_DMJvy_C_X_qeyotZ_Q_T_OD_U_b_jqTl_SkH_hON_W_R_t_DD_D_tRt_RJv_R_B_z_y_BQUWFp_",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85b12024-e891-4cdc-91ee-f40e151baeab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.597823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "74c83669-cde4-46f6-9ccf-fc0199c37260",
    "name" : "<p>Returns information about the association between an Amazon Lex bot and a mes...",
    "request" : {
      "urlPath" : "/bots/Ggy_O_Yz_kMhI_qV_LE_v_is_X_J_L_V_w_BL_k_Yn_R_msGA_/aliases/g_MD_B_SSWk_T_tm_KTDpd_UXM_Q_D_ddH_x_r_d_G_LW_Ge_A_yVK_WYV_blbe_b_F_y_nd_o_Y_r_A_eQnru_JW_v_L_y_D_M_/channels/z_t_O_w_D_Ct_UH_S_H_v_v_ehe_N_g_Lk_q_Vp_im_d_h_xTV_G_I_icSlJj",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdDate\" : { },\n  \"botConfiguration\" : { },\n  \"botAlias\" : { },\n  \"botName\" : { },\n  \"failureReason\" : { },\n  \"name\" : { },\n  \"description\" : { },\n  \"type\" : { },\n  \"status\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74c83669-cde4-46f6-9ccf-fc0199c37260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.597108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotChannelAssociation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotChannelName"
                }, {
                  "description" : "The name of the association between the bot and the channel."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the association between the bot and the channel."
                } ]
              },
              "botAlias" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AliasName"
                }, {
                  "description" : "An alias pointing to the specific version of the Amazon Lex bot to which this association is being made."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the Amazon Lex bot."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the association between the bot and the channel was created."
                } ]
              },
              "type" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChannelType"
                }, {
                  "description" : "The type of the messaging platform."
                } ]
              },
              "botConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChannelConfigurationMap"
                }, {
                  "description" : "Provides information that the messaging platform needs to communicate with the Amazon Lex bot."
                } ]
              },
              "status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChannelStatus"
                }, {
                  "description" : "<p>The status of the bot channel. </p> <ul> <li> <p> <code>CREATED</code> - The channel has been created and is ready for use.</p> </li> <li> <p> <code>IN_PROGRESS</code> - Channel creation is in progress.</p> </li> <li> <p> <code>FAILED</code> - There was an error creating the channel. For information about the reason for the failure, see the <code>failureReason</code> field.</p> </li> </ul>"
                } ]
              },
              "failureReason" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that it failed to create the association."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c3f025f4-dfe0-424d-96e4-a1e2510af820",
    "name" : "<p>Deletes the association between an Amazon Lex bot and a messaging platform.</... (application/json)",
    "request" : {
      "urlPath" : "/bots/P_A_T_FAQg_HRN_y_O_c_UTb_/aliases/lyBkT_n_/channels/QhZ_GB_zub_Exc_Jdns_f_N_Ar_L_tXI_ht",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3f025f4-dfe0-424d-96e4-a1e2510af820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.59375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "5ae6d991-a596-4e8e-8f63-1a70f03fc614",
    "name" : "<p>Deletes the association between an Amazon Lex bot and a messaging platform.</... (application/json)",
    "request" : {
      "urlPath" : "/bots/uV_gW_V_I_MxcZlb_n_hb_W_vH_r_CS_XSWr_un_c_UnFQugyJ/aliases/d_bLx_j_z_c_IbaD_gNa_azM_B_azE_oSt_F_N_IpuhBiTv_t_UhT_c_cdq_KJ_lM_IWtl_Y/channels/UU_s_XJ_K_i_ItDBM_IH_a_B_e_uB_oA_X_kry_A_GZ_Lz_QyT_i_H_Y_V_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ae6d991-a596-4e8e-8f63-1a70f03fc614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.591604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "65ef22f8-37d0-4483-b4ca-3fed36296564",
    "name" : "<p>Deletes the association between an Amazon Lex bot and a messaging platform.</... (application/json)",
    "request" : {
      "urlPath" : "/bots/y_wz_HqZ_Y_reB_W_Q_C_oX_L_pA_AE_ibd_h_o_rhI_T_oG_o/aliases/xO_fks_u_Yy_M_q_T_d_v_nxE_zOL_o_Kvo_dg_to_e_m_Qvt_NFQ_M_lx_pMO_KFRhXpgX_sF_nQ_XE_ABc_Uyj_Ne_xF_S_DqZ/channels/qV_a_P_v_P_r_x_Rr_XvJ_S_n_ilq_P_Q_E_o_M_g_T_g_d_d_Pd_U_J_S_f_nkVy_Z_rE_ngTe_ffl_QA_zJvB_QS_ErKx_GM_J",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65ef22f8-37d0-4483-b4ca-3fed36296564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.589502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "6fc082ce-cdf0-4f3b-be14-8cac048b73a6",
    "name" : "<p>Deletes the association between an Amazon Lex bot and a messaging platform.</... (application/json)",
    "request" : {
      "urlPath" : "/bots/lqXa_Xw_NG_T_YQ_W_ZlwGPi_pjs_Ef_w_s_FeNFu_b_e_vK_J/aliases/A_a_oHGT_fj_izI_I_p_O_CB_eE_yn_yAa_J_m_Fi_FJdgz_TQ_pK_PP_fB_m_G_vH_OE_W_Q_ME_q_p_Dc_j_N_D_j_grCU_NYb/channels/Usp_GzN_D_I_d_eIgg_M_PbtEj_jIYe_nu_Bi_P_C_XD_F_U_P_n_l_P_s_jh_A_nt_FnXcMV_o_o_Q_k_DQ_hU_ITmW_yye_z_m",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fc082ce-cdf0-4f3b-be14-8cac048b73a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.588595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "2afa4de6-063c-4df8-be19-66b1f146d58a",
    "name" : "<p>Deletes the association between an Amazon Lex bot and a messaging platform.</... (application/json)",
    "request" : {
      "urlPath" : "/bots/gxce_BABy_w_jR_o_H_N_D_NvG_P_ms_t_vsZ_Y_SI_G_Hsum_/aliases/A_A_kLlW_nj_YF_dVppED_v_l_Xd_CU_ru_rdapZIA_K_M_x_q_AA_y_Gaj_yyxg_JR_Z_kU_TZ/channels/oM_g_f_Itot_c_t_W_L_h_n_cofij_na_h_d_wKR_Je_Hzj_akjFP_f_FeT_H_DK_ThZm_D_v_vkabl_yHE_mq_i_LsM_X_z_e_S",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2afa4de6-063c-4df8-be19-66b1f146d58a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.587774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "b49a8a2c-d9be-4ac1-9457-b5ceb1673b48",
    "name" : "<p>Deletes the association between an Amazon Lex bot and a messaging platform.</... - 204",
    "request" : {
      "urlPath" : "/bots/Xc_Ko_D_VUn_/aliases/J_PnlO_AdVz_ZA_okhm_yrs_rktdKxPv_M_Yt_fM_D_y_ET_Fu_AWBG_WL_kzun_TSa_G_S_xI_pF_k_duuYvj_k_sD_f_d_On_e/channels/e_WRL_x_v_BT_BZ_IXi_W_zz_LTJ_U_b_I_XB_Y_vddHgG_mtH_TD_j_E_VDy_RZ_jf_jq_sUW_repnR_JI_wa_HEQD_XN_eZEO_",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b49a8a2c-d9be-4ac1-9457-b5ceb1673b48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.587076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotChannelAssociation"
        }
      }
    }
  }, {
    "id" : "774dae7b-ebcd-4bfe-88ad-3b8f0fd2304d",
    "name" : "<p>Creates an alias for the specified version of the bot or replaces an alias fo...",
    "request" : {
      "urlPath" : "/bots/ug_Bda_lOH_j_GWK_KT_i_/aliases/L_rD_x_s_vzN_OR_cUq_K_Nmg_Qvmqi_cm_b_nUgQfi_e_q_s_b_P_B_p_a_z_qeC_G_ti_D_tHb_cXB_Bi_B_rqbu_RbX_L_J_F",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "774dae7b-ebcd-4bfe-88ad-3b8f0fd2304d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.586419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBotAlias"
        }
      }
    }
  }, {
    "id" : "de66e1ea-a28f-4022-aa83-3afa62544e10",
    "name" : "<p>Creates an alias for the specified version of the bot or replaces an alias fo...",
    "request" : {
      "urlPath" : "/bots/w_v_G_e_N_KtficA_Lm_Rp_aS_B_Vi_yawnZ_KA_FfGh_CHLo_/aliases/gd_p_Z_LIVi_OFVId_wO_aO_f_dY_g_lI_K_LOE_",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de66e1ea-a28f-4022-aa83-3afa62544e10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.585878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBotAlias"
        }
      }
    }
  }, {
    "id" : "34445495-585a-4bb7-b0ed-e2b14b2e83ee",
    "name" : "<p>Creates an alias for the specified version of the bot or replaces an alias fo...",
    "request" : {
      "urlPath" : "/bots/x_ga_vtGir_C_G_fcTDtRvkSeoAs_s_hNgQ_AEcP_oTaoA_gm_/aliases/lTk_ye_pLd_e_nR_C_IQajL_k_Ige_QCT_lSk_Pr_r_M_n_f_m_Y_iZs_XlkM_bS_H_B_tx_G_Na_zkK_GUvc_EK_xUvxLk_kzy_",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34445495-585a-4bb7-b0ed-e2b14b2e83ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.585362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBotAlias"
        }
      }
    }
  }, {
    "id" : "e38ca87b-18d6-401d-a720-325c7abaef9f",
    "name" : "<p>Creates an alias for the specified version of the bot or replaces an alias fo...",
    "request" : {
      "urlPath" : "/bots/A_YRdypZXv_ETp_h_h_q_eB_td_j_j_T_vZ_Gc_xl_X_SGO_g_/aliases/wcvx_Uz_TH_n_n_Ln_Ett_QdBvuz_UaX_o_FX_c_b_v_h_HFN_s_g_U_B_O_D_y_k_JP_t_o_z_BK_cJNt_j_An_i_cqzL_HCKja",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e38ca87b-18d6-401d-a720-325c7abaef9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.584807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBotAlias"
        }
      }
    }
  }, {
    "id" : "87d1e0bc-9169-4472-81a8-0eee28205cc6",
    "name" : "<p>Creates an alias for the specified version of the bot or replaces an alias fo...",
    "request" : {
      "urlPath" : "/bots/XE_p_kN_L_e_k_x_Be_ugY_bJEuA_hZ_g_m_G_Gh_p_q_j_mq_/aliases/zo_kX_THc_e_L_T_l_H_ce_k_p_ir_oepu_o_R_o_D_PiPLOc_K_dVJ_HeCds_Z_HcKbd_KC_Dv_Z_nu_S_f_Cc_bzw_x_D_Mj_h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87d1e0bc-9169-4472-81a8-0eee28205cc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.584188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBotAlias"
        }
      }
    }
  }, {
    "id" : "b93b81bf-058d-4f1b-bbad-51e90a914085",
    "name" : "<p>Creates an alias for the specified version of the bot or replaces an alias fo...",
    "request" : {
      "urlPath" : "/bots/C_I_ENekQ_r_QX_AP_xM_V_WJSymu_fZm_B_v_U_i_x_r_T_tW/aliases/cX_qyA_r_s_suJ_y_St_IH_Z_iXga_T_a_FPER_Y_YwYo_y_pf_j_T_r_SIzQWJ_I_ru_e_n_w_yjQ_d_ru",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastUpdatedDate\" : { },\n  \"createdDate\" : { },\n  \"botName\" : { },\n  \"name\" : { },\n  \"checksum\" : { },\n  \"conversationLogs\" : {\n    \"iamRoleArn\" : { },\n    \"logSettings\" : { }\n  },\n  \"description\" : { },\n  \"botVersion\" : { },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b93b81bf-058d-4f1b-bbad-51e90a914085",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.5834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBotAlias",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AliasName"
                }, {
                  "description" : "The name of the alias."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the alias."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the bot that the alias points to."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the bot that the alias points to."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot alias was created."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The checksum for the current version of the alias."
                } ]
              },
              "conversationLogs" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConversationLogsResponse"
                }, {
                  "description" : "The settings that determine how Amazon Lex uses conversation logs for the alias."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "A list of tags associated with a bot."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "31f05d76-fe69-4e64-a788-d81039955bce",
    "name" : "<p>Returns information about an Amazon Lex bot alias. For more information about...",
    "request" : {
      "urlPath" : "/bots/AOJA_bHQ_ZuKhwQM_uphD_qW_NkC_N_x_C_GaWa_Pz_b_P_FA_/aliases/X_",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31f05d76-fe69-4e64-a788-d81039955bce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.579434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAlias"
        }
      }
    }
  }, {
    "id" : "5a51a24f-6eab-41b3-b8e3-6a76d0cb8b06",
    "name" : "<p>Returns information about an Amazon Lex bot alias. For more information about...",
    "request" : {
      "urlPath" : "/bots/Hq_C_ur_tfd_p_nVYygS_zMc_y_uRDxhu/aliases/bO_LY_l_ocP_B_T_LU_GmvoO_n_t_DVP_yPL_W_vWgGGeUSI_d_lpXUq_FmSTS_G_oliNn_J_o_G_K_C_c_R_v_Nye_Px_A_",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a51a24f-6eab-41b3-b8e3-6a76d0cb8b06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.57892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAlias"
        }
      }
    }
  }, {
    "id" : "e5dd0303-5384-4df4-ab95-ddf62377c44d",
    "name" : "<p>Returns information about an Amazon Lex bot alias. For more information about...",
    "request" : {
      "urlPath" : "/bots/Q_z_P_F_F_M_r_Nfl_wg_N_QNB_tp_JRfy_ee_zo_d_fqDH_e_/aliases/Dxp_p_T_BE_fcCM_o_k_rp_Y_vjf_b_nXH_MdZcxxj_q_DAS_r_Id_z_A_b_PpH_J_ZY_U_o_JSz_y_oVvdE_z_Z_S_",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5dd0303-5384-4df4-ab95-ddf62377c44d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.578365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAlias"
        }
      }
    }
  }, {
    "id" : "488ec5ed-2af2-4258-be60-462e8b8c3d39",
    "name" : "<p>Returns information about an Amazon Lex bot alias. For more information about...",
    "request" : {
      "urlPath" : "/bots/S_Se_B_H_dNoATWuh_UnrcM_VLu_RPw_EZjS_XOd_wk/aliases/Q_s_Va_oBMpw_moWJ_W_lsb_j_tb_V_N_J_X_DR_N_L_SL_A_T_t_U_tSi_Q_T_kDM_KI_xAb_Ds_Wq_SQVH_U_t_qMBfd_g_H_i",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "488ec5ed-2af2-4258-be60-462e8b8c3d39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.577761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAlias"
        }
      }
    }
  }, {
    "id" : "c6a59323-baaf-4132-84e8-e8c0dbea2191",
    "name" : "<p>Returns information about an Amazon Lex bot alias. For more information about...",
    "request" : {
      "urlPath" : "/bots/I_Z_tA_oLn_GjMN_LcN_K_elJj_Zno_LDzFDC_y_F_vpk_B_r_/aliases/Wv_B_m_luJX_H_RR_U_dI_g_E_OQvf_U_Ek_V_kzhR_Rr_Tk_xDv_j_lSic_A_F_C_B_Z_N_a_es_u_u_b_N_k_rrB_F_z_pJ_wb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastUpdatedDate\" : { },\n  \"createdDate\" : { },\n  \"botName\" : { },\n  \"name\" : { },\n  \"checksum\" : { },\n  \"conversationLogs\" : {\n    \"iamRoleArn\" : { },\n    \"logSettings\" : { }\n  },\n  \"description\" : { },\n  \"botVersion\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6a59323-baaf-4132-84e8-e8c0dbea2191",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.577091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBotAlias",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AliasName"
                }, {
                  "description" : "The name of the bot alias."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the bot alias."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the bot that the alias points to."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the bot that the alias points to."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the bot alias was created."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the bot alias."
                } ]
              },
              "conversationLogs" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConversationLogsResponse"
                }, {
                  "description" : "The settings that determine how Amazon Lex uses conversation logs for the alias."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b9974d5e-4be3-424d-86d0-6e6fbb178576",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... (application/json)",
    "request" : {
      "urlPath" : "/bots/yO_b_gRY_Khb_iYf_ff_r_Gqo_E_x_m_MHqA_k_u_S_ZYMa_wL/aliases/iS_YKZj_z_Q_eNzy_j_ze_I_LE_aP_xZ_g_x_bfaz_G_sHQ_q_M_w_AEi_Kl_F_OU_m_G_u_YU_X_T_D_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9974d5e-4be3-424d-86d0-6e6fbb178576",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.574411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "eb407ae2-5606-4062-953a-057bf7cbe94d",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... (application/json)",
    "request" : {
      "urlPath" : "/bots/k_N_A_m_r_M_iF_IAE_h_m_Gz_Wp_Q_WVAh_C_cr_yi_y_N_Ri/aliases/Q_nsriP_UC_q_A_JqV_aWp_a_koCt_k_P_s_o_cB_v_QiGVJ_l_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb407ae2-5606-4062-953a-057bf7cbe94d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.572468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "cf054176-fc29-4141-9ec6-309c958ff6b5",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... (application/json)",
    "request" : {
      "urlPath" : "/bots/I_k_Ye_jT_eK_O_GaS_x_sjrmZ_K_YJ_tJP_cu_PsIaR_Q_C_u/aliases/m_G_hZ_hk_rd_tHJ_Hp_p_bn_I_OU_g_B_V_HK_g_bI_h_NVO_MmVYM_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf054176-fc29-4141-9ec6-309c958ff6b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.571176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "f846784c-ebc2-492d-9bef-871712409d57",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... (application/json)",
    "request" : {
      "urlPath" : "/bots/fXC_Sh_n_qrJc_L_M_b_p_mt_Ry_cul_B_X_Y_Dfa_Sl_O_C_m/aliases/i_W_w_C_YG_V_bVA_py_VB_Y_pXa_XC_hy_xQu_AtVd_scklE_qe_ww_B_ju_Ab_P_R_X_Huw",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f846784c-ebc2-492d-9bef-871712409d57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.570394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "a9e22706-ac9a-4fe1-8b56-813ae453f1a6",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... (application/json)",
    "request" : {
      "urlPath" : "/bots/W_/aliases/A_J_l_wdXf_Dika_nw_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9e22706-ac9a-4fe1-8b56-813ae453f1a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.569725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "2fe6918f-415a-4dc9-94cb-201b5434ea59",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... (application/json)",
    "request" : {
      "urlPath" : "/bots/J_iH_q_Mygo_BlJq_BNN_a_e_FO_XA_cvm_lxJ_INFSa_mr_Y_/aliases/oq_z_d_d_E_o_kRI_wa_ps_f_p_U_W_W_hnHji_DBU_cbE_s_B_B",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fe6918f-415a-4dc9-94cb-201b5434ea59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.569139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "e88b0b9f-c97e-4f1b-bc87-925b6dd93c30",
    "name" : "<p>Deletes an alias for the specified bot. </p> <p>You can't delete an alias tha... - 204",
    "request" : {
      "urlPath" : "/bots/aADf_N_SxYd_fg_W_L_L_Cl_bn_AnUsL_y_HhA_sF_Ldu_D_E_/aliases/co_B_a_w_j_fV_mkG_h_N_o_P_EwA_ZziF_VSsZ_dl_rExHn_aR_r_oL_kqYW_y_yWci_BoLMq_a_cI_GFz_UX_I_K_Wpp_qH_b_",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e88b0b9f-c97e-4f1b-bc87-925b6dd93c30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.568342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    }
  }, {
    "id" : "f559f8f2-4eb5-4789-aef6-04225e9760a5",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... (application/json)",
    "request" : {
      "urlPath" : "/bots/Tn_bO_Y_T_YvV_FY_O_q_H_XJ_Jy_gzkn_U_RT_m_BW_Lh_II_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f559f8f2-4eb5-4789-aef6-04225e9760a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.566368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "fc8cb94c-95f2-4a1d-af83-cfebccffbe17",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... (application/json)",
    "request" : {
      "urlPath" : "/bots/C_V_W_ign_wEDN_jEjM_cSSKHaXnIhIi_Nf_d_H_hpEJ_k_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc8cb94c-95f2-4a1d-af83-cfebccffbe17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.565531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "7df36514-e53e-4c8f-bad6-4e2c39e3422d",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... (application/json)",
    "request" : {
      "urlPath" : "/bots/uT_a_lm_g_v_v_RT_hBQZmg_xAU_E_Jk_ty_v_kS_G_V_D_aYf",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7df36514-e53e-4c8f-bad6-4e2c39e3422d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.563093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "0cc080e1-1672-4096-86b2-ff7efc72e5e2",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... (application/json)",
    "request" : {
      "urlPath" : "/bots/FeUiN_P_kn_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cc080e1-1672-4096-86b2-ff7efc72e5e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.562596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "d524f0f3-8e05-4559-8ae5-22dc626846bd",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... (application/json)",
    "request" : {
      "urlPath" : "/bots/P_fXDP_no_rVQjG_I_Z_pL_u_oCJj_D_bfG_jAI_n_XW_T_i_S",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d524f0f3-8e05-4559-8ae5-22dc626846bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.562161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "767c60f5-6974-4b17-9bca-8e69031e69d5",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... (application/json)",
    "request" : {
      "urlPath" : "/bots/Rum_JV_U_f_S_F_P_sq_OJ_mGKM_Wg_GmoEI_F_x_MI_Q_BYG_",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "767c60f5-6974-4b17-9bca-8e69031e69d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.561636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "549c868d-960d-411a-860d-8ebf45109f07",
    "name" : "<p>Deletes all versions of the bot, including the <code>$LATEST</code> version. ... - 204",
    "request" : {
      "urlPath" : "/bots/NcwvK_P_f_G_Xix_PAm_D_et_z_l_cxyL_c_uO_hKJGG_zE_o_",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "549c868d-960d-411a-860d-8ebf45109f07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.561066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    }
  }, {
    "id" : "b0c9e71d-bfe7-4b2d-b415-3247d7eeedfa",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/vnj_YL_cWFs_X_w_TcP_nY_QOm_p_vJ_f_TpD_de_Q_N_J_t_vH_hc_uZgUK_Cr_Kz_I_C_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0c9e71d-bfe7-4b2d-b415-3247d7eeedfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.556077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "e1c1edbe-1445-4f74-a693-9e7ae30397c6",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/F_sI_u_V_jG_A_x_a_kfFAD_Z_nR_t_k_uzP_H_x_i_p_jWB_q_z_FnCm_ZpZ_Obg_L_c/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1c1edbe-1445-4f74-a693-9e7ae30397c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.554304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "a47ff5ff-80f7-4372-ab63-db0ee8d99234",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/s_j_A_B_xo_wG_z_a_h_M_wDdfZ_gC_wozu/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a47ff5ff-80f7-4372-ab63-db0ee8d99234",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.552787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "91129dc1-17bb-4012-9c84-fff6eea96d1c",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/Y_c_zG_h_r_ud_aW_XC_At_qyuF_ja_C_r_ts_H_bhy_Ji_D_t_IwY_IlVauS_Ux_uOOD_qaDFHQZ_zW_H_f_vthH_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91129dc1-17bb-4012-9c84-fff6eea96d1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.552332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "9286a2e1-ad97-414d-8f02-23d636c37528",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/y_P_Lad_X_z_zB_j_I_KVq_Lv_j_T_t_E_IBzoXtS_fmX_ju_T_ZcJ_A_R_kjb_HD_vO_k_Kyj_jbG_cUi_gU_jdn_w_hN_nH_nq/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9286a2e1-ad97-414d-8f02-23d636c37528",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.551869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "2b628062-48f5-4dce-a25d-a43632c1c87a",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/ilm_O_B_O_B_O_b_E_kWe_QQ_m_aMHD_h_s_L_Ir_fB_et_Z_N_t_foDLQ_xJ_ieN_V_A_g_LZgm_iSf_dE_r_Z_BP_e_g_LgTN_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b628062-48f5-4dce-a25d-a43632c1c87a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.551343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion"
        }
      }
    }
  }, {
    "id" : "95832e7f-4464-4625-8b0b-3e188579dfb4",
    "name" : "<p>Creates a new version of a slot type based on the <code>$LATEST</code> versio...",
    "request" : {
      "urlPath" : "/slottypes/fyw_D_CMUx_cH_L_C_V_C_k_wb_j_o_Nf_US_b_t_G_d_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"valueSelectionStrategy\" : { },\n  \"lastUpdatedDate\" : { },\n  \"createdDate\" : { },\n  \"slotTypeConfigurations\" : { },\n  \"parentSlotTypeSignature\" : { },\n  \"name\" : { },\n  \"checksum\" : { },\n  \"description\" : { },\n  \"enumerationValues\" : { },\n  \"version\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95832e7f-4464-4625-8b0b-3e188579dfb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.550562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSlotTypeVersion",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeName"
                }, {
                  "description" : "The name of the slot type."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the slot type."
                } ]
              },
              "enumerationValues" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EnumerationValues"
                }, {
                  "description" : "A list of <code>EnumerationValue</code> objects that defines the values that the slot type can take."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the slot type was updated. When you create a resource, the creation date and last update date are the same."
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the slot type was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version assigned to the new slot type version. "
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the <code>$LATEST</code> version of the slot type."
                } ]
              },
              "valueSelectionStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueSelectionStrategy"
                }, {
                  "description" : "The strategy that Amazon Lex uses to determine the value of the slot. For more information, see <a>PutSlotType</a>."
                } ]
              },
              "parentSlotTypeSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomOrBuiltinSlotTypeName"
                }, {
                  "description" : "The built-in slot type used a the parent of the slot type."
                } ]
              },
              "slotTypeConfigurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeConfigurations"
                }, {
                  "description" : "Configuration information that extends the parent built-in slot type."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ec06d2d7-42d7-4cdd-bb87-2efce5a0f34f",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/oST_t_bn_e_I_j_ox_iO_Mg_mw_GMGO_hEl/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec06d2d7-42d7-4cdd-bb87-2efce5a0f34f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.5437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion"
        }
      }
    }
  }, {
    "id" : "559a7e34-df2e-4104-b3d8-a92927975956",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/z_U_z_rJiTU_o_kY_lBU_R_qI_sZ_r_Aw_U_T_s_iQpaCOf_g_i_pPt_Vv_D_a_pB_sX_S_x_j_VGT_V_z_Rm_E_C_o_W_R_m_k_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "559a7e34-df2e-4104-b3d8-a92927975956",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.543302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion"
        }
      }
    }
  }, {
    "id" : "617a427d-cb7e-41b9-9308-ecb30028943d",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/n_b_o_v_km_Lvj_D_a_JM_g_hR_XhLaba_lWH_t_X_I_FrvVB_Z_D_x_cIE_ZiQ_F_I_W_GU_Ib_LZ_UDZ_Y_l_VBx_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "617a427d-cb7e-41b9-9308-ecb30028943d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.542861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion"
        }
      }
    }
  }, {
    "id" : "108c2330-cff8-43aa-8b2e-adf4804de3e7",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/I_cr_l_s_E_f_B_s_rOPlnfGaK_n_Gi_m_iF_MFU_B_Y_gKO_RF_w_W_X_WbF_kal_o_JU_FnbdCt_A_A_p_V_pJ_JYa_M_EH_j_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "108c2330-cff8-43aa-8b2e-adf4804de3e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.542436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion"
        }
      }
    }
  }, {
    "id" : "511d8c29-79ab-4f14-96f7-9d0267527837",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/b_pn_r_eK_Y_EQ_u_O_DJQ_p_c_bfm_VHc_F_bS_tS_WY_zsR_lw_s_xq_xCv_L_JF_iIT_rs_H_U_DBYK_h_C_w_ldrxRjB_PC_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "511d8c29-79ab-4f14-96f7-9d0267527837",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.54199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion"
        }
      }
    }
  }, {
    "id" : "a141e65e-1ac4-43cf-b8b6-4966693e5f7d",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/v_ew_Gf_M_SOJ_d_K_W_j_hnqM_QJpdc_A_VmDz_p_V_b_RBF_Ibw_rk_kh_h_P_n_NB_ST_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a141e65e-1ac4-43cf-b8b6-4966693e5f7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.541373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion"
        }
      }
    }
  }, {
    "id" : "aafc9e98-5250-407d-a8b5-9a275dc8d4c4",
    "name" : "<p>Creates a new version of an intent based on the <code>$LATEST</code> version ...",
    "request" : {
      "urlPath" : "/intents/e_s_U_Jz_lP_jIdE_fV_ZOcs_d_NHRLuBu_qz_p_jLN_c_A_D_PCHYus_BDV_tShE_D_bM_mmc_x_Y_BI_Rqx_ehCL/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sampleUtterances\" : { },\n  \"parentIntentSignature\" : { },\n  \"conclusionStatement\" : {\n    \"responseCard\" : { },\n    \"messages\" : { }\n  },\n  \"description\" : { },\n  \"version\" : { },\n  \"followUpPrompt\" : {\n    \"rejectionStatement\" : {\n      \"responseCard\" : { },\n      \"messages\" : { }\n    },\n    \"prompt\" : {\n      \"maxAttempts\" : { },\n      \"responseCard\" : { },\n      \"messages\" : { }\n    }\n  },\n  \"fulfillmentActivity\" : {\n    \"type\" : { },\n    \"codeHook\" : {\n      \"messageVersion\" : { },\n      \"uri\" : { }\n    }\n  },\n  \"slots\" : { },\n  \"rejectionStatement\" : {\n    \"responseCard\" : { },\n    \"messages\" : { }\n  },\n  \"lastUpdatedDate\" : { },\n  \"createdDate\" : { },\n  \"inputContexts\" : { },\n  \"outputContexts\" : { },\n  \"confirmationPrompt\" : {\n    \"maxAttempts\" : { },\n    \"responseCard\" : { },\n    \"messages\" : { }\n  },\n  \"name\" : { },\n  \"checksum\" : { },\n  \"kendraConfiguration\" : {\n    \"kendraIndex\" : { },\n    \"role\" : { },\n    \"queryFilterString\" : { }\n  },\n  \"dialogCodeHook\" : {\n    \"messageVersion\" : { },\n    \"uri\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aafc9e98-5250-407d-a8b5-9a275dc8d4c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.54058Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateIntentVersion",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentName"
                }, {
                  "description" : "The name of the intent."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the intent."
                } ]
              },
              "slots" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotList"
                }, {
                  "description" : "An array of slot types that defines the information required to fulfill the intent."
                } ]
              },
              "sampleUtterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentUtteranceList"
                }, {
                  "description" : "An array of sample utterances configured for the intent. "
                } ]
              },
              "confirmationPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prompt"
                }, {
                  "description" : "If defined, the prompt that Amazon Lex uses to confirm the user's intent before fulfilling it. "
                } ]
              },
              "rejectionStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "If the user answers \"no\" to the question defined in <code>confirmationPrompt</code>, Amazon Lex responds with this statement to acknowledge that the intent was canceled. "
                } ]
              },
              "followUpPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FollowUpPrompt"
                }, {
                  "description" : "If defined, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled. "
                } ]
              },
              "conclusionStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "After the Lambda function specified in the <code>fulfillmentActivity</code> field fulfills the intent, Amazon Lex conveys this statement to the user. "
                } ]
              },
              "dialogCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CodeHook"
                }, {
                  "description" : "If defined, Amazon Lex invokes this Lambda function for each user input."
                } ]
              },
              "fulfillmentActivity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FulfillmentActivity"
                }, {
                  "description" : " Describes how the intent is fulfilled. "
                } ]
              },
              "parentIntentSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltinIntentSignature"
                }, {
                  "description" : "A unique identifier for a built-in intent."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the intent was updated. "
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date that the intent was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version number assigned to the new version of the intent."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum of the intent version created."
                } ]
              },
              "kendraConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KendraConfiguration"
                }, {
                  "description" : "Configuration information, if any, for connecting an Amazon Kendra index with the <code>AMAZON.KendraSearchIntent</code> intent."
                } ]
              },
              "inputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InputContextList"
                }, {
                  "description" : "An array of <code>InputContext</code> objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user."
                } ]
              },
              "outputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OutputContextList"
                }, {
                  "description" : "An array of <code>OutputContext</code> objects that lists the contexts that the intent activates when the intent is fulfilled."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "fb448658-fa2e-4d82-b4e5-c6654686557a",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/A_eF_LX/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb448658-fa2e-4d82-b4e5-c6654686557a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.525293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    }
  }, {
    "id" : "3c180af8-2e46-4a39-8b80-92723526091d",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/bX_a_B_z_b_y_G_GF_UA_eYbCn_Kr_pH_kk_SNspr_A_K_Av_a/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c180af8-2e46-4a39-8b80-92723526091d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.524922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    }
  }, {
    "id" : "5e5741f1-aaac-4791-9afc-1e4d12a94fbf",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/rW_ji_t_pO_O_UXpGYV_XUQgi_zPDXK_MyZhmE_Sm_c_e_c_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e5741f1-aaac-4791-9afc-1e4d12a94fbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.524507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    }
  }, {
    "id" : "2b0aaf46-154c-47b7-a475-0c2d18774f0d",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/dlI_tU_Ll_d_z_E_VY_Q_XSjOy_/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b0aaf46-154c-47b7-a475-0c2d18774f0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.524105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    }
  }, {
    "id" : "38212080-e9ff-4055-b0e8-c4f25476f32c",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/jh_qg_Ci_nI_j_mB_qgop_Fz_Sv_X_B_CyqV_iY_oH_O_lgv_G/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38212080-e9ff-4055-b0e8-c4f25476f32c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.523709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    }
  }, {
    "id" : "eed7fa7a-231d-4bf2-a593-2b1fdd6b1d0c",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/Zz_Q_Pqj_y_ym_K_Eq_ru_Ob_F_Z_h_xz_T_ZOpI_HOq_dO_mx/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eed7fa7a-231d-4bf2-a593-2b1fdd6b1d0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.523215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    }
  }, {
    "id" : "2a5ae94a-eca6-4dfc-98f5-04ce6a7ac32d",
    "name" : "<p>Creates a new version of the bot based on the <code>$LATEST</code> version. I...",
    "request" : {
      "urlPath" : "/bots/oD_BDBD_NIx_Y_fSFo_c_P_Le_ky_OI_nEM_C_r_g_V_YOYS_E/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"intents\" : { },\n  \"enableModelImprovements\" : { },\n  \"detectSentiment\" : { },\n  \"description\" : { },\n  \"idleSessionTTLInSeconds\" : { },\n  \"locale\" : { },\n  \"version\" : { },\n  \"lastUpdatedDate\" : { },\n  \"voiceId\" : { },\n  \"createdDate\" : { },\n  \"clarificationPrompt\" : {\n    \"maxAttempts\" : { },\n    \"responseCard\" : { },\n    \"messages\" : { }\n  },\n  \"failureReason\" : { },\n  \"name\" : { },\n  \"checksum\" : { },\n  \"childDirected\" : { },\n  \"abortStatement\" : {\n    \"responseCard\" : { },\n    \"messages\" : { }\n  },\n  \"status\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a5ae94a-eca6-4dfc-98f5-04ce6a7ac32d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:50.516037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBotVersion",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotName"
                }, {
                  "description" : "The name of the bot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "A description of the bot."
                } ]
              },
              "intents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentList"
                }, {
                  "description" : "An array of <code>Intent</code> objects. For more information, see <a>PutBot</a>."
                } ]
              },
              "clarificationPrompt" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prompt"
                }, {
                  "description" : "The message that Amazon Lex uses when it doesn't understand the user's request. For more information, see <a>PutBot</a>. "
                } ]
              },
              "abortStatement" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Statement"
                }, {
                  "description" : "The message that Amazon Lex uses to cancel a conversation. For more information, see <a>PutBot</a>."
                } ]
              },
              "status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Status"
                }, {
                  "description" : " When you send a request to create or update a bot, Amazon Lex sets the <code>status</code> response element to <code>BUILDING</code>. After Amazon Lex builds the bot, it sets <code>status</code> to <code>READY</code>. If Amazon Lex can't build the bot, it sets <code>status</code> to <code>FAILED</code>. Amazon Lex returns the reason for the failure in the <code>failureReason</code> response element. "
                } ]
              },
              "failureReason" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that it failed to build the bot."
                } ]
              },
              "lastUpdatedDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date when the <code>$LATEST</code> version of this bot was updated. "
                } ]
              },
              "createdDate" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date when the bot version was created."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see <a>PutBot</a>."
                } ]
              },
              "voiceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The Amazon Polly voice ID that Amazon Lex uses for voice interactions with the user."
                } ]
              },
              "checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "Checksum identifying the version of the bot that was created."
                } ]
              },
              "version" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Version"
                }, {
                  "description" : "The version of the bot. "
                } ]
              },
              "locale" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Locale"
                }, {
                  "description" : " Specifies the target locale for the bot. "
                } ]
              },
              "childDirected" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "<p>For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By specifying <code>true</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is not</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code> field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon Lex FAQ.</a> </p>"
                } ]
              },
              "enableModelImprovements" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "Indicates whether the bot uses accuracy improvements. <code>true</code> indicates that the bot is using the improvements, otherwise, <code>false</code>."
                } ]
              },
              "detectSentiment" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Boolean"
                }, {
                  "description" : "Indicates whether utterances entered by the user should be sent to Amazon Comprehend for sentiment analysis."
                } ]
              }
            }
          }
        }
      }
    }
  } ]
}