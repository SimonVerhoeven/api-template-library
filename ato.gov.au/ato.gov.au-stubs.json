{
  "mappings" : [ {
    "id" : "8f2426dd-4984-424e-9b54-b220f43a4af7",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/28te/roles/75do",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f2426dd-4984-424e-9b54-b220f43a4af7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.210281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a7efe2fd-9ccd-43f8-a47a-5ff051953461",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/6ynj/roles/m92o",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7efe2fd-9ccd-43f8-a47a-5ff051953461",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.210086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c6044f80-4629-4ab0-b697-ec82330d69f3",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/86x6/roles/pyed",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6044f80-4629-4ab0-b697-ec82330d69f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.209908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "314d3b36-1efb-4c87-821a-dd2db7c68a7c",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/m6n2/roles/258a",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "314d3b36-1efb-4c87-821a-dd2db7c68a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.209707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aadd66b2-0e81-4362-9ebb-9541e441bd70",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/7qil/roles/888m",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aadd66b2-0e81-4362-9ebb-9541e441bd70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.209461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4205bd9d-f56d-4e84-9814-62b7e0c90059",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/30t0/roles/m415",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4205bd9d-f56d-4e84-9814-62b7e0c90059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.209246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "85cbefd5-a232-45b5-959d-d7302286daee",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/hg10/roles/g439",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85cbefd5-a232-45b5-959d-d7302286daee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.209068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2d42d15a-b33e-46fb-b7bb-f58e2c98cde1",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/4905/roles/7504",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d42d15a-b33e-46fb-b7bb-f58e2c98cde1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.208819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc502ebb-0996-4b4c-87cd-cb296ad91026",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/8inj/roles/c38r",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc502ebb-0996-4b4c-87cd-cb296ad91026",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.208602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "acc4bd69-0d9b-4598-9293-db7bc865fce0",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/organisations/g6c9/roles/ac47",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "acc4bd69-0d9b-4598-9293-db7bc865fce0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.208423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "68792897-fff8-420c-9bb0-f99444bbf2fc",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/0g9c/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68792897-fff8-420c-9bb0-f99444bbf2fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.208281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b51e76f-7322-4962-b18a-9c0bf396fa97",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/i909/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b51e76f-7322-4962-b18a-9c0bf396fa97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.208162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "72b55fcb-b24b-4809-b7e6-8777d7d3d14a",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/jy4r/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72b55fcb-b24b-4809-b7e6-8777d7d3d14a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.208013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ecd0e1f8-0431-40b5-86b1-e93241293453",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/3dwj/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecd0e1f8-0431-40b5-86b1-e93241293453",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.207827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "419cb1d1-5af0-4a76-ad4e-8e887100e7a1",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/lavc/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "419cb1d1-5af0-4a76-ad4e-8e887100e7a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.207691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f13a6a6-4a58-4dbb-92df-0bf361984dc1",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/2g23/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Partnership\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Partnership\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f13a6a6-4a58-4dbb-92df-0bf361984dc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.20757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "17685988-1a13-4480-9b57-27977003710f",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/u23r/licenses/6s6x",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17685988-1a13-4480-9b57-27977003710f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.207301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f003505b-5f92-40ad-a33f-7be4aea51a71",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/7yeg/licenses/9rbh",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f003505b-5f92-40ad-a33f-7be4aea51a71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.2071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39d6d441-d498-44a5-89de-e5148412b974",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/kor6/licenses/2j1w",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39d6d441-d498-44a5-89de-e5148412b974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.206923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc9bd541-90b6-4916-bf6e-4d15d215637c",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/p1k4/licenses/995q",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc9bd541-90b6-4916-bf6e-4d15d215637c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.206736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "260a6e91-e053-4981-a44e-1c803f2ba509",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/7k4c/licenses/fnrz",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "260a6e91-e053-4981-a44e-1c803f2ba509",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.20653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bfb842ad-4efd-4631-8261-982a3df6d107",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/j99m/licenses/ov72",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfb842ad-4efd-4631-8261-982a3df6d107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.206311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f4a5488-53b3-46ce-a039-b4a7cbf54d2b",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/xp3x/licenses/mpa5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f4a5488-53b3-46ce-a039-b4a7cbf54d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.206134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b3585efa-4fbb-4236-9701-b64221462e68",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/31r1/licenses/145w",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3585efa-4fbb-4236-9701-b64221462e68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.20592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "efeaf5ed-2899-4a37-9394-2f35af7687e3",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/rviy/licenses/i3hu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efeaf5ed-2899-4a37-9394-2f35af7687e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.205724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d83b821a-15f5-4575-abd7-a2a577ee270c",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/organisations/2awg/licenses/99j4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d83b821a-15f5-4575-abd7-a2a577ee270c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.205543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a4da6756-fea2-4145-a9fe-7654148cd0a0",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/o04o/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4da6756-fea2-4145-a9fe-7654148cd0a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.205396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cb9d9a8f-7bde-4d04-b7a5-831206dbd150",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/u5of/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb9d9a8f-7bde-4d04-b7a5-831206dbd150",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.205271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2667e67a-bc64-4e6f-a88a-fb29dc5fc65a",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/c4u8/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2667e67a-bc64-4e6f-a88a-fb29dc5fc65a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.205103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac13605e-97de-43d3-83ba-0cd0b7614002",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/3l94/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac13605e-97de-43d3-83ba-0cd0b7614002",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.204942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86ac0a1f-b88a-4de7-a7d6-99510ab046c7",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/akwh/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86ac0a1f-b88a-4de7-a7d6-99510ab046c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.204785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "654e510a-404b-45d3-a4e8-e2547fef3a4d",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/z0p1/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "654e510a-404b-45d3-a4e8-e2547fef3a4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.204668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "a9924b5c-78a1-4a80-9bac-452667fc1e79",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/7224/electronic-addresses/79or",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9924b5c-78a1-4a80-9bac-452667fc1e79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.204397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "85577d2e-31f9-4370-bde0-913de070882e",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/5ygu/electronic-addresses/2z0s",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85577d2e-31f9-4370-bde0-913de070882e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.204201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed1fa0bb-454f-4aa2-b617-ae21dfada6d9",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/8609/electronic-addresses/45aq",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed1fa0bb-454f-4aa2-b617-ae21dfada6d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.204024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f5cf92f-cb43-45ef-ad84-c402579780c8",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/y5y5/electronic-addresses/7hqe",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f5cf92f-cb43-45ef-ad84-c402579780c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.203798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eaecf5ce-7baa-477d-bae1-688f503fd2b0",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/636o/electronic-addresses/n0ao",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eaecf5ce-7baa-477d-bae1-688f503fd2b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.203563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b87a6306-d7b1-4cdc-91f3-312a261d358c",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/is76/electronic-addresses/6l6i",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b87a6306-d7b1-4cdc-91f3-312a261d358c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.203341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a234dbbd-674d-4255-aa0d-f694c2641188",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/pk2t/electronic-addresses/0kwy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a234dbbd-674d-4255-aa0d-f694c2641188",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.203156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cff3db59-bec3-4b6e-ba33-489f7712153a",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/u64a/electronic-addresses/3145",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cff3db59-bec3-4b6e-ba33-489f7712153a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.202915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3002a4a8-98df-4c8a-ba48-4c04a5119150",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/vg4b/electronic-addresses/1y6t",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3002a4a8-98df-4c8a-ba48-4c04a5119150",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.202692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a10b850-cdfd-4541-a2a9-487b03a0c90e",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/organisations/xc35/electronic-addresses/z8so",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7a10b850-cdfd-4541-a2a9-487b03a0c90e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.20251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "5411c511-868f-4bcc-b3c6-9df4e3538bc3",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/dc38/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5411c511-868f-4bcc-b3c6-9df4e3538bc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.202366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e8875d7-52a4-46f8-9103-a3adb7d431b7",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/3350/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e8875d7-52a4-46f8-9103-a3adb7d431b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.202246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "05f72152-be02-4579-9ee0-e318da35c571",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/av7q/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05f72152-be02-4579-9ee0-e318da35c571",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.202075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9f99ae85-3e58-4202-b814-722bc491a207",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/34cg/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f99ae85-3e58-4202-b814-722bc491a207",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.201886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6a106742-3a34-4f28-ac46-90dd2a359ff6",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/375w/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a106742-3a34-4f28-ac46-90dd2a359ff6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.201761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5c733797-a572-4c60-b29b-e390d3d98b2d",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/sc0z/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c733797-a572-4c60-b29b-e390d3d98b2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.201644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "17dd8df0-4b59-4d79-a826-af97dfe98454",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/0u9n/business-names/zo5u",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17dd8df0-4b59-4d79-a826-af97dfe98454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.201328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "47ea1bd9-3bf7-4a77-a058-56a0a6276560",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/ldu0/business-names/90se",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47ea1bd9-3bf7-4a77-a058-56a0a6276560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.20114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09644ad2-3a0e-4cb9-96c4-6a621225529b",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/66ai/business-names/g95q",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09644ad2-3a0e-4cb9-96c4-6a621225529b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.200964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b2a3a9e-302a-4ab0-9dcd-3c9d16c9f941",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/8o37/business-names/6111",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b2a3a9e-302a-4ab0-9dcd-3c9d16c9f941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.200741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4da80ab-e652-4501-b0eb-866a35bbf681",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/9663/business-names/mni3",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4da80ab-e652-4501-b0eb-866a35bbf681",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.200544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b2332d8a-e668-480b-becc-925cfef40c71",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/xbo2/business-names/ft49",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2332d8a-e668-480b-becc-925cfef40c71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.200364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0845d53c-8c9b-4207-9dcd-efccc2a81a31",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/h1x6/business-names/lj5c",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0845d53c-8c9b-4207-9dcd-efccc2a81a31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.200185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2888b517-1b2e-49ac-afd9-fbcbb45c2e14",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/4729/business-names/tc0k",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2888b517-1b2e-49ac-afd9-fbcbb45c2e14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c00a5ed6-e3ec-4b47-9375-4ffc823d5e9b",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/51r3/business-names/7j0x",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c00a5ed6-e3ec-4b47-9375-4ffc823d5e9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a41dd59f-0cd0-4541-a6db-3d3059e3a078",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/organisations/97l6/business-names/96b7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a41dd59f-0cd0-4541-a6db-3d3059e3a078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "9301dd27-8591-4eb7-81f5-a8593715858c",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/637t/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9301dd27-8591-4eb7-81f5-a8593715858c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17ff7bb8-09d8-495f-a708-027d7c51abf7",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/085a/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17ff7bb8-09d8-495f-a708-027d7c51abf7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17a504e4-2a09-4b66-9f6f-60ed04e62b90",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/3263/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17a504e4-2a09-4b66-9f6f-60ed04e62b90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ce543537-2f8d-49e5-b4e1-856dc75ecc2a",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/13d8/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce543537-2f8d-49e5-b4e1-856dc75ecc2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.199019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "be2c4a4c-3ff4-4fc9-af85-3da78b8c4bab",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/9531/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be2c4a4c-3ff4-4fc9-af85-3da78b8c4bab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.198891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e32b1de5-64ba-45e3-bdee-60b7987ea0b8",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/gag9/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e32b1de5-64ba-45e3-bdee-60b7987ea0b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.198773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "1aa48171-ba0e-4207-b50e-597de0dc7817",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/7a15/addresses/sjzb",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aa48171-ba0e-4207-b50e-597de0dc7817",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.198632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "535ca70b-3e43-45a3-9eda-1ac75a39772c",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/2b4i/addresses/b13c",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "535ca70b-3e43-45a3-9eda-1ac75a39772c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.198436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77e03180-50fc-4fba-9950-6916a9cf22fa",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/xy3c/addresses/c573",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77e03180-50fc-4fba-9950-6916a9cf22fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.198261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2bc2e4f4-b753-4609-87e4-9e363fdddcf1",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/4751/addresses/o435",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bc2e4f4-b753-4609-87e4-9e363fdddcf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.198047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1379265d-6454-4d23-be2c-671f26f31eda",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/4xxq/addresses/a66m",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1379265d-6454-4d23-be2c-671f26f31eda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.197824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2308ce7c-9174-4eb4-8e2e-4c46f3f325bb",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/m6sf/addresses/v68e",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2308ce7c-9174-4eb4-8e2e-4c46f3f325bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.197614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1136855b-19ba-4185-814f-c7f6fbb3b61b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/724o/addresses/9uu4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1136855b-19ba-4185-814f-c7f6fbb3b61b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.197432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "adb67ead-6975-4784-9427-7aea4718ff8f",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/n6d3/addresses/k9sw",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adb67ead-6975-4784-9427-7aea4718ff8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.197201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5726b032-f216-4b2d-a953-42de19675180",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/pzi7/addresses/kuv2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5726b032-f216-4b2d-a953-42de19675180",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad4d6b2f-e8ec-4d20-a7ff-1684ed718520",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/organisations/5ry2/addresses/zr73",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ad4d6b2f-e8ec-4d20-a7ff-1684ed718520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "42e03d82-0091-4c75-80c5-15f658d07313",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/m347/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42e03d82-0091-4c75-80c5-15f658d07313",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.196645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5adecb8a-a0ef-4501-ac3b-7f525116d11b",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/7blk/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5adecb8a-a0ef-4501-ac3b-7f525116d11b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.196528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6c3c26be-b7fd-4ca7-8d10-2d35c6cfdcda",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/hswe/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c3c26be-b7fd-4ca7-8d10-2d35c6cfdcda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.196384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "033fd786-76d0-4f38-98e3-85a74534e7e6",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/3r6w/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "033fd786-76d0-4f38-98e3-85a74534e7e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.196194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a142947e-1c2e-4ab6-b92f-ddec9aa72626",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/2yv2/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a142947e-1c2e-4ab6-b92f-ddec9aa72626",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.196065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2d1ad8fa-bb7b-45a3-9ce8-fc3047486d56",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/d596/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d1ad8fa-bb7b-45a3-9ce8-fc3047486d56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "54e26829-a86c-4fd0-8843-b9657f908b14",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/6m76",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54e26829-a86c-4fd0-8843-b9657f908b14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84fd7e35-c721-4cb1-b5a8-e111ca8301e7",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/q39f",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84fd7e35-c721-4cb1-b5a8-e111ca8301e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.195699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d372920a-893d-451f-b3a5-67c341817d01",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/1q1i",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d372920a-893d-451f-b3a5-67c341817d01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.195583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c64197fc-97dc-4052-ba5b-ffbbcc18d09c",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/48a8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Trust\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c64197fc-97dc-4052-ba5b-ffbbcc18d09c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.195421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5664583e-6675-4895-9c5f-6d1ea16bdaab",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/0tms",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5664583e-6675-4895-9c5f-6d1ea16bdaab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.194917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b938bf8f-e821-46db-86b2-507f58b3f0db",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/mh87",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b938bf8f-e821-46db-86b2-507f58b3f0db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.194764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6dd67775-eddd-4bf8-a268-84aa2673b342",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/60l4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dd67775-eddd-4bf8-a268-84aa2673b342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.194642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12d7787c-8f39-4639-a5e4-42c7681076bc",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/0h5u",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12d7787c-8f39-4639-a5e4-42c7681076bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.194048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "53964ed3-fef2-467f-95de-37a73f34eaea",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/xmcs",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53964ed3-fef2-467f-95de-37a73f34eaea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.193881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d2c79729-517a-411d-bc48-2c6eecd06696",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/1fmx",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2c79729-517a-411d-bc48-2c6eecd06696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.193748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eab63622-2adf-415a-9709-4b3f6d7a6922",
    "name" : "Delete an organisation - 204",
    "request" : {
      "urlPath" : "/organisations/d593",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "eab63622-2adf-415a-9709-4b3f6d7a6922",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ac632482-5da9-4cb7-8676-1058a1e6eaf0",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac632482-5da9-4cb7-8676-1058a1e6eaf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.193502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "06b73b08-04a8-46f8-89d6-1ec25fd85ffb",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06b73b08-04a8-46f8-89d6-1ec25fd85ffb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.193446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a8f0be3-3a1d-450c-9073-b6b5f9101b28",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a8f0be3-3a1d-450c-9073-b6b5f9101b28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.193364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee539dc4-d77e-4737-99cd-d01be48a6eea",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee539dc4-d77e-4737-99cd-d01be48a6eea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.192907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6265613e-66b0-4694-bb22-5ef6a2a63e43",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6265613e-66b0-4694-bb22-5ef6a2a63e43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.192846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "81c05a23-de84-4cf7-95c2-9500da373229",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Trust\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81c05a23-de84-4cf7-95c2-9500da373229",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.192789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/organisation"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "2e7f9ea8-6e5a-4992-85e0-16e71fa88392",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e7f9ea8-6e5a-4992-85e0-16e71fa88392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bbdab8df-bb19-452d-b81c-e51370aeb488",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbdab8df-bb19-452d-b81c-e51370aeb488",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "81ad3490-ce7f-40c0-b385-598945b7ab07",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81ad3490-ce7f-40c0-b385-598945b7ab07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.192086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "61b84efb-5127-4015-b455-dec599149843",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/yja4/roles/kez7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61b84efb-5127-4015-b455-dec599149843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.191939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c7356dcb-39eb-4ad8-bdcf-9e3614d6c7e1",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/5e3i/roles/mo06",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7356dcb-39eb-4ad8-bdcf-9e3614d6c7e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.191739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "574e713a-c5dd-4761-804b-4802c8d656ed",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/mss2/roles/0g4g",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "574e713a-c5dd-4761-804b-4802c8d656ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.19156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0a36a153-d485-4d33-aae7-ba8ff8e21376",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/4hb3/roles/3yi4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a36a153-d485-4d33-aae7-ba8ff8e21376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.191331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f7171f1a-19ac-4b3c-8eca-d9e5e3fa8a19",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/nc8l/roles/mtz7",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7171f1a-19ac-4b3c-8eca-d9e5e3fa8a19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.191095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc9b4821-4a4e-42fa-a205-192dc37112ac",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/4tf3/roles/830r",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc9b4821-4a4e-42fa-a205-192dc37112ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.190873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e9e16f3-0f2c-4086-a2b1-50d8db8927e0",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/2y2p/roles/fmz7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e9e16f3-0f2c-4086-a2b1-50d8db8927e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.190692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aca9c546-2f72-4b2f-b9f2-9cfe487aeb1d",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/r8y2/roles/8165",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aca9c546-2f72-4b2f-b9f2-9cfe487aeb1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.190441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "70b464a3-532c-4d94-a2b2-a34898367e24",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/9100/roles/azph",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70b464a3-532c-4d94-a2b2-a34898367e24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.190221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39119980-6e25-47ac-b2e1-58589fe9bd12",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/individuals/nj35/roles/bp93",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "39119980-6e25-47ac-b2e1-58589fe9bd12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.190037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "bbc5dc82-1de7-4b22-ad10-e1c0a013ac67",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/621d/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbc5dc82-1de7-4b22-ad10-e1c0a013ac67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.189886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "016e202d-f152-4089-9e3b-13cea1d566c3",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/s1dc/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "016e202d-f152-4089-9e3b-13cea1d566c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.189769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed968110-7555-4e6e-bdb2-b0255c97b939",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/zy18/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Partnership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed968110-7555-4e6e-bdb2-b0255c97b939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.189615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0671a18a-9548-46b4-842a-e2ef26332de6",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/s2dg/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0671a18a-9548-46b4-842a-e2ef26332de6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.189414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f213c3a-f830-46b1-8d80-532963c0feda",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/27dz/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f213c3a-f830-46b1-8d80-532963c0feda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.189288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e59e96ae-c709-4c6a-9d45-54862a38bf91",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/1u2y/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e59e96ae-c709-4c6a-9d45-54862a38bf91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "03bc7b12-0a35-41c9-b99c-4e1bba9f6573",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/811s/licenses/6v3z",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03bc7b12-0a35-41c9-b99c-4e1bba9f6573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.188826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "51f54bca-5324-4496-840f-ff13b597f75b",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/jeap/licenses/7222",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51f54bca-5324-4496-840f-ff13b597f75b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.188627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee742116-2fb7-4264-9f42-70d7eeabca0f",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/k3f5/licenses/15bo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee742116-2fb7-4264-9f42-70d7eeabca0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee34c804-416f-498e-bc52-8a64b4ebdfdc",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/e29q/licenses/pm74",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee34c804-416f-498e-bc52-8a64b4ebdfdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c1ea73fb-7134-4510-bc57-ba69f6cfc406",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/g26f/licenses/hx27",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1ea73fb-7134-4510-bc57-ba69f6cfc406",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.188047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5694954d-a7f4-4bf9-9328-08554a0d7233",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/w22p/licenses/s119",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5694954d-a7f4-4bf9-9328-08554a0d7233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.187833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "98153601-b71b-420d-88c6-666d10057657",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/6920/licenses/13hx",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98153601-b71b-420d-88c6-666d10057657",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.187657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "63f6a568-5fed-436c-bc76-5a6f14458d4e",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/k9pd/licenses/l144",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f6a568-5fed-436c-bc76-5a6f14458d4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.187442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dfb22de0-5d63-4559-a5a0-4a2fbe25a2a0",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/6e2q/licenses/92ss",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfb22de0-5d63-4559-a5a0-4a2fbe25a2a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.187232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82700904-0359-40ed-9d4e-de431d1067b0",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/individuals/aa3z/licenses/49v4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "82700904-0359-40ed-9d4e-de431d1067b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.187057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b7945969-7ebc-487d-af29-0e2d39eb1903",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/88jt/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7945969-7ebc-487d-af29-0e2d39eb1903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e150b4fa-f10c-4272-a0a6-d85fd9f1dcbf",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/o02h/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e150b4fa-f10c-4272-a0a6-d85fd9f1dcbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b8e0ecb1-7408-49b6-ab00-d469798e06fa",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/0au2/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8e0ecb1-7408-49b6-ab00-d469798e06fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f17fdaf4-0c21-4137-8c5c-dca7a431d993",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/9fv3/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f17fdaf4-0c21-4137-8c5c-dca7a431d993",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e38ae481-1849-4738-a088-94c37f724f67",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/4zs2/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e38ae481-1849-4738-a088-94c37f724f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a1cc8258-0659-4c94-b92a-61d492d74fb7",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/6sso/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1cc8258-0659-4c94-b92a-61d492d74fb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "e7e4543d-4616-44c1-80df-3a4c3146ff5f",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/xh66/electronic-addresses/12i5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7e4543d-4616-44c1-80df-3a4c3146ff5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.186067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e01de167-4aaf-479f-9983-844e8ca25580",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/b6bn/electronic-addresses/2gkz",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e01de167-4aaf-479f-9983-844e8ca25580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "300e13e3-405a-4ee1-b2c6-535e01c58157",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/9d95/electronic-addresses/4ru1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "300e13e3-405a-4ee1-b2c6-535e01c58157",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.185674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b67b0e8-0b7f-498f-bbb3-446d0252f2b7",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/4c75/electronic-addresses/488i",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b67b0e8-0b7f-498f-bbb3-446d0252f2b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.185455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dda86485-60d3-4003-ae36-faf828e25d1b",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/5198/electronic-addresses/v98v",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dda86485-60d3-4003-ae36-faf828e25d1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.185225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ab49f3df-bbc3-4fc7-9cc5-7db46deb9ae2",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/46ne/electronic-addresses/9o5d",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab49f3df-bbc3-4fc7-9cc5-7db46deb9ae2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.185017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5208f8b6-0b0e-4b36-a93c-d1f667575b11",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/9jr1/electronic-addresses/mp9w",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5208f8b6-0b0e-4b36-a93c-d1f667575b11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.184833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a96239b8-f0fa-4951-ab81-a0a2c8f1b522",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/y4l2/electronic-addresses/f04c",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a96239b8-f0fa-4951-ab81-a0a2c8f1b522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.184588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "706d3e2d-ee4c-4040-b5e6-f46adf0b58c4",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/5l4a/electronic-addresses/d6yy",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "706d3e2d-ee4c-4040-b5e6-f46adf0b58c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.184382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4218399b-d4ed-4dae-9d42-a77c43f84357",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/individuals/9n14/electronic-addresses/86lu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4218399b-d4ed-4dae-9d42-a77c43f84357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.184204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "db8528d5-9b80-480b-82f3-3b8e93281024",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/j8f6/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db8528d5-9b80-480b-82f3-3b8e93281024",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.184054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5726b8ef-6bd1-4020-b55b-a59df16646c8",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/6s2b/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5726b8ef-6bd1-4020-b55b-a59df16646c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "180e776a-150e-48dc-99de-db8acd84799a",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/7gsb/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "180e776a-150e-48dc-99de-db8acd84799a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c49f1ce8-0a94-41e5-bd3d-bebebfc703f3",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/i228/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c49f1ce8-0a94-41e5-bd3d-bebebfc703f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.183585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1e6ee70a-01f3-4ef5-a57b-dca0ee6c5f1f",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/6s7o/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e6ee70a-01f3-4ef5-a57b-dca0ee6c5f1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.183449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d02097da-4e91-40d5-9465-bf95eaf183b6",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/66p7/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d02097da-4e91-40d5-9465-bf95eaf183b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.183327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "f740c948-8cb9-4325-a853-e7d90336bcfd",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/a5i6/business-names/556s",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f740c948-8cb9-4325-a853-e7d90336bcfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.183164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dffce679-c2bd-4d4a-9271-9a200539ad58",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/hu75/business-names/glaj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dffce679-c2bd-4d4a-9271-9a200539ad58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.182935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9352ba07-183d-4d1a-81ae-877c5a2bb759",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/14lo/business-names/ekyj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9352ba07-183d-4d1a-81ae-877c5a2bb759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2af452ea-f442-49fa-94aa-5aec9c1169b6",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/rq9n/business-names/7m56",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2af452ea-f442-49fa-94aa-5aec9c1169b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.182537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "15d651b0-a3b9-4758-a106-f15121d204de",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/8bx0/business-names/w0w6",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15d651b0-a3b9-4758-a106-f15121d204de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.182337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "037330b2-29ca-48bd-a58b-fd77777a2c41",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/u564/business-names/5l82",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "037330b2-29ca-48bd-a58b-fd77777a2c41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.182102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "18aad2b4-6ce5-4134-8f6f-dbd4ce27a1ba",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/5643/business-names/160b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18aad2b4-6ce5-4134-8f6f-dbd4ce27a1ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.181917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "429683d5-bb1a-4597-958a-e4c79b38a153",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/2855/business-names/27bv",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "429683d5-bb1a-4597-958a-e4c79b38a153",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.181693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2d2ae249-85f4-42b5-9cad-3159f71c1774",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/7s0w/business-names/t942",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d2ae249-85f4-42b5-9cad-3159f71c1774",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.181475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41098805-026a-47b6-a2d5-0492afc21025",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/individuals/s7z9/business-names/mqcw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "41098805-026a-47b6-a2d5-0492afc21025",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.181292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "bed0154c-0639-43c5-ab2f-50bd024e77c2",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/978z/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bed0154c-0639-43c5-ab2f-50bd024e77c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5023ff53-4ff1-4f20-a52c-22343f5cadf2",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/0uj8/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5023ff53-4ff1-4f20-a52c-22343f5cadf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.181018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3446fd8e-d597-4846-b82e-9699a9eddca0",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/0pqz/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3446fd8e-d597-4846-b82e-9699a9eddca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.180854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b585c006-c141-4fe7-a15d-df0473bfa625",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/i7pf/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b585c006-c141-4fe7-a15d-df0473bfa625",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.180701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "368c6098-1c91-4ddd-80a2-249ebb887c80",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/443b/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "368c6098-1c91-4ddd-80a2-249ebb887c80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.180546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f4feae21-ad35-48a6-a334-19b7205a49e6",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/xff9/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4feae21-ad35-48a6-a334-19b7205a49e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.180423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "7d56209c-a81f-4f4d-8255-1d1a4b21194d",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/22on/addresses/o1oo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d56209c-a81f-4f4d-8255-1d1a4b21194d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ffc8473-af0a-40a6-8650-932cf7e75c82",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/ukdd/addresses/0ozt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ffc8473-af0a-40a6-8650-932cf7e75c82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.18005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8385d546-0ebd-4a80-bb4a-6124df5cc281",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/u902/addresses/blx8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8385d546-0ebd-4a80-bb4a-6124df5cc281",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.179866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "104924d0-bfb4-4922-b60c-2bc7bd7c0530",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/7k82/addresses/a1uf",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "104924d0-bfb4-4922-b60c-2bc7bd7c0530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.179623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f7971c66-73b2-4e5a-8b66-672a8f525a2e",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/9578/addresses/e6u1",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7971c66-73b2-4e5a-8b66-672a8f525a2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.17937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eb9c2495-9838-4926-a6e6-1b2330f5a3a5",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/zl1e/addresses/1gkn",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb9c2495-9838-4926-a6e6-1b2330f5a3a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.179159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ea87f34b-4354-469c-ba07-cf3c21e2ecac",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/j672/addresses/h09n",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea87f34b-4354-469c-ba07-cf3c21e2ecac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.178966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f4cfe86-31a4-4aca-bbd9-a2dab3b1cb37",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/ui2g/addresses/2h0b",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f4cfe86-31a4-4aca-bbd9-a2dab3b1cb37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.178704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bfef9d0d-52b1-41d6-971b-614d70b86258",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/8c4j/addresses/1i6e",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfef9d0d-52b1-41d6-971b-614d70b86258",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.178504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e12ccbd-06ae-4a42-a903-69e8c4dfa570",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/individuals/286f/addresses/xt9s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7e12ccbd-06ae-4a42-a903-69e8c4dfa570",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.178325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "0b62437c-8546-47e7-ba84-fb96815017fb",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/k526/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b62437c-8546-47e7-ba84-fb96815017fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.178162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1541799e-8896-4106-b74a-2387f8c94e8a",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/47c8/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1541799e-8896-4106-b74a-2387f8c94e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.178043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41f1fe53-1378-4c8e-9246-cf59b52f5f48",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/ufa8/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41f1fe53-1378-4c8e-9246-cf59b52f5f48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.177886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dcc43a77-b96f-4462-ab13-29faae7e6143",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/2s2c/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcc43a77-b96f-4462-ab13-29faae7e6143",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.177683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "68e0e3ca-292f-48fc-8f4b-a1c8abb52546",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/8t0q/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68e0e3ca-292f-48fc-8f4b-a1c8abb52546",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.177519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f852696-bd89-4fa0-8973-3af9d8e45e0e",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/m04w/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f852696-bd89-4fa0-8973-3af9d8e45e0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.177397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "b2ccd3b8-71c3-4bf9-8e8a-74b05e464ebe",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/dq11",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2ccd3b8-71c3-4bf9-8e8a-74b05e464ebe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.177185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee217763-5ffa-49a4-9bd3-1093e9d710ef",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/i2ju",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee217763-5ffa-49a4-9bd3-1093e9d710ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.177037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "49425a5d-68ea-4996-8198-cbf5629218c5",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/8208",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49425a5d-68ea-4996-8198-cbf5629218c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.176908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ffea04b-a2d6-4524-bbcf-c8cf3c02e92a",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/05vl",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ffea04b-a2d6-4524-bbcf-c8cf3c02e92a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.176748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7d011122-58b1-4bc5-8c07-ff820e01b984",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/rrl1",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d011122-58b1-4bc5-8c07-ff820e01b984",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.176046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "babe463d-bdb5-4682-8cf9-0e086f04340f",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/29h7",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "babe463d-bdb5-4682-8cf9-0e086f04340f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.175871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ba5c0412-afb9-4353-b235-8caf1856b317",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/dx2v",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba5c0412-afb9-4353-b235-8caf1856b317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.175735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dcbfbc7a-a06e-47f5-911a-3f2face42099",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/ezrt",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcbfbc7a-a06e-47f5-911a-3f2face42099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.175367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8d06b451-ea61-4d01-a127-0bc9b29bed99",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/t9bq",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d06b451-ea61-4d01-a127-0bc9b29bed99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.175206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0e2d22d4-612b-427e-a31e-46d0a02aba2b",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/79vz",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e2d22d4-612b-427e-a31e-46d0a02aba2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.175066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "abd9eee9-f8c4-4815-9de1-d14b8344cf5f",
    "name" : "Delete an individual - 204",
    "request" : {
      "urlPath" : "/individuals/z3je",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "abd9eee9-f8c4-4815-9de1-d14b8344cf5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.174896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ac2d3f13-816b-4456-a27c-70684156d01c",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac2d3f13-816b-4456-a27c-70684156d01c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.174769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8fde1938-2954-4077-9860-9634ec7dfb6e",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fde1938-2954-4077-9860-9634ec7dfb6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.174709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "30c882ea-e00e-4ced-b1a5-3781f85d36c6",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30c882ea-e00e-4ced-b1a5-3781f85d36c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.174612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f3cf0269-b474-48bc-857a-b1d45542b8ad",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3cf0269-b474-48bc-857a-b1d45542b8ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.174082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "51199473-0b5a-425c-9959-e4d6059e9a20",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51199473-0b5a-425c-9959-e4d6059e9a20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.173989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86a298b0-fccd-4970-9f48-9bb538f1c60f",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86a298b0-fccd-4970-9f48-9bb538f1c60f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.17392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/individual"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "e709fed3-e4ac-44f4-aa8e-0bd498013cf1",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e709fed3-e4ac-44f4-aa8e-0bd498013cf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e04d1865-19ee-4b29-b20f-68cba68a35f2",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e04d1865-19ee-4b29-b20f-68cba68a35f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d60f7d87-990b-4ff4-b4b5-697e300d413b",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"reciprocalRole\" : \"Company\",\n  \"reciprocalRoleDescription\" : \"An incorporated legal entity.\",\n  \"relationship\" : \"Directorship\",\n  \"role\" : \"Director\",\n  \"roleDescription\" : \"An individual responsible for managing a company's business activities.\"\n}, {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"reciprocalRole\" : \"Employer\",\n  \"reciprocalRoleDescription\" : \"An individual or organisation that employs people.\",\n  \"relationship\" : \"Employment\",\n  \"role\" : \"Employee\",\n  \"roleDescription\" : \"An individual employed for wages or salary.\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d60f7d87-990b-4ff4-b4b5-697e300d413b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "reciprocalRole" : "Company",
              "reciprocalRoleDescription" : "An incorporated legal entity.",
              "relationship" : "Directorship",
              "role" : "Director",
              "roleDescription" : "An individual responsible for managing a company's business activities."
            }, {
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "reciprocalRole" : "Employer",
              "reciprocalRoleDescription" : "An individual or organisation that employs people.",
              "relationship" : "Employment",
              "role" : "Employee",
              "roleDescription" : "An individual employed for wages or salary."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/role"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "2c476207-9f56-4787-a939-56ef6b369040",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c476207-9f56-4787-a939-56ef6b369040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "539a6c04-82f6-4a94-b2e9-39afc8e43985",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "539a6c04-82f6-4a94-b2e9-39afc8e43985",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f776ccd-d72b-4b0e-a8cb-f36544199564",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"ABN\"\n}, {\n  \"description\" : \"An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"ACN\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f776ccd-d72b-4b0e-a8cb-f36544199564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.17228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "ABN"
            }, {
              "description" : "An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "ACN"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/registered-identifier-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "b49d678c-5dce-421e-addf-1312c878bde9",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b49d678c-5dce-421e-addf-1312c878bde9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "836063ae-b31f-498d-bef2-a0407c5e3669",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "836063ae-b31f-498d-bef2-a0407c5e3669",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9311dfc3-6808-4bbf-9c17-539eec76406a",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An alternate name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Alias\"\n}, {\n  \"description\" : \"The primary name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Name\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9311dfc3-6808-4bbf-9c17-539eec76406a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An alternate name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Alias"
            }, {
              "description" : "The primary name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Name"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "f093f33d-f065-4a09-abec-ad6a2c081517",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f093f33d-f065-4a09-abec-ad6a2c081517",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.172071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2203e33-a657-49c4-a52b-8599601f071e",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2203e33-a657-49c4-a52b-8599601f071e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9bdac9f-61f2-4002-940c-c4d0952f2411",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"A title used before a family name or formal salutation to address a man.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mr\"\n}, {\n  \"description\" : \"A title used before a family name or formal salutation to address a woman.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Ms\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9bdac9f-61f2-4002-940c-c4d0952f2411",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "A title used before a family name or formal salutation to address a man.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mr"
            }, {
              "description" : "A title used before a family name or formal salutation to address a woman.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Ms"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-prefix"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "4bf4bc31-0184-439f-90ed-40854b93a8b1",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bf4bc31-0184-439f-90ed-40854b93a8b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f81ee2e-4dfa-4b1e-9421-7950f05f9364",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f81ee2e-4dfa-4b1e-9421-7950f05f9364",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b3c315ac-e161-458f-94ed-99830e77099e",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The full name or formal salutation is rendered left to right.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"left-to-right\"\n}, {\n  \"description\" : \"The full name or formal salutation is rendered right to left.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"right-to-left\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3c315ac-e161-458f-94ed-99830e77099e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The full name or formal salutation is rendered left to right.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "left-to-right"
            }, {
              "description" : "The full name or formal salutation is rendered right to left.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "right-to-left"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-direction"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "2f4d4060-4613-4549-ade1-dbd28fcd51e7",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f4d4060-4613-4549-ade1-dbd28fcd51e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b0261dcb-522e-4d9b-b251-3470d1a6d436",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0261dcb-522e-4d9b-b251-3470d1a6d436",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "08ef2e70-42a1-497d-a736-0d06c27e0f57",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Australian Financial Services License\"\n}, {\n  \"description\" : \"To conduct a <insert-name-here> business you must have a 2B licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"2B License\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08ef2e70-42a1-497d-a736-0d06c27e0f57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Australian Financial Services License"
            }, {
              "description" : "To conduct a <insert-name-here> business you must have a 2B licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "2B License"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "0a573d63-099f-4d76-93b9-d45d164db4bf",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a573d63-099f-4d76-93b9-d45d164db4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "58b36702-431f-418f-8a09-e3b0f9883790",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58b36702-431f-418f-8a09-e3b0f9883790",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3707c657-e140-4870-8260-aa1dbd6291bd",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The License has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The License has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The License has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The License is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The License has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3707c657-e140-4870-8260-aa1dbd6291bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The License has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The License has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The License has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The License is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The License has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "b455810a-8d77-4f0f-95f7-3377b978f221",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b455810a-8d77-4f0f-95f7-3377b978f221",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09cb531d-5f5f-496a-a63e-4e619740b566",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09cb531d-5f5f-496a-a63e-4e619740b566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bcb2cf9d-a722-41c7-bbaf-6795f52a288b",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Sole Trader\"\n}, {\n  \"description\" : \"A partnership is two or more individuals or organisations who do business as partners or receive income jointly.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Partnership\"\n}, {\n  \"description\" : \"A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Joint Venture\"\n}, {\n  \"description\" : \"A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Company\"\n}, {\n  \"description\" : \"A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Trust\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcb2cf9d-a722-41c7-bbaf-6795f52a288b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.17121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Sole Trader"
            }, {
              "description" : "A partnership is two or more individuals or organisations who do business as partners or receive income jointly.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Partnership"
            }, {
              "description" : "A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Joint Venture"
            }, {
              "description" : "A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Company"
            }, {
              "description" : "A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Trust"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/legal-entity-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "cc3f629f-c3c5-4ad3-bf42-0509ac456fd2",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc3f629f-c3c5-4ad3-bf42-0509ac456fd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c5fb9dc-6980-491c-a608-885878c71074",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c5fb9dc-6980-491c-a608-885878c71074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c4bf7b02-9ca2-401c-940b-606b63a7d6c4",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"gender\" : \"Not Known\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\"\n}, {\n  \"gender\" : \"Male\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\"\n}, {\n  \"gender\" : \"Female\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\"\n}, {\n  \"gender\" : \"Not Applicable\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4bf7b02-9ca2-401c-940b-606b63a7d6c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.171013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "gender" : "Not Known",
              "id" : "123e4567-e89b-12d3-a456-426655440001"
            }, {
              "gender" : "Male",
              "id" : "123e4567-e89b-12d3-a456-426655440002"
            }, {
              "gender" : "Female",
              "id" : "123e4567-e89b-12d3-a456-426655440003"
            }, {
              "gender" : "Not Applicable",
              "id" : "123e4567-e89b-12d3-a456-426655440004"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/gender"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "aaf13450-1f36-4b29-934b-8504a2b1e370",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aaf13450-1f36-4b29-934b-8504a2b1e370",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1b301e0c-e0a9-44a5-a55b-e68f58443d48",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b301e0c-e0a9-44a5-a55b-e68f58443d48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64aa08d3-8351-46b4-a5b4-baba65fb2184",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An address used to send and receive emails.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Email\"\n}, {\n  \"description\" : \"A number used to send and receive faxes.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Fax\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64aa08d3-8351-46b4-a5b4-baba65fb2184",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An address used to send and receive emails.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Email"
            }, {
              "description" : "A number used to send and receive faxes.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Fax"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/electronic-address-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "d6aef05e-5d22-4bb4-950e-8a405fd5100d",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6aef05e-5d22-4bb4-950e-8a405fd5100d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aaa6cb47-19b7-4098-9866-e971bc30f7c0",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aaa6cb47-19b7-4098-9866-e971bc30f7c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "760fed0e-201d-4b3f-8431-85d47f597155",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The Business Name has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The Business Name has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The Business Name has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The Business Name is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The Business Name has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "760fed0e-201d-4b3f-8431-85d47f597155",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The Business Name has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The Business Name has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The Business Name has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The Business Name is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The Business Name has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/business-name-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "32ed5049-2736-4993-ac3f-037cd436459a",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32ed5049-2736-4993-ac3f-037cd436459a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9d89424-4720-49db-a76b-8d52a602555d",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d89424-4720-49db-a76b-8d52a602555d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "78a1e79d-7a9a-4d3d-a944-69bb24e0dea6",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The address at which an individual or organisation receives letters or packages.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mailing\"\n}, {\n  \"description\" : \"The main location where work is conducted.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Place of Business\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78a1e79d-7a9a-4d3d-a944-69bb24e0dea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The address at which an individual or organisation receives letters or packages.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mailing"
            }, {
              "description" : "The main location where work is conducted.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Place of Business"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/address-type"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "a4e7ea92-f5c5-4f9c-b961-4dd98be88a2c",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4e7ea92-f5c5-4f9c-b961-4dd98be88a2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48f8daab-fc66-4e05-b4ea-65770f8928ae",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48f8daab-fc66-4e05-b4ea-65770f8928ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.170241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4c7fda02-ced1-4ace-87e9-24590a059969",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c7fda02-ced1-4ace-87e9-24590a059969",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:26.17015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    }
  } ]
}