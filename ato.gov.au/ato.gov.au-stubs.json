{
  "mappings" : [ {
    "id" : "89aa8af3-4493-4bc5-a594-3a7a6e19c7ec",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/stxx/roles/775y",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89aa8af3-4493-4bc5-a594-3a7a6e19c7ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.225698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "547ffd86-5054-4aaf-a3e0-37c5f109fcee",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/m89x/roles/o4i5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "547ffd86-5054-4aaf-a3e0-37c5f109fcee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.225438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f0ae8d83-48fd-4f1e-9778-b81231b2e176",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/27x9/roles/qxc2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0ae8d83-48fd-4f1e-9778-b81231b2e176",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.225198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7246d75e-bc36-413d-b3c7-0c926078001d",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/9rhz/roles/3oyk",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Partnership\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7246d75e-bc36-413d-b3c7-0c926078001d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.224851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "403802ed-6c8f-4a7b-8759-e34aade5dc2d",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/zh56/roles/volv",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "403802ed-6c8f-4a7b-8759-e34aade5dc2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.224586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d1408479-f8e2-4784-a4fb-ca0c1d194228",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/x6g1/roles/0jin",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1408479-f8e2-4784-a4fb-ca0c1d194228",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.224374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "93eb3941-8348-4d16-8e5f-fcfc27119fa3",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/l99v/roles/o572",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93eb3941-8348-4d16-8e5f-fcfc27119fa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.224186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8556b48b-505f-4e25-bb06-b80b66903b4d",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/0g06/roles/d4x4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8556b48b-505f-4e25-bb06-b80b66903b4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.223915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "46c78872-0857-445a-a017-63d607b74071",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/r26b/roles/u7fh",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46c78872-0857-445a-a017-63d607b74071",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.223707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5fa51941-4a87-4bb9-8dde-b393a1ab6447",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/organisations/3i1g/roles/8i12",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5fa51941-4a87-4bb9-8dde-b393a1ab6447",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.223522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3ad71b4c-959f-45e2-8147-3aaf48f7194d",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/3s7u/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ad71b4c-959f-45e2-8147-3aaf48f7194d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.223366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "9487bdc1-ed1f-4681-ae03-bb06bfcac6eb",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/r111/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9487bdc1-ed1f-4681-ae03-bb06bfcac6eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.223232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "8402ed9d-6381-4d73-a1ee-52870613435a",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/11b8/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8402ed9d-6381-4d73-a1ee-52870613435a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.223078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "dc6d22d9-e4d3-4f02-b7e1-76c85dc416ad",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/99k2/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc6d22d9-e4d3-4f02-b7e1-76c85dc416ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.222867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "0a70952b-af34-402c-9d58-077d0d1581a7",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/roa8/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a70952b-af34-402c-9d58-077d0d1581a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.222701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "8455a567-fb52-4891-9cd4-bc404b603fe2",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/9afr/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8455a567-fb52-4891-9cd4-bc404b603fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.222578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "bd172390-46db-4829-979c-a1b139294b19",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/9588/licenses/546e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd172390-46db-4829-979c-a1b139294b19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.222269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "79ef9e4b-7d54-428a-9ff1-0e83a67a75cd",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/ybqt/licenses/p407",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79ef9e4b-7d54-428a-9ff1-0e83a67a75cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.222032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "cc89209c-9c29-47bc-b3de-532fd2dc1cf0",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/9xqw/licenses/pa8m",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc89209c-9c29-47bc-b3de-532fd2dc1cf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.221842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "dbf081d4-8101-4509-931b-4ccb5e5de794",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/7at6/licenses/9d7p",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbf081d4-8101-4509-931b-4ccb5e5de794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.22163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "51dde54b-6580-4ad6-ae21-a3f1db39141a",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/reje/licenses/37ng",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51dde54b-6580-4ad6-ae21-a3f1db39141a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.221409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "72963ef2-6b70-4136-8e25-2d1a068f8f9b",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/t2po/licenses/wv4b",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72963ef2-6b70-4136-8e25-2d1a068f8f9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.221191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "fb43b1ff-242c-4cd5-a6d8-6c2925f0fd08",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/t5q5/licenses/9v0i",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb43b1ff-242c-4cd5-a6d8-6c2925f0fd08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.220999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "9a2f13a2-d53d-404f-bb94-b2f576c1cd2a",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/v1yh/licenses/y8dd",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a2f13a2-d53d-404f-bb94-b2f576c1cd2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.220764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "e1cb6ed3-74e4-4da2-8c3f-127f447abe8f",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/2767/licenses/su20",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1cb6ed3-74e4-4da2-8c3f-127f447abe8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.220547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "38e88c12-6170-488e-8628-7b30386b2ecb",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/organisations/wg34/licenses/8620",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "38e88c12-6170-488e-8628-7b30386b2ecb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.220364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "16d43849-8396-4239-8a68-cd4d34b29697",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/13pi/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16d43849-8396-4239-8a68-cd4d34b29697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.220211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "e866fcee-4378-4eb5-8d01-eccfac8338a2",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/790b/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e866fcee-4378-4eb5-8d01-eccfac8338a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.220085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "b9684152-12cc-4e04-b2a9-a6e3cb9d5a34",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/wcrk/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9684152-12cc-4e04-b2a9-a6e3cb9d5a34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.219924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "9ffe09b3-2713-46f8-a7e7-c43f805ac76b",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/968h/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ffe09b3-2713-46f8-a7e7-c43f805ac76b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.219738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "631f2707-2b2d-4f2c-8b9e-4690c7cd1031",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/k72o/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "631f2707-2b2d-4f2c-8b9e-4690c7cd1031",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.219581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "4af8d24e-c3aa-4270-bc83-4c4a85a7f7a7",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/1867/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4af8d24e-c3aa-4270-bc83-4c4a85a7f7a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.219454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "a486f56c-c533-41f8-9dab-55839334a702",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/f9r1/electronic-addresses/tq20",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a486f56c-c533-41f8-9dab-55839334a702",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.219273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "e8752f1c-6846-4a4d-91d2-15da7872d40a",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/v59r/electronic-addresses/i6p2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8752f1c-6846-4a4d-91d2-15da7872d40a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.219045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "179f6da9-4f3b-43ab-9682-174bb5255257",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/r1g0/electronic-addresses/nr6r",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "179f6da9-4f3b-43ab-9682-174bb5255257",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.218859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "64481746-4225-4fef-b47d-b31e18f790bb",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/9h95/electronic-addresses/9p16",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64481746-4225-4fef-b47d-b31e18f790bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.218613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "6a404d78-6f9f-4005-810d-ce61ea516703",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/gg48/electronic-addresses/189r",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a404d78-6f9f-4005-810d-ce61ea516703",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.218349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "e3e45b99-3728-4f37-97c9-a6e0c78d8c4f",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/gqft/electronic-addresses/4u1g",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3e45b99-3728-4f37-97c9-a6e0c78d8c4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.218143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "433a023a-dca0-40c0-a90c-34c18b379f1b",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/1504/electronic-addresses/wl3r",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "433a023a-dca0-40c0-a90c-34c18b379f1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.217948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "34a1c3b2-6457-4026-8ab5-54d52dea4027",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/tgd9/electronic-addresses/68xe",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34a1c3b2-6457-4026-8ab5-54d52dea4027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.217662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "830bb23a-9043-4944-ab97-ce3f4f1e8ad2",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/8l3u/electronic-addresses/3e66",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "830bb23a-9043-4944-ab97-ce3f4f1e8ad2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.217444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "50d834cd-b96f-4456-b377-443ca76a609b",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/organisations/9783/electronic-addresses/114o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "50d834cd-b96f-4456-b377-443ca76a609b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.217257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "429ecbf6-15e3-4d0c-9704-8170c7681124",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/276a/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "429ecbf6-15e3-4d0c-9704-8170c7681124",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.217104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "66b4a1f3-0bee-4175-806a-7563051cb4dc",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/t56m/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66b4a1f3-0bee-4175-806a-7563051cb4dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.216939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "63020807-7f20-4fbc-b92b-5fc80b492859",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/5k9g/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63020807-7f20-4fbc-b92b-5fc80b492859",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.216781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "a997dc68-2390-4f67-ac1f-763d225f6af5",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/v4n9/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a997dc68-2390-4f67-ac1f-763d225f6af5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.216534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "169421e9-fdae-44ce-827a-f978b57ea2f2",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/841r/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "169421e9-fdae-44ce-827a-f978b57ea2f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.216373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "694b65a3-92cb-4e7d-a048-99b6f1db3627",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/1ir3/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "694b65a3-92cb-4e7d-a048-99b6f1db3627",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.216248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "1fb6656f-0354-493c-b1ce-58555b2093f0",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/57qt/business-names/h44w",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fb6656f-0354-493c-b1ce-58555b2093f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.216056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "0e018dcb-fce2-4209-b5a1-56fccc1e7271",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/9aa7/business-names/htdw",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e018dcb-fce2-4209-b5a1-56fccc1e7271",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.215837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "65808f1b-3a73-4284-938c-bd5c27eb25bf",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/m93p/business-names/pbq2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65808f1b-3a73-4284-938c-bd5c27eb25bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.215654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "b959f5ba-59e1-48f9-987e-39bb9957da7d",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/0c8c/business-names/96lv",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b959f5ba-59e1-48f9-987e-39bb9957da7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.215437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "c706bb5b-a2f6-4fee-9eca-80d346706696",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/9bg5/business-names/v46r",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c706bb5b-a2f6-4fee-9eca-80d346706696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.215222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "dd153a5e-9f43-41c4-b6d8-e5f2085106a6",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/x8wf/business-names/98qk",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd153a5e-9f43-41c4-b6d8-e5f2085106a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.215001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "dc9fb1b2-446b-4956-8cf9-e86c7fdd60c9",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/zt3l/business-names/jesa",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc9fb1b2-446b-4956-8cf9-e86c7fdd60c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.214808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "b310955b-4572-4d7a-94af-d6e85909eb27",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/7a5r/business-names/5tpu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b310955b-4572-4d7a-94af-d6e85909eb27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.214562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "b6482ebe-b533-4384-9ff9-25a85d54b935",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/9rsf/business-names/w2um",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6482ebe-b533-4384-9ff9-25a85d54b935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.214337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "215d8a58-0111-4ff3-b363-34e87067afd7",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/organisations/j464/business-names/4zmg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "215d8a58-0111-4ff3-b363-34e87067afd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.214147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "7c24f3fb-ef39-4e2f-9724-45c89eb465e3",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/82d7/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c24f3fb-ef39-4e2f-9724-45c89eb465e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.213986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "885156bb-c4d8-45d0-9c0a-09e04bfc91a5",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/1r24/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "885156bb-c4d8-45d0-9c0a-09e04bfc91a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.21386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "9ca67e57-8406-49f5-8e9e-185ffb03c68f",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/ej6v/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ca67e57-8406-49f5-8e9e-185ffb03c68f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.213704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "32e3f8e4-a362-4a7b-8ace-588ae6362419",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/g68c/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32e3f8e4-a362-4a7b-8ace-588ae6362419",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.213528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "753755db-f4bb-4fe1-b186-eb11ad2dcd97",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/fg38/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "753755db-f4bb-4fe1-b186-eb11ad2dcd97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.213352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "354e92d3-99de-4882-b1ce-9596d2e85d97",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/1771/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "354e92d3-99de-4882-b1ce-9596d2e85d97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.213222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "2f4fa80f-2ad5-48d3-ad63-79b1d6691c57",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/9f3m/addresses/n6a1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f4fa80f-2ad5-48d3-ad63-79b1d6691c57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.213006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "71d22863-72d4-4e9b-8790-e0e58b3bd3c3",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/ah9g/addresses/33xq",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71d22863-72d4-4e9b-8790-e0e58b3bd3c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.212758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "b71fb751-3d19-415a-882e-e26971ac3e25",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/l605/addresses/9r14",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b71fb751-3d19-415a-882e-e26971ac3e25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.212552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "1c794e77-b3fe-4779-a3bb-5b37a26a1f5b",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/r37f/addresses/7v04",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c794e77-b3fe-4779-a3bb-5b37a26a1f5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.212303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "810b32e7-5cda-4f5c-a491-25e89ca3c70b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/x8s9/addresses/bn7h",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "810b32e7-5cda-4f5c-a491-25e89ca3c70b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.212046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "1e6a1cf7-2e6a-4a3c-8702-3242e2c76587",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/uuxc/addresses/p931",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e6a1cf7-2e6a-4a3c-8702-3242e2c76587",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.211825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "b49e92d3-d991-48c6-b3a0-5c985f8e587b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/0q9u/addresses/iyh9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b49e92d3-d991-48c6-b3a0-5c985f8e587b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.211629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "e7c3c831-df8a-49a8-bb94-37df8fedda0e",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/cox7/addresses/2eks",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7c3c831-df8a-49a8-bb94-37df8fedda0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.211346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "5df36b9e-1d58-4d3f-8ce6-a08f8716015f",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/ig1c/addresses/muik",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5df36b9e-1d58-4d3f-8ce6-a08f8716015f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.211133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "76184402-9609-4ad4-997b-660eec561bfd",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/organisations/5v19/addresses/24r7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "76184402-9609-4ad4-997b-660eec561bfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.210941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "b5389872-b002-49b2-b1f7-d6625d55402b",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/20p1/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5389872-b002-49b2-b1f7-d6625d55402b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.210789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "4e9d1d02-bc6b-4a4a-937e-61e72551ef5c",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/3454/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e9d1d02-bc6b-4a4a-937e-61e72551ef5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.210644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "3f6837f4-56f0-4696-ac8d-4e64817a8433",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/g031/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f6837f4-56f0-4696-ac8d-4e64817a8433",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.210445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "9a043f03-b66d-44c1-953a-33e86f3fa198",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/85rh/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a043f03-b66d-44c1-953a-33e86f3fa198",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.210195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "926ccdb9-3f6b-4805-a415-2ed5607df729",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/211x/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "926ccdb9-3f6b-4805-a415-2ed5607df729",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.210031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "c3eb28e0-ddac-498b-9283-733031d89b2f",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/h4kf/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3eb28e0-ddac-498b-9283-733031d89b2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.209889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "33f531cd-d50d-4950-b0bb-051fbf0a54b9",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/6tg5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33f531cd-d50d-4950-b0bb-051fbf0a54b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.20937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "60249b93-f23a-4836-9db1-f47e32323f3b",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/5i7s",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60249b93-f23a-4836-9db1-f47e32323f3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.209203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "6b6c0fa2-2ca5-4584-a442-3d0178064d69",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/f0oz",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b6c0fa2-2ca5-4584-a442-3d0178064d69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.209069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "5a5f88b7-8890-41b2-ae69-50b4fd013c0f",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/u3au",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a5f88b7-8890-41b2-ae69-50b4fd013c0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.208919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "d9b689c0-e156-4b0d-8b49-2e09c5577caf",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/7dow",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9b689c0-e156-4b0d-8b49-2e09c5577caf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.208495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "76d61b13-4f6c-44c5-bb0e-0635eff9374d",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/dgd6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76d61b13-4f6c-44c5-bb0e-0635eff9374d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.208324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "df89866b-7c5e-49a2-b736-a2524681b11c",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/i191",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df89866b-7c5e-49a2-b736-a2524681b11c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.208187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "87dfc53b-98e4-47fe-a78d-669823b44256",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/4k7i",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87dfc53b-98e4-47fe-a78d-669823b44256",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.207725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "3e63945c-0213-4d0e-98b4-860e49096609",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/xy55",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e63945c-0213-4d0e-98b4-860e49096609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.20755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "503fcf42-fcac-4a64-8c2d-9d74de9df8f4",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/i567",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "503fcf42-fcac-4a64-8c2d-9d74de9df8f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.207414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "363ced86-03a1-448a-a4ab-6d900a6f8391",
    "name" : "Delete an organisation - 204",
    "request" : {
      "urlPath" : "/organisations/48df",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "363ced86-03a1-448a-a4ab-6d900a6f8391",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.207248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "e78c496d-16a8-4c72-94cf-475f51520531",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e78c496d-16a8-4c72-94cf-475f51520531",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.207141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "19fdfe6e-c68b-405e-bfb6-cd6b58f01d7b",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19fdfe6e-c68b-405e-bfb6-cd6b58f01d7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.207074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "2d29ef25-33f6-4083-9623-4511645d70b5",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d29ef25-33f6-4083-9623-4511645d70b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.206938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "fb90e647-41dd-459d-8dd1-8ec71adb1d8b",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb90e647-41dd-459d-8dd1-8ec71adb1d8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.206203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "08042658-acae-4c64-ba8d-8e68529a575f",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08042658-acae-4c64-ba8d-8e68529a575f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.206063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "c013558e-991a-424f-be8d-b5694cca16b2",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Joint Venture\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c013558e-991a-424f-be8d-b5694cca16b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.205966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/organisation"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "9eee96c7-5541-449e-9a20-88970e073839",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9eee96c7-5541-449e-9a20-88970e073839",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.202528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "140545d3-fc7a-4110-b57f-88ffe209d45f",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "140545d3-fc7a-4110-b57f-88ffe209d45f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.20245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "d6b95023-ce70-44c2-9a58-f0e506a6a1ef",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6b95023-ce70-44c2-9a58-f0e506a6a1ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.202284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "cac7a43d-5131-4b5e-8ba8-0b575e01f344",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/3ii8/roles/m33r",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cac7a43d-5131-4b5e-8ba8-0b575e01f344",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.20217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "d1e24697-b763-4762-8aab-84f6d8a3cc29",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/e3u1/roles/wnjd",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1e24697-b763-4762-8aab-84f6d8a3cc29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.201944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "bb070638-cadd-4ccb-8362-8804a8876dbb",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/6n59/roles/7l1e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb070638-cadd-4ccb-8362-8804a8876dbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.201738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "f0664af5-bcd5-4ad2-adea-b3faa098ccfa",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/0450/roles/qp15",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0664af5-bcd5-4ad2-adea-b3faa098ccfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.201524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "13bad2b8-20b4-4fc2-af18-ff1481aaeecd",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/tvg0/roles/8606",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13bad2b8-20b4-4fc2-af18-ff1481aaeecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.201247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "af53b8c4-2eb1-4748-8fc6-57ca17305e95",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/174s/roles/1f7x",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af53b8c4-2eb1-4748-8fc6-57ca17305e95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.200987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "902f5ecf-eb04-4dad-9d65-d890844a2afb",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/1f7a/roles/23r1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "902f5ecf-eb04-4dad-9d65-d890844a2afb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.200782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "8b8947be-1a61-4f2e-a4fc-afd1b9277eec",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/85q8/roles/8bek",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b8947be-1a61-4f2e-a4fc-afd1b9277eec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.200489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "e42767a2-356c-4695-a8b1-7e50043ea0ff",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/qk70/roles/b7d3",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e42767a2-356c-4695-a8b1-7e50043ea0ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.200237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "0d5c31e1-1395-42b8-b7b7-b6e7b6d67346",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/individuals/0a0u/roles/x87s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0d5c31e1-1395-42b8-b7b7-b6e7b6d67346",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.200045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "a176c196-13be-494a-8828-0d92dd35d8ab",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/17za/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a176c196-13be-494a-8828-0d92dd35d8ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.199887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "e3854daf-bdac-4a4d-940d-cb5242e93ef9",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/9846/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3854daf-bdac-4a4d-940d-cb5242e93ef9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.199759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "cbc35271-e1f9-4e59-916f-f3a60be007b1",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/dm85/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbc35271-e1f9-4e59-916f-f3a60be007b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.199561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "32888cd2-756f-4fdf-9acf-4d992ba89cbf",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/yi0w/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32888cd2-756f-4fdf-9acf-4d992ba89cbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.199323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "6af10e81-cb44-48ba-a2f0-6240e5dfc1cb",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/u5vr/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6af10e81-cb44-48ba-a2f0-6240e5dfc1cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.199133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "80e812f2-94c4-4920-a252-025e0cd1c267",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/s39h/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80e812f2-94c4-4920-a252-025e0cd1c267",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.198997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "adcbd4cb-d94b-4f9b-992c-671b58c30894",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/9i12/licenses/9k2m",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adcbd4cb-d94b-4f9b-992c-671b58c30894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.198665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "25841bde-cf0a-47fd-a72a-24b228e994bc",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/we04/licenses/g2o8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25841bde-cf0a-47fd-a72a-24b228e994bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.198423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "02206861-fcdb-4f74-a4a8-1cf7b34664bd",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/6b20/licenses/iz8r",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02206861-fcdb-4f74-a4a8-1cf7b34664bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.198226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "a9601dab-0f02-48a1-83a4-15d1cf815e03",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/0d91/licenses/0575",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9601dab-0f02-48a1-83a4-15d1cf815e03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.197985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "fdfa9bce-bac1-4e0c-bfec-a3f6f82a9099",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/a25v/licenses/9i42",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdfa9bce-bac1-4e0c-bfec-a3f6f82a9099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.197731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "4ac90765-c26a-41bc-ad9d-f76f98d9113b",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/621k/licenses/q630",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ac90765-c26a-41bc-ad9d-f76f98d9113b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.197457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "cd0d4fb0-f803-4843-8c25-baa2c60e19c2",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/wp4r/licenses/e31f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd0d4fb0-f803-4843-8c25-baa2c60e19c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.19715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "5527a0a3-b47c-46d7-b2c5-c128c7398ef2",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/6od1/licenses/t0i1",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5527a0a3-b47c-46d7-b2c5-c128c7398ef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.196912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "e87276a9-8c6c-4a3c-9a43-793ab2c63802",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/w256/licenses/tmjh",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e87276a9-8c6c-4a3c-9a43-793ab2c63802",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.196668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "dac01556-fd96-4f5b-96a8-66c3628b9f3f",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/individuals/806j/licenses/l165",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "dac01556-fd96-4f5b-96a8-66c3628b9f3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.196482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "6d57c23c-be57-4078-9ac2-6ad530cfd8b0",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/53h3/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d57c23c-be57-4078-9ac2-6ad530cfd8b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.196298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "55c73da7-8a96-401f-829c-716b2dc13a4b",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/v3wp/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55c73da7-8a96-401f-829c-716b2dc13a4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.19616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "0c947c95-54b5-4675-af58-9cb974cca5c8",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/t241/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c947c95-54b5-4675-af58-9cb974cca5c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.195962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "323d3d49-0205-4a27-8486-8773a4acf149",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/7rjl/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "323d3d49-0205-4a27-8486-8773a4acf149",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.195768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "9d119050-4267-440f-ae95-0844bfe75dbc",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/0396/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d119050-4267-440f-ae95-0844bfe75dbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.195616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "829da16c-a2ac-42f4-a416-1dd11542725d",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/zr40/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "829da16c-a2ac-42f4-a416-1dd11542725d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.195476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "410077c2-435f-4c33-ba85-647241a613ea",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/wgf4/electronic-addresses/95ut",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "410077c2-435f-4c33-ba85-647241a613ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.195128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "05757fca-8fb9-4667-90a8-bfa6be010114",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/a14s/electronic-addresses/5093",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05757fca-8fb9-4667-90a8-bfa6be010114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.194912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "f3114b1b-87e1-462f-a096-5a7d18372a54",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/k29d/electronic-addresses/yl51",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3114b1b-87e1-462f-a096-5a7d18372a54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.194687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "dbfc9c12-ac61-4912-9e48-93200f7e3393",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/7ww5/electronic-addresses/yh67",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbfc9c12-ac61-4912-9e48-93200f7e3393",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.194295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "70a31efb-489a-457a-8a84-ecd96342d94e",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/gi50/electronic-addresses/ca76",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70a31efb-489a-457a-8a84-ecd96342d94e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.193991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "749cde41-744d-4967-83cb-ef9fa664fc71",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/qk7c/electronic-addresses/6o3y",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "749cde41-744d-4967-83cb-ef9fa664fc71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.193761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "bf7d1fa1-a514-43f1-82a8-770ddc7d04f1",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/dzz9/electronic-addresses/4kwx",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf7d1fa1-a514-43f1-82a8-770ddc7d04f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.193562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "df165dcc-5165-4ce7-bd2f-205dc6e3b55f",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/u0s7/electronic-addresses/grjc",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df165dcc-5165-4ce7-bd2f-205dc6e3b55f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.193261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "bac83b46-790b-4f12-8c00-a3e77d779c69",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/y1u6/electronic-addresses/bj5o",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bac83b46-790b-4f12-8c00-a3e77d779c69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.193031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "5f1c55dd-ac7f-4e38-aa3b-87c40eae1274",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/individuals/g030/electronic-addresses/n033",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5f1c55dd-ac7f-4e38-aa3b-87c40eae1274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.192834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "ae160e91-cde2-428f-891e-4cd539839ec0",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/smo3/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae160e91-cde2-428f-891e-4cd539839ec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.192675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "8704f2cc-de53-4e95-b746-1d246a67b56f",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/ek87/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8704f2cc-de53-4e95-b746-1d246a67b56f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.192526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "6ab2efe8-3edf-49fe-a8c1-c6543d0386d3",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/6fx0/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ab2efe8-3edf-49fe-a8c1-c6543d0386d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.192336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "93a7870c-3577-4aa3-bb78-3e26769b63f1",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/8ez5/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93a7870c-3577-4aa3-bb78-3e26769b63f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.192078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "6b816aff-c372-41c0-b210-3ac61f098c96",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/9l9j/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b816aff-c372-41c0-b210-3ac61f098c96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.191947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "5516d16e-9fff-48f7-b1f1-5b790dbe61f1",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/3n9a/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5516d16e-9fff-48f7-b1f1-5b790dbe61f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.191829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "8d796a14-90e0-4c6c-8d45-54dd8481917e",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/wr39/business-names/o4wf",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d796a14-90e0-4c6c-8d45-54dd8481917e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.1916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "3aefdd63-4118-4a72-9a5d-4da73c51da98",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/1q5l/business-names/7n47",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aefdd63-4118-4a72-9a5d-4da73c51da98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.191376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "b2a5134f-760e-4f05-914f-a817dda850a1",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/r9ut/business-names/pj4y",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2a5134f-760e-4f05-914f-a817dda850a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.191184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "2b3be323-dc10-4c29-8866-4c48cf7fb4ca",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/65q6/business-names/oo0r",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b3be323-dc10-4c29-8866-4c48cf7fb4ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.190957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "0213a7bf-7036-460b-a23c-32852ef7c665",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/w117/business-names/n0y9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0213a7bf-7036-460b-a23c-32852ef7c665",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.190734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "de331e7c-2271-449f-ab1d-aec2faffe547",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/j7j7/business-names/u66t",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de331e7c-2271-449f-ab1d-aec2faffe547",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.190514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "b31daa28-edf6-4dbd-adac-7c8f957bb845",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/64z2/business-names/dq5r",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b31daa28-edf6-4dbd-adac-7c8f957bb845",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.190322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "abb23e46-fc28-4418-8233-23d441e17a5e",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/79l9/business-names/84g0",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abb23e46-fc28-4418-8233-23d441e17a5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.190093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "9290c9d3-6f04-479e-924a-f47039bba624",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/262h/business-names/mn8d",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9290c9d3-6f04-479e-924a-f47039bba624",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.189867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "a7789408-1fe3-42de-8b90-c3905d2df4ab",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/individuals/91uf/business-names/2122",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a7789408-1fe3-42de-8b90-c3905d2df4ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.189682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "bf23c7eb-e167-46ca-929d-dce941d49539",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/0o85/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf23c7eb-e167-46ca-929d-dce941d49539",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.189528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "ace1520b-aec4-4142-a2a8-05d3f029242c",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/5v97/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ace1520b-aec4-4142-a2a8-05d3f029242c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.189398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "d88be5f1-4623-4110-83eb-69876e1bda2a",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/07w9/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d88be5f1-4623-4110-83eb-69876e1bda2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.189228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "0b58cdfe-dad2-48d8-ac56-3b7e354b6b61",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/l14k/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b58cdfe-dad2-48d8-ac56-3b7e354b6b61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.189054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "1b6e0c9f-c25d-4398-b5d1-b1e7bca43319",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/4981/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b6e0c9f-c25d-4398-b5d1-b1e7bca43319",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.188882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "092bda94-6c99-4911-82e4-824ce2a1a9de",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/jb9j/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "092bda94-6c99-4911-82e4-824ce2a1a9de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.18873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "056e780e-3669-4c54-82ca-8fa35de29f2f",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/zn52/addresses/f876",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "056e780e-3669-4c54-82ca-8fa35de29f2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.188577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "d78616e7-8ffe-4fbb-ba78-272b7a93bd95",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/71cw/addresses/dtu4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d78616e7-8ffe-4fbb-ba78-272b7a93bd95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.188352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "4bbf8a2d-4ed5-477c-ac29-95340eb377b8",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/1geq/addresses/ug16",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bbf8a2d-4ed5-477c-ac29-95340eb377b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.188138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "0f0c99d8-c3d4-4708-b372-05e07a1b53ec",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/jlcn/addresses/1a3w",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f0c99d8-c3d4-4708-b372-05e07a1b53ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.187895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "57ebf7a2-8d31-4731-bf82-201aa0bdfd7b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/3as7/addresses/47gx",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57ebf7a2-8d31-4731-bf82-201aa0bdfd7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.187608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "eeb426b1-2bdf-4794-93b7-de4e590857a2",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/4tl2/addresses/3319",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eeb426b1-2bdf-4794-93b7-de4e590857a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.187323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "e4bf79a4-f58b-4049-af4b-226b9ef5ae54",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/86ep/addresses/rk8t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4bf79a4-f58b-4049-af4b-226b9ef5ae54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.186897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "f51d056d-e8f6-42ca-b5f6-0f3b97d6975e",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/8oa2/addresses/85n3",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f51d056d-e8f6-42ca-b5f6-0f3b97d6975e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.186618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "199d03af-0db4-4750-8049-185db8c8c5ca",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/cb54/addresses/7e51",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "199d03af-0db4-4750-8049-185db8c8c5ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.186367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "1cea28a1-1474-4fb1-b9df-06e30c96c360",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/individuals/030a/addresses/h2x4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1cea28a1-1474-4fb1-b9df-06e30c96c360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.186175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "b819c38b-562a-4890-a6d8-52127e06773c",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/o21b/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b819c38b-562a-4890-a6d8-52127e06773c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.186014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "95b17e25-ae84-4efc-9f26-372077da4d32",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/8d0m/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95b17e25-ae84-4efc-9f26-372077da4d32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.185885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "03775391-bc0a-427e-90a5-64ad5e560c49",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/h1cy/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03775391-bc0a-427e-90a5-64ad5e560c49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.185733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "eee4ce02-752f-455f-9202-5db642953c5f",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/k0a0/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eee4ce02-752f-455f-9202-5db642953c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.185499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "2de62fd7-db0e-4869-99bd-52e57dfb178f",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/cmp3/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2de62fd7-db0e-4869-99bd-52e57dfb178f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.185321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "25fef7a5-747f-4838-850e-eb4a6ee5313f",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/5134/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25fef7a5-747f-4838-850e-eb4a6ee5313f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.185194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "b0ed4194-84bc-4dff-be20-422ee679d1fc",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/gs5o",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0ed4194-84bc-4dff-be20-422ee679d1fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.184978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "c45561dd-115d-4b20-b81b-a1c2bf3bea49",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/7h6f",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c45561dd-115d-4b20-b81b-a1c2bf3bea49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.184792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "e56075c3-195f-47d2-ae16-b6e6f817926c",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/43wt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e56075c3-195f-47d2-ae16-b6e6f817926c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.184658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "5b29d88d-5c5c-4948-a9b0-638446137110",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/9v0a",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b29d88d-5c5c-4948-a9b0-638446137110",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.184476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "d202aa82-1fc7-4a90-9900-78adaa997dc7",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/7k26",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d202aa82-1fc7-4a90-9900-78adaa997dc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.183703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "fa942b52-00f0-472f-b9f0-8ccafdfd8753",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/i8ep",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa942b52-00f0-472f-b9f0-8ccafdfd8753",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.183518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "5b11cd06-a5d1-4a69-ba7c-d0f283f47963",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/xl7k",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b11cd06-a5d1-4a69-ba7c-d0f283f47963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.183363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "535210d0-84fa-4c24-8229-d4e70b098a88",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/gy49",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "535210d0-84fa-4c24-8229-d4e70b098a88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.182578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "7c563c23-3d42-4e82-ab8b-543b0e00c116",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/w2cz",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c563c23-3d42-4e82-ab8b-543b0e00c116",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.182417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "56172360-8fa0-4702-96e5-555c0f667e6f",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/47p0",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56172360-8fa0-4702-96e5-555c0f667e6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.18228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "bec000f8-4c31-4b1a-838d-e9e097a788a1",
    "name" : "Delete an individual - 204",
    "request" : {
      "urlPath" : "/individuals/1978",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bec000f8-4c31-4b1a-838d-e9e097a788a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.182041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "ff91b9dc-81dc-442f-b3c4-7a6130547106",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff91b9dc-81dc-442f-b3c4-7a6130547106",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.181896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "b55b972a-17fb-4ca9-af0b-fd82d6082ecd",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b55b972a-17fb-4ca9-af0b-fd82d6082ecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.181829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "d83947cb-86a1-4dc6-b2e4-ceeac2035c4b",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d83947cb-86a1-4dc6-b2e4-ceeac2035c4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.181686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "cb7b9f0c-2c46-48af-b528-07b13a06ddc8",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb7b9f0c-2c46-48af-b528-07b13a06ddc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.181078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "8586e39f-4539-4e37-ac95-c8f6a86ca3bf",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8586e39f-4539-4e37-ac95-c8f6a86ca3bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.180956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "03bb04bb-883c-4a18-8517-a22aa8e11412",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03bb04bb-883c-4a18-8517-a22aa8e11412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.180853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/individual"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "66f4fcc8-88b8-4681-a091-d5d3b8d1fe47",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66f4fcc8-88b8-4681-a091-d5d3b8d1fe47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.176545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "fb72be4e-e808-4d97-88c9-6df152ab54d1",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb72be4e-e808-4d97-88c9-6df152ab54d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.176461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "edd6c9f5-4d79-45da-bdfe-0db271918216",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"reciprocalRole\" : \"Company\",\n  \"reciprocalRoleDescription\" : \"An incorporated legal entity.\",\n  \"relationship\" : \"Directorship\",\n  \"role\" : \"Director\",\n  \"roleDescription\" : \"An individual responsible for managing a company's business activities.\"\n}, {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"reciprocalRole\" : \"Employer\",\n  \"reciprocalRoleDescription\" : \"An individual or organisation that employs people.\",\n  \"relationship\" : \"Employment\",\n  \"role\" : \"Employee\",\n  \"roleDescription\" : \"An individual employed for wages or salary.\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd6c9f5-4d79-45da-bdfe-0db271918216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.1764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "reciprocalRole" : "Company",
              "reciprocalRoleDescription" : "An incorporated legal entity.",
              "relationship" : "Directorship",
              "role" : "Director",
              "roleDescription" : "An individual responsible for managing a company's business activities."
            }, {
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "reciprocalRole" : "Employer",
              "reciprocalRoleDescription" : "An individual or organisation that employs people.",
              "relationship" : "Employment",
              "role" : "Employee",
              "roleDescription" : "An individual employed for wages or salary."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "baa78c20-f3c7-452c-ba0a-e1c12476da82",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "baa78c20-f3c7-452c-ba0a-e1c12476da82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.176342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "a6fd9a82-06ae-497c-8d8b-735f05c22bfc",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6fd9a82-06ae-497c-8d8b-735f05c22bfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.176261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "0dbb4a4a-dd6b-4919-a94b-c12fa27afd23",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"ABN\"\n}, {\n  \"description\" : \"An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"ACN\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dbb4a4a-dd6b-4919-a94b-c12fa27afd23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.1762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "ABN"
            }, {
              "description" : "An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "ACN"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/registered-identifier-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "0448a05b-aba7-45d9-a613-94ae039bfa38",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0448a05b-aba7-45d9-a613-94ae039bfa38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.176155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "8cb98470-47eb-4e89-9fce-31b14aaadb05",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8cb98470-47eb-4e89-9fce-31b14aaadb05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.176039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "030d2140-1316-407e-b6f9-eaba1e7ddc6b",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An alternate name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Alias\"\n}, {\n  \"description\" : \"The primary name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Name\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "030d2140-1316-407e-b6f9-eaba1e7ddc6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An alternate name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Alias"
            }, {
              "description" : "The primary name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Name"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "005269d1-1a50-4118-ae70-4deda431296b",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "005269d1-1a50-4118-ae70-4deda431296b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.17593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "c4e2df0d-ae45-41cc-a569-ba2f2dead20c",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4e2df0d-ae45-41cc-a569-ba2f2dead20c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "eb03d1a9-ac17-49eb-821e-7b625c588051",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"A title used before a family name or formal salutation to address a man.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mr\"\n}, {\n  \"description\" : \"A title used before a family name or formal salutation to address a woman.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Ms\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb03d1a9-ac17-49eb-821e-7b625c588051",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "A title used before a family name or formal salutation to address a man.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mr"
            }, {
              "description" : "A title used before a family name or formal salutation to address a woman.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Ms"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-prefix"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "b30185a1-c92b-45c0-b6b3-426923bfe148",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b30185a1-c92b-45c0-b6b3-426923bfe148",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "80ec9de0-a669-488b-ba81-c14abffda9f7",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80ec9de0-a669-488b-ba81-c14abffda9f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "5762532f-3653-4e80-ab58-de9a69324598",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The full name or formal salutation is rendered left to right.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"left-to-right\"\n}, {\n  \"description\" : \"The full name or formal salutation is rendered right to left.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"right-to-left\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5762532f-3653-4e80-ab58-de9a69324598",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The full name or formal salutation is rendered left to right.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "left-to-right"
            }, {
              "description" : "The full name or formal salutation is rendered right to left.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "right-to-left"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-direction"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "a5176ffb-ebe0-46a9-9588-23e875252cb9",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5176ffb-ebe0-46a9-9588-23e875252cb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "c79833eb-1e84-4414-a493-0b49284d43ab",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c79833eb-1e84-4414-a493-0b49284d43ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "76f2fe28-479e-49f8-8542-7b0ae80b4ca0",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Australian Financial Services License\"\n}, {\n  \"description\" : \"To conduct a <insert-name-here> business you must have a 2B licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"2B License\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76f2fe28-479e-49f8-8542-7b0ae80b4ca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Australian Financial Services License"
            }, {
              "description" : "To conduct a <insert-name-here> business you must have a 2B licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "2B License"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "3cc0a4fe-ad85-4457-94c7-20c3fcabd698",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cc0a4fe-ad85-4457-94c7-20c3fcabd698",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "de19273f-d2ba-44aa-96c4-512b85f0167f",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de19273f-d2ba-44aa-96c4-512b85f0167f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.17517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "6d6f9887-f8b1-4108-b9f7-e6a1d88c05fc",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The License has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The License has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The License has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The License is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The License has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d6f9887-f8b1-4108-b9f7-e6a1d88c05fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The License has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The License has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The License has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The License is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The License has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "709156e6-a49d-4a2a-ac6d-537698704d5c",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "709156e6-a49d-4a2a-ac6d-537698704d5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.175059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "e384b693-a9cc-429d-87cf-09a4b67c736e",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e384b693-a9cc-429d-87cf-09a4b67c736e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "2b8bf1ed-aa4d-44d8-8eba-a739329a3f5e",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Sole Trader\"\n}, {\n  \"description\" : \"A partnership is two or more individuals or organisations who do business as partners or receive income jointly.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Partnership\"\n}, {\n  \"description\" : \"A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Joint Venture\"\n}, {\n  \"description\" : \"A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Company\"\n}, {\n  \"description\" : \"A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Trust\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b8bf1ed-aa4d-44d8-8eba-a739329a3f5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Sole Trader"
            }, {
              "description" : "A partnership is two or more individuals or organisations who do business as partners or receive income jointly.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Partnership"
            }, {
              "description" : "A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Joint Venture"
            }, {
              "description" : "A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Company"
            }, {
              "description" : "A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Trust"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/legal-entity-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "201d3345-1951-4e47-9eb3-912b53161e5d",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "201d3345-1951-4e47-9eb3-912b53161e5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "b5b4d090-7e34-4d96-af41-fe86764745d6",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5b4d090-7e34-4d96-af41-fe86764745d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "736db0a0-8b39-44ca-9bd3-704ab200fcac",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"gender\" : \"Not Known\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\"\n}, {\n  \"gender\" : \"Male\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\"\n}, {\n  \"gender\" : \"Female\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\"\n}, {\n  \"gender\" : \"Not Applicable\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "736db0a0-8b39-44ca-9bd3-704ab200fcac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.17468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "gender" : "Not Known",
              "id" : "123e4567-e89b-12d3-a456-426655440001"
            }, {
              "gender" : "Male",
              "id" : "123e4567-e89b-12d3-a456-426655440002"
            }, {
              "gender" : "Female",
              "id" : "123e4567-e89b-12d3-a456-426655440003"
            }, {
              "gender" : "Not Applicable",
              "id" : "123e4567-e89b-12d3-a456-426655440004"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/gender"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "52602291-4867-439c-842b-68d2170ce58c",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52602291-4867-439c-842b-68d2170ce58c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "5d4d0ad1-6fe2-490d-ae57-115a2b99b233",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d4d0ad1-6fe2-490d-ae57-115a2b99b233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "e37e4b02-8b73-4e64-ad79-ac52cc51e9e9",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An address used to send and receive emails.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Email\"\n}, {\n  \"description\" : \"A number used to send and receive faxes.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Fax\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e37e4b02-8b73-4e64-ad79-ac52cc51e9e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An address used to send and receive emails.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Email"
            }, {
              "description" : "A number used to send and receive faxes.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Fax"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/electronic-address-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "e5adcfcf-45ab-4ef6-a919-68a6102d9300",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5adcfcf-45ab-4ef6-a919-68a6102d9300",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "069f633a-8859-4685-a515-f903d8f1a610",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "069f633a-8859-4685-a515-f903d8f1a610",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "11c6bfed-541b-4b2e-8cab-801ddc325d86",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The Business Name has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The Business Name has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The Business Name has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The Business Name is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The Business Name has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11c6bfed-541b-4b2e-8cab-801ddc325d86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The Business Name has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The Business Name has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The Business Name has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The Business Name is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The Business Name has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/business-name-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "bbcd7242-db6f-47bf-8f4c-e54620d68c5b",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbcd7242-db6f-47bf-8f4c-e54620d68c5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "f7440b7d-178d-40a4-b88d-6b4fc399d2ba",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7440b7d-178d-40a4-b88d-6b4fc399d2ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "f964a02e-ab41-4bed-9302-a8d355e257db",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The address at which an individual or organisation receives letters or packages.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mailing\"\n}, {\n  \"description\" : \"The main location where work is conducted.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Place of Business\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f964a02e-ab41-4bed-9302-a8d355e257db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The address at which an individual or organisation receives letters or packages.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mailing"
            }, {
              "description" : "The main location where work is conducted.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Place of Business"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/address-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "9a5100d9-1180-47e0-b3ea-61f627fe1e21",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a5100d9-1180-47e0-b3ea-61f627fe1e21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.174011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "52bd408c-93f0-465d-acd5-a877b0886d73",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52bd408c-93f0-465d-acd5-a877b0886d73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.173891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "ab1c7e23-6c68-483a-99e0-565cafd20ff3",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab1c7e23-6c68-483a-99e0-565cafd20ff3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.173791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 235
  } ]
}