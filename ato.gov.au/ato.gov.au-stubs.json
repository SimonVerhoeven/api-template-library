{
  "mappings" : [ {
    "id" : "1704cafa-72b3-4030-b570-b5011d6a5f63",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/h98c/roles/u4gc",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1704cafa-72b3-4030-b570-b5011d6a5f63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "46641e9e-0bd6-45d0-a171-a729dadef1ac",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/g56h/roles/89du",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46641e9e-0bd6-45d0-a171-a729dadef1ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.849097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b745b692-9c2f-437b-8ac0-80965927232f",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/6l7c/roles/2kqj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b745b692-9c2f-437b-8ac0-80965927232f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0df23ef2-b029-4457-97ca-d90fcfe8dd58",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/organisations/nxqo/roles/2583",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0df23ef2-b029-4457-97ca-d90fcfe8dd58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.848658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "ef1bb71e-df8c-417a-8579-98569049ef50",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/2nbs/roles/jnp9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef1bb71e-df8c-417a-8579-98569049ef50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.848385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "09268f31-bbcd-4059-be01-195deb32a4d5",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/3pbu/roles/9wh3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09268f31-bbcd-4059-be01-195deb32a4d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.848179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "fa59baf2-258f-4c93-8bd1-0842cb495be0",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/organisations/o9tz/roles/n0i1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa59baf2-258f-4c93-8bd1-0842cb495be0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ffc84237-7aa1-4b9c-8acf-47f9a5337a87",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/u54d/roles/6689",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffc84237-7aa1-4b9c-8acf-47f9a5337a87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d1342671-4fb7-4fa4-bdc6-35ad72df0903",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/organisations/a934/roles/up77",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1342671-4fb7-4fa4-bdc6-35ad72df0903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.847469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "7aed5552-9c69-4758-9ca8-3b3019ab4b0a",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/organisations/n475/roles/s8aa",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7aed5552-9c69-4758-9ca8-3b3019ab4b0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.847283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "4bc87cb5-d562-406b-8caa-8a0d858e32f6",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/h7rz/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bc87cb5-d562-406b-8caa-8a0d858e32f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.847127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "6addaa04-aa76-48ba-8e6a-2646b3587fcf",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/po3y/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6addaa04-aa76-48ba-8e6a-2646b3587fcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.847001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "8435e156-00f9-4478-b73c-ace4acdb785f",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/organisations/kicj/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8435e156-00f9-4478-b73c-ace4acdb785f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.846825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "cdbef220-79be-45e0-b8a4-fc720bbe9e20",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/0z51/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdbef220-79be-45e0-b8a4-fc720bbe9e20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.8466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f2ed7fbb-2472-436f-ab6d-de101ff159e0",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/9m9v/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2ed7fbb-2472-436f-ab6d-de101ff159e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.846427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "cb806d6c-8e96-4644-8fcc-c432bb398417",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/organisations/2uq3/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Employee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Employment\",\n  \"relatedPartyRoleType\" : \"Company\",\n  \"partyRoleType\" : \"Trustee\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb806d6c-8e96-4644-8fcc-c432bb398417",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.846295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "44e9ea5f-0b04-49df-ac4f-f379988ef502",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/66xy/licenses/x750",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44e9ea5f-0b04-49df-ac4f-f379988ef502",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.845953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f0d8abdd-bdda-45ef-8581-0c8a1b12b8b9",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/mfdt/licenses/fw42",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0d8abdd-bdda-45ef-8581-0c8a1b12b8b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.845745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "a4f8e356-242b-4133-9e41-5c11886a24aa",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/qtuc/licenses/4h82",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4f8e356-242b-4133-9e41-5c11886a24aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.845555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "b437afcb-d37d-4292-9cc9-0c8b429b67b0",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/organisations/b78m/licenses/jc79",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b437afcb-d37d-4292-9cc9-0c8b429b67b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.845332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "24a954be-b210-4db1-9e11-6aced3e47ee7",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/0g92/licenses/99in",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24a954be-b210-4db1-9e11-6aced3e47ee7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.845105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "a15868a9-bea2-4a52-a193-a6df2c496500",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/489n/licenses/00ux",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a15868a9-bea2-4a52-a193-a6df2c496500",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.844876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "db26a05a-9110-4281-819d-8b0eb7d82f20",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/organisations/mpx0/licenses/z4dj",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db26a05a-9110-4281-819d-8b0eb7d82f20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.844644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "ccc38bab-b110-4f4d-8524-a0b39fdfa3a2",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/z7yp/licenses/j14v",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccc38bab-b110-4f4d-8524-a0b39fdfa3a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.844401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "abb6bdd5-7c96-4d4d-a0ef-99764eaba30c",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/organisations/7u73/licenses/4e18",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abb6bdd5-7c96-4d4d-a0ef-99764eaba30c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "ddb7bdb0-943a-4007-b9dd-383a50f79b83",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/organisations/bd20/licenses/ai4d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ddb7bdb0-943a-4007-b9dd-383a50f79b83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.843972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "387afee9-97e3-405f-ab12-18f4350c8d40",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/2h2a/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "387afee9-97e3-405f-ab12-18f4350c8d40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.843805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "236d68d7-21c3-457e-8d9d-ed65c37b3bb7",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/4yg8/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "236d68d7-21c3-457e-8d9d-ed65c37b3bb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.843669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "169b7e5e-3c79-4fb9-8ccb-49d60f0d2b33",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/organisations/enj9/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "169b7e5e-3c79-4fb9-8ccb-49d60f0d2b33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.8435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "d6a48b5c-108f-4f37-9040-412a36d7e0a9",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/wahj/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6a48b5c-108f-4f37-9040-412a36d7e0a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.843319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "d1c1024f-7062-440e-a451-f991c9539cd6",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/382i/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1c1024f-7062-440e-a451-f991c9539cd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "4c98682f-7a3f-463a-b5c1-f9c95776c6c3",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/organisations/ecch/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c98682f-7a3f-463a-b5c1-f9c95776c6c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.842925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "4838e8db-3537-4a52-81b2-42d543d49489",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/497v/electronic-addresses/95gg",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4838e8db-3537-4a52-81b2-42d543d49489",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.842643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "2c1fb3a8-b11d-4763-a119-6edc740dfb9b",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/6z9b/electronic-addresses/g072",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c1fb3a8-b11d-4763-a119-6edc740dfb9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.842443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "bdbb4d42-7a11-465e-9d08-84673231d402",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/616m/electronic-addresses/6441",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdbb4d42-7a11-465e-9d08-84673231d402",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.842244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "0342a2e4-a313-4407-93f2-e16c62a18125",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/organisations/t4y1/electronic-addresses/yc24",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0342a2e4-a313-4407-93f2-e16c62a18125",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.841991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "d29d3111-330e-4dc4-a6a7-221fb0d8cf69",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/ei6s/electronic-addresses/271y",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d29d3111-330e-4dc4-a6a7-221fb0d8cf69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.841713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "d98d025f-0e47-44ac-b90e-882b22f0d327",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/f612/electronic-addresses/3890",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d98d025f-0e47-44ac-b90e-882b22f0d327",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.841501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "8a0a94e9-4391-4fbb-bcaf-ee1eaafe4432",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/organisations/c63d/electronic-addresses/mb5c",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a0a94e9-4391-4fbb-bcaf-ee1eaafe4432",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.841291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "a50effd0-3f7f-4732-b507-5c8d2de7e424",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/051z/electronic-addresses/0s3m",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a50effd0-3f7f-4732-b507-5c8d2de7e424",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.840958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "690258ab-5d3a-4b6f-ad13-e3a44663cc2a",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/organisations/gr4q/electronic-addresses/swgx",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "690258ab-5d3a-4b6f-ad13-e3a44663cc2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.840699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "df49ad5f-89be-44e7-b6d5-96fd6a0fd460",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/organisations/l180/electronic-addresses/3979",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "df49ad5f-89be-44e7-b6d5-96fd6a0fd460",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.84047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "f724ae17-eebb-49ca-a802-0c0259865dcd",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/302y/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f724ae17-eebb-49ca-a802-0c0259865dcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.840217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "4c516f75-8693-4e15-95d3-85b672686a47",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/nwbl/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c516f75-8693-4e15-95d3-85b672686a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.839935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "a4f31d1d-43da-4bcd-b5d6-b59d222dd10c",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/organisations/u60w/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4f31d1d-43da-4bcd-b5d6-b59d222dd10c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.838925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "1e3efd58-cb1b-423b-bfe2-e3774d1e14bf",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/8vx7/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e3efd58-cb1b-423b-bfe2-e3774d1e14bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.838676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "3b9fc5b7-cc91-485c-aea3-dd6a5ca7ed5f",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/x985/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b9fc5b7-cc91-485c-aea3-dd6a5ca7ed5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.838504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "709119c3-766c-4035-8c61-cb2565f583c8",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/organisations/1ihg/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Website\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Email\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "709119c3-766c-4035-8c61-cb2565f583c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.838368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "f46c21fa-1c04-4e36-8a00-6209f6d7a126",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/z731/business-names/ecc8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f46c21fa-1c04-4e36-8a00-6209f6d7a126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.837892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "1b0a1166-de87-4545-9450-4c8ecbec8ee8",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/3c7x/business-names/n101",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b0a1166-de87-4545-9450-4c8ecbec8ee8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.837631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "fc81a489-57ef-4747-80fd-0c3f7c472b1c",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/89v7/business-names/61wj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc81a489-57ef-4747-80fd-0c3f7c472b1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.837416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "1e587400-e25c-409c-92ac-7f96e38e8483",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/organisations/8wxx/business-names/2645",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e587400-e25c-409c-92ac-7f96e38e8483",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.837079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "b5e8d8e9-2fb7-40ae-ba1e-37b1a897e553",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/49g8/business-names/m3g5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e8d8e9-2fb7-40ae-ba1e-37b1a897e553",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.836632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "99180adb-e09a-40ba-9c9f-4d3a68cdd8df",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/8302/business-names/6t16",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99180adb-e09a-40ba-9c9f-4d3a68cdd8df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.836382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "866f058f-8142-4b19-9cd2-a2a6f9b3e146",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/organisations/7r4g/business-names/iv4p",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "866f058f-8142-4b19-9cd2-a2a6f9b3e146",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.836102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "b515a2da-02f2-42a1-8776-572dd770b262",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/669q/business-names/es23",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b515a2da-02f2-42a1-8776-572dd770b262",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.835849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "547bddd3-4455-48a9-b5ef-d8f91466a32e",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/organisations/4r9d/business-names/7mi2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "547bddd3-4455-48a9-b5ef-d8f91466a32e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.83561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "67b0dc16-1a1c-40cf-8901-b4e39e46614b",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/organisations/076e/business-names/wiu9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "67b0dc16-1a1c-40cf-8901-b4e39e46614b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.83537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "ee1e5f07-d99b-4e37-9bd1-fcdfb02139cb",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/dqu3/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee1e5f07-d99b-4e37-9bd1-fcdfb02139cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.835082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "a4a67c2e-5bcb-445d-8c95-5612dab7e792",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/uzz3/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4a67c2e-5bcb-445d-8c95-5612dab7e792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.834631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "dd2ee1e7-7f30-4e50-9a9d-85e467f7675c",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/organisations/s299/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd2ee1e7-7f30-4e50-9a9d-85e467f7675c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.834445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "e99018a8-185e-4c1d-babc-5acd104b5035",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/daw9/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e99018a8-185e-4c1d-babc-5acd104b5035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.833205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "3f42bd16-6505-4a83-88ca-e0fe1fe25689",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/02q9/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f42bd16-6505-4a83-88ca-e0fe1fe25689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.83289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "63f07f25-4296-4277-bd53-345b59bddc04",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/organisations/i1b1/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63f07f25-4296-4277-bd53-345b59bddc04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.832759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "d84d57e1-5fb7-45d3-884f-71aaecc49127",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/09h8/addresses/fuxq",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d84d57e1-5fb7-45d3-884f-71aaecc49127",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.832559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "8e047e49-73d6-4015-90aa-fe75fa5a243d",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/75k9/addresses/n1e6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e047e49-73d6-4015-90aa-fe75fa5a243d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.8323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "38bed926-7cb9-469e-86ee-4f5343798f99",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/7z43/addresses/aofb",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38bed926-7cb9-469e-86ee-4f5343798f99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.832052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "c09e5199-7953-4202-9738-870bdf9dc9df",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/organisations/4l15/addresses/03aq",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c09e5199-7953-4202-9738-870bdf9dc9df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.831516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "fb2b6e72-c78b-43ec-9ea2-b893e41a114b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/rz22/addresses/d9zy",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb2b6e72-c78b-43ec-9ea2-b893e41a114b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.830688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "865bb4ec-dd3c-40e6-96dd-9eae95c39fa7",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/ic06/addresses/030w",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "865bb4ec-dd3c-40e6-96dd-9eae95c39fa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.830431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "ce5d83f1-d597-4f37-a85d-35aaa30cf07b",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/organisations/0766/addresses/jvx6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce5d83f1-d597-4f37-a85d-35aaa30cf07b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.830099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "574bda29-9d7f-4a3f-94c4-c51b0d2a01db",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/ul4m/addresses/186w",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "574bda29-9d7f-4a3f-94c4-c51b0d2a01db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.829777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "e8569047-75b7-450b-853d-68ba4911463f",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/organisations/1f6j/addresses/5cas",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8569047-75b7-450b-853d-68ba4911463f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.829403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "ca32153d-302e-4af8-b5e2-0753d804f107",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/organisations/cnc9/addresses/b92h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ca32153d-302e-4af8-b5e2-0753d804f107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.828519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "d364ccf0-8f2e-434d-bd84-2ff1ca155bd2",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/u4km/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d364ccf0-8f2e-434d-bd84-2ff1ca155bd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.828326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "ccc7d1f3-7a96-44ab-a652-d039ed0188cb",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/z67u/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccc7d1f3-7a96-44ab-a652-d039ed0188cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.828108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "935b3098-8341-451e-ac72-a4e26d5adb02",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/organisations/u411/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "935b3098-8341-451e-ac72-a4e26d5adb02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.82783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "f7914333-45f3-4b07-b998-1533d8518e20",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/cu00/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7914333-45f3-4b07-b998-1533d8518e20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.827155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "d11bc0a2-976c-4d15-9b81-9e81c48817f4",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/2809/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d11bc0a2-976c-4d15-9b81-9e81c48817f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.826717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "46b0f76c-c6ee-4125-9084-befcc89cbc6a",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/organisations/sm16/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46b0f76c-c6ee-4125-9084-befcc89cbc6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.826443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "44e3143b-93ce-48b4-bc16-752d19ed08ff",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/bi5a",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44e3143b-93ce-48b4-bc16-752d19ed08ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.825941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "c27d07b9-ad0d-42d9-bb74-dc069af9760c",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/a1rz",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c27d07b9-ad0d-42d9-bb74-dc069af9760c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.825249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "ac8dc82e-f0e1-455e-ba3c-bd702d21429e",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/1kpn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac8dc82e-f0e1-455e-ba3c-bd702d21429e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.824866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "f031d5b1-a894-4389-8b42-927c4ac88831",
    "name" : "Update an organisation",
    "request" : {
      "urlPath" : "/organisations/l1om",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f031d5b1-a894-4389-8b42-927c4ac88831",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.824409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "546649f5-dd07-4fa5-be54-bd0ff1db9552",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/94h7",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "546649f5-dd07-4fa5-be54-bd0ff1db9552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.822106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "e6617a21-c5cd-4289-8b6f-5ca2c67efbc3",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/18p1",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6617a21-c5cd-4289-8b6f-5ca2c67efbc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.82191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "1e846bba-ecb7-495c-b859-bcc7ba400e24",
    "name" : "Retrieve an organisation",
    "request" : {
      "urlPath" : "/organisations/zhb8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e846bba-ecb7-495c-b859-bcc7ba400e24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.821446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "ab6e761a-66a6-4fd4-b13f-bd69bf661850",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/v946",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab6e761a-66a6-4fd4-b13f-bd69bf661850",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.820595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "ec6aedce-264f-4b0a-b3f3-c341df70f504",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/16o4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec6aedce-264f-4b0a-b3f3-c341df70f504",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.820428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "876e6ab7-4117-48cc-ab2e-6b5d0cf1b0f5",
    "name" : "Delete an organisation (application/json)",
    "request" : {
      "urlPath" : "/organisations/ibfu",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "876e6ab7-4117-48cc-ab2e-6b5d0cf1b0f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.820211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "ebf3b9f9-413e-4ada-9ad7-67cd6b7fa24d",
    "name" : "Delete an organisation - 204",
    "request" : {
      "urlPath" : "/organisations/7m65",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ebf3b9f9-413e-4ada-9ad7-67cd6b7fa24d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.819985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "3ef47162-8cb3-4b05-b63d-2a2c79cefe48",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ef47162-8cb3-4b05-b63d-2a2c79cefe48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.819489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "76becffe-a27f-4bed-bd0d-1d8fe0df74a3",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76becffe-a27f-4bed-bd0d-1d8fe0df74a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.819419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "3ec9e697-bd33-4019-bd47-2b27ecbed36b",
    "name" : "Create an organisation",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ec9e697-bd33-4019-bd47-2b27ecbed36b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.819242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Organisation resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-address"
                },
                "type" : "array"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "establishmentDate" : {
                "description" : "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1928-03-03",
                "format" : "date",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "legalEntityType" : {
                "default" : "Company",
                "description" : "The organisation's legal entity type.",
                "enum" : [ "Company", "Partnership", "Trust", "Joint Venture" ],
                "type" : "string"
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/organisation-name"
                },
                "type" : "array"
              },
              "registeredIdentifiers" : {
                "items" : {
                  "$ref" : "#/components/schemas/registered-identifier"
                },
                "type" : "array"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "legalEntityType", "establishmentDate" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "2798eef8-7b53-4aa7-99d0-abf9ce2f7aa7",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2798eef8-7b53-4aa7-99d0-abf9ce2f7aa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.818531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "e5cd0a96-e111-4be3-9946-773a0714199c",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5cd0a96-e111-4be3-9946-773a0714199c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.818437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "7b8b60de-2de4-42f9-b539-d0edfb212056",
    "name" : "Retrieve a list of organisations",
    "request" : {
      "urlPath" : "/organisations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Company\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Trust\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"names\" : [ {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }, {\n    \"fromDate\" : \"1928-03-03T09:05:06+10:00\",\n    \"toDate\" : \"\",\n    \"name\" : \"321 Technology Ventures\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  } ],\n  \"establishmentDate\" : \"1928-03-03\",\n  \"legalEntityType\" : \"Partnership\",\n  \"toDate\" : \"\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"registeredIdentifiers\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ACN\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"identifier\" : \"123456789\",\n    \"toDate\" : \"\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"identifierType\" : \"ABN\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b8b60de-2de4-42f9-b539-d0edfb212056",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.81829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/organisation"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "d0d5b488-961d-4985-83f0-fa4417a88542",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0d5b488-961d-4985-83f0-fa4417a88542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.816299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "e8d24566-d337-4010-993d-1e72060e56c9",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8d24566-d337-4010-993d-1e72060e56c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.816187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "f46c8d21-bd8e-4677-ae33-7ca44d63627c",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f46c8d21-bd8e-4677-ae33-7ca44d63627c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.816102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "a7411429-d3a9-4e2f-92e8-27ad18ea356f",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/cm36/roles/qy26",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7411429-d3a9-4e2f-92e8-27ad18ea356f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.815906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "d5716dfa-ba68-44ee-b282-a08971a8b31f",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/0131/roles/4o03",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5716dfa-ba68-44ee-b282-a08971a8b31f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.815107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "cdb16201-a3e6-4446-97ab-0a01c3bf1371",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/u784/roles/8sth",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdb16201-a3e6-4446-97ab-0a01c3bf1371",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.814921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "aa0a66bd-c2e1-43f4-ae92-1795cc299c15",
    "name" : "Update a role",
    "request" : {
      "urlPath" : "/individuals/7879/roles/hr12",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Directorship\",\n  \"relatedPartyRoleType\" : \"Employer\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa0a66bd-c2e1-43f4-ae92-1795cc299c15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.814701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "6b4e3eab-8bbc-4489-8f2c-c56121a2003f",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/i957/roles/3617",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b4e3eab-8bbc-4489-8f2c-c56121a2003f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.814443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "4e665a44-e748-4891-bd2d-1ecffd2715c3",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/0094/roles/f1iu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e665a44-e748-4891-bd2d-1ecffd2715c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.814222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "352b86b3-dab9-4e72-9ad3-522dd607fecd",
    "name" : "Retrieve a role",
    "request" : {
      "urlPath" : "/individuals/445f/roles/2pk9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Trust\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "352b86b3-dab9-4e72-9ad3-522dd607fecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.814014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "b8808b0b-a959-4a80-b8c7-7ebf6ca3f525",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/q242/roles/izvn",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8808b0b-a959-4a80-b8c7-7ebf6ca3f525",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.813688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "c43d4b9b-29b8-4c6c-9196-c1670b85e15d",
    "name" : "Delete a role (application/json)",
    "request" : {
      "urlPath" : "/individuals/16an/roles/p2uy",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c43d4b9b-29b8-4c6c-9196-c1670b85e15d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.813327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "f1846234-a59c-45c1-8505-68ae70553498",
    "name" : "Delete a role - 204",
    "request" : {
      "urlPath" : "/individuals/2rmq/roles/4bp4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f1846234-a59c-45c1-8505-68ae70553498",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.811931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "2245981b-a20c-43bf-b8fe-cde38cce948e",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/8vb5/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2245981b-a20c-43bf-b8fe-cde38cce948e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.811762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "18f5b41d-2ccd-4c0f-a02b-1778bbcd3882",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/61t1/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18f5b41d-2ccd-4c0f-a02b-1778bbcd3882",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.811567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "7a6ae3a8-bc5b-4661-9cba-e5db106d66bf",
    "name" : "Create a role",
    "request" : {
      "urlPath" : "/individuals/a2uc/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a6ae3a8-bc5b-4661-9cba-e5db106d66bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.81135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Party Role resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "2016-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/roleId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "partyRoleType" : {
                "default" : "Employee",
                "description" : "The party's role type.",
                "enum" : [ "Director", "Employee", "Member", "Partner", "Trustee" ],
                "type" : "string"
              },
              "relatedPartyId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The related party's unique identifier."
              },
              "relatedPartyRoleType" : {
                "default" : "Employer",
                "description" : "The related party's role type.",
                "enum" : [ "Association", "Company", "Employer", "Organisation", "Partnership", "Trust" ],
                "type" : "string"
              },
              "relationshipType" : {
                "default" : "Employment",
                "description" : "The relationship type.",
                "enum" : [ "Directorship", "Employment", "Membership", "Partnership", "Trusteeship" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "relatedPartyId", "relationshipType" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "110aa07c-084e-4bf2-b273-73d81e5bdb6c",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/p55s/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "110aa07c-084e-4bf2-b273-73d81e5bdb6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.810801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "51770f7a-1d67-4d58-b764-227f9f53f1f9",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/9dw1/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51770f7a-1d67-4d58-b764-227f9f53f1f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.81009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "7a62cdc4-5482-4eb5-b586-b211f9aeb2e1",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/individuals/n5xq/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Organisation\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Trusteeship\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Member\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Association\",\n  \"partyRoleType\" : \"Director\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"2016-01-13T09:05:06+10:00\",\n  \"relationshipType\" : \"Membership\",\n  \"relatedPartyRoleType\" : \"Partnership\",\n  \"partyRoleType\" : \"Partner\",\n  \"relatedPartyId\" : { },\n  \"toDate\" : \"\",\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a62cdc4-5482-4eb5-b586-b211f9aeb2e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.809876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/party-role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "f4ac5626-c003-4900-99b3-af2d22c7bebc",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/fp3d/licenses/3mq8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4ac5626-c003-4900-99b3-af2d22c7bebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.809225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "08121fce-9c4b-485c-b964-6efadac87735",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/xe09/licenses/p931",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08121fce-9c4b-485c-b964-6efadac87735",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.808763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "d09e0d59-3acf-4567-876b-7d964e033cbe",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/rpg8/licenses/o06d",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d09e0d59-3acf-4567-876b-7d964e033cbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.808176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "c9ba5d05-c284-40ba-ab7c-a2e0b73f459f",
    "name" : "Update a license",
    "request" : {
      "urlPath" : "/individuals/5izf/licenses/7ca8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9ba5d05-c284-40ba-ab7c-a2e0b73f459f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.806991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "945a4116-642f-4699-b35a-c037692e7a41",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/116m/licenses/l771",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "945a4116-642f-4699-b35a-c037692e7a41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.806766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "be3ede6d-f6cf-468b-b999-7ae76a3cdfd3",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/sr66/licenses/79bq",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be3ede6d-f6cf-468b-b999-7ae76a3cdfd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.806547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "6380045f-e01f-45fb-87ab-b6326c6d0266",
    "name" : "Retrieve a license",
    "request" : {
      "urlPath" : "/individuals/26u1/licenses/hj9x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6380045f-e01f-45fb-87ab-b6326c6d0266",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.80635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "b4a193a5-caa9-4ff5-b39d-ee263ad2dfca",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/v2v3/licenses/lud6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4a193a5-caa9-4ff5-b39d-ee263ad2dfca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.806098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "98fcdcc5-e6ff-42eb-aad6-aaa6738abe99",
    "name" : "Delete a license (application/json)",
    "request" : {
      "urlPath" : "/individuals/x595/licenses/9l82",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98fcdcc5-e6ff-42eb-aad6-aaa6738abe99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.805857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "fb9da5bf-e433-42d2-a7bc-cd69be9a50d1",
    "name" : "Delete a license - 204",
    "request" : {
      "urlPath" : "/individuals/ubqr/licenses/2074",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fb9da5bf-e433-42d2-a7bc-cd69be9a50d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.80567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "b9029871-7208-4c4a-bb41-0f8e671cb7fd",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/853z/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9029871-7208-4c4a-bb41-0f8e671cb7fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.805511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "4d0c6ea2-270b-479a-a432-3b683dc3558d",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/l012/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d0c6ea2-270b-479a-a432-3b683dc3558d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.805369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "44da259d-59ce-44b3-806d-4a91de242998",
    "name" : "Create a license",
    "request" : {
      "urlPath" : "/individuals/5v81/licenses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44da259d-59ce-44b3-806d-4a91de242998",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.80514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The License resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "licenseType" : {
                "default" : "Australian Financial Services License",
                "description" : "The license type.",
                "enum" : [ "Australian Financial Services License", "License 2B" ],
                "type" : "string"
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "b62c3d6b-9d1f-49f8-8cd3-eacfd2e0a629",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/94q5/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b62c3d6b-9d1f-49f8-8cd3-eacfd2e0a629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.804394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "e2f38ae6-28e1-4c09-b901-495f5840fcde",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/d75i/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2f38ae6-28e1-4c09-b901-495f5840fcde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.80417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "6ec04c92-c33e-4705-bd8f-edb0b67a1b3d",
    "name" : "Retrieve a list of licenses",
    "request" : {
      "urlPath" : "/individuals/9i83/licenses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"License 2B\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"licenseType\" : \"Australian Financial Services License\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ec04c92-c33e-4705-bd8f-edb0b67a1b3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.80401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/license"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "970303bd-8712-442f-83af-6800406350e9",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/1mag/electronic-addresses/brz6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "970303bd-8712-442f-83af-6800406350e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.803718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "90fefade-9543-4e1a-bd8c-88cb428bb3ad",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/j05e/electronic-addresses/r82a",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90fefade-9543-4e1a-bd8c-88cb428bb3ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.801409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "eab4e1a9-ea76-4772-b03c-2f064ddddcc2",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/f43t/electronic-addresses/2r84",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eab4e1a9-ea76-4772-b03c-2f064ddddcc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.801184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "91dc93e7-cb18-4ea5-8301-6899ace60dab",
    "name" : "Update an electronic address",
    "request" : {
      "urlPath" : "/individuals/sn9w/electronic-addresses/3qh0",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91dc93e7-cb18-4ea5-8301-6899ace60dab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.800971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "0b466ee7-523b-4dcc-bd6b-4af9e240ccc6",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/q9x2/electronic-addresses/548b",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b466ee7-523b-4dcc-bd6b-4af9e240ccc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.800721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "ba84112e-1c17-48fd-a8be-abcabb071b1e",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/6x9e/electronic-addresses/wlkd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba84112e-1c17-48fd-a8be-abcabb071b1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.800504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "fce0910c-a406-425b-a06d-3730e98dd178",
    "name" : "Retrieve an electronic address",
    "request" : {
      "urlPath" : "/individuals/x2g7/electronic-addresses/i94d",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fce0910c-a406-425b-a06d-3730e98dd178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.800312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "398b5f5b-b4b2-4e23-b53b-14be6bd7ecc0",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/ex4r/electronic-addresses/3ces",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "398b5f5b-b4b2-4e23-b53b-14be6bd7ecc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.800037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "0af25386-eee8-4fae-893e-d32bf876af78",
    "name" : "Delete an electronic address (application/json)",
    "request" : {
      "urlPath" : "/individuals/ra7p/electronic-addresses/d4mk",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0af25386-eee8-4fae-893e-d32bf876af78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "8e02dc7d-1486-483d-b8c8-8f1be2427a34",
    "name" : "Delete an electronic address - 204",
    "request" : {
      "urlPath" : "/individuals/56uf/electronic-addresses/6679",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8e02dc7d-1486-483d-b8c8-8f1be2427a34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.799643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "460e6173-3b70-4a96-930d-d8d6ab45f343",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/79fc/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "460e6173-3b70-4a96-930d-d8d6ab45f343",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.799485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "229a2595-a510-477e-9427-6219dd39c53f",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/40zm/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "229a2595-a510-477e-9427-6219dd39c53f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "d45b923e-11a2-4e50-a082-d3ee951b2371",
    "name" : "Create an electronic address",
    "request" : {
      "urlPath" : "/individuals/g7zh/electronic-addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d45b923e-11a2-4e50-a082-d3ee951b2371",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.799155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Electronic Address resource.",
            "properties" : {
              "areaCode" : {
                "description" : "The area code, for example, \"02\".",
                "example" : "02",
                "type" : "string"
              },
              "countryPrefix" : {
                "description" : "The country prefix, for example, \"61\".",
                "example" : "61",
                "type" : "string"
              },
              "electronicAddressType" : {
                "default" : "Landline",
                "description" : "The electronic address type.",
                "enum" : [ "Email", "Fax", "Landline", "Mobile", "Website" ],
                "type" : "string"
              },
              "email" : {
                "description" : "The email address, for example, \"robert.ferguson@ato.gov.au\".",
                "example" : "",
                "type" : "string"
              },
              "extension" : {
                "description" : "The extension number, for example, \"4453\".",
                "example" : "",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "number" : {
                "description" : "The number, for example, \"62164453\".",
                "example" : "62164453",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The website address, for example, \"https://ato.gov.au\".",
                "example" : "",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "70e6742c-d52f-4b28-8425-dfe58ba9d6e1",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/92g7/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70e6742c-d52f-4b28-8425-dfe58ba9d6e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.798921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "3afd1f1b-597b-4d30-8e96-4278b7156923",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/u3a0/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3afd1f1b-597b-4d30-8e96-4278b7156923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.798757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "4764a6d4-8192-4916-9484-e02aea41dfa3",
    "name" : "Retrieve a list of electronic addresses",
    "request" : {
      "urlPath" : "/individuals/p4bz/electronic-addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Landline\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Mobile\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n}, {\n  \"electronicAddressType\" : \"Fax\",\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"number\" : \"62164453\",\n  \"areaCode\" : \"02\",\n  \"countryPrefix\" : \"61\",\n  \"extension\" : \"\",\n  \"toDate\" : \"\",\n  \"id\" : { },\n  \"email\" : \"\",\n  \"url\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4764a6d4-8192-4916-9484-e02aea41dfa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.798632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/electronic-address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "d021297b-a59b-45a2-9513-4a2fd77bac23",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/s991/business-names/zm08",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d021297b-a59b-45a2-9513-4a2fd77bac23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.798359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "be0ef760-81c4-4691-b82b-22d42045a7cd",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/2rs3/business-names/vs63",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be0ef760-81c4-4691-b82b-22d42045a7cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.798124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "153bd122-2a88-4497-8289-d0ed08305255",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/ej97/business-names/8135",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "153bd122-2a88-4497-8289-d0ed08305255",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.797926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "63ee4f78-cf98-46c8-9162-7b95ca32e7bc",
    "name" : "Update a business name",
    "request" : {
      "urlPath" : "/individuals/2014/business-names/6o72",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Expired\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63ee4f78-cf98-46c8-9162-7b95ca32e7bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.797659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "30b19d02-a1b6-4868-bc8f-760488454321",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/v9qk/business-names/3iy5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30b19d02-a1b6-4868-bc8f-760488454321",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.797426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "02b7b7e7-36e3-45c5-93c5-d13cc159715e",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/c9k6/business-names/0742",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02b7b7e7-36e3-45c5-93c5-d13cc159715e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "d007fb79-9f98-4a40-aa13-f407a9006670",
    "name" : "Retrieve a business name",
    "request" : {
      "urlPath" : "/individuals/f769/business-names/pyao",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d007fb79-9f98-4a40-aa13-f407a9006670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "b2d05f2a-7d01-48ba-85b5-d39152b9ed3a",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/1uv1/business-names/35r6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2d05f2a-7d01-48ba-85b5-d39152b9ed3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.796764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "a34a4e43-e25c-49f0-a198-7e4ab2b8161f",
    "name" : "Delete a business name (application/json)",
    "request" : {
      "urlPath" : "/individuals/81z0/business-names/7h14",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a34a4e43-e25c-49f0-a198-7e4ab2b8161f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.796513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "ed73d501-431a-4ecc-87e3-0c77e3357911",
    "name" : "Delete a business name - 204",
    "request" : {
      "urlPath" : "/individuals/rf2z/business-names/ybm3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ed73d501-431a-4ecc-87e3-0c77e3357911",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.796317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "6e5ae744-f09b-446a-8ef0-31e305f6bae6",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/w3n8/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e5ae744-f09b-446a-8ef0-31e305f6bae6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "16544b7d-1666-4578-b986-2c03aab3de43",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/9k36/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16544b7d-1666-4578-b986-2c03aab3de43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.796029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "3c1218b1-ab92-4030-a859-d13a8262d487",
    "name" : "Create a business name",
    "request" : {
      "urlPath" : "/individuals/q6zw/business-names",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Pending Approval\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c1218b1-ab92-4030-a859-d13a8262d487",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.795721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Business Name resource.",
            "properties" : {
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/resourceId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "lifecycleState" : {
                "default" : "Pending Approval",
                "description" : "The business name's lifecycle state.",
                "enum" : [ "Approved", "Expired", "Issued", "Pending Approval", "Suspended" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The business name.",
                "example" : "XYZ Technology Ventures",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "f4f53ce1-ee48-4269-aa82-5e6b9e770f74",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/vy75/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4f53ce1-ee48-4269-aa82-5e6b9e770f74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.795534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "dc2ac6c6-1787-49e2-8886-48ed3dc6bbea",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/tq7d/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc2ac6c6-1787-49e2-8886-48ed3dc6bbea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.795363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "01689da3-6d47-4938-a425-dc357c8d6cf0",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/individuals/im6p/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01689da3-6d47-4938-a425-dc357c8d6cf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.795215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "f0344ddc-6afb-4e22-a066-9cdf5cfc7bc1",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/2ugw/addresses/f2sm",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0344ddc-6afb-4e22-a066-9cdf5cfc7bc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.794817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "b42350e3-4370-41fa-9194-634633994add",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/qhj2/addresses/ovvn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b42350e3-4370-41fa-9194-634633994add",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.794608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "4b7b878b-3b15-4a7b-ae6d-f562c7df57f4",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/2i03/addresses/yquy",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b7b878b-3b15-4a7b-ae6d-f562c7df57f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.794423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "e7145754-786a-495c-8158-4796b3f375b4",
    "name" : "Update an address",
    "request" : {
      "urlPath" : "/individuals/ujfl/addresses/3pnx",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7145754-786a-495c-8158-4796b3f375b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.794183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "b5e074aa-49fb-46fc-bec0-9ec71ece88fb",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/1d87/addresses/a5h6",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e074aa-49fb-46fc-bec0-9ec71ece88fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.793937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "23d83d69-9212-4032-bca1-805acf5fed7e",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/5358/addresses/t63w",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23d83d69-9212-4032-bca1-805acf5fed7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.793704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "89cbbdcd-e250-45e9-a0c1-f902b410b3ea",
    "name" : "Retrieve an address",
    "request" : {
      "urlPath" : "/individuals/x29d/addresses/zpgc",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89cbbdcd-e250-45e9-a0c1-f902b410b3ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "3609a56b-fbe5-4585-a059-094ccb6ec904",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/h5x4/addresses/v09c",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3609a56b-fbe5-4585-a059-094ccb6ec904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "9ea37706-a1a8-4c28-adcc-240266ca30c1",
    "name" : "Delete an address (application/json)",
    "request" : {
      "urlPath" : "/individuals/c9w2/addresses/d1n1",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ea37706-a1a8-4c28-adcc-240266ca30c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.792977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "dd32153f-bbfe-45fc-a1fa-514e0c05ae19",
    "name" : "Delete an address - 204",
    "request" : {
      "urlPath" : "/individuals/1alj/addresses/h897",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "dd32153f-bbfe-45fc-a1fa-514e0c05ae19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.792781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "9826e8ae-63da-403a-aed8-b7e89863837e",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/9966/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9826e8ae-63da-403a-aed8-b7e89863837e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.792608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "e98d3607-8603-485f-bd08-4fdf5b9fe79f",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/3l21/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e98d3607-8603-485f-bd08-4fdf5b9fe79f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.792312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "f19c204b-6720-4dd6-be68-edca9213cc10",
    "name" : "Create an address",
    "request" : {
      "urlPath" : "/individuals/8x48/addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f19c204b-6720-4dd6-be68-edca9213cc10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.792172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Address resource.",
            "properties" : {
              "city" : {
                "description" : "The city.",
                "example" : "Canberra",
                "type" : "string"
              },
              "country" : {
                "description" : "The country.",
                "example" : "Australia",
                "type" : "string"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/addressId"
                } ],
                "description" : "The resource's unique identifier.",
                "readOnly" : true
              },
              "line1" : {
                "description" : "The address line 1.",
                "example" : "Level 7",
                "type" : "string"
              },
              "line2" : {
                "description" : "The address line 2.",
                "example" : "21 Genge Street",
                "type" : "string"
              },
              "line3" : {
                "description" : "The address line 3.",
                "example" : "",
                "type" : "string"
              },
              "name" : {
                "description" : "The address name.",
                "example" : "Kembery Building",
                "type" : "string"
              },
              "postalCode" : {
                "description" : "The postal code.",
                "example" : "2601",
                "type" : "string"
              },
              "suburb" : {
                "description" : "The suburb.",
                "example" : "Civic",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "18a212cb-66a3-4dbc-9909-de0bbe54c9aa",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/he5f/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18a212cb-66a3-4dbc-9909-de0bbe54c9aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.791939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "827294fe-c8c7-4c42-aa84-55af6265fd41",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/40vw/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "827294fe-c8c7-4c42-aa84-55af6265fd41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.791801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "2ff0876c-301b-4e7e-96d9-e589c7cbee36",
    "name" : "Retrieve a list of addresses",
    "request" : {
      "urlPath" : "/individuals/m28g/addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"country\" : \"Australia\",\n  \"city\" : \"Canberra\",\n  \"postalCode\" : \"2601\",\n  \"toDate\" : \"\",\n  \"name\" : \"Kembery Building\",\n  \"suburb\" : \"Civic\",\n  \"id\" : { },\n  \"line3\" : \"\",\n  \"line2\" : \"21 Genge Street\",\n  \"line1\" : \"Level 7\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ff0876c-301b-4e7e-96d9-e589c7cbee36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.791678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/address"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "fec9e3b3-a16b-4602-aa4b-913d8bac92a5",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/t92h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fec9e3b3-a16b-4602-aa4b-913d8bac92a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.791503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "b41e6f45-4cd5-4e46-a3d6-2068f587dcae",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/g0iz",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b41e6f45-4cd5-4e46-a3d6-2068f587dcae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.791345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "5a6b41c9-a3ab-4c6d-8554-73885bb71a94",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/h8w4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a6b41c9-a3ab-4c6d-8554-73885bb71a94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.791208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "52fa1e74-34b4-4965-b274-a1c19c57caee",
    "name" : "Update an individual",
    "request" : {
      "urlPath" : "/individuals/z528",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52fa1e74-34b4-4965-b274-a1c19c57caee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.790984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "0ff16c6f-4700-454a-a7ab-ec94351f07c9",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/4fal",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ff16c6f-4700-454a-a7ab-ec94351f07c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.79015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "2b194e29-2fd7-4ac7-a243-de65767251be",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/o29g",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b194e29-2fd7-4ac7-a243-de65767251be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.789988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "ada2d884-c90d-405e-b330-49afc62031e7",
    "name" : "Retrieve an individual",
    "request" : {
      "urlPath" : "/individuals/dm1i",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Male\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ada2d884-c90d-405e-b330-49afc62031e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.789842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "379fd597-2de5-48fd-8233-9985d05ccccc",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/mpb7",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "379fd597-2de5-48fd-8233-9985d05ccccc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.789233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "9fd1cd11-a372-435a-99da-ef8332eb5722",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/0zg9",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fd1cd11-a372-435a-99da-ef8332eb5722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.789043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "54fe5ed0-f1e8-4985-a9db-103c3254d698",
    "name" : "Delete an individual (application/json)",
    "request" : {
      "urlPath" : "/individuals/7fzc",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"Request can not be executed in the current system state\",\n  \"status\" : \"FAILED_PRECONDITION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54fe5ed0-f1e8-4985-a9db-103c3254d698",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.788903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request can not be executed in the current system state",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "FAILED_PRECONDITION",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "8426dc78-b0b6-4667-af37-5a51c5b117f7",
    "name" : "Delete an individual - 204",
    "request" : {
      "urlPath" : "/individuals/fpet",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8426dc78-b0b6-4667-af37-5a51c5b117f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.788732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "5af8f34a-bfcb-4d47-bce9-660ad25c1dde",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5af8f34a-bfcb-4d47-bce9-660ad25c1dde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.788613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "38196273-0677-4b09-86a2-ab832fb27889",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"code\" : \"400\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The client specified an invalid argument\",\n  \"status\" : \"INVALID_ARGUMENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38196273-0677-4b09-86a2-ab832fb27889",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.78854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "400",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The client specified an invalid argument",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "INVALID_ARGUMENT",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "c122c20b-0742-4c7d-8033-eff5ca592fd3",
    "name" : "Create an individual",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Applicable\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c122c20b-0742-4c7d-8033-eff5ca592fd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.788392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "The Individual resource.",
            "properties" : {
              "addresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-address"
                },
                "type" : "array"
              },
              "dateOfBirth" : {
                "description" : "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
                "example" : "1979-01-13",
                "format" : "date",
                "type" : "string"
              },
              "electronicAddresses" : {
                "items" : {
                  "$ref" : "#/components/schemas/electronic-address"
                },
                "type" : "array"
              },
              "fromDate" : {
                "description" : "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "1979-01-13T09:05:06+10:00",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              },
              "gender" : {
                "default" : "Male",
                "description" : "The individual's gender.",
                "enum" : [ "Female", "Male", "Not Applicable", "Not Known" ],
                "type" : "string"
              },
              "id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/partyId"
                } ],
                "description" : "The party's unique identifier.",
                "readOnly" : true
              },
              "names" : {
                "items" : {
                  "$ref" : "#/components/schemas/individual-name"
                },
                "type" : "array"
              },
              "placeOfBirth" : {
                "description" : "The individual's place of birth, for example, `Tamworth`.",
                "example" : "Tamworth",
                "type" : "string"
              },
              "toDate" : {
                "description" : "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
                "example" : "",
                "format" : "date-time",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "required" : [ "dateOfBirth", "placeOfBirth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "47bde7eb-c7ea-46ac-bdbe-7cd35a064990",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47bde7eb-c7ea-46ac-bdbe-7cd35a064990",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.787614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "f28a9700-da9d-4e98-aafb-fed37c1caaca",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f28a9700-da9d-4e98-aafb-fed37c1caaca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.787487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "1f65d9ab-bc70-4381-8da1-5b0bb84caab8",
    "name" : "Retrieve a list of individuals",
    "request" : {
      "urlPath" : "/individuals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Not Known\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Mr\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Principal Name\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"right-to-left\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Mobile\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"addresses\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Business\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Principal Place of Residence\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  }, {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"country\" : \"Australia\",\n    \"city\" : \"Canberra\",\n    \"addressType\" : \"Mailing\",\n    \"postalCode\" : \"2601\",\n    \"toDate\" : \"\",\n    \"name\" : \"Kembery Building\",\n    \"suburb\" : \"Civic\",\n    \"id\" : { },\n    \"line3\" : \"\",\n    \"line2\" : \"21 Genge Street\",\n    \"line1\" : \"Level 7\"\n  } ],\n  \"placeOfBirth\" : \"Tamworth\",\n  \"names\" : [ {\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"nameType\" : \"Alias\",\n    \"namePrefix\" : \"Ms\",\n    \"familyName\" : \"Ferguson\",\n    \"givenName\" : \"Robert\",\n    \"toDate\" : \"\",\n    \"formalSalutation\" : \"Mr Robert Ferguson\",\n    \"nameSuffix\" : \"\",\n    \"middleName\" : \"James\",\n    \"id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n    \"informalSalutation\" : \"Rob\",\n    \"direction\" : \"left-to-right\"\n  } ],\n  \"gender\" : \"Female\",\n  \"toDate\" : \"\",\n  \"dateOfBirth\" : \"1979-01-13\",\n  \"electronicAddresses\" : [ {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Website\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Fax\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Landline\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  }, {\n    \"electronicAddressType\" : \"Email\",\n    \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n    \"number\" : \"62164453\",\n    \"areaCode\" : \"02\",\n    \"countryPrefix\" : \"61\",\n    \"extension\" : \"\",\n    \"toDate\" : \"\",\n    \"id\" : { },\n    \"email\" : \"\",\n    \"url\" : \"\"\n  } ],\n  \"id\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f65d9ab-bc70-4381-8da1-5b0bb84caab8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.787253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/individual"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "cb11dd21-f146-4ec7-ae1c-60487a4d6894",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb11dd21-f146-4ec7-ae1c-60487a4d6894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.78346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "cc544275-c12d-4a75-b2ad-c255931b2111",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc544275-c12d-4a75-b2ad-c255931b2111",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.783358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "07a31198-9928-476c-8b77-227a0ff68f45",
    "name" : "Retrieve a list of roles",
    "request" : {
      "urlPath" : "/classifications/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"reciprocalRole\" : \"Company\",\n  \"reciprocalRoleDescription\" : \"An incorporated legal entity.\",\n  \"relationship\" : \"Directorship\",\n  \"role\" : \"Director\",\n  \"roleDescription\" : \"An individual responsible for managing a company's business activities.\"\n}, {\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"reciprocalRole\" : \"Employer\",\n  \"reciprocalRoleDescription\" : \"An individual or organisation that employs people.\",\n  \"relationship\" : \"Employment\",\n  \"role\" : \"Employee\",\n  \"roleDescription\" : \"An individual employed for wages or salary.\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07a31198-9928-476c-8b77-227a0ff68f45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.783298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "reciprocalRole" : "Company",
              "reciprocalRoleDescription" : "An incorporated legal entity.",
              "relationship" : "Directorship",
              "role" : "Director",
              "roleDescription" : "An individual responsible for managing a company's business activities."
            }, {
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "reciprocalRole" : "Employer",
              "reciprocalRoleDescription" : "An individual or organisation that employs people.",
              "relationship" : "Employment",
              "role" : "Employee",
              "roleDescription" : "An individual employed for wages or salary."
            } ],
            "items" : {
              "$ref" : "#/components/schemas/role"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "bcba6455-b94a-4d7c-a196-f922a546c79c",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcba6455-b94a-4d7c-a196-f922a546c79c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.783231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "9750e315-d2d1-4c73-87c5-00b25e752dcd",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9750e315-d2d1-4c73-87c5-00b25e752dcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.783147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "896aa066-bb38-4989-a98b-2fca65988eb5",
    "name" : "Retrieve a list of registered identifier types",
    "request" : {
      "urlPath" : "/classifications/registered-identifier-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"ABN\"\n}, {\n  \"description\" : \"An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"ACN\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "896aa066-bb38-4989-a98b-2fca65988eb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.783086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "ABN"
            }, {
              "description" : "An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "ACN"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/registered-identifier-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "7190c8ef-b600-48ff-871b-6cd7bb6b9141",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7190c8ef-b600-48ff-871b-6cd7bb6b9141",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.783034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "c8137cb7-7e25-4351-88fa-113c9f1603bf",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8137cb7-7e25-4351-88fa-113c9f1603bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "5acb00c6-adf5-4109-b1fb-50e1d5e438c9",
    "name" : "Retrieve a list of name types",
    "request" : {
      "urlPath" : "/classifications/name-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An alternate name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Alias\"\n}, {\n  \"description\" : \"The primary name used by a party.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Name\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5acb00c6-adf5-4109-b1fb-50e1d5e438c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An alternate name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Alias"
            }, {
              "description" : "The primary name used by a party.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Name"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "b866a427-b381-4bc0-96c0-1a9e69dbde19",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b866a427-b381-4bc0-96c0-1a9e69dbde19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "e8654b2f-5c62-449e-b246-2e3d4017257e",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8654b2f-5c62-449e-b246-2e3d4017257e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.7827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "a594dd8f-e016-402d-aec3-9ddffe307519",
    "name" : "Retrieve a list of name prefixes",
    "request" : {
      "urlPath" : "/classifications/name-prefixes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"A title used before a family name or formal salutation to address a man.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mr\"\n}, {\n  \"description\" : \"A title used before a family name or formal salutation to address a woman.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Ms\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a594dd8f-e016-402d-aec3-9ddffe307519",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "A title used before a family name or formal salutation to address a man.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mr"
            }, {
              "description" : "A title used before a family name or formal salutation to address a woman.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Ms"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-prefix"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "f5d3d293-70be-4758-8591-7618f314ae39",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5d3d293-70be-4758-8591-7618f314ae39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "0bd865f2-81f8-4bf2-a9fa-1d93d355e4c6",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bd865f2-81f8-4bf2-a9fa-1d93d355e4c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "d469919a-7885-4bdf-8720-f99559f23656",
    "name" : "Retrieve a list of name directions",
    "request" : {
      "urlPath" : "/classifications/name-directions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The full name or formal salutation is rendered left to right.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"left-to-right\"\n}, {\n  \"description\" : \"The full name or formal salutation is rendered right to left.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"right-to-left\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d469919a-7885-4bdf-8720-f99559f23656",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.782098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The full name or formal salutation is rendered left to right.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "left-to-right"
            }, {
              "description" : "The full name or formal salutation is rendered right to left.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "right-to-left"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/name-direction"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "df4598e3-c38a-49f0-8798-e83bcb503f56",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df4598e3-c38a-49f0-8798-e83bcb503f56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "3f0e5057-41a4-4ce5-b3c2-c0ec4f0b3518",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f0e5057-41a4-4ce5-b3c2-c0ec4f0b3518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "d85a8090-7864-4da2-8efe-def3a9450f72",
    "name" : "Retrieve a list of license types",
    "request" : {
      "urlPath" : "/classifications/license-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Australian Financial Services License\"\n}, {\n  \"description\" : \"To conduct a <insert-name-here> business you must have a 2B licence.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"2B License\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d85a8090-7864-4da2-8efe-def3a9450f72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Australian Financial Services License"
            }, {
              "description" : "To conduct a <insert-name-here> business you must have a 2B licence.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "2B License"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "bbd295a9-e179-433d-a428-c7d23ab7cfe1",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbd295a9-e179-433d-a428-c7d23ab7cfe1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "cea322b3-6489-4bb5-996f-7a4c7fc95a5c",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cea322b3-6489-4bb5-996f-7a4c7fc95a5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "66190c5d-3e6a-48aa-8911-8b09150e3eda",
    "name" : "Retrieve a list of license lifecycle states",
    "request" : {
      "urlPath" : "/classifications/license-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The License has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The License has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The License has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The License is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The License has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66190c5d-3e6a-48aa-8911-8b09150e3eda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The License has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The License has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The License has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The License is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The License has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/license-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "9e5c6758-1f7b-422e-8800-c22ad7dbf08c",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e5c6758-1f7b-422e-8800-c22ad7dbf08c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "bb4a9fee-1bdc-4eda-867b-dcf3a74d8dda",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb4a9fee-1bdc-4eda-867b-dcf3a74d8dda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.781212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "82a775ac-dfe1-400f-a190-9bdb665f0c6f",
    "name" : "Retrieve a list of legal entity types",
    "request" : {
      "urlPath" : "/classifications/legal-entity-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Sole Trader\"\n}, {\n  \"description\" : \"A partnership is two or more individuals or organisations who do business as partners or receive income jointly.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Partnership\"\n}, {\n  \"description\" : \"A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Joint Venture\"\n}, {\n  \"description\" : \"A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Company\"\n}, {\n  \"description\" : \"A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Trust\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82a775ac-dfe1-400f-a190-9bdb665f0c6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.780999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Sole Trader"
            }, {
              "description" : "A partnership is two or more individuals or organisations who do business as partners or receive income jointly.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Partnership"
            }, {
              "description" : "A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Joint Venture"
            }, {
              "description" : "A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Company"
            }, {
              "description" : "A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Trust"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/legal-entity-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "438e132e-ecb8-40f5-911d-a40d66ee857e",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "438e132e-ecb8-40f5-911d-a40d66ee857e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.780891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "c3945837-772c-42f1-9297-771ebc9fe56a",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3945837-772c-42f1-9297-771ebc9fe56a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.780579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "ee45ee87-f163-481c-a6d7-e79b1e002dfb",
    "name" : "Retrieve a list of genders",
    "request" : {
      "urlPath" : "/classifications/genders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"gender\" : \"Not Known\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\"\n}, {\n  \"gender\" : \"Male\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\"\n}, {\n  \"gender\" : \"Female\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\"\n}, {\n  \"gender\" : \"Not Applicable\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee45ee87-f163-481c-a6d7-e79b1e002dfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.780366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "gender" : "Not Known",
              "id" : "123e4567-e89b-12d3-a456-426655440001"
            }, {
              "gender" : "Male",
              "id" : "123e4567-e89b-12d3-a456-426655440002"
            }, {
              "gender" : "Female",
              "id" : "123e4567-e89b-12d3-a456-426655440003"
            }, {
              "gender" : "Not Applicable",
              "id" : "123e4567-e89b-12d3-a456-426655440004"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/gender"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "c92f0183-ca02-4249-a283-fbd245fc0cac",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c92f0183-ca02-4249-a283-fbd245fc0cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.78028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "3530276e-ab4d-48c0-94d4-3927d7ac52a9",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3530276e-ab4d-48c0-94d4-3927d7ac52a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.78016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "51b8fbdb-4372-48d6-9b06-3a106b8c5fcd",
    "name" : "Retrieve a list of electronic address types",
    "request" : {
      "urlPath" : "/classifications/electronic-address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"An address used to send and receive emails.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Email\"\n}, {\n  \"description\" : \"A number used to send and receive faxes.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Fax\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51b8fbdb-4372-48d6-9b06-3a106b8c5fcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.780098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "An address used to send and receive emails.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Email"
            }, {
              "description" : "A number used to send and receive faxes.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Fax"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/electronic-address-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "da4e3206-8911-47e1-acc2-ba7ef8fa84d8",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da4e3206-8911-47e1-acc2-ba7ef8fa84d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.780047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "79b27025-15ec-4f9c-9e3b-07dc5f06c7d1",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79b27025-15ec-4f9c-9e3b-07dc5f06c7d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "68ee96a6-e198-4ab8-9554-ff094f928cf4",
    "name" : "Retrieve a list of business name lifecycle states",
    "request" : {
      "urlPath" : "/classifications/business-name-lifecycle-states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The Business Name has been approved.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Approved\"\n}, {\n  \"description\" : \"The Business Name has expired.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Expired\"\n}, {\n  \"description\" : \"The Business Name has been issued.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440003\",\n  \"name\" : \"Issued\"\n}, {\n  \"description\" : \"The Business Name is pending approval.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440004\",\n  \"name\" : \"Pending Approval\"\n}, {\n  \"description\" : \"The Business Name has been suspended.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440005\",\n  \"name\" : \"Suspended\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68ee96a6-e198-4ab8-9554-ff094f928cf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The Business Name has been approved.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Approved"
            }, {
              "description" : "The Business Name has expired.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Expired"
            }, {
              "description" : "The Business Name has been issued.",
              "id" : "123e4567-e89b-12d3-a456-426655440003",
              "name" : "Issued"
            }, {
              "description" : "The Business Name is pending approval.",
              "id" : "123e4567-e89b-12d3-a456-426655440004",
              "name" : "Pending Approval"
            }, {
              "description" : "The Business Name has been suspended.",
              "id" : "123e4567-e89b-12d3-a456-426655440005",
              "name" : "Suspended"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/business-name-lifecycle-state"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "31c1547e-30e7-46f0-a481-f4db2908cf67",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31c1547e-30e7-46f0-a481-f4db2908cf67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "8964f2b7-8a27-4628-ba33-7ac0e48e68f1",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8964f2b7-8a27-4628-ba33-7ac0e48e68f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "cf5efe3d-755e-4272-a449-608a3a5e4d3a",
    "name" : "Retrieve a list of address types",
    "request" : {
      "urlPath" : "/classifications/address-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"The address at which an individual or organisation receives letters or packages.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440001\",\n  \"name\" : \"Mailing\"\n}, {\n  \"description\" : \"The main location where work is conducted.\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440002\",\n  \"name\" : \"Principal Place of Business\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf5efe3d-755e-4272-a449-608a3a5e4d3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "example" : [ {
              "description" : "The address at which an individual or organisation receives letters or packages.",
              "id" : "123e4567-e89b-12d3-a456-426655440001",
              "name" : "Mailing"
            }, {
              "description" : "The main location where work is conducted.",
              "id" : "123e4567-e89b-12d3-a456-426655440002",
              "name" : "Principal Place of Business"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/address-type"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "0628cc2a-ab63-4d7d-9811-29d51d813a3e",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"code\" : \"404\",\n  \"details\" : [ {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  }, {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  } ],\n  \"message\" : \"The specified resource was not found\",\n  \"status\" : \"NOT_FOUND\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0628cc2a-ab63-4d7d-9811-29d51d813a3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "404",
                "type" : "string"
              },
              "details" : {
                "items" : {
                  "$ref" : "#/components/schemas/error-details"
                },
                "type" : "array"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "The specified resource was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "NOT_FOUND",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "1f0eab0f-5387-4fb4-ba59-ad5c5627e340",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"code\" : \"401\",\n  \"details\" : {\n    \"code\" : \"NullValue\",\n    \"message\" : \"Family name must not be null\",\n    \"target\" : \"familyName\"\n  },\n  \"message\" : \"Request not authenticated due to missing, invalid, or expired token\",\n  \"status\" : \"UNAUTHENTICATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f0eab0f-5387-4fb4-ba59-ad5c5627e340",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The error code.",
                "example" : "401",
                "type" : "string"
              },
              "details" : {
                "$ref" : "#/components/schemas/error-details"
              },
              "message" : {
                "description" : "The error message.",
                "example" : "Request not authenticated due to missing, invalid, or expired token",
                "type" : "string"
              },
              "status" : {
                "description" : "The error status.",
                "example" : "UNAUTHENTICATED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "7dd7033f-7739-4996-9b93-c474c932e12f",
    "name" : "Retrieve a list of business names",
    "request" : {
      "urlPath" : "/business-names",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Suspended\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Issued\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}, {\n  \"fromDate\" : \"1979-01-13T09:05:06+10:00\",\n  \"lifecycleState\" : \"Approved\",\n  \"toDate\" : \"\",\n  \"name\" : \"XYZ Technology Ventures\",\n  \"id\" : \"123e4567-e89b-12d3-a456-426655440000\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dd7033f-7739-4996-9b93-c474c932e12f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:03.779238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/business-name"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 235
  } ]
}